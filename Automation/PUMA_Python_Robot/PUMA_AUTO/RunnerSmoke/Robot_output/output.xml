<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on win32)" generated="20191205 16:05:08.830" rpa="false">
<suite id="s1" name="SmokeTest" source="C:\PUMA_AUTO\RF_PUMA\PUMA\SmokeTest.robot">
<test id="s1-t1" name="SmokeTest_001_Core_4170_01.01.01 OCR Image process failed(9).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step1 \nDescription:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:09.329" level="INFO">Step1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191205 16:05:09.329" endtime="20191205 16:05:09.329"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:05:09.329" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:05:09.329" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:05:09.329" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:05:09.329441", "UpdateDT": "2019-12-05 16:05:09.329441", "PatientID": "P20191205160509", "AccessionNumber": "A20191205160509", "StudyInstanceUID": "UID20191205160509", "NameCN": "CN20191205160509", "NameEN": "EN20191205160509", "Gender": "M", "Birthday": "2017-12-05", "Modality": "MR", "ModalityName": "MG", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:05:09.329441", "RegisterDT": "2019-12-05 16:05:09.329441", "ExamDT": "2019-12-05 16:05:09.329441", "ReportDT": "2019-12-05 16:05:09.329441", "SubmitDT": "2019-12-05 16:05:09.329441", "ApproveDT": "2019-12-05 16:05:09.329441", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205160509", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:05:09.329" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:05:09.329441", "UpdateDT": "2019-12-05 16:05:09.329441", "PatientID": "P20191205160509", "AccessionNumber": "A20191205160509", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:05:09.329" endtime="20191205 16:05:09.329"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:05:09.345" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:05:09.329441', 'UpdateDT': '2019-12-05 16:05:09.329441', 'PatientID': 'P20191205160509', 'AccessionNumber': 'A20191205160509', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:05:09.329" endtime="20191205 16:05:09.345"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:05:09.377" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:05:09.345" endtime="20191205 16:05:09.377"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:05:09.392" level="INFO">${patientID} = ['P20191205160509']</msg>
<status status="PASS" starttime="20191205 16:05:09.377" endtime="20191205 16:05:09.392"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:05:09.408" level="INFO">${Accessionnumber} = ['A20191205160509']</msg>
<status status="PASS" starttime="20191205 16:05:09.392" endtime="20191205 16:05:09.408"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:05:09.408" endtime="20191205 16:05:09.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:09.408" level="INFO">Step2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191205 16:05:09.408" endtime="20191205 16:05:09.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step3\n Description:\n 1. Delete the patient information from RIS or local table in step1. \nExpected:\n The patient can delete successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:09.408" level="INFO">Step3
Description:
1. Delete the patient information from RIS or local table in step1. 
Expected:
The patient can delete successfully.</msg>
<status status="PASS" starttime="20191205 16:05:09.408" endtime="20191205 16:05:09.408"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${delete_result}</var>
</assign>
<msg timestamp="20191205 16:05:09.439" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191205 16:05:09.439" level="INFO">${delete_result} = True</msg>
<status status="PASS" starttime="20191205 16:05:09.408" endtime="20191205 16:05:09.439"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${delete_result} == True</arg>
<arg>The patient delete successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:05:09.439" endtime="20191205 16:05:09.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:09.439" level="INFO">Step 4 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191205 16:05:09.439" endtime="20191205 16:05:09.439"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:05:40.608" level="INFO">Film.film_create_film_with_sample:Film archived failed: {"Status": false, "PatientID": "P20191205160509", "AccessionNumber": "A20191205160509", "FilmSessionLable": "20191205160509438818", "DeliveryJob_status": 9, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:05:40.608" level="INFO">${Print_res} = {"Status": false, "PatientID": "P20191205160509", "AccessionNumber": "A20191205160509", "FilmSessionLable": "20191205160509438818", "DeliveryJob_status": 9, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\...</msg>
<status status="PASS" starttime="20191205 16:05:09.439" endtime="20191205 16:05:40.608"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:05:40.608" level="INFO">${Print_Res_Json} = {'Status': False, 'PatientID': 'P20191205160509', 'AccessionNumber': 'A20191205160509', 'FilmSessionLable': '20191205160509438818', 'DeliveryJob_status': 9, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\...</msg>
<status status="PASS" starttime="20191205 16:05:40.608" endtime="20191205 16:05:40.608"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:05:40.639" level="INFO">${Print_Result} = [False]</msg>
<status status="PASS" starttime="20191205 16:05:40.608" endtime="20191205 16:05:40.639"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.639" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191205 16:05:40.639" endtime="20191205 16:05:40.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 9 means grammar configured but identify failed.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.639" level="INFO">Step 5
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 9 means grammar configured but identify failed.</msg>
<status status="PASS" starttime="20191205 16:05:40.639" endtime="20191205 16:05:40.639"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191205 16:05:40.655" level="INFO">${Job_status} = [9]</msg>
<status status="PASS" starttime="20191205 16:05:40.639" endtime="20191205 16:05:40.655"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191205 16:05:40.655" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191205 16:05:40.655" level="INFO">${Job_status} = 9</msg>
<status status="PASS" starttime="20191205 16:05:40.655" endtime="20191205 16:05:40.655"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>9</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 9.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.655" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:05:40.655" endtime="20191205 16:05:40.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.655" level="INFO">Step 6:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191205 16:05:40.655" endtime="20191205 16:05:40.655"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191205 16:05:40.673" level="INFO">Film.film_check_archive_in_filminfo_table: Data exception!
Film.film_check_archive_in_filminfo_table:There is [0] records for patient[P20191205160509, A20191205160509] and filmsessionlable is [20191205160509438818]</msg>
<msg timestamp="20191205 16:05:40.673" level="INFO">${Archive_Filminfo_Table_Result} = False</msg>
<status status="PASS" starttime="20191205 16:05:40.655" endtime="20191205 16:05:40.673"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_filminfo table.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:05:40.673" endtime="20191205 16:05:40.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.673" level="INFO">Step 7:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191205 16:05:40.673" endtime="20191205 16:05:40.673"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191205 16:05:40.686" level="INFO">Film.film_check_archive_in_examinfo_table: There are no film records in wggc.dbo.Examinfo of patient [A20191205160509, P20191205160509]</msg>
<msg timestamp="20191205 16:05:40.686" level="INFO">${Archived_Examinfo_Table_result} = False</msg>
<status status="PASS" starttime="20191205 16:05:40.673" endtime="20191205 16:05:40.686"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_examinfo table.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:05:40.686" endtime="20191205 16:05:40.686"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:05:09.329" endtime="20191205 16:05:40.686" critical="yes"></status>
</test>
<test id="s1-t2" name="SmokeTest_002_Core_4172_01.01.02 OCR Image process success(2).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.686" level="INFO">Step 1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191205 16:05:40.686" endtime="20191205 16:05:40.686"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:05:40.686" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:05:40.701" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:05:40.701" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:05:40.685770", "UpdateDT": "2019-12-05 16:05:40.685770", "PatientID": "P20191205160540", "AccessionNumber": "A20191205160540", "StudyInstanceUID": "UID20191205160540", "NameCN": "CN20191205160540", "NameEN": "EN20191205160540", "Gender": "M", "Birthday": "2006-12-08", "Modality": "XA", "ModalityName": "IO", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:05:40.685770", "RegisterDT": "2019-12-05 16:05:40.685770", "ExamDT": "2019-12-05 16:05:40.685770", "ReportDT": "2019-12-05 16:05:40.685770", "SubmitDT": "2019-12-05 16:05:40.685770", "ApproveDT": "2019-12-05 16:05:40.685770", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205160540", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:05:40.701" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:05:40.685770", "UpdateDT": "2019-12-05 16:05:40.685770", "PatientID": "P20191205160540", "AccessionNumber": "A20191205160540", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:05:40.686" endtime="20191205 16:05:40.701"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:05:40.701" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:05:40.685770', 'UpdateDT': '2019-12-05 16:05:40.685770', 'PatientID': 'P20191205160540', 'AccessionNumber': 'A20191205160540', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:05:40.701" endtime="20191205 16:05:40.701"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:05:40.717" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:05:40.701" endtime="20191205 16:05:40.717"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:05:40.733" level="INFO">${patientID} = ['P20191205160540']</msg>
<status status="PASS" starttime="20191205 16:05:40.717" endtime="20191205 16:05:40.733"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:05:40.748" level="INFO">${Accessionnumber} = ['A20191205160540']</msg>
<status status="PASS" starttime="20191205 16:05:40.733" endtime="20191205 16:05:40.748"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0] == True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:05:40.748" endtime="20191205 16:05:40.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.748" level="INFO">Step 2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191205 16:05:40.748" endtime="20191205 16:05:40.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191205 16:05:40.748" level="INFO">Step 3 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191205 16:05:40.748" endtime="20191205 16:05:40.748"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:06:11.793" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205160540", "AccessionNumber": "A20191205160540", "FilmSessionLable": "20191205160540748267", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:06:11.793" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205160540", "AccessionNumber": "A20191205160540", "FilmSessionLable": "20191205160540748267", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:05:40.748" endtime="20191205 16:06:11.793"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:06:11.793" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205160540', 'AccessionNumber': 'A20191205160540', 'FilmSessionLable': '20191205160540748267', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:06:11.793" endtime="20191205 16:06:11.793"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:06:11.839" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:11.793" endtime="20191205 16:06:11.839"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191205 16:06:11.839" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191205 16:06:11.839" endtime="20191205 16:06:11.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 2 means have condifuration but indentfy successfully.</arg>
</arguments>
<msg timestamp="20191205 16:06:11.839" level="INFO">Step 4
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 2 means have condifuration but indentfy successfully.</msg>
<status status="PASS" starttime="20191205 16:06:11.839" endtime="20191205 16:06:11.839"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191205 16:06:11.871" level="INFO">${Job_status} = [2]</msg>
<status status="PASS" starttime="20191205 16:06:11.839" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191205 16:06:11.871" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191205 16:06:11.871" level="INFO">${Job_status} = 2</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>2</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 2.</arg>
</arguments>
<msg timestamp="20191205 16:06:11.871" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191205 16:06:11.871" level="INFO">Step 5:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191205 16:06:11.871" level="INFO">Film.film_check_archive_in_filminfo_table:There is [1] records for patient[P20191205160540, A20191205160540] and filmsessionlable is [20191205160540748267]</msg>
<msg timestamp="20191205 16:06:11.871" level="INFO">${Archive_Filminfo_Table_Result} = True</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191205 16:06:11.871" level="INFO">Step 6:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191205 16:06:11.871" level="INFO">Film.film_check_archive_in_examinfo_table: There are [1] new records archived in wggc.dbo.Examinfo for film of patient [A20191205160540, P20191205160540]</msg>
<msg timestamp="20191205 16:06:11.871" level="INFO">${Archived_Examinfo_Table_result} = True</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:05:40.686" endtime="20191205 16:06:11.871" critical="yes"></status>
</test>
<test id="s1-t3" name="SmokeTest_003_Core_4713_02.01.01 Report receive from web service NotifyServer.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191205 16:06:11.871" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.871"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:06:11.871" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:06:11.886" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:06:11.886" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:06:11.870723", "UpdateDT": "2019-12-05 16:06:11.870723", "PatientID": "P20191205160611", "AccessionNumber": "A20191205160611", "StudyInstanceUID": "UID20191205160611", "NameCN": "CN20191205160611", "NameEN": "EN20191205160611", "Gender": "F", "Birthday": "1919-12-30", "Modality": "MG", "ModalityName": "MG", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:06:11.870723", "RegisterDT": "2019-12-05 16:06:11.870723", "ExamDT": "2019-12-05 16:06:11.870723", "ReportDT": "2019-12-05 16:06:11.870723", "SubmitDT": "2019-12-05 16:06:11.870723", "ApproveDT": "2019-12-05 16:06:11.870723", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205160611", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:06:11.886" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:06:11.870723", "UpdateDT": "2019-12-05 16:06:11.870723", "PatientID": "P20191205160611", "AccessionNumber": "A20191205160611", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:11.886"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:06:11.886" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:06:11.870723', 'UpdateDT': '2019-12-05 16:06:11.870723', 'PatientID': 'P20191205160611', 'AccessionNumber': 'A20191205160611', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:06:11.886" endtime="20191205 16:06:11.886"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:06:11.902" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:11.886" endtime="20191205 16:06:11.902"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:11.902" endtime="20191205 16:06:11.902"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:06:11.917" level="INFO">${patientID} = ['P20191205160611']</msg>
<status status="PASS" starttime="20191205 16:06:11.902" endtime="20191205 16:06:11.933"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191205 16:06:11.949" level="INFO">${AccessionNumber} = ['A20191205160611']</msg>
<status status="PASS" starttime="20191205 16:06:11.933" endtime="20191205 16:06:11.949"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191205 16:06:11.964" level="INFO">${PatientName} = ['CN20191205160611']</msg>
<status status="PASS" starttime="20191205 16:06:11.949" endtime="20191205 16:06:11.964"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191205 16:06:11.964" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191205 16:06:11.964" endtime="20191205 16:06:11.964"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf,E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191205 16:06:11.964" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf,E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191205 16:06:11.964" endtime="20191205 16:06:11.964"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>,</arg>
</arguments>
<assign>
<var>${PDF_Password}</var>
</assign>
<msg timestamp="20191205 16:06:11.964" level="INFO">${PDF_Password} = ,</msg>
<status status="PASS" starttime="20191205 16:06:11.964" endtime="20191205 16:06:11.964"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:06:16.964" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:06:11.964" endtime="20191205 16:06:16.964"></status>
</kw>
<kw name="Report Create By Notifyserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_notifyserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
<arg>${PDF_Password}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:06:16.964" level="DEBUG">reading WSDL at: http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191205 16:06:16.964" level="DEBUG">opening (http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl)</msg>
<msg timestamp="20191205 16:06:16.996" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://carestream.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="http://carestream.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;\r\n      &lt;s:element name="NotifyExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ExamInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFile"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFileResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyPatientInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PatientInfoEx"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyPatientInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrl"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFile" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="NotifyServiceSoap"&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportFileSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportFileSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamReservationInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamReservationInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyPatientInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyPatientInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlForQrCodeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlForQrCodeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap12" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="NotifyService"&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap" binding="tns:NotifyServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.150/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap12" binding="tns:NotifyServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.150/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 15 (ms)</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93b48, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93bc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93d08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93d88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93e08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93e88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93ec8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93fc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b088, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b108, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d93f08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b1c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b248, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b2c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b348, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b3c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b448, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b4c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b5c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b648, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b6c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b7c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b848, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b8c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b948, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9b9c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9ba48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bac8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bb48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bbc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bc48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bcc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bd48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bdc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9be48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bec8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bf48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9bfc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9e088, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9e2c8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9e4c8, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9e548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9e648, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9e6c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9e888, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9eac8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9eb48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9ec48, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9ecc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9ed48, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76d9eec8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1108, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1188, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1348, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1588, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1608, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1708, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1788, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1808, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1848, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1948, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1c08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da1e08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4048, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4248, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da42c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4408, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4488, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4508, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4588, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da45c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da46c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da47c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4608, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4888, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4ac8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4cc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4d48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da4f48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da8188, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da8208, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">Element:0x1ec76da8408, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">loaded:

schema collection
   Schema:0x1ec76d93748
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x1ec76d93708 name="NotifyExamInfo"&gt;
         &lt;Complex:0x1ec76d938c8&gt;
            &lt;Sequence:0x1ec76d93a08&gt;
               &lt;Element:0x1ec76d93b48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76d93908 name="ExamInfo"&gt;
         &lt;Sequence:0x1ec76d93948&gt;
            &lt;Element:0x1ec76d93bc8 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d93d08 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d93d88 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d93e08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d93e88 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d93ec8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d93fc8 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b088 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b108 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d93f08 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b1c8 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b248 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b2c8 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b348 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b3c8 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b448 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b4c8 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b548 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b5c8 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b648 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b6c8 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b748 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b7c8 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b848 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b8c8 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b948 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9b9c8 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9ba48 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bac8 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bb48 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bbc8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bc48 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bcc8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bd48 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bdc8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9be48 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bec8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bf48 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9bfc8 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9e088 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76d93ac8 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x1ec76d9e108&gt;
            &lt;Sequence:0x1ec76d9e148&gt;
               &lt;Element:0x1ec76d9e2c8 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76d93c88 name="NotifyReportFile"&gt;
         &lt;Complex:0x1ec76d9e188&gt;
            &lt;Sequence:0x1ec76d9e348&gt;
               &lt;Element:0x1ec76d9e4c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec76d9e548 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76d9e648 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76d9e6c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76d9e248 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x1ec76d9e748&gt;
            &lt;Sequence:0x1ec76d9e788&gt;
               &lt;Element:0x1ec76d9e888 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76d9e408 name="SetPrintMode"&gt;
         &lt;Complex:0x1ec76d9e7c8&gt;
            &lt;Sequence:0x1ec76d9e908&gt;
               &lt;Element:0x1ec76d9eac8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76d9eb48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76d9ec48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76d9ecc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76d9ed48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76d9e848 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x1ec76d9e9c8&gt;
            &lt;Sequence:0x1ec76d9ea88&gt;
               &lt;Element:0x1ec76d9eec8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76d9ea48 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x1ec76d9ed88&gt;
            &lt;Sequence:0x1ec76da1048&gt;
               &lt;Element:0x1ec76da1108 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da1188 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76d9ee88 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x1ec76d9ef48&gt;
            &lt;Sequence:0x1ec76da10c8&gt;
               &lt;Element:0x1ec76da1348 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76d9e488 name="NotifyReportInfo"&gt;
         &lt;Complex:0x1ec76da1288&gt;
            &lt;Sequence:0x1ec76da13c8&gt;
               &lt;Element:0x1ec76da1588 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da1608 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da1708 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da1788 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da1808 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da1848 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec76da1948 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
         &lt;Sequence:0x1ec76da1488&gt;
            &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76da1508 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x1ec76da19c8&gt;
            &lt;Sequence:0x1ec76da1a88&gt;
               &lt;Element:0x1ec76da1c08 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76da1a48 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x1ec76da1ac8&gt;
            &lt;Sequence:0x1ec76da1c88&gt;
               &lt;Element:0x1ec76da1e08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76da1b88 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x1ec76da1d48&gt;
            &lt;Sequence:0x1ec76da1e88&gt;
               &lt;Element:0x1ec76da4048 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76da1dc8 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x1ec76da1f48&gt;
            &lt;Sequence:0x1ec76da40c8&gt;
               &lt;Element:0x1ec76da4248 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76da1fc8 name="PatientInfoEx"&gt;
         &lt;Sequence:0x1ec76da4188&gt;
            &lt;Element:0x1ec76da42c8 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4408 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4488 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4508 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4588 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da45c8 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da46c8 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4748 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da47c8 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4608 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4888 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76da4208 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x1ec76da4388&gt;
            &lt;Sequence:0x1ec76da4948&gt;
               &lt;Element:0x1ec76da4ac8 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76da4908 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x1ec76da4988&gt;
            &lt;Sequence:0x1ec76da4b48&gt;
               &lt;Element:0x1ec76da4cc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da4d48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76da4a48 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x1ec76da4c08&gt;
            &lt;Sequence:0x1ec76da4e48&gt;
               &lt;Element:0x1ec76da4f48 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76da4c88 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x1ec76da4e88&gt;
            &lt;Sequence:0x1ec76da8048&gt;
               &lt;Element:0x1ec76da8188 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76da8208 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76da4f08 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x1ec76da80c8&gt;
            &lt;Sequence:0x1ec76da8308&gt;
               &lt;Element:0x1ec76da8408 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">MERGED:
Schema:0x1ec76d93748
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x1ec76d93708 name="NotifyExamInfo"&gt;
      &lt;Complex:0x1ec76d938c8&gt;
         &lt;Sequence:0x1ec76d93a08&gt;
            &lt;Element:0x1ec76d93b48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76d93908 name="ExamInfo"&gt;
      &lt;Sequence:0x1ec76d93948&gt;
         &lt;Element:0x1ec76d93bc8 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d93d08 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d93d88 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d93e08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d93e88 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d93ec8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d93fc8 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b088 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b108 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d93f08 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b1c8 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b248 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b2c8 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b348 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b3c8 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b448 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b4c8 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b548 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b5c8 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b648 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b6c8 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b748 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b7c8 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b848 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b8c8 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b948 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9b9c8 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9ba48 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bac8 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bb48 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bbc8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bc48 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bcc8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bd48 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bdc8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9be48 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bec8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bf48 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9bfc8 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76d9e088 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76d93ac8 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x1ec76d9e108&gt;
         &lt;Sequence:0x1ec76d9e148&gt;
            &lt;Element:0x1ec76d9e2c8 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76d93c88 name="NotifyReportFile"&gt;
      &lt;Complex:0x1ec76d9e188&gt;
         &lt;Sequence:0x1ec76d9e348&gt;
            &lt;Element:0x1ec76d9e4c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec76d9e548 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9e648 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9e6c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76d9e248 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x1ec76d9e748&gt;
         &lt;Sequence:0x1ec76d9e788&gt;
            &lt;Element:0x1ec76d9e888 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76d9e408 name="SetPrintMode"&gt;
      &lt;Complex:0x1ec76d9e7c8&gt;
         &lt;Sequence:0x1ec76d9e908&gt;
            &lt;Element:0x1ec76d9eac8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9eb48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9ec48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9ecc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76d9ed48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76d9e848 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x1ec76d9e9c8&gt;
         &lt;Sequence:0x1ec76d9ea88&gt;
            &lt;Element:0x1ec76d9eec8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76d9ea48 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x1ec76d9ed88&gt;
         &lt;Sequence:0x1ec76da1048&gt;
            &lt;Element:0x1ec76da1108 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da1188 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76d9ee88 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x1ec76d9ef48&gt;
         &lt;Sequence:0x1ec76da10c8&gt;
            &lt;Element:0x1ec76da1348 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76d9e488 name="NotifyReportInfo"&gt;
      &lt;Complex:0x1ec76da1288&gt;
         &lt;Sequence:0x1ec76da13c8&gt;
            &lt;Element:0x1ec76da1588 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da1608 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da1708 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da1788 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da1808 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da1848 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec76da1948 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
      &lt;Sequence:0x1ec76da1488&gt;
         &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76da1508 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x1ec76da19c8&gt;
         &lt;Sequence:0x1ec76da1a88&gt;
            &lt;Element:0x1ec76da1c08 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76da1a48 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x1ec76da1ac8&gt;
         &lt;Sequence:0x1ec76da1c88&gt;
            &lt;Element:0x1ec76da1e08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76da1b88 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x1ec76da1d48&gt;
         &lt;Sequence:0x1ec76da1e88&gt;
            &lt;Element:0x1ec76da4048 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76da1dc8 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x1ec76da1f48&gt;
         &lt;Sequence:0x1ec76da40c8&gt;
            &lt;Element:0x1ec76da4248 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76da1fc8 name="PatientInfoEx"&gt;
      &lt;Sequence:0x1ec76da4188&gt;
         &lt;Element:0x1ec76da42c8 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da4408 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da4488 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da4508 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da4588 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da45c8 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da46c8 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da4748 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da47c8 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da4608 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76da4888 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76da4208 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x1ec76da4388&gt;
         &lt;Sequence:0x1ec76da4948&gt;
            &lt;Element:0x1ec76da4ac8 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76da4908 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x1ec76da4988&gt;
         &lt;Sequence:0x1ec76da4b48&gt;
            &lt;Element:0x1ec76da4cc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da4d48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76da4a48 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x1ec76da4c08&gt;
         &lt;Sequence:0x1ec76da4e48&gt;
            &lt;Element:0x1ec76da4f48 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76da4c88 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x1ec76da4e88&gt;
         &lt;Sequence:0x1ec76da8048&gt;
            &lt;Element:0x1ec76da8188 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76da8208 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76da4f08 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x1ec76da80c8&gt;
         &lt;Sequence:0x1ec76da8308&gt;
            &lt;Element:0x1ec76da8408 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93708 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93ac8 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93c88 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e248 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e848 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.011" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9ea48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9ee88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e488 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1508 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1a48 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1b88 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1dc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4208 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4908 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4a48 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4c88 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4f08 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93708 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93ac8 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93c88 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e248 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e848 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9ea48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9ee88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e488 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1508 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1a48 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1b88 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1dc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4208 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4908 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4a48 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4c88 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.027" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4f08 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">WSDL at 'http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x1ec7634ff08"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC763FE248&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC7634FE48&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC763FED88&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC763FE248&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC7634FE48&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC763FED88&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x1ec76d93748 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76D93848&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93708 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyExamInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93c88 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyReportFile' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'SetPrintMode' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9ea48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e488 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyReportInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1a48 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1dc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4908 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4c88 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93708 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyExamInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d93c88 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyReportFile' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'SetPrintMode' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9ea48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e488 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyReportInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1a48 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1dc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4908 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da4c88 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575533177 (running)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d93b48, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0888"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76d93b48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76d93908 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1e08, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0888"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1e08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec76db0888, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1108, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0888"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1108 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec76db0888, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1188, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76389488"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1188 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec76389488, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da4248, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0b88"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76da4248 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76da1fc8 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9e4c8, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0cc8"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76d9e4c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76d93908 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9e548, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0cc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9e548 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec76db0cc8, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9e648, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0cc8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9e648 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec76db0cc8, found builtin (int)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9e6c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0cc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9e6c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec76db0cc8, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1588, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1588 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1608, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1608 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1708, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1708 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1788, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1788 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1808, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1808 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (int)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1848, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76da1848 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1948, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76da1948 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da4cc8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da4cc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da4d48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da4d48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da8188, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da8188 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da8208, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da8208 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9eac8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9eac8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9eb48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9eb48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9ec48, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9ec48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (int)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9ecc8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9ecc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (int)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76d9ed48, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec764a1508"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76d9ed48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec764a1508, found builtin (int)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">Element:0x1ec76da1548, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76db0cc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">TypeQuery:0x1ec76db0cc8, found builtin (string)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e488 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76d9e488 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191205160611"
   type = &lt;Element:0x1ec76da1588 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76db0c08 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC7646A248&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191205160611"
   type = &lt;Element:0x1ec76da1588 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76db0c08 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191205160611"
   type = &lt;Element:0x1ec76da1588 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76db0c08 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6108&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6108&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191205160611"
   type = &lt;Element:0x1ec76da1588 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76db0c08 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6108&gt;)
</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191205160611"
   type = &lt;Element:0x1ec76da1608 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dbf748 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76DD6808&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191205160611"
   type = &lt;Element:0x1ec76da1608 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dbf748 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191205160611"
   type = &lt;Element:0x1ec76da1608 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dbf748 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6888&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6888&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191205160611"
   type = &lt;Element:0x1ec76da1608 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dbf748 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6888&gt;)
</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191205160611"
   type = &lt;Element:0x1ec76da1708 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4cc8 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76DD6E88&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191205160611"
   type = &lt;Element:0x1ec76da1708 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4cc8 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191205160611"
   type = &lt;Element:0x1ec76da1708 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4cc8 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6F08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F08&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191205160611"
   type = &lt;Element:0x1ec76da1708 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4cc8 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6F08&gt;)
</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "4a1dd664-92e9-40c1-927c-a4a2a94f67ac"
   type = &lt;Element:0x1ec76da1788 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4d48 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76DCA488&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "4a1dd664-92e9-40c1-927c-a4a2a94f67ac"
   type = &lt;Element:0x1ec76da1788 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4d48 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "4a1dd664-92e9-40c1-927c-a4a2a94f67ac"
   type = &lt;Element:0x1ec76da1788 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4d48 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DCA508&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DCA508&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "4a1dd664-92e9-40c1-927c-a4a2a94f67ac"
   type = &lt;Element:0x1ec76da1788 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc4d48 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DCA508&gt;)
</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x1ec76da1808 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76dc4d88 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76DCAA88&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x1ec76da1808 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76dc4d88 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.042" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x1ec76da1808 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76dc4d88 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DCAB08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DCAB08&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x1ec76da1808 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76dc4d88 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DCAB08&gt;)
</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec76da1848 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76DD6F08&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec76da1848 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec76da1848 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">searching parent (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6D08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DD6D08&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6D08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">searching parent (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6708&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DD6708&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc5f48 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec76da1488&gt;
   &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6708&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf&lt;/tns:string&gt;
&lt;/tns:reportFileName&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">searching parent (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6908&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DD6908&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc5f48 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec76da1488&gt;
   &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6908&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD6D08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DD6D08&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
   type = &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc5f48 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec76da1488&gt;
   &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6D08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec76da1848 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD6F88&gt;)
</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">processing:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x1ec76da1948 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76DD6688&gt;
content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x1ec76da1948 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x1ec76da1948 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">created - node:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">searching parent (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DC8F48&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DC8F48&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DC8F48&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">searching parent (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DC8CC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DC8CC8&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc5f48 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec76da1488&gt;
   &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DC8CC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;&lt;/tns:string&gt;
&lt;/tns:pdfPassword&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">searching parent (&lt;Complex:0x1ec76da1308 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DC8C88&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DC8C88&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc5f48 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec76da1488&gt;
   &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DC8C88&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DC8F48&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;
&lt;suds.resolver.Frame object at 0x000001EC76DC8F48&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
   type = &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76dc5f48 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec76da1488&gt;
   &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DC8F48&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">ending content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x1ec76da1948 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x1ec76da1308 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec76da1488&gt;
      &lt;Element:0x1ec76da1548 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DD65C8&gt;)
</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">message for 'NotifyReportInfo' created: 15 (ms)</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">sending to (http://10.112.20.150/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x000001EC76DD6548&gt;</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191205 16:06:17.058" level="DEBUG">sending:
URL: http://10.112.20.150/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:NotifyReportInfo&gt;&lt;ns1:patientName&gt;CN20191205160611&lt;/ns1:patientName&gt;&lt;ns1:patientID&gt;P20191205160611&lt;/ns1:patientID&gt;&lt;ns1:accessionNumber&gt;A20191205160611&lt;/ns1:accessionNumber&gt;&lt;ns1:studyInstanceUID&gt;4a1dd664-92e9-40c1-927c-a4a2a94f67ac&lt;/ns1:studyInstanceUID&gt;&lt;ns1:reportStatus&gt;2&lt;/ns1:reportStatus&gt;&lt;ns1:reportFileName&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;/ns1:reportFileName&gt;&lt;ns1:pdfPassword&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;/ns1:pdfPassword&gt;&lt;/ns1:NotifyReportInfo&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/10.0
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Thu, 05 Dec 2019 08:06:17 GMT
Connection: close
Content-Length: 380


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">waited 265 (ms) on server reply</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76da1508 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">Element:0x1ec76da1c08, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76dca248"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1c08 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">TypeQuery:0x1ec76dca248, found builtin (int)</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">reset</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">Element:0x1ec76da1c08, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76df2348"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76da1c08 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">TypeQuery:0x1ec76df2348, found builtin (int)</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76DF22C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76DF22C8&gt;</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76DF22C8&gt;)
</msg>
<msg timestamp="20191205 16:06:17.324" level="DEBUG">method 'NotifyReportInfo' invoked: 265 (ms)</msg>
<msg timestamp="20191205 16:06:17.324" level="INFO">Report.report_create_by_notifyserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191205 16:06:17.324" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191205160611", "patient_id": "P20191205160611", "accessionNumber": "A20191205160611", "StudyInstanceUID": "4a1dd664-92e9-40c1-927c-a4a2a94f67ac", "report_type": "...</msg>
<status status="PASS" starttime="20191205 16:06:16.964" endtime="20191205 16:06:17.324"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:17.324" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191205160611', 'patient_id': 'P20191205160611', 'accessionNumber': 'A20191205160611', 'StudyInstanceUID': '4a1dd664-92e9-40c1-927c-a4a2a94f67ac', 'report_type': '...</msg>
<status status="PASS" starttime="20191205 16:06:17.324" endtime="20191205 16:06:17.324"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:06:17.355" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:17.324" endtime="20191205 16:06:17.355"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:17.355" endtime="20191205 16:06:17.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:06:22.356" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:06:17.355" endtime="20191205 16:06:22.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191205 16:06:22.356" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191205 16:06:22.356" endtime="20191205 16:06:22.356"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191205 16:06:22.387" level="INFO">${Report_StudyInstanceUID} = ['4a1dd664-92e9-40c1-927c-a4a2a94f67ac']</msg>
<status status="PASS" starttime="20191205 16:06:22.356" endtime="20191205 16:06:22.387"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191205 16:06:22.402" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191205 16:06:22.402" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191205 16:06:22.387" endtime="20191205 16:06:22.402"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:22.402" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191205 16:06:22.402" endtime="20191205 16:06:22.402"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191205 16:06:22.434" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:22.402" endtime="20191205 16:06:22.434"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191205 16:06:22.449" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191205 16:06:22.434" endtime="20191205 16:06:22.449"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:22.449" endtime="20191205 16:06:22.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191205 16:06:22.449" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:22.449" endtime="20191205 16:06:22.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 16:06:22.449" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191205 16:06:22.449" endtime="20191205 16:06:22.449"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191205 16:06:22.480" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191205160611", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-12-05 16:06:18.137000", "HoldFlag": 1, "PrintWaitTime": "600", "ReportWaitTime": "600...</msg>
<status status="PASS" starttime="20191205 16:06:22.449" endtime="20191205 16:06:22.480"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:22.480" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191205160611', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-12-05 16:06:18.137000', 'HoldFlag': 1, 'PrintWaitTime': '600', 'ReportWaitTime': '600...</msg>
<status status="PASS" starttime="20191205 16:06:22.480" endtime="20191205 16:06:22.480"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191205 16:06:22.512" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:22.480" endtime="20191205 16:06:22.512"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191205 16:06:22.527" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191205 16:06:22.512" endtime="20191205 16:06:22.527"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:22.527" endtime="20191205 16:06:22.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191205 16:06:22.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:22.527" endtime="20191205 16:06:22.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191205 16:06:22.527" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191205 16:06:22.527" endtime="20191205 16:06:22.527"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191205 16:06:22.527" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191205160611, A20191205160611] correct and value is 9</msg>
<msg timestamp="20191205 16:06:22.527" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191205 16:06:22.527" endtime="20191205 16:06:22.527"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191205 16:06:22.527" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191205 16:06:22.527" endtime="20191205 16:06:22.527"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191205 16:06:22.543" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:22.527" endtime="20191205 16:06:22.543"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191205 16:06:22.558" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191205 16:06:22.543" endtime="20191205 16:06:22.558"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:22.558" endtime="20191205 16:06:22.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191205 16:06:22.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:22.558" endtime="20191205 16:06:22.558"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:06:11.871" endtime="20191205 16:06:22.558" critical="yes"></status>
</test>
<test id="s1-t4" name="SmokeTest_004_Core_4714_02.01.02 Report receive from web service PrintServer_Reportinfo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191205 16:06:22.558" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191205 16:06:22.558" endtime="20191205 16:06:22.558"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:06:22.558" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:06:22.574" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:06:22.574" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:06:22.558379", "UpdateDT": "2019-12-05 16:06:22.558379", "PatientID": "P20191205160622", "AccessionNumber": "A20191205160622", "StudyInstanceUID": "UID20191205160622", "NameCN": "CN20191205160622", "NameEN": "EN20191205160622", "Gender": "M", "Birthday": "1920-12-29", "Modality": "XA", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:06:22.558379", "RegisterDT": "2019-12-05 16:06:22.558379", "ExamDT": "2019-12-05 16:06:22.558379", "ReportDT": "2019-12-05 16:06:22.558379", "SubmitDT": "2019-12-05 16:06:22.558379", "ApproveDT": "2019-12-05 16:06:22.558379", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205160622", "ExamBodyPart": "Lung", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:06:22.574" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:06:22.558379", "UpdateDT": "2019-12-05 16:06:22.558379", "PatientID": "P20191205160622", "AccessionNumber": "A20191205160622", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:06:22.558" endtime="20191205 16:06:22.574"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:06:22.590" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:06:22.558379', 'UpdateDT': '2019-12-05 16:06:22.558379', 'PatientID': 'P20191205160622', 'AccessionNumber': 'A20191205160622', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:06:22.574" endtime="20191205 16:06:22.590"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:06:22.621" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:22.590" endtime="20191205 16:06:22.621"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:22.621" endtime="20191205 16:06:22.621"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:06:22.637" level="INFO">${patientID} = ['P20191205160622']</msg>
<status status="PASS" starttime="20191205 16:06:22.621" endtime="20191205 16:06:22.637"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191205 16:06:22.652" level="INFO">${AccessionNumber} = ['A20191205160622']</msg>
<status status="PASS" starttime="20191205 16:06:22.637" endtime="20191205 16:06:22.652"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191205 16:06:22.668" level="INFO">${PatientName} = ['CN20191205160622']</msg>
<status status="PASS" starttime="20191205 16:06:22.652" endtime="20191205 16:06:22.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191205 16:06:22.668" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191205 16:06:22.668" endtime="20191205 16:06:22.668"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191205 16:06:22.668" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191205 16:06:22.668" endtime="20191205 16:06:22.668"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:06:27.682" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:06:22.668" endtime="20191205 16:06:27.682"></status>
</kw>
<kw name="Report Create By Printserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_printserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:06:27.682" level="DEBUG">reading WSDL at: http://10.112.20.150/PrintServer/PrintService.asmx?wsdl ...</msg>
<msg timestamp="20191205 16:06:27.682" level="DEBUG">opening (http://10.112.20.150/PrintServer/PrintService.asmx?wsdl)</msg>
<msg timestamp="20191205 16:06:27.729" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/" xmlns:s1="http://tempuri.org/AbstractTypes" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatus"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2Response"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Print"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="PrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PrintTask"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrintCombine"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintCombineResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfInt"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrint"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLog"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLogResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Version"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="VersionResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="TaskInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="PatientInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfFilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="FilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="int" type="s:int" /&gt;\r\n      &lt;s:element name="string" nillable="true" type="s:string" /&gt;\r\n      &lt;s:element name="boolean" type="s:boolean" /&gt;\r\n      &lt;s:element name="PrintTask" type="tns:TaskInfo" /&gt;\r\n    &lt;/s:schema&gt;\r\n    &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;\r\n      &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/" /&gt;\r\n      &lt;s:complexType name="StringArray"&gt;\r\n        &lt;s:complexContent mixed="false"&gt;\r\n          &lt;s:restriction base="soapenc:Array"&gt;\r\n            &lt;s:sequence&gt;\r\n              &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string" /&gt;\r\n            &lt;/s:sequence&gt;\r\n          &lt;/s:restriction&gt;\r\n        &lt;/s:complexContent&gt;\r\n      &lt;/s:complexType&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Print" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:PrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrint" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLog" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Version" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:VersionResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpGetIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpPostIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="PrintServiceSoap"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintServerStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintServerStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTask2SoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTask2SoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;wsdl:input message="tns:PrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:PrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintTaskStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintTaskStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintCombineSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintCombineSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpGet"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpPost"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap12" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpGet" type="tns:PrintServiceHttpGet"&gt;\r\n    &lt;http:binding verb="GET" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpPost" type="tns:PrintServiceHttpPost"&gt;\r\n    &lt;http:binding verb="POST" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="PrintService"&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap" binding="tns:PrintServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.150/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap12" binding="tns:PrintServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.150/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpGet" binding="tns:PrintServiceHttpGet"&gt;\r\n      &lt;http:address location="http://10.112.20.150/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpPost" binding="tns:PrintServiceHttpPost"&gt;\r\n      &lt;http:address location="http://10.112.20.150/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 15 (ms)</msg>
<msg timestamp="20191205 16:06:27.745" level="DEBUG">binding: "PrintServiceHttpGet" not a SOAP binding</msg>
<msg timestamp="20191205 16:06:27.745" level="DEBUG">binding: "PrintServiceHttpPost" not a SOAP binding</msg>
<msg timestamp="20191205 16:06:27.745" level="DEBUG">binding "PrintServiceHttpGet" - not a SOAP binding, discarded</msg>
<msg timestamp="20191205 16:06:27.745" level="DEBUG">binding "PrintServiceHttpPost" - not a SOAP binding, discarded</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Import:0x1ec7719cb48, importing ns="http://schemas.xmlsoap.org/soap/encoding/", location="suds://schemas.xmlsoap.org/soap/encoding/"</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;\n&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"\n    xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/"\n    targetNamespace="http://schemas.xmlsoap.org/soap/encoding/"&gt;\n\n &lt;xs:attribute name="root"&gt;\n   &lt;xs:annotation&gt;\n     &lt;xs:documentation&gt;\n       \'root\' can be used to distinguish serialization roots from other\n       elements that are present in a serialization but are not roots of\n       a serialized value graph\n     &lt;/xs:documentation&gt;\n   &lt;/xs:annotation&gt;\n   &lt;xs:simpleType&gt;\n     &lt;xs:restriction base="xs:boolean"&gt;\n       &lt;xs:pattern value="0|1"/&gt;\n     &lt;/xs:restriction&gt;\n   &lt;/xs:simpleType&gt;\n &lt;/xs:attribute&gt;\n\n  &lt;xs:attributeGroup name="commonAttributes"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n        Attributes common to all elements that function as accessors or\n        represent independent (multi-ref) values.  The href attribute is\n        intended to be used in a manner like CONREF.  That is, the element\n        content should be empty iff the href attribute appears\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:attribute name="id" type="xs:ID"/&gt;\n    &lt;xs:attribute name="href" type="xs:anyURI"/&gt;\n    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;!-- Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them. --&gt;\n\n  &lt;!-- Array attributes. Needed to give the type and dimensions of an array\'s contents, and the offset for partially-transmitted arrays. --&gt;\n\n  &lt;xs:simpleType name="arrayCoordinate"&gt;\n    &lt;xs:restriction base="xs:string"/&gt;\n  &lt;/xs:simpleType&gt;\n\n  &lt;xs:attribute name="arrayType" type="xs:string"/&gt;\n  &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayAttributes"&gt;\n    &lt;xs:attribute ref="tns:arrayType"/&gt;\n    &lt;xs:attribute ref="tns:offset"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;\n    &lt;xs:attribute ref="tns:position"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:group name="Array"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:element name="Array" type="tns:Array"/&gt;\n  &lt;xs:complexType name="Array"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n       \'Array\' is a complex type for accessors identified by position\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Struct\' is a complex type for accessors identified by name.\n       Constraint: No element may be have the same name as any other,\n       nor may any element have a maxOccurs &gt; 1. --&gt;\n\n  &lt;xs:element name="Struct" type="tns:Struct"/&gt;\n\n  &lt;xs:group name="Struct"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:complexType name="Struct"&gt;\n    &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Base64\' can be used to serialize binary data using base64 encoding\n       as defined in RFC2045 but without the MIME line length limitation. --&gt;\n\n  &lt;xs:simpleType name="base64"&gt;\n    &lt;xs:restriction base="xs:base64Binary"/&gt;\n  &lt;/xs:simpleType&gt;\n\n &lt;!-- Element declarations corresponding to each of the simple types in the\n      XML Schemas Specification. --&gt;\n\n  &lt;xs:element name="duration" type="tns:duration"/&gt;\n  &lt;xs:complexType name="duration"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:duration"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;\n  &lt;xs:complexType name="dateTime"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:dateTime"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;\n  &lt;xs:complexType name="NOTATION"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="time" type="tns:time"/&gt;\n  &lt;xs:complexType name="time"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:time"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="date" type="tns:date"/&gt;\n  &lt;xs:complexType name="date"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:date"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;\n  &lt;xs:complexType name="gYearMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYearMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYear" type="tns:gYear"/&gt;\n  &lt;xs:complexType name="gYear"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYear"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;\n  &lt;xs:complexType name="gMonthDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonthDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gDay" type="tns:gDay"/&gt;\n  &lt;xs:complexType name="gDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;\n  &lt;xs:complexType name="gMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="boolean" type="tns:boolean"/&gt;\n  &lt;xs:complexType name="boolean"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:boolean"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;\n  &lt;xs:complexType name="base64Binary"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:base64Binary"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;\n  &lt;xs:complexType name="hexBinary"&gt;\n    &lt;xs:simpleContent&gt;\n     &lt;xs:extension base="xs:hexBinary"&gt;\n       &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n     &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="float" type="tns:float"/&gt;\n  &lt;xs:complexType name="float"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:float"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="double" type="tns:double"/&gt;\n  &lt;xs:complexType name="double"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:double"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;\n  &lt;xs:complexType name="anyURI"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:anyURI"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="QName" type="tns:QName"/&gt;\n  &lt;xs:complexType name="QName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="string" type="tns:string"/&gt;\n  &lt;xs:complexType name="string"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:string"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;\n  &lt;xs:complexType name="normalizedString"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:normalizedString"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="token" type="tns:token"/&gt;\n  &lt;xs:complexType name="token"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:token"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="language" type="tns:language"/&gt;\n  &lt;xs:complexType name="language"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:language"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="Name" type="tns:Name"/&gt;\n  &lt;xs:complexType name="Name"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:Name"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;\n  &lt;xs:complexType name="NMTOKEN"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKEN"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NCName" type="tns:NCName"/&gt;\n  &lt;xs:complexType name="NCName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NCName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;\n  &lt;xs:complexType name="NMTOKENS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKENS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ID" type="tns:ID"/&gt;\n  &lt;xs:complexType name="ID"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ID"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;\n  &lt;xs:complexType name="IDREF"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREF"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;\n  &lt;xs:complexType name="ENTITY"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITY"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;\n  &lt;xs:complexType name="IDREFS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREFS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;\n  &lt;xs:complexType name="ENTITIES"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITIES"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="decimal" type="tns:decimal"/&gt;\n  &lt;xs:complexType name="decimal"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:decimal"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="integer" type="tns:integer"/&gt;\n  &lt;xs:complexType name="integer"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:integer"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;\n  &lt;xs:complexType name="nonPositiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonPositiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;\n  &lt;xs:complexType name="negativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:negativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="long" type="tns:long"/&gt;\n  &lt;xs:complexType name="long"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:long"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="int" type="tns:int"/&gt;\n  &lt;xs:complexType name="int"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:int"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="short" type="tns:short"/&gt;\n  &lt;xs:complexType name="short"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:short"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="byte" type="tns:byte"/&gt;\n  &lt;xs:complexType name="byte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:byte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;\n  &lt;xs:complexType name="nonNegativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonNegativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;\n  &lt;xs:complexType name="unsignedLong"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedLong"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;\n  &lt;xs:complexType name="unsignedInt"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedInt"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;\n  &lt;xs:complexType name="unsignedShort"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedShort"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;\n  &lt;xs:complexType name="unsignedByte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedByte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;\n  &lt;xs:complexType name="positiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:positiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyType"/&gt;\n&lt;/xs:schema&gt;\n'
sax duration: 0 (ms)</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">built:
Schema:0x1ec771a0148
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x1ec771a07c8 name="root" /&gt;
   &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes"&gt;
      &lt;Attribute:0x1ec771b1e08 name="id" type="xs:ID" /&gt;@
      &lt;Attribute:0x1ec771e2bc8 name="href" type="xs:anyURI" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x1ec771b1f08 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x1ec771b6b08 name="arrayType" type="xs:string" /&gt;
   &lt;Attribute:0x1ec771b3788 name="offset" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x1ec771c2888 name="arrayAttributes"&gt;
      &lt;Attribute:0x1ec771cf548 ref="tns:arrayType" /&gt;@
      &lt;Attribute:0x1ec771cfdc8 ref="tns:offset" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x1ec771c2e08 name="position" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x1ec771dcc08 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x1ec771c00c8 ref="tns:position" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x1ec771c0a08 name="Array"&gt;
      &lt;Sequence:0x1ec771a8608&gt;
         &lt;Any:0x1ec771d5cc8 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x1ec771b3848 name="Array" type="tns:Array" /&gt;
   &lt;Complex:0x1ec771d5088 name="Array" /&gt;
   &lt;Element:0x1ec771c5ec8 name="Struct" type="tns:Struct" /&gt;
   &lt;Group:0x1ec771e5e88 name="Struct"&gt;
      &lt;Sequence:0x1ec771e5608&gt;
         &lt;Any:0x1ec7719cf48 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x1ec771e5f48 name="Struct" /&gt;
   &lt;Simple:0x1ec771a3f08 name="base64" /&gt;
   &lt;Element:0x1ec7719ce88 name="duration" type="tns:duration" /&gt;
   &lt;Complex:0x1ec771e78c8 name="duration" /&gt;
   &lt;Element:0x1ec771eee88 name="dateTime" type="tns:dateTime" /&gt;
   &lt;Complex:0x1ec771f8d88 name="dateTime" /&gt;
   &lt;Element:0x1ec771f1708 name="NOTATION" type="tns:NOTATION" /&gt;
   &lt;Complex:0x1ec771de088 name="NOTATION" /&gt;
   &lt;Element:0x1ec771dacc8 name="time" type="tns:time" /&gt;
   &lt;Complex:0x1ec771ccbc8 name="time" /&gt;
   &lt;Element:0x1ec771bae08 name="date" type="tns:date" /&gt;
   &lt;Complex:0x1ec771eb8c8 name="date" /&gt;
   &lt;Element:0x1ec771adfc8 name="gYearMonth" type="tns:gYearMonth" /&gt;
   &lt;Complex:0x1ec771bc748 name="gYearMonth" /&gt;
   &lt;Element:0x1ec77200808 name="gYear" type="tns:gYear" /&gt;
   &lt;Complex:0x1ec77200bc8 name="gYear" /&gt;
   &lt;Element:0x1ec77200708 name="gMonthDay" type="tns:gMonthDay" /&gt;
   &lt;Complex:0x1ec77200f88 name="gMonthDay" /&gt;
   &lt;Element:0x1ec772008c8 name="gDay" type="tns:gDay" /&gt;
   &lt;Complex:0x1ec77200ac8 name="gDay" /&gt;
   &lt;Element:0x1ec77200fc8 name="gMonth" type="tns:gMonth" /&gt;
   &lt;Complex:0x1ec77200488 name="gMonth" /&gt;
   &lt;Element:0x1ec772006c8 name="boolean" type="tns:boolean" /&gt;
   &lt;Complex:0x1ec771fe548 name="boolean" /&gt;
   &lt;Element:0x1ec771fe8c8 name="base64Binary" type="tns:base64Binary" /&gt;
   &lt;Complex:0x1ec77217248 name="base64Binary" /&gt;
   &lt;Element:0x1ec772173c8 name="hexBinary" type="tns:hexBinary" /&gt;
   &lt;Complex:0x1ec772174c8 name="hexBinary" /&gt;
   &lt;Element:0x1ec77217648 name="float" type="tns:float" /&gt;
   &lt;Complex:0x1ec77217748 name="float" /&gt;
   &lt;Element:0x1ec772178c8 name="double" type="tns:double" /&gt;
   &lt;Complex:0x1ec772179c8 name="double" /&gt;
   &lt;Element:0x1ec77217b48 name="anyURI" type="tns:anyURI" /&gt;
   &lt;Complex:0x1ec77217c48 name="anyURI" /&gt;
   &lt;Element:0x1ec77217dc8 name="QName" type="tns:QName" /&gt;
   &lt;Complex:0x1ec77217ec8 name="QName" /&gt;
   &lt;Element:0x1ec77217e88 name="string" type="tns:string" /&gt;
   &lt;Complex:0x1ec77203188 name="string" /&gt;
   &lt;Element:0x1ec77203308 name="normalizedString" type="tns:normalizedString" /&gt;
   &lt;Complex:0x1ec77203408 name="normalizedString" /&gt;
   &lt;Element:0x1ec77203588 name="token" type="tns:token" /&gt;
   &lt;Complex:0x1ec77203688 name="token" /&gt;
   &lt;Element:0x1ec77203808 name="language" type="tns:language" /&gt;
   &lt;Complex:0x1ec77203908 name="language" /&gt;
   &lt;Element:0x1ec77203a88 name="Name" type="tns:Name" /&gt;
   &lt;Complex:0x1ec77203b88 name="Name" /&gt;
   &lt;Element:0x1ec77203d08 name="NMTOKEN" type="tns:NMTOKEN" /&gt;
   &lt;Complex:0x1ec77203e08 name="NMTOKEN" /&gt;
   &lt;Element:0x1ec77203f88 name="NCName" type="tns:NCName" /&gt;
   &lt;Complex:0x1ec772040c8 name="NCName" /&gt;
   &lt;Element:0x1ec77204248 name="NMTOKENS" type="tns:NMTOKENS" /&gt;
   &lt;Complex:0x1ec77204348 name="NMTOKENS" /&gt;
   &lt;Element:0x1ec772044c8 name="ID" type="tns:ID" /&gt;
   &lt;Complex:0x1ec772045c8 name="ID" /&gt;
   &lt;Element:0x1ec77204748 name="IDREF" type="tns:IDREF" /&gt;
   &lt;Complex:0x1ec77204848 name="IDREF" /&gt;
   &lt;Element:0x1ec772049c8 name="ENTITY" type="tns:ENTITY" /&gt;
   &lt;Complex:0x1ec77204ac8 name="ENTITY" /&gt;
   &lt;Element:0x1ec77204c48 name="IDREFS" type="tns:IDREFS" /&gt;
   &lt;Complex:0x1ec77204d48 name="IDREFS" /&gt;
   &lt;Element:0x1ec77204ec8 name="ENTITIES" type="tns:ENTITIES" /&gt;
   &lt;Complex:0x1ec77204f88 name="ENTITIES" /&gt;
   &lt;Element:0x1ec77206188 name="decimal" type="tns:decimal" /&gt;
   &lt;Complex:0x1ec77206288 name="decimal" /&gt;
   &lt;Element:0x1ec77206408 name="integer" type="tns:integer" /&gt;
   &lt;Complex:0x1ec77206508 name="integer" /&gt;
   &lt;Element:0x1ec77206688 name="nonPositiveInteger" type="tns:nonPositiveInteger" /&gt;
   &lt;Complex:0x1ec77206788 name="nonPositiveInteger" /&gt;
   &lt;Element:0x1ec77206908 name="negativeInteger" type="tns:negativeInteger" /&gt;
   &lt;Complex:0x1ec77206a08 name="negativeInteger" /&gt;
   &lt;Element:0x1ec77206b88 name="long" type="tns:long" /&gt;
   &lt;Complex:0x1ec77206c88 name="long" /&gt;
   &lt;Element:0x1ec77206e08 name="int" type="tns:int" /&gt;
   &lt;Complex:0x1ec77206f08 name="int" /&gt;
   &lt;Element:0x1ec77206ec8 name="short" type="tns:short" /&gt;
   &lt;Complex:0x1ec7721d1c8 name="short" /&gt;
   &lt;Element:0x1ec7721d348 name="byte" type="tns:byte" /&gt;
   &lt;Complex:0x1ec7721d448 name="byte" /&gt;
   &lt;Element:0x1ec7721d5c8 name="nonNegativeInteger" type="tns:nonNegativeInteger" /&gt;
   &lt;Complex:0x1ec7721d6c8 name="nonNegativeInteger" /&gt;
   &lt;Element:0x1ec7721d848 name="unsignedLong" type="tns:unsignedLong" /&gt;
   &lt;Complex:0x1ec7721d948 name="unsignedLong" /&gt;
   &lt;Element:0x1ec7721dac8 name="unsignedInt" type="tns:unsignedInt" /&gt;
   &lt;Complex:0x1ec7721dbc8 name="unsignedInt" /&gt;
   &lt;Element:0x1ec7721dd48 name="unsignedShort" type="tns:unsignedShort" /&gt;
   &lt;Complex:0x1ec7721de48 name="unsignedShort" /&gt;
   &lt;Element:0x1ec7721dfc8 name="unsignedByte" type="tns:unsignedByte" /&gt;
   &lt;Complex:0x1ec77220108 name="unsignedByte" /&gt;
   &lt;Element:0x1ec77220288 name="positiveInteger" type="tns:positiveInteger" /&gt;
   &lt;Complex:0x1ec77220388 name="positiveInteger" /&gt;
   &lt;Element:0x1ec77220508 name="anyType" type="xs:anyType" /&gt;
</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Attribute:0x1ec771b1e08, convert type="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Attribute:0x1ec771e2bc8, convert type="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Restriction:0x1ec771b6108, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Attribute:0x1ec771b6b08, convert type="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Attribute:0x1ec771b3788, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Attribute:0x1ec771cf548, convert ref="tns:arrayType" to ('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x1ec771b6b08 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">Attribute:0x1ec771cfdc8, convert ref="tns:offset" to ('offset', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.760" level="DEBUG">('offset', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x1ec771b3788 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Attribute:0x1ec771c2e08, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Attribute:0x1ec771c00c8, convert ref="tns:position" to ('position', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('position', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x1ec771c2e08 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771b3848, convert type="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Group:0x1ec771c5fc8, convert ref="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x1ec771c0a08 name="Array" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec771f5c48, convert ref="tns:arrayAttributes" to ('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771c2888 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec771f5f08, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771c5ec8, convert type="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Group:0x1ec7719cf88, convert ref="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('Struct', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x1ec771e5e88 name="Struct" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec7719ce48, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Restriction:0x1ec771e7d88, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (base64Binary)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec7719ce88, convert type="tns:duration" to ('duration', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec771f17c8, convert ref="xs:duration" to ('duration', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (duration)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec771a9bc8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771eee88, convert type="tns:dateTime" to ('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec771d60c8, convert ref="xs:dateTime" to ('dateTime', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (dateTime)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec771de9c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771f1708, convert type="tns:NOTATION" to ('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec771bad08, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (QName)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec771fbd48, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771dacc8, convert type="tns:time" to ('time', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec771adcc8, convert ref="xs:time" to ('time', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (time)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec771ca908, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771bae08, convert type="tns:date" to ('date', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77200048, convert ref="xs:date" to ('date', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (date)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77200648, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771adfc8, convert type="tns:gYearMonth" to ('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77200a48, convert ref="xs:gYearMonth" to ('gYearMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (gYearMonth)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77200e08, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77200808, convert type="tns:gYear" to ('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77200b48, convert ref="xs:gYear" to ('gYear', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (gYear)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec772007c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77200708, convert type="tns:gMonthDay" to ('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77200a88, convert ref="xs:gMonthDay" to ('gMonthDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (gMonthDay)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77200dc8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec772008c8, convert type="tns:gDay" to ('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77200c88, convert ref="xs:gDay" to ('gDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (gDay)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77200588, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77200fc8, convert type="tns:gMonth" to ('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec771fe988, convert ref="xs:gMonth" to ('gMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (gMonth)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77217088, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec772006c8, convert type="tns:boolean" to ('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec772171c8, convert ref="xs:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (boolean)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77217308, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec771fe8c8, convert type="tns:base64Binary" to ('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77217448, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (base64Binary)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77217588, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec772173c8, convert type="tns:hexBinary" to ('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec772176c8, convert ref="xs:hexBinary" to ('hexBinary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (hexBinary)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77217808, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77217648, convert type="tns:float" to ('float', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77217948, convert ref="xs:float" to ('float', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (float)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77217a88, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec772178c8, convert type="tns:double" to ('double', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77217bc8, convert ref="xs:double" to ('double', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (double)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77217d08, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77217b48, convert type="tns:anyURI" to ('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77217e48, convert ref="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (anyURI)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77217f88, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77217dc8, convert type="tns:QName" to ('QName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77203108, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (QName)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77203248, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77217e88, convert type="tns:string" to ('string', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77203388, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec772034c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77203308, convert type="tns:normalizedString" to ('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77203608, convert ref="xs:normalizedString" to ('normalizedString', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (normalizedString)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77203748, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77203588, convert type="tns:token" to ('token', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77203888, convert ref="xs:token" to ('token', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (token)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec772039c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77203808, convert type="tns:language" to ('language', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77203b08, convert ref="xs:language" to ('language', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (language)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77203c48, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77203a88, convert type="tns:Name" to ('Name', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77203d88, convert ref="xs:Name" to ('Name', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (Name)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77203ec8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77203d08, convert type="tns:NMTOKEN" to ('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77204048, convert ref="xs:NMTOKEN" to ('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (NMTOKEN)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77204188, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77203f88, convert type="tns:NCName" to ('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec772042c8, convert ref="xs:NCName" to ('NCName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (NCName)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77204408, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77204248, convert type="tns:NMTOKENS" to ('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77204548, convert ref="xs:NMTOKENS" to ('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (NMTOKENS)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77204688, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec772044c8, convert type="tns:ID" to ('ID', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec772047c8, convert ref="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (ID)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77204908, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77204748, convert type="tns:IDREF" to ('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77204a48, convert ref="xs:IDREF" to ('IDREF', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (IDREF)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77204b88, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec772049c8, convert type="tns:ENTITY" to ('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77204cc8, convert ref="xs:ENTITY" to ('ENTITY', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (ENTITY)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77204e08, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77204c48, convert type="tns:IDREFS" to ('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77204f48, convert ref="xs:IDREFS" to ('IDREFS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (IDREFS)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec772060c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77204ec8, convert type="tns:ENTITIES" to ('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77206208, convert ref="xs:ENTITIES" to ('ENTITIES', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (ENTITIES)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77206348, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77206188, convert type="tns:decimal" to ('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77206488, convert ref="xs:decimal" to ('decimal', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (decimal)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec772065c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77206408, convert type="tns:integer" to ('integer', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77206708, convert ref="xs:integer" to ('integer', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (integer)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77206848, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77206688, convert type="tns:nonPositiveInteger" to ('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77206988, convert ref="xs:nonPositiveInteger" to ('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (nonPositiveInteger)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77206ac8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77206908, convert type="tns:negativeInteger" to ('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77206c08, convert ref="xs:negativeInteger" to ('negativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (negativeInteger)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77206d48, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77206b88, convert type="tns:long" to ('long', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77206e88, convert ref="xs:long" to ('long', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (long)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77206fc8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77206e08, convert type="tns:int" to ('int', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec7721d148, convert ref="xs:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec7721d288, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77206ec8, convert type="tns:short" to ('short', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec7721d3c8, convert ref="xs:short" to ('short', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (short)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec7721d508, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec7721d348, convert type="tns:byte" to ('byte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec7721d648, convert ref="xs:byte" to ('byte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (byte)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec7721d788, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec7721d5c8, convert type="tns:nonNegativeInteger" to ('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec7721d8c8, convert ref="xs:nonNegativeInteger" to ('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (nonNegativeInteger)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec7721da08, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec7721d848, convert type="tns:unsignedLong" to ('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec7721db48, convert ref="xs:unsignedLong" to ('unsignedLong', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (unsignedLong)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec7721dc88, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec7721dac8, convert type="tns:unsignedInt" to ('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec7721ddc8, convert ref="xs:unsignedInt" to ('unsignedInt', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (unsignedInt)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec7721df08, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec7721dd48, convert type="tns:unsignedShort" to ('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77220088, convert ref="xs:unsignedShort" to ('unsignedShort', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (unsignedShort)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec772201c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec7721dfc8, convert type="tns:unsignedByte" to ('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77220308, convert ref="xs:unsignedByte" to ('unsignedByte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (unsignedByte)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec77220448, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77220288, convert type="tns:positiveInteger" to ('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Extension:0x1ec77220588, convert ref="xs:positiveInteger" to ('positiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">TypeQuery:0x1ec76e68a88, found builtin (positiveInteger)</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">AttributeGroup:0x1ec772206c8, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">Element:0x1ec77220508, convert type="xs:anyType" to ('anyType', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x1ec771cf548 ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x1ec771b6b08 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x1ec771cfdc8 ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x1ec771b3788 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x1ec771c00c8 ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x1ec771c2e08 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x1ec771c5fc8 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x1ec771c0a08 name="Array" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec771f5c48 ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771c2888 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec771f5f08 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x1ec7719cf88 ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x1ec771e5e88 name="Struct" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec7719ce48 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec771a9bc8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec771de9c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec771fbd48 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec771ca908 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77200648 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77200e08 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec772007c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77200dc8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77200588 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77217088 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77217308 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77217588 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77217808 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77217a88 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77217d08 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77217f88 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77203248 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec772034c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77203748 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec772039c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77203c48 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77203ec8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77204188 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77204408 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77204688 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77204908 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77204b88 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77204e08 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec772060c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77206348 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec772065c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77206848 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77206ac8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77206d48 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77206fc8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec7721d288 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec7721d508 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec7721d788 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec7721da08 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec7721dc88 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec7721df08 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec772201c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec77220448 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.776" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x1ec772206c8 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">dereferenced:
Schema:0x1ec771a0148
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x1ec771a07c8 name="root" /&gt;
   &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes"&gt;
      &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x1ec771b1f08 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x1ec771b6b08 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x1ec771b3788 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x1ec771c2888 name="arrayAttributes"&gt;
      &lt;Attribute:0x1ec771cf548 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x1ec771cfdc8 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x1ec771c2e08 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x1ec771dcc08 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x1ec771c00c8 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x1ec771c0a08 name="Array"&gt;
      &lt;Sequence:0x1ec771a8608&gt;
         &lt;Any:0x1ec771d5cc8 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x1ec771b3848 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771d5088 name="Array"&gt;
      &lt;Group:0x1ec771c5fc8 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x1ec771a8608&gt;
            &lt;Any:0x1ec771d5cc8 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x1ec771f5c48 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771cf548 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771cfdc8 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x1ec771f5f08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771c5ec8 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x1ec771e5e88 name="Struct"&gt;
      &lt;Sequence:0x1ec771e5608&gt;
         &lt;Any:0x1ec7719cf48 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x1ec771e5f48 name="Struct"&gt;
      &lt;Group:0x1ec7719cf88 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x1ec771e5608&gt;
            &lt;Any:0x1ec7719cf48 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x1ec7719ce48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x1ec771a3f08 name="base64" /&gt;
   &lt;Element:0x1ec7719ce88 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771e78c8 name="duration"&gt;
      &lt;SimpleContent:0x1ec771eed88&gt;
         &lt;Extension:0x1ec771f17c8 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771a9bc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771eee88 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771f8d88 name="dateTime"&gt;
      &lt;SimpleContent:0x1ec771d6a08&gt;
         &lt;Extension:0x1ec771d60c8 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771de9c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771f1708 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771de088 name="NOTATION"&gt;
      &lt;SimpleContent:0x1ec771d6f88&gt;
         &lt;Extension:0x1ec771bad08 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771fbd48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771dacc8 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771ccbc8 name="time"&gt;
      &lt;SimpleContent:0x1ec771ad148&gt;
         &lt;Extension:0x1ec771adcc8 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771ca908 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771bae08 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771eb8c8 name="date"&gt;
      &lt;SimpleContent:0x1ec771bcc48&gt;
         &lt;Extension:0x1ec77200048 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200648 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771adfc8 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771bc748 name="gYearMonth"&gt;
      &lt;SimpleContent:0x1ec77200908&gt;
         &lt;Extension:0x1ec77200a48 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200e08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200808 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200bc8 name="gYear"&gt;
      &lt;SimpleContent:0x1ec77200b88&gt;
         &lt;Extension:0x1ec77200b48 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772007c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200708 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200f88 name="gMonthDay"&gt;
      &lt;SimpleContent:0x1ec77200508&gt;
         &lt;Extension:0x1ec77200a88 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200dc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772008c8 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200ac8 name="gDay"&gt;
      &lt;SimpleContent:0x1ec77200a08&gt;
         &lt;Extension:0x1ec77200c88 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200588 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200fc8 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200488 name="gMonth"&gt;
      &lt;SimpleContent:0x1ec77200d48&gt;
         &lt;Extension:0x1ec771fe988 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217088 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772006c8 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771fe548 name="boolean"&gt;
      &lt;SimpleContent:0x1ec77217148&gt;
         &lt;Extension:0x1ec772171c8 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217308 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771fe8c8 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217248 name="base64Binary"&gt;
      &lt;SimpleContent:0x1ec77217208&gt;
         &lt;Extension:0x1ec77217448 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217588 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772173c8 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772174c8 name="hexBinary"&gt;
      &lt;SimpleContent:0x1ec77217488&gt;
         &lt;Extension:0x1ec772176c8 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217808 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217648 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217748 name="float"&gt;
      &lt;SimpleContent:0x1ec77217708&gt;
         &lt;Extension:0x1ec77217948 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217a88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772178c8 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772179c8 name="double"&gt;
      &lt;SimpleContent:0x1ec77217988&gt;
         &lt;Extension:0x1ec77217bc8 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217d08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217b48 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217c48 name="anyURI"&gt;
      &lt;SimpleContent:0x1ec77217c08&gt;
         &lt;Extension:0x1ec77217e48 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217f88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217dc8 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217ec8 name="QName"&gt;
      &lt;SimpleContent:0x1ec77203088&gt;
         &lt;Extension:0x1ec77203108 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203248 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217e88 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203188 name="string"&gt;
      &lt;SimpleContent:0x1ec77203148&gt;
         &lt;Extension:0x1ec77203388 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772034c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203308 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203408 name="normalizedString"&gt;
      &lt;SimpleContent:0x1ec772033c8&gt;
         &lt;Extension:0x1ec77203608 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203748 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203588 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203688 name="token"&gt;
      &lt;SimpleContent:0x1ec77203648&gt;
         &lt;Extension:0x1ec77203888 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772039c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203808 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203908 name="language"&gt;
      &lt;SimpleContent:0x1ec772038c8&gt;
         &lt;Extension:0x1ec77203b08 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203c48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203a88 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203b88 name="Name"&gt;
      &lt;SimpleContent:0x1ec77203b48&gt;
         &lt;Extension:0x1ec77203d88 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203ec8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203d08 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203e08 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x1ec77203dc8&gt;
         &lt;Extension:0x1ec77204048 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204188 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203f88 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772040c8 name="NCName"&gt;
      &lt;SimpleContent:0x1ec77204088&gt;
         &lt;Extension:0x1ec772042c8 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204408 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204248 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204348 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x1ec77204308&gt;
         &lt;Extension:0x1ec77204548 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204688 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772044c8 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772045c8 name="ID"&gt;
      &lt;SimpleContent:0x1ec77204588&gt;
         &lt;Extension:0x1ec772047c8 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204908 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204748 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204848 name="IDREF"&gt;
      &lt;SimpleContent:0x1ec77204808&gt;
         &lt;Extension:0x1ec77204a48 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204b88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772049c8 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204ac8 name="ENTITY"&gt;
      &lt;SimpleContent:0x1ec77204a88&gt;
         &lt;Extension:0x1ec77204cc8 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204e08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204c48 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204d48 name="IDREFS"&gt;
      &lt;SimpleContent:0x1ec77204d08&gt;
         &lt;Extension:0x1ec77204f48 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772060c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204ec8 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204f88 name="ENTITIES"&gt;
      &lt;SimpleContent:0x1ec77206048&gt;
         &lt;Extension:0x1ec77206208 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206348 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206188 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206288 name="decimal"&gt;
      &lt;SimpleContent:0x1ec77206248&gt;
         &lt;Extension:0x1ec77206488 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772065c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206408 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206508 name="integer"&gt;
      &lt;SimpleContent:0x1ec772064c8&gt;
         &lt;Extension:0x1ec77206708 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206848 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206688 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206788 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x1ec77206748&gt;
         &lt;Extension:0x1ec77206988 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206ac8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206908 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206a08 name="negativeInteger"&gt;
      &lt;SimpleContent:0x1ec772069c8&gt;
         &lt;Extension:0x1ec77206c08 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206d48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206b88 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206c88 name="long"&gt;
      &lt;SimpleContent:0x1ec77206c48&gt;
         &lt;Extension:0x1ec77206e88 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206fc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206e08 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206f08 name="int"&gt;
      &lt;SimpleContent:0x1ec7721d0c8&gt;
         &lt;Extension:0x1ec7721d148 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d288 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206ec8 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d1c8 name="short"&gt;
      &lt;SimpleContent:0x1ec7721d188&gt;
         &lt;Extension:0x1ec7721d3c8 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d508 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d348 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d448 name="byte"&gt;
      &lt;SimpleContent:0x1ec7721d408&gt;
         &lt;Extension:0x1ec7721d648 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d788 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d5c8 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d6c8 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x1ec7721d688&gt;
         &lt;Extension:0x1ec7721d8c8 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721da08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d848 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d948 name="unsignedLong"&gt;
      &lt;SimpleContent:0x1ec7721d908&gt;
         &lt;Extension:0x1ec7721db48 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721dc88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dac8 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721dbc8 name="unsignedInt"&gt;
      &lt;SimpleContent:0x1ec7721db88&gt;
         &lt;Extension:0x1ec7721ddc8 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721df08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dd48 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721de48 name="unsignedShort"&gt;
      &lt;SimpleContent:0x1ec7721de08&gt;
         &lt;Extension:0x1ec77220088 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772201c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dfc8 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77220108 name="unsignedByte"&gt;
      &lt;SimpleContent:0x1ec772200c8&gt;
         &lt;Extension:0x1ec77220308 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77220448 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77220288 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77220388 name="positiveInteger"&gt;
      &lt;SimpleContent:0x1ec77220348&gt;
         &lt;Extension:0x1ec77220588 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772206c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77220508 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">imported:
Schema:0x1ec771a0148
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x1ec771a07c8 name="root" /&gt;
   &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes"&gt;
      &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x1ec771b1f08 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x1ec771b6b08 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x1ec771b3788 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x1ec771c2888 name="arrayAttributes"&gt;
      &lt;Attribute:0x1ec771cf548 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x1ec771cfdc8 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x1ec771c2e08 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x1ec771dcc08 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x1ec771c00c8 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x1ec771c0a08 name="Array"&gt;
      &lt;Sequence:0x1ec771a8608&gt;
         &lt;Any:0x1ec771d5cc8 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x1ec771b3848 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771d5088 name="Array"&gt;
      &lt;Group:0x1ec771c5fc8 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x1ec771a8608&gt;
            &lt;Any:0x1ec771d5cc8 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x1ec771f5c48 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771cf548 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771cfdc8 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x1ec771f5f08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771c5ec8 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x1ec771e5e88 name="Struct"&gt;
      &lt;Sequence:0x1ec771e5608&gt;
         &lt;Any:0x1ec7719cf48 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x1ec771e5f48 name="Struct"&gt;
      &lt;Group:0x1ec7719cf88 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x1ec771e5608&gt;
            &lt;Any:0x1ec7719cf48 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x1ec7719ce48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x1ec771a3f08 name="base64" /&gt;
   &lt;Element:0x1ec7719ce88 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771e78c8 name="duration"&gt;
      &lt;SimpleContent:0x1ec771eed88&gt;
         &lt;Extension:0x1ec771f17c8 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771a9bc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771eee88 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771f8d88 name="dateTime"&gt;
      &lt;SimpleContent:0x1ec771d6a08&gt;
         &lt;Extension:0x1ec771d60c8 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771de9c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771f1708 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771de088 name="NOTATION"&gt;
      &lt;SimpleContent:0x1ec771d6f88&gt;
         &lt;Extension:0x1ec771bad08 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771fbd48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771dacc8 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771ccbc8 name="time"&gt;
      &lt;SimpleContent:0x1ec771ad148&gt;
         &lt;Extension:0x1ec771adcc8 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771ca908 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771bae08 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771eb8c8 name="date"&gt;
      &lt;SimpleContent:0x1ec771bcc48&gt;
         &lt;Extension:0x1ec77200048 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200648 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771adfc8 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771bc748 name="gYearMonth"&gt;
      &lt;SimpleContent:0x1ec77200908&gt;
         &lt;Extension:0x1ec77200a48 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200e08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200808 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200bc8 name="gYear"&gt;
      &lt;SimpleContent:0x1ec77200b88&gt;
         &lt;Extension:0x1ec77200b48 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772007c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200708 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200f88 name="gMonthDay"&gt;
      &lt;SimpleContent:0x1ec77200508&gt;
         &lt;Extension:0x1ec77200a88 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200dc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772008c8 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200ac8 name="gDay"&gt;
      &lt;SimpleContent:0x1ec77200a08&gt;
         &lt;Extension:0x1ec77200c88 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200588 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200fc8 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200488 name="gMonth"&gt;
      &lt;SimpleContent:0x1ec77200d48&gt;
         &lt;Extension:0x1ec771fe988 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217088 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772006c8 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771fe548 name="boolean"&gt;
      &lt;SimpleContent:0x1ec77217148&gt;
         &lt;Extension:0x1ec772171c8 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217308 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771fe8c8 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217248 name="base64Binary"&gt;
      &lt;SimpleContent:0x1ec77217208&gt;
         &lt;Extension:0x1ec77217448 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217588 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772173c8 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772174c8 name="hexBinary"&gt;
      &lt;SimpleContent:0x1ec77217488&gt;
         &lt;Extension:0x1ec772176c8 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217808 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217648 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217748 name="float"&gt;
      &lt;SimpleContent:0x1ec77217708&gt;
         &lt;Extension:0x1ec77217948 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217a88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772178c8 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772179c8 name="double"&gt;
      &lt;SimpleContent:0x1ec77217988&gt;
         &lt;Extension:0x1ec77217bc8 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217d08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217b48 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217c48 name="anyURI"&gt;
      &lt;SimpleContent:0x1ec77217c08&gt;
         &lt;Extension:0x1ec77217e48 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217f88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217dc8 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217ec8 name="QName"&gt;
      &lt;SimpleContent:0x1ec77203088&gt;
         &lt;Extension:0x1ec77203108 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203248 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217e88 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203188 name="string"&gt;
      &lt;SimpleContent:0x1ec77203148&gt;
         &lt;Extension:0x1ec77203388 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772034c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203308 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203408 name="normalizedString"&gt;
      &lt;SimpleContent:0x1ec772033c8&gt;
         &lt;Extension:0x1ec77203608 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203748 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203588 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203688 name="token"&gt;
      &lt;SimpleContent:0x1ec77203648&gt;
         &lt;Extension:0x1ec77203888 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772039c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203808 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203908 name="language"&gt;
      &lt;SimpleContent:0x1ec772038c8&gt;
         &lt;Extension:0x1ec77203b08 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203c48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203a88 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203b88 name="Name"&gt;
      &lt;SimpleContent:0x1ec77203b48&gt;
         &lt;Extension:0x1ec77203d88 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203ec8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203d08 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203e08 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x1ec77203dc8&gt;
         &lt;Extension:0x1ec77204048 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204188 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203f88 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772040c8 name="NCName"&gt;
      &lt;SimpleContent:0x1ec77204088&gt;
         &lt;Extension:0x1ec772042c8 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204408 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204248 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204348 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x1ec77204308&gt;
         &lt;Extension:0x1ec77204548 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204688 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772044c8 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772045c8 name="ID"&gt;
      &lt;SimpleContent:0x1ec77204588&gt;
         &lt;Extension:0x1ec772047c8 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204908 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204748 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204848 name="IDREF"&gt;
      &lt;SimpleContent:0x1ec77204808&gt;
         &lt;Extension:0x1ec77204a48 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204b88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772049c8 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204ac8 name="ENTITY"&gt;
      &lt;SimpleContent:0x1ec77204a88&gt;
         &lt;Extension:0x1ec77204cc8 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204e08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204c48 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204d48 name="IDREFS"&gt;
      &lt;SimpleContent:0x1ec77204d08&gt;
         &lt;Extension:0x1ec77204f48 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772060c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204ec8 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204f88 name="ENTITIES"&gt;
      &lt;SimpleContent:0x1ec77206048&gt;
         &lt;Extension:0x1ec77206208 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206348 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206188 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206288 name="decimal"&gt;
      &lt;SimpleContent:0x1ec77206248&gt;
         &lt;Extension:0x1ec77206488 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772065c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206408 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206508 name="integer"&gt;
      &lt;SimpleContent:0x1ec772064c8&gt;
         &lt;Extension:0x1ec77206708 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206848 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206688 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206788 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x1ec77206748&gt;
         &lt;Extension:0x1ec77206988 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206ac8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206908 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206a08 name="negativeInteger"&gt;
      &lt;SimpleContent:0x1ec772069c8&gt;
         &lt;Extension:0x1ec77206c08 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206d48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206b88 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206c88 name="long"&gt;
      &lt;SimpleContent:0x1ec77206c48&gt;
         &lt;Extension:0x1ec77206e88 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206fc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206e08 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206f08 name="int"&gt;
      &lt;SimpleContent:0x1ec7721d0c8&gt;
         &lt;Extension:0x1ec7721d148 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d288 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206ec8 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d1c8 name="short"&gt;
      &lt;SimpleContent:0x1ec7721d188&gt;
         &lt;Extension:0x1ec7721d3c8 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d508 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d348 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d448 name="byte"&gt;
      &lt;SimpleContent:0x1ec7721d408&gt;
         &lt;Extension:0x1ec7721d648 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d788 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d5c8 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d6c8 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x1ec7721d688&gt;
         &lt;Extension:0x1ec7721d8c8 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721da08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d848 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d948 name="unsignedLong"&gt;
      &lt;SimpleContent:0x1ec7721d908&gt;
         &lt;Extension:0x1ec7721db48 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721dc88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dac8 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721dbc8 name="unsignedInt"&gt;
      &lt;SimpleContent:0x1ec7721db88&gt;
         &lt;Extension:0x1ec7721ddc8 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721df08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dd48 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721de48 name="unsignedShort"&gt;
      &lt;SimpleContent:0x1ec7721de08&gt;
         &lt;Extension:0x1ec77220088 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772201c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dfc8 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77220108 name="unsignedByte"&gt;
      &lt;SimpleContent:0x1ec772200c8&gt;
         &lt;Extension:0x1ec77220308 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77220448 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77220288 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77220388 name="positiveInteger"&gt;
      &lt;SimpleContent:0x1ec77220348&gt;
         &lt;Extension:0x1ec77220588 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772206c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77220508 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">imported:
Schema:0x1ec771a0148
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x1ec771a07c8 name="root" /&gt;
   &lt;AttributeGroup:0x1ec771a0e48 name="commonAttributes"&gt;
      &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x1ec771b1f08 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x1ec771b6b08 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x1ec771b3788 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x1ec771c2888 name="arrayAttributes"&gt;
      &lt;Attribute:0x1ec771cf548 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x1ec771cfdc8 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x1ec771c2e08 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x1ec771dcc08 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x1ec771c00c8 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x1ec771c0a08 name="Array"&gt;
      &lt;Sequence:0x1ec771a8608&gt;
         &lt;Any:0x1ec771d5cc8 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x1ec771b3848 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771d5088 name="Array"&gt;
      &lt;Group:0x1ec771c5fc8 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x1ec771a8608&gt;
            &lt;Any:0x1ec771d5cc8 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x1ec771f5c48 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771cf548 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771cfdc8 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x1ec771f5f08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771c5ec8 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x1ec771e5e88 name="Struct"&gt;
      &lt;Sequence:0x1ec771e5608&gt;
         &lt;Any:0x1ec7719cf48 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x1ec771e5f48 name="Struct"&gt;
      &lt;Group:0x1ec7719cf88 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x1ec771e5608&gt;
            &lt;Any:0x1ec7719cf48 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x1ec7719ce48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x1ec771a3f08 name="base64" /&gt;
   &lt;Element:0x1ec7719ce88 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771e78c8 name="duration"&gt;
      &lt;SimpleContent:0x1ec771eed88&gt;
         &lt;Extension:0x1ec771f17c8 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771a9bc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771eee88 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771f8d88 name="dateTime"&gt;
      &lt;SimpleContent:0x1ec771d6a08&gt;
         &lt;Extension:0x1ec771d60c8 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771de9c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771f1708 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771de088 name="NOTATION"&gt;
      &lt;SimpleContent:0x1ec771d6f88&gt;
         &lt;Extension:0x1ec771bad08 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771fbd48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771dacc8 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771ccbc8 name="time"&gt;
      &lt;SimpleContent:0x1ec771ad148&gt;
         &lt;Extension:0x1ec771adcc8 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec771ca908 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771bae08 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771eb8c8 name="date"&gt;
      &lt;SimpleContent:0x1ec771bcc48&gt;
         &lt;Extension:0x1ec77200048 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200648 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771adfc8 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771bc748 name="gYearMonth"&gt;
      &lt;SimpleContent:0x1ec77200908&gt;
         &lt;Extension:0x1ec77200a48 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200e08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200808 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200bc8 name="gYear"&gt;
      &lt;SimpleContent:0x1ec77200b88&gt;
         &lt;Extension:0x1ec77200b48 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772007c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200708 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200f88 name="gMonthDay"&gt;
      &lt;SimpleContent:0x1ec77200508&gt;
         &lt;Extension:0x1ec77200a88 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200dc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772008c8 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200ac8 name="gDay"&gt;
      &lt;SimpleContent:0x1ec77200a08&gt;
         &lt;Extension:0x1ec77200c88 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77200588 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77200fc8 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77200488 name="gMonth"&gt;
      &lt;SimpleContent:0x1ec77200d48&gt;
         &lt;Extension:0x1ec771fe988 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217088 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772006c8 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec771fe548 name="boolean"&gt;
      &lt;SimpleContent:0x1ec77217148&gt;
         &lt;Extension:0x1ec772171c8 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217308 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771fe8c8 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217248 name="base64Binary"&gt;
      &lt;SimpleContent:0x1ec77217208&gt;
         &lt;Extension:0x1ec77217448 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217588 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772173c8 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772174c8 name="hexBinary"&gt;
      &lt;SimpleContent:0x1ec77217488&gt;
         &lt;Extension:0x1ec772176c8 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217808 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217648 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217748 name="float"&gt;
      &lt;SimpleContent:0x1ec77217708&gt;
         &lt;Extension:0x1ec77217948 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217a88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772178c8 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772179c8 name="double"&gt;
      &lt;SimpleContent:0x1ec77217988&gt;
         &lt;Extension:0x1ec77217bc8 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217d08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217b48 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217c48 name="anyURI"&gt;
      &lt;SimpleContent:0x1ec77217c08&gt;
         &lt;Extension:0x1ec77217e48 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77217f88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217dc8 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77217ec8 name="QName"&gt;
      &lt;SimpleContent:0x1ec77203088&gt;
         &lt;Extension:0x1ec77203108 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203248 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77217e88 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203188 name="string"&gt;
      &lt;SimpleContent:0x1ec77203148&gt;
         &lt;Extension:0x1ec77203388 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772034c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203308 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203408 name="normalizedString"&gt;
      &lt;SimpleContent:0x1ec772033c8&gt;
         &lt;Extension:0x1ec77203608 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203748 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203588 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203688 name="token"&gt;
      &lt;SimpleContent:0x1ec77203648&gt;
         &lt;Extension:0x1ec77203888 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772039c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203808 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203908 name="language"&gt;
      &lt;SimpleContent:0x1ec772038c8&gt;
         &lt;Extension:0x1ec77203b08 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203c48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203a88 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203b88 name="Name"&gt;
      &lt;SimpleContent:0x1ec77203b48&gt;
         &lt;Extension:0x1ec77203d88 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77203ec8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203d08 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77203e08 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x1ec77203dc8&gt;
         &lt;Extension:0x1ec77204048 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204188 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77203f88 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772040c8 name="NCName"&gt;
      &lt;SimpleContent:0x1ec77204088&gt;
         &lt;Extension:0x1ec772042c8 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204408 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204248 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204348 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x1ec77204308&gt;
         &lt;Extension:0x1ec77204548 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204688 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772044c8 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec772045c8 name="ID"&gt;
      &lt;SimpleContent:0x1ec77204588&gt;
         &lt;Extension:0x1ec772047c8 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204908 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204748 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204848 name="IDREF"&gt;
      &lt;SimpleContent:0x1ec77204808&gt;
         &lt;Extension:0x1ec77204a48 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204b88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772049c8 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204ac8 name="ENTITY"&gt;
      &lt;SimpleContent:0x1ec77204a88&gt;
         &lt;Extension:0x1ec77204cc8 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77204e08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204c48 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204d48 name="IDREFS"&gt;
      &lt;SimpleContent:0x1ec77204d08&gt;
         &lt;Extension:0x1ec77204f48 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772060c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77204ec8 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77204f88 name="ENTITIES"&gt;
      &lt;SimpleContent:0x1ec77206048&gt;
         &lt;Extension:0x1ec77206208 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206348 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206188 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206288 name="decimal"&gt;
      &lt;SimpleContent:0x1ec77206248&gt;
         &lt;Extension:0x1ec77206488 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772065c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206408 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206508 name="integer"&gt;
      &lt;SimpleContent:0x1ec772064c8&gt;
         &lt;Extension:0x1ec77206708 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206848 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206688 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206788 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x1ec77206748&gt;
         &lt;Extension:0x1ec77206988 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206ac8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206908 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206a08 name="negativeInteger"&gt;
      &lt;SimpleContent:0x1ec772069c8&gt;
         &lt;Extension:0x1ec77206c08 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206d48 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206b88 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206c88 name="long"&gt;
      &lt;SimpleContent:0x1ec77206c48&gt;
         &lt;Extension:0x1ec77206e88 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77206fc8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206e08 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77206f08 name="int"&gt;
      &lt;SimpleContent:0x1ec7721d0c8&gt;
         &lt;Extension:0x1ec7721d148 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d288 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77206ec8 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d1c8 name="short"&gt;
      &lt;SimpleContent:0x1ec7721d188&gt;
         &lt;Extension:0x1ec7721d3c8 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d508 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d348 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d448 name="byte"&gt;
      &lt;SimpleContent:0x1ec7721d408&gt;
         &lt;Extension:0x1ec7721d648 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721d788 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d5c8 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d6c8 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x1ec7721d688&gt;
         &lt;Extension:0x1ec7721d8c8 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721da08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721d848 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721d948 name="unsignedLong"&gt;
      &lt;SimpleContent:0x1ec7721d908&gt;
         &lt;Extension:0x1ec7721db48 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721dc88 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dac8 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721dbc8 name="unsignedInt"&gt;
      &lt;SimpleContent:0x1ec7721db88&gt;
         &lt;Extension:0x1ec7721ddc8 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec7721df08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dd48 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec7721de48 name="unsignedShort"&gt;
      &lt;SimpleContent:0x1ec7721de08&gt;
         &lt;Extension:0x1ec77220088 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772201c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7721dfc8 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77220108 name="unsignedByte"&gt;
      &lt;SimpleContent:0x1ec772200c8&gt;
         &lt;Extension:0x1ec77220308 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec77220448 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77220288 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x1ec77220388 name="positiveInteger"&gt;
      &lt;SimpleContent:0x1ec77220348&gt;
         &lt;Extension:0x1ec77220588 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x1ec772206c8 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77220508 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177588, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec771775c8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec771776c8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177888, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177908, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177a08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177a88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177b08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177b48, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177848, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec77177ec8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec7717f208, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.792" level="DEBUG">Element:0x1ec7717f288, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717f388, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717f508, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717f588, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717f788, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717f808, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717f908, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717f988, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717fa08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717fb88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717fc08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717fe48, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717fec8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7717ffc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184088, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184108, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184308, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184508, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184588, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184688, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184808, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184a08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184a88, convert type="tns:PrintTask" to ('PrintTask', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184b88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184c48, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184cc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184d48, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184dc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184e08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184f08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184f88, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77184fc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188288, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188308, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188408, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188488, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188508, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188748, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771887c8, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771888c8, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188948, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771889c8, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188a08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188708, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188d48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188dc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188ec8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77188f48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e148, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e1c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e2c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e348, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e3c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e408, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e608, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e688, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e788, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e808, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718e888, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718ea08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718ed08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718ef08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7718ef88, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771930c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77193248, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77193448, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771934c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771936c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771938c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77193948, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77193b48, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77193d48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77193dc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77193fc8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197208, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197408, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197488, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771975c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197648, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771976c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197788, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197888, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197908, convert type="tns:PatientInfo" to ('PatientInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197988, convert type="tns:ArrayOfFilmInfo" to ('ArrayOfFilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec771977c8, convert type="tns:ArrayOfReportInfo" to ('ArrayOfReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197a88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197b48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197c48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197cc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197d88, convert type="tns:FilmInfo" to ('FilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec77197f08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c048, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c108, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c188, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c248, convert type="tns:ReportInfo" to ('ReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c3c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c488, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c7c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c9c8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c6c8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719c988, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719ca48, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:06:27.807" level="DEBUG">Element:0x1ec7719cb08, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191205 16:06:27.823" level="DEBUG">Restriction:0x1ec7719cd08, convert ref="soapenc:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191205 16:06:27.823" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Complex:0x1ec771d5088 name="Array" /&gt;</msg>
<msg timestamp="20191205 16:06:27.823" level="DEBUG">"&lt;Complex:0x1ec771d5088 name="Array" /&gt;" not found, skipped</msg>
<msg timestamp="20191205 16:06:27.823" level="DEBUG">(http://tempuri.org/AbstractTypes) merging &lt;Restriction:0x1ec7719cd08 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Complex:0x1ec771d5088 name="Array" /&gt;</msg>
<msg timestamp="20191205 16:06:27.823" level="DEBUG">loaded:

schema collection
   Schema:0x1ec77159d88
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatus"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2Response"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Print"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="PrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PrintTask"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrintCombine"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintCombineResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfInt"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrint"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLog"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLogResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Version"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="VersionResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="TaskInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="PatientInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfFilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="FilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="int" type="s:int"/&gt;
         &lt;s:element name="string" nillable="true" type="s:string"/&gt;
         &lt;s:element name="boolean" type="s:boolean"/&gt;
         &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x1ec77177408 name="SetPrintMode"&gt;
         &lt;Complex:0x1ec77177448&gt;
            &lt;Sequence:0x1ec771774c8&gt;
               &lt;Element:0x1ec77177548 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77177588 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec771775c8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77177488 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x1ec77177508&gt;
            &lt;Sequence:0x1ec77177688&gt;
               &lt;Element:0x1ec771776c8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77177608 name="NotifyReportInfo"&gt;
         &lt;Complex:0x1ec77177648&gt;
            &lt;Sequence:0x1ec77177788&gt;
               &lt;Element:0x1ec77177888 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77177908 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77177a08 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77177a88 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77177b08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77177b48 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
         &lt;Sequence:0x1ec77177748&gt;
            &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec77177808 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x1ec77177d08&gt;
            &lt;Sequence:0x1ec77177d48&gt;
               &lt;Element:0x1ec77177ec8 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77177c48 name="GetPrintServerStatus" /&gt;
      &lt;Element:0x1ec77177e48 name="GetPrintServerStatusResponse"&gt;
         &lt;Complex:0x1ec7717f048&gt;
            &lt;Sequence:0x1ec7717f088&gt;
               &lt;Element:0x1ec7717f208 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717f288 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717f388 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77177f48 name="CreatePrintTask"&gt;
         &lt;Complex:0x1ec7717f0c8&gt;
            &lt;Sequence:0x1ec7717f408&gt;
               &lt;Element:0x1ec7717f508 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717f588 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7717f188 name="CreatePrintTaskResponse"&gt;
         &lt;Complex:0x1ec7717f4c8&gt;
            &lt;Sequence:0x1ec7717f448&gt;
               &lt;Element:0x1ec7717f788 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717f808 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717f908 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717f988 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717fa08 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77177cc8 name="CreatePrintTask2"&gt;
         &lt;Complex:0x1ec7717f688&gt;
            &lt;Sequence:0x1ec7717f748&gt;
               &lt;Element:0x1ec7717fb88 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717fc08 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7717f708 name="CreatePrintTask2Response"&gt;
         &lt;Complex:0x1ec7717fa48&gt;
            &lt;Sequence:0x1ec7717fd08&gt;
               &lt;Element:0x1ec7717fe48 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717fec8 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7717ffc8 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77184088 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77184108 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77184148 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7717fb48 name="Print"&gt;
         &lt;Complex:0x1ec7717fd48&gt;
            &lt;Sequence:0x1ec77184248&gt;
               &lt;Element:0x1ec77184308 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7717fdc8 name="PrintResponse"&gt;
         &lt;Complex:0x1ec771842c8&gt;
            &lt;Sequence:0x1ec77184388&gt;
               &lt;Element:0x1ec77184508 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77184588 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77184688 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7717fe08 name="GetPrintTaskStatus"&gt;
         &lt;Complex:0x1ec77184448&gt;
            &lt;Sequence:0x1ec77184708&gt;
               &lt;Element:0x1ec77184808 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec771844c8 name="GetPrintTaskStatusResponse"&gt;
         &lt;Complex:0x1ec77184748&gt;
            &lt;Sequence:0x1ec77184888&gt;
               &lt;Element:0x1ec77184a08 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77184a88 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec771847c8 name="PrintTask"&gt;
         &lt;Sequence:0x1ec77184948&gt;
            &lt;Element:0x1ec77184b88 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184c48 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184cc8 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184d48 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184dc8 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184e08 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184f08 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184f88 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184fc8 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec771849c8 name="CentralPrintCombine"&gt;
         &lt;Complex:0x1ec77184bc8&gt;
            &lt;Sequence:0x1ec77188088&gt;
               &lt;Element:0x1ec77188288 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77188308 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x1ec77188408 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77188488 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x1ec77188508 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77188548 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77184e48 name="CentralPrintCombineResponse"&gt;
         &lt;Complex:0x1ec77188108&gt;
            &lt;Sequence:0x1ec77188248&gt;
               &lt;Element:0x1ec77188748 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x1ec771887c8 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x1ec771888c8 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x1ec77188948 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x1ec771889c8 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x1ec77188a08 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec771881c8 name="ArrayOfInt"&gt;
         &lt;Sequence:0x1ec77188648&gt;
            &lt;Element:0x1ec77188708 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec771886c8 name="CentralPrint"&gt;
         &lt;Complex:0x1ec77188b08&gt;
            &lt;Sequence:0x1ec77188bc8&gt;
               &lt;Element:0x1ec77188d48 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77188dc8 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77188ec8 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77188f48 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77188b88 name="CentralPrintResponse"&gt;
         &lt;Complex:0x1ec77188c08&gt;
            &lt;Sequence:0x1ec7718e048&gt;
               &lt;Element:0x1ec7718e148 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e1c8 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e2c8 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e348 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e3c8 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e408 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77188cc8 name="AddQCLog"&gt;
         &lt;Complex:0x1ec7718e0c8&gt;
            &lt;Sequence:0x1ec7718e108&gt;
               &lt;Element:0x1ec7718e608 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e688 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e788 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e808 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718e888 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77188fc8 name="AddQCLogResponse"&gt;
         &lt;Complex:0x1ec7718e508&gt;
            &lt;Sequence:0x1ec7718e5c8&gt;
               &lt;Element:0x1ec7718ea08 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7718e588 name="Version" /&gt;
      &lt;Element:0x1ec7718e9c8 name="VersionResponse"&gt;
         &lt;Complex:0x1ec7718eb48&gt;
            &lt;Sequence:0x1ec7718eb88&gt;
               &lt;Element:0x1ec7718ed08 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7718ea88 name="UpdateReportPrinterStatus"&gt;
         &lt;Complex:0x1ec7718ebc8&gt;
            &lt;Sequence:0x1ec7718ed88&gt;
               &lt;Element:0x1ec7718ef08 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7718ef88 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec771930c8 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7718ec88 name="UpdateReportPrinterStatusResponse"&gt;
         &lt;Complex:0x1ec7718ee48&gt;
            &lt;Sequence:0x1ec77193148&gt;
               &lt;Element:0x1ec77193248 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7718eec8 name="QueryExamInfo"&gt;
         &lt;Complex:0x1ec77193188&gt;
            &lt;Sequence:0x1ec771932c8&gt;
               &lt;Element:0x1ec77193448 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec771934c8 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77193208 name="QueryExamInfoResponse"&gt;
         &lt;Complex:0x1ec77193388&gt;
            &lt;Sequence:0x1ec771935c8&gt;
               &lt;Element:0x1ec771936c8 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77193408 name="SetReportPrinted"&gt;
         &lt;Complex:0x1ec77193608&gt;
            &lt;Sequence:0x1ec77193748&gt;
               &lt;Element:0x1ec771938c8 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77193948 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77193688 name="SetReportPrintedResponse"&gt;
         &lt;Complex:0x1ec77193808&gt;
            &lt;Sequence:0x1ec77193a48&gt;
               &lt;Element:0x1ec77193b48 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77193888 name="SetReportUnPrinted"&gt;
         &lt;Complex:0x1ec77193a88&gt;
            &lt;Sequence:0x1ec77193bc8&gt;
               &lt;Element:0x1ec77193d48 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77193dc8 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77193b08 name="SetReportUnPrintedResponse"&gt;
         &lt;Complex:0x1ec77193c88&gt;
            &lt;Sequence:0x1ec77193ec8&gt;
               &lt;Element:0x1ec77193fc8 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77193d08 name="QueryPrintTask"&gt;
         &lt;Complex:0x1ec77193f08&gt;
            &lt;Sequence:0x1ec77197088&gt;
               &lt;Element:0x1ec77197208 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77193f88 name="QueryPrintTaskResponse"&gt;
         &lt;Complex:0x1ec77197148&gt;
            &lt;Sequence:0x1ec77197288&gt;
               &lt;Element:0x1ec77197408 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec771971c8 name="TaskInfo"&gt;
         &lt;Sequence:0x1ec77197348&gt;
            &lt;Element:0x1ec77197488 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec771975c8 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197648 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec771976c8 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197748 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197788 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197888 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197908 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec77197988 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec771977c8 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x1ec771973c8 name="PatientInfo"&gt;
         &lt;Sequence:0x1ec77197548&gt;
            &lt;Element:0x1ec77197a88 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197b48 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197c48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77197cc8 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x1ec77197a48 name="ArrayOfFilmInfo"&gt;
         &lt;Sequence:0x1ec77197ac8&gt;
            &lt;Element:0x1ec77197d88 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x1ec77197d48 name="FilmInfo"&gt;
         &lt;Sequence:0x1ec77197dc8&gt;
            &lt;Element:0x1ec77197f08 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7719c048 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7719c108 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7719c188 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x1ec77197e48 name="ArrayOfReportInfo"&gt;
         &lt;Sequence:0x1ec7719c208&gt;
            &lt;Element:0x1ec7719c248 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x1ec77197f48 name="ReportInfo"&gt;
         &lt;Sequence:0x1ec7719c288&gt;
            &lt;Element:0x1ec7719c3c8 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7719c488 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec7719c308 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x1ec7719c408&gt;
            &lt;Sequence:0x1ec7719c5c8&gt;
               &lt;Element:0x1ec7719c748 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7719c7c8 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7719c588 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x1ec7719c608&gt;
            &lt;Sequence:0x1ec7719c8c8&gt;
               &lt;Element:0x1ec7719c9c8 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7719c6c8 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x1ec7719c988 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x1ec7719ca48 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x1ec7719cb08 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;

   Schema:0x1ec77177088
   (raw)
      &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;
         &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/&gt;
         &lt;s:complexType name="StringArray"&gt;
            &lt;s:complexContent mixed="false"&gt;
               &lt;s:restriction base="soapenc:Array"&gt;
                  &lt;s:sequence&gt;
                     &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string"/&gt;
                  &lt;/s:sequence&gt;
               &lt;/s:restriction&gt;
            &lt;/s:complexContent&gt;
         &lt;/s:complexType&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Complex:0x1ec7719cb88 name="StringArray"&gt;
         &lt;ComplexContent:0x1ec7719c908&gt;
            &lt;Restriction:0x1ec7719cd08 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Group:0x1ec771c5fc8 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Sequence:0x1ec771a8608&gt;
                     &lt;Any:0x1ec771d5cc8 /&gt;
                  &lt;/Sequence&gt;
               &lt;/Group&gt;
               &lt;AttributeGroup:0x1ec771f5c48 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x1ec771cf548 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x1ec771cfdc8 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
               &lt;/AttributeGroup&gt;
               &lt;AttributeGroup:0x1ec771f5f08 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x1ec771b1e08 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x1ec771e2bc8 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;/AttributeGroup&gt;
            &lt;/Restriction&gt;
         &lt;/ComplexContent&gt;
      &lt;/Complex&gt;
</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">MERGED:
Schema:0x1ec77159d88
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatus"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2Response"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Print"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="PrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PrintTask"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrintCombine"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintCombineResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfInt"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrint"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLog"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLogResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Version"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="VersionResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="TaskInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="PatientInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfFilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="FilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="int" type="s:int"/&gt;
      &lt;s:element name="string" nillable="true" type="s:string"/&gt;
      &lt;s:element name="boolean" type="s:boolean"/&gt;
      &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x1ec77177408 name="SetPrintMode"&gt;
      &lt;Complex:0x1ec77177448&gt;
         &lt;Sequence:0x1ec771774c8&gt;
            &lt;Element:0x1ec77177548 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77177588 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec771775c8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77177488 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x1ec77177508&gt;
         &lt;Sequence:0x1ec77177688&gt;
            &lt;Element:0x1ec771776c8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77177608 name="NotifyReportInfo"&gt;
      &lt;Complex:0x1ec77177648&gt;
         &lt;Sequence:0x1ec77177788&gt;
            &lt;Element:0x1ec77177888 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77177908 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77177a08 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77177a88 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77177b08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77177b48 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
      &lt;Sequence:0x1ec77177748&gt;
         &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77177808 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x1ec77177d08&gt;
         &lt;Sequence:0x1ec77177d48&gt;
            &lt;Element:0x1ec77177ec8 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77177c48 name="GetPrintServerStatus" /&gt;
   &lt;Element:0x1ec77177e48 name="GetPrintServerStatusResponse"&gt;
      &lt;Complex:0x1ec7717f048&gt;
         &lt;Sequence:0x1ec7717f088&gt;
            &lt;Element:0x1ec7717f208 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717f288 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717f388 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77177f48 name="CreatePrintTask"&gt;
      &lt;Complex:0x1ec7717f0c8&gt;
         &lt;Sequence:0x1ec7717f408&gt;
            &lt;Element:0x1ec7717f508 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717f588 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7717f188 name="CreatePrintTaskResponse"&gt;
      &lt;Complex:0x1ec7717f4c8&gt;
         &lt;Sequence:0x1ec7717f448&gt;
            &lt;Element:0x1ec7717f788 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717f808 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717f908 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717f988 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717fa08 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77177cc8 name="CreatePrintTask2"&gt;
      &lt;Complex:0x1ec7717f688&gt;
         &lt;Sequence:0x1ec7717f748&gt;
            &lt;Element:0x1ec7717fb88 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717fc08 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7717f708 name="CreatePrintTask2Response"&gt;
      &lt;Complex:0x1ec7717fa48&gt;
         &lt;Sequence:0x1ec7717fd08&gt;
            &lt;Element:0x1ec7717fe48 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717fec8 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7717ffc8 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184088 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184108 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184148 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7717fb48 name="Print"&gt;
      &lt;Complex:0x1ec7717fd48&gt;
         &lt;Sequence:0x1ec77184248&gt;
            &lt;Element:0x1ec77184308 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7717fdc8 name="PrintResponse"&gt;
      &lt;Complex:0x1ec771842c8&gt;
         &lt;Sequence:0x1ec77184388&gt;
            &lt;Element:0x1ec77184508 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184588 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184688 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7717fe08 name="GetPrintTaskStatus"&gt;
      &lt;Complex:0x1ec77184448&gt;
         &lt;Sequence:0x1ec77184708&gt;
            &lt;Element:0x1ec77184808 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec771844c8 name="GetPrintTaskStatusResponse"&gt;
      &lt;Complex:0x1ec77184748&gt;
         &lt;Sequence:0x1ec77184888&gt;
            &lt;Element:0x1ec77184a08 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77184a88 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec771847c8 name="PrintTask"&gt;
      &lt;Sequence:0x1ec77184948&gt;
         &lt;Element:0x1ec77184b88 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184c48 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184cc8 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184d48 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184dc8 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184e08 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184f08 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184f88 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77184fc8 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771849c8 name="CentralPrintCombine"&gt;
      &lt;Complex:0x1ec77184bc8&gt;
         &lt;Sequence:0x1ec77188088&gt;
            &lt;Element:0x1ec77188288 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77188308 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec77188408 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77188488 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec77188508 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77188548 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77184e48 name="CentralPrintCombineResponse"&gt;
      &lt;Complex:0x1ec77188108&gt;
         &lt;Sequence:0x1ec77188248&gt;
            &lt;Element:0x1ec77188748 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec771887c8 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec771888c8 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec77188948 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec771889c8 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x1ec77188a08 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec771881c8 name="ArrayOfInt"&gt;
      &lt;Sequence:0x1ec77188648&gt;
         &lt;Element:0x1ec77188708 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec771886c8 name="CentralPrint"&gt;
      &lt;Complex:0x1ec77188b08&gt;
         &lt;Sequence:0x1ec77188bc8&gt;
            &lt;Element:0x1ec77188d48 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77188dc8 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77188ec8 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77188f48 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77188b88 name="CentralPrintResponse"&gt;
      &lt;Complex:0x1ec77188c08&gt;
         &lt;Sequence:0x1ec7718e048&gt;
            &lt;Element:0x1ec7718e148 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e1c8 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e2c8 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e348 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e3c8 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e408 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77188cc8 name="AddQCLog"&gt;
      &lt;Complex:0x1ec7718e0c8&gt;
         &lt;Sequence:0x1ec7718e108&gt;
            &lt;Element:0x1ec7718e608 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e688 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e788 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e808 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718e888 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77188fc8 name="AddQCLogResponse"&gt;
      &lt;Complex:0x1ec7718e508&gt;
         &lt;Sequence:0x1ec7718e5c8&gt;
            &lt;Element:0x1ec7718ea08 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7718e588 name="Version" /&gt;
   &lt;Element:0x1ec7718e9c8 name="VersionResponse"&gt;
      &lt;Complex:0x1ec7718eb48&gt;
         &lt;Sequence:0x1ec7718eb88&gt;
            &lt;Element:0x1ec7718ed08 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7718ea88 name="UpdateReportPrinterStatus"&gt;
      &lt;Complex:0x1ec7718ebc8&gt;
         &lt;Sequence:0x1ec7718ed88&gt;
            &lt;Element:0x1ec7718ef08 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7718ef88 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec771930c8 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7718ec88 name="UpdateReportPrinterStatusResponse"&gt;
      &lt;Complex:0x1ec7718ee48&gt;
         &lt;Sequence:0x1ec77193148&gt;
            &lt;Element:0x1ec77193248 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7718eec8 name="QueryExamInfo"&gt;
      &lt;Complex:0x1ec77193188&gt;
         &lt;Sequence:0x1ec771932c8&gt;
            &lt;Element:0x1ec77193448 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec771934c8 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77193208 name="QueryExamInfoResponse"&gt;
      &lt;Complex:0x1ec77193388&gt;
         &lt;Sequence:0x1ec771935c8&gt;
            &lt;Element:0x1ec771936c8 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77193408 name="SetReportPrinted"&gt;
      &lt;Complex:0x1ec77193608&gt;
         &lt;Sequence:0x1ec77193748&gt;
            &lt;Element:0x1ec771938c8 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77193948 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77193688 name="SetReportPrintedResponse"&gt;
      &lt;Complex:0x1ec77193808&gt;
         &lt;Sequence:0x1ec77193a48&gt;
            &lt;Element:0x1ec77193b48 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77193888 name="SetReportUnPrinted"&gt;
      &lt;Complex:0x1ec77193a88&gt;
         &lt;Sequence:0x1ec77193bc8&gt;
            &lt;Element:0x1ec77193d48 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77193dc8 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77193b08 name="SetReportUnPrintedResponse"&gt;
      &lt;Complex:0x1ec77193c88&gt;
         &lt;Sequence:0x1ec77193ec8&gt;
            &lt;Element:0x1ec77193fc8 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77193d08 name="QueryPrintTask"&gt;
      &lt;Complex:0x1ec77193f08&gt;
         &lt;Sequence:0x1ec77197088&gt;
            &lt;Element:0x1ec77197208 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77193f88 name="QueryPrintTaskResponse"&gt;
      &lt;Complex:0x1ec77197148&gt;
         &lt;Sequence:0x1ec77197288&gt;
            &lt;Element:0x1ec77197408 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec771971c8 name="TaskInfo"&gt;
      &lt;Sequence:0x1ec77197348&gt;
         &lt;Element:0x1ec77197488 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec771975c8 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197648 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec771976c8 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197748 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197788 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197888 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197908 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x1ec77197988 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x1ec771977c8 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x1ec771973c8 name="PatientInfo"&gt;
      &lt;Sequence:0x1ec77197548&gt;
         &lt;Element:0x1ec77197a88 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197b48 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197c48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77197cc8 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x1ec77197a48 name="ArrayOfFilmInfo"&gt;
      &lt;Sequence:0x1ec77197ac8&gt;
         &lt;Element:0x1ec77197d88 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x1ec77197d48 name="FilmInfo"&gt;
      &lt;Sequence:0x1ec77197dc8&gt;
         &lt;Element:0x1ec77197f08 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7719c048 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7719c108 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7719c188 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x1ec77197e48 name="ArrayOfReportInfo"&gt;
      &lt;Sequence:0x1ec7719c208&gt;
         &lt;Element:0x1ec7719c248 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x1ec77197f48 name="ReportInfo"&gt;
      &lt;Sequence:0x1ec7719c288&gt;
         &lt;Element:0x1ec7719c3c8 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7719c488 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7719c308 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x1ec7719c408&gt;
         &lt;Sequence:0x1ec7719c5c8&gt;
            &lt;Element:0x1ec7719c748 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7719c7c8 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7719c588 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x1ec7719c608&gt;
         &lt;Sequence:0x1ec7719c8c8&gt;
            &lt;Element:0x1ec7719c9c8 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7719c6c8 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x1ec7719c988 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x1ec7719ca48 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x1ec7719cb08 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177488 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177608 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177808 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177c48 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177e48 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177f48 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717f188 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177cc8 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717f708 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fb48 name="Print" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fdc8 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fe08 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771844c8 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771849c8 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77184e48 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771886c8 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188b88 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188cc8 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188fc8 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718e588 name="Version" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718e9c8 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718ea88 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718ec88 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718eec8 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193208 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193408 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193688 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193888 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193b08 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193d08 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193f88 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7719c308 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7719c588 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177488 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177608 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177808 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177c48 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177e48 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177f48 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717f188 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177cc8 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717f708 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fb48 name="Print" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fdc8 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fe08 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771844c8 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771849c8 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77184e48 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771886c8 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188b88 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188cc8 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188fc8 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718e588 name="Version" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718e9c8 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718ea88 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718ec88 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718eec8 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193208 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193408 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193688 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193888 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193b08 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193d08 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193f88 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7719c308 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.839" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7719c588 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">WSDL at 'http://10.112.20.150/PrintServer/PrintService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x1ec76e9a988"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC763661C8&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC76E9AF08&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC76E9A2C8&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC763661C8&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC76E9AF08&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC76E9A2C8&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://tempuri.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x1ec77159d88 tns="http://tempuri.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (SetPrintModeSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintMode', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapIn"
               qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapOut"
               qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapIn"
               qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapOut"
               qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapIn"
               qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapOut"
               qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapIn"
               qname = "(PrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Print', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapOut"
               qname = "(PrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('PrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapIn"
               qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapOut"
               qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapIn"
               qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombine', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapOut"
               qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapIn"
               qname = "(CentralPrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrint', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapOut"
               qname = "(CentralPrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapIn"
               qname = "(AddQCLogSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLog', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapOut"
               qname = "(AddQCLogSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLogResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapIn"
               qname = "(VersionSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Version', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapOut"
               qname = "(VersionSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('VersionResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapIn"
               qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapOut"
               qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapIn"
               qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapOut"
               qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapIn"
               qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapOut"
               qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapIn"
               qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapOut"
               qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapIn"
               qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapOut"
               qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetIn"
               qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetOut"
               qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetIn"
               qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetOut"
               qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetIn"
               qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetOut"
               qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetIn"
               qname = "(VersionHttpGetIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetOut"
               qname = "(VersionHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetIn"
               qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetOut"
               qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetIn"
               qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetOut"
               qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetIn"
               qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetOut"
               qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetIn"
               qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetOut"
               qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetIn"
               qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetOut"
               qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetIn"
               qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetOut"
               qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostIn"
               qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostOut"
               qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostIn"
               qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostOut"
               qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostIn"
               qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostOut"
               qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostIn"
               qname = "(VersionHttpPostIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostOut"
               qname = "(VersionHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostIn"
               qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostOut"
               qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostIn"
               qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostOut"
               qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostIn"
               qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostOut"
               qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostIn"
               qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostOut"
               qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostIn"
               qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostOut"
               qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostIn"
               qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostOut"
               qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintMode', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintServerStatusSoapIn"
                                 qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintServerStatusSoapOut"
                                 qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTaskSoapIn"
                                 qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTaskSoapOut"
                                 qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTask2SoapIn"
                                 qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTask2SoapOut"
                                 qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "PrintSoapIn"
                                 qname = "(PrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Print', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "PrintSoapOut"
                                 qname = "(PrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('PrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapIn"
                                 qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapOut"
                                 qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintCombineSoapIn"
                                 qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintCombineSoapOut"
                                 qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintSoapIn"
                                 qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrint', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintSoapOut"
                                 qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogSoapIn"
                                 qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLog', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogSoapOut"
                                 qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionSoapIn"
                                 qname = "(VersionSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Version', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "VersionSoapOut"
                                 qname = "(VersionSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('VersionResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapIn"
                                 qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapOut"
                                 qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoSoapIn"
                                 qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoSoapOut"
                                 qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedSoapIn"
                                 qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedSoapOut"
                                 qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedSoapIn"
                                 qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedSoapOut"
                                 qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskSoapIn"
                                 qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskSoapOut"
                                 qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpGetIn"
                                 qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpGetOut"
                                 qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetIn"
                                 qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetOut"
                                 qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpGetIn"
                                 qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpGetOut"
                                 qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpGetIn"
                                 qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpGetOut"
                                 qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetIn"
                                 qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetOut"
                                 qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpGetIn"
                                 qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpGetOut"
                                 qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpGetIn"
                                 qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpGetOut"
                                 qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetIn"
                                 qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetOut"
                                 qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetIn"
                                 qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetOut"
                                 qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetIn"
                                 qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetOut"
                                 qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpPostIn"
                                 qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpPostOut"
                                 qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostIn"
                                 qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostOut"
                                 qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpPostIn"
                                 qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpPostOut"
                                 qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpPostIn"
                                 qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpPostOut"
                                 qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostIn"
                                 qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostOut"
                                 qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpPostIn"
                                 qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpPostOut"
                                 qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpPostIn"
                                 qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpPostOut"
                                 qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostIn"
                                 qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostOut"
                                 qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostIn"
                                 qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostOut"
                                 qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostIn"
                                 qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostOut"
                                 qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceSoap12, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpGet"
                     qname = "(PrintServiceHttpGet, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpGetIn"
                                       qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpGetOut"
                                       qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetIn"
                                       qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetOut"
                                       qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpGetIn"
                                       qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpGetOut"
                                       qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpGetIn"
                                       qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpGetOut"
                                       qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetIn"
                                       qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetOut"
                                       qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetIn"
                                       qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetOut"
                                       qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetIn"
                                       qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetOut"
                                       qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetIn"
                                       qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetOut"
                                       qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetIn"
                                       qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetOut"
                                       qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetIn"
                                       qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetOut"
                                       qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpPost"
                     qname = "(PrintServiceHttpPost, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpPostIn"
                                       qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpPostOut"
                                       qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostIn"
                                       qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostOut"
                                       qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpPostIn"
                                       qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpPostOut"
                                       qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpPostIn"
                                       qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpPostOut"
                                       qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostIn"
                                       qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostOut"
                                       qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostIn"
                                       qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostOut"
                                       qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostIn"
                                       qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostOut"
                                       qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostIn"
                                       qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostOut"
                                       qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostIn"
                                       qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostOut"
                                       qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostIn"
                                       qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostOut"
                                       qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
      }
   services[] = 
      (Service){
         name = "PrintService"
         qname = "(PrintService, http://tempuri.org/)"
         ports[] = 
            (Port){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap12"
                     qname = "(PrintServiceSoap12, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77228E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'SetPrintMode' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177608 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'NotifyReportInfo' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177c48 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'GetPrintServerStatus' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177f48 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CreatePrintTask' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177cc8 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CreatePrintTask2' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fb48 name="Print" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'Print' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fe08 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771849c8 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CentralPrintCombine' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771886c8 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CentralPrint' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188cc8 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'AddQCLog' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718e588 name="Version" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'Version' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718ea88 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718eec8 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'QueryExamInfo' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193408 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'SetReportPrinted' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193888 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'SetReportUnPrinted' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193d08 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'QueryPrintTask' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7719c308 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177408 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'SetPrintMode' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177608 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'NotifyReportInfo' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177c48 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'GetPrintServerStatus' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177f48 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CreatePrintTask' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177cc8 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CreatePrintTask2' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fb48 name="Print" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'Print' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7717fe08 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771849c8 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CentralPrintCombine' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x1ec771886c8 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'CentralPrint' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77188cc8 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'AddQCLog' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718e588 name="Version" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'Version' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718ea88 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7718eec8 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'QueryExamInfo' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193408 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'SetReportPrinted' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193888 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'SetReportUnPrinted' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77193d08 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'QueryPrintTask' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec7719c308 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575533187 (running)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7718e608, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7718e608 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7718e688, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7718e688 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7718e788, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7718e788 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7718e808, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7718e808 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7718e888, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7718e888 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188d48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec7723ac88"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188d48 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec7723ac88, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188dc8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec7723cf08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188dc8 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec7723cf08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188ec8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec7723cf08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188ec8 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec7723cf08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188f48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec7723cf08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188f48 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec7723cf08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188288, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188288 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188308, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x1ec77188308 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x1ec77177708 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188408, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188408 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188488, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x1ec77188488 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x1ec77177708 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188508, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188508 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77188548, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77188548 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7717f508, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7717f508 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7717f588, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7717f588 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7717fb88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7717fb88 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7717fc08, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7717fc08 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77184808, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77184808 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7719c748, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7719c748 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec7719c7c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7719c7c8 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77177888, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177888 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77177908, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177908 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77177a08, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177a08 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77177a88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177a88 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77177b08, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177b08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77177b48, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x1ec77177b48 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x1ec77177708 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77184308, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77184308 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.885" level="DEBUG">Element:0x1ec77193448, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77193448 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec771934c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec771934c8 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec77197208, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77197208 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec77177548, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177548 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec77177588, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177588 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec771775c8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec771775c8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec771938c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec771938c8 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec77193948, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77193948 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec77193d48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77193d48 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec77193dc8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77193dc8 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec7718ef08, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7718ef08 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec7718ef88, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7718ef88 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (int)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec771930c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77224a08"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec771930c8 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec77224a08, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">('ArrayOfString', http://tempuri.org/), found as: &lt;Complex:0x1ec77177708 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x1ec77177708 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">Element:0x1ec77177848, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec7723bf88"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">TypeQuery:0x1ec7723bf88, found builtin (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177608 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177608 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191205160622"
   type = &lt;Element:0x1ec77177888 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d288 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76331248&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191205160622"
   type = &lt;Element:0x1ec77177888 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d288 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191205160622"
   type = &lt;Element:0x1ec77177888 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d288 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC7724BC08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC7724BC08&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191205160622"
   type = &lt;Element:0x1ec77177888 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d288 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC7724BC08&gt;)
</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191205160622"
   type = &lt;Element:0x1ec77177908 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d488 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC77244348&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191205160622"
   type = &lt;Element:0x1ec77177908 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d488 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191205160622"
   type = &lt;Element:0x1ec77177908 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d488 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC772443C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC772443C8&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191205160622"
   type = &lt;Element:0x1ec77177908 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d488 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC772443C8&gt;)
</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191205160622"
   type = &lt;Element:0x1ec77177a08 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d5c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC77244988&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191205160622"
   type = &lt;Element:0x1ec77177a08 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d5c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191205160622"
   type = &lt;Element:0x1ec77177a08 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d5c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77244A08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77244A08&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191205160622"
   type = &lt;Element:0x1ec77177a08 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d5c8 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77244A08&gt;)
</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "0afd7e41-355e-457f-8898-bf1989955f58"
   type = &lt;Element:0x1ec77177a88 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d708 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC77244FC8&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "0afd7e41-355e-457f-8898-bf1989955f58"
   type = &lt;Element:0x1ec77177a88 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d708 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "0afd7e41-355e-457f-8898-bf1989955f58"
   type = &lt;Element:0x1ec77177a88 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d708 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77250088&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250088&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "0afd7e41-355e-457f-8898-bf1989955f58"
   type = &lt;Element:0x1ec77177a88 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723d708 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77250088&gt;)
</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x1ec77177b08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7723d848 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC77250648&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x1ec77177b08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7723d848 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x1ec77177b08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7723d848 /&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC7723BDC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC7723BDC8&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x1ec77177b08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7723d848 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC7723BDC8&gt;)
</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec77177b48 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec77177748&gt;
      &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC77250C88&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec77177b48 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec77177748&gt;
      &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec77177b48 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec77177748&gt;
      &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">searching parent (&lt;Complex:0x1ec77177708 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77250DC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;
&lt;suds.resolver.Frame object at 0x000001EC77250DC8&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77250DC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">searching parent (&lt;Complex:0x1ec77177708 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC772532C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;
&lt;suds.resolver.Frame object at 0x000001EC772532C8&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
   type = &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723be88 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec77177748&gt;
      &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec77177748&gt;
   &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC772532C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77250DC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;
&lt;suds.resolver.Frame object at 0x000001EC77250DC8&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
   type = &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7723be88 /&gt;
   ancestry[] = 
      &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec77177748&gt;
      &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x1ec77177748&gt;
   &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77250DC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x1ec77177b48 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x1ec77177708 name="ArrayOfString"&gt;
   &lt;Sequence:0x1ec77177748&gt;
      &lt;Element:0x1ec77177848 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77250D08&gt;)
</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">message for 'NotifyReportInfo' created: 0 (ms)</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">sending to (http://10.112.20.150/PrintServer/PrintService.asmx)
message:
&lt;suds.sax.document.Document object at 0x000001EC7724B588&gt;</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191205 16:06:27.901" level="DEBUG">sending:
URL: http://10.112.20.150/PrintServer/PrintService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://tempuri.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://tempuri.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:NotifyReportInfo&gt;&lt;ns1:patientName&gt;CN20191205160622&lt;/ns1:patientName&gt;&lt;ns1:patientID&gt;P20191205160622&lt;/ns1:patientID&gt;&lt;ns1:accessionNumber&gt;A20191205160622&lt;/ns1:accessionNumber&gt;&lt;ns1:studyInstanceUID&gt;0afd7e41-355e-457f-8898-bf1989955f58&lt;/ns1:studyInstanceUID&gt;&lt;ns1:reportStatus&gt;2&lt;/ns1:reportStatus&gt;&lt;ns1:reportFileName&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;/ns1:reportFileName&gt;&lt;/ns1:NotifyReportInfo&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/10.0
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Thu, 05 Dec 2019 08:06:27 GMT
Connection: close
Content-Length: 377


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">waited 625 (ms) on server reply</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x1ec77177808 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">Element:0x1ec77177ec8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77253948"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177ec8 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">TypeQuery:0x1ec77253948, found builtin (int)</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">reset</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">Element:0x1ec77177ec8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77254dc8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77177ec8 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">TypeQuery:0x1ec77254dc8, found builtin (int)</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77254D48&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77254D48&gt;</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77254D48&gt;)
</msg>
<msg timestamp="20191205 16:06:28.527" level="DEBUG">method 'NotifyReportInfo' invoked: 625 (ms)</msg>
<msg timestamp="20191205 16:06:28.527" level="INFO">Report.report_create_by_printserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191205 16:06:28.527" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191205160622", "patient_id": "P20191205160622", "accessionNumber": "A20191205160622", "StudyInstanceUID": "0afd7e41-355e-457f-8898-bf1989955f58", "report_type": "...</msg>
<status status="PASS" starttime="20191205 16:06:27.682" endtime="20191205 16:06:28.527"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:28.542" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191205160622', 'patient_id': 'P20191205160622', 'accessionNumber': 'A20191205160622', 'StudyInstanceUID': '0afd7e41-355e-457f-8898-bf1989955f58', 'report_type': '...</msg>
<status status="PASS" starttime="20191205 16:06:28.527" endtime="20191205 16:06:28.542"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:06:28.558" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:28.542" endtime="20191205 16:06:28.558"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:28.558" endtime="20191205 16:06:28.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191205 16:06:28.558" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191205 16:06:28.558" endtime="20191205 16:06:28.558"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191205 16:06:28.574" level="INFO">${Report_StudyInstanceUID} = ['0afd7e41-355e-457f-8898-bf1989955f58']</msg>
<status status="PASS" starttime="20191205 16:06:28.558" endtime="20191205 16:06:28.574"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191205 16:06:28.574" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191205 16:06:28.574" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191205 16:06:28.574" endtime="20191205 16:06:28.574"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:28.574" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191205 16:06:28.574" endtime="20191205 16:06:28.574"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191205 16:06:28.589" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:28.574" endtime="20191205 16:06:28.589"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191205 16:06:28.620" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191205 16:06:28.589" endtime="20191205 16:06:28.620"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:28.620" endtime="20191205 16:06:28.620"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191205 16:06:28.620" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:28.620" endtime="20191205 16:06:28.620"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:06:33.625" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:06:28.620" endtime="20191205 16:06:33.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 16:06:33.625" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191205 16:06:33.625" endtime="20191205 16:06:33.625"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191205 16:06:33.625" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191205160622", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-12-05 16:06:29.373000", "HoldFlag": 1, "PrintWaitTime": "600", "ReportWaitTime": "600...</msg>
<status status="PASS" starttime="20191205 16:06:33.625" endtime="20191205 16:06:33.625"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:33.625" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191205160622', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-12-05 16:06:29.373000', 'HoldFlag': 1, 'PrintWaitTime': '600', 'ReportWaitTime': '600...</msg>
<status status="PASS" starttime="20191205 16:06:33.625" endtime="20191205 16:06:33.625"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191205 16:06:33.702" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:33.625" endtime="20191205 16:06:33.702"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191205 16:06:33.718" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191205 16:06:33.702" endtime="20191205 16:06:33.718"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:33.718" endtime="20191205 16:06:33.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191205 16:06:33.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:33.718" endtime="20191205 16:06:33.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191205 16:06:33.718" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191205 16:06:33.718" endtime="20191205 16:06:33.718"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191205 16:06:33.718" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191205160622, A20191205160622] correct and value is 9</msg>
<msg timestamp="20191205 16:06:33.718" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191205 16:06:33.718" endtime="20191205 16:06:33.718"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191205 16:06:33.718" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191205 16:06:33.718" endtime="20191205 16:06:33.718"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191205 16:06:33.734" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:33.718" endtime="20191205 16:06:33.734"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191205 16:06:33.750" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191205 16:06:33.734" endtime="20191205 16:06:33.750"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:33.750" endtime="20191205 16:06:33.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191205 16:06:33.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:33.750" endtime="20191205 16:06:33.750"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:06:22.558" endtime="20191205 16:06:33.750" critical="yes"></status>
</test>
<test id="s1-t5" name="SmokeTest_005_Core_4715_03.01.01 Report receive from Virtual Print success.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191205 16:06:33.750" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191205 16:06:33.750" endtime="20191205 16:06:33.750"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:06:33.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:06:33.765" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:06:33.765" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:06:33.749612", "UpdateDT": "2019-12-05 16:06:33.749612", "PatientID": "P20191205160633", "AccessionNumber": "A20191205160633", "StudyInstanceUID": "UID20191205160633", "NameCN": "CN20191205160633", "NameEN": "EN20191205160633", "Gender": "F", "Birthday": "1942-12-24", "Modality": "IO", "ModalityName": "XA", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:06:33.749612", "RegisterDT": "2019-12-05 16:06:33.749612", "ExamDT": "2019-12-05 16:06:33.749612", "ReportDT": "2019-12-05 16:06:33.749612", "SubmitDT": "2019-12-05 16:06:33.749612", "ApproveDT": "2019-12-05 16:06:33.749612", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205160633", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:06:33.765" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:06:33.749612", "UpdateDT": "2019-12-05 16:06:33.749612", "PatientID": "P20191205160633", "AccessionNumber": "A20191205160633", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:06:33.750" endtime="20191205 16:06:33.765"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:06:33.765" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:06:33.749612', 'UpdateDT': '2019-12-05 16:06:33.749612', 'PatientID': 'P20191205160633', 'AccessionNumber': 'A20191205160633', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:06:33.765" endtime="20191205 16:06:33.765"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:06:33.781" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:33.765" endtime="20191205 16:06:33.781"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:33.781" endtime="20191205 16:06:33.781"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:06:33.796" level="INFO">${patientID} = ['P20191205160633']</msg>
<status status="PASS" starttime="20191205 16:06:33.781" endtime="20191205 16:06:33.796"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191205 16:06:33.812" level="INFO">${AccessionNumber} = ['A20191205160633']</msg>
<status status="PASS" starttime="20191205 16:06:33.796" endtime="20191205 16:06:33.812"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191205 16:06:33.828" level="INFO">${PatientName} = ['CN20191205160633']</msg>
<status status="PASS" starttime="20191205 16:06:33.812" endtime="20191205 16:06:33.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191205 16:06:33.828" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191205 16:06:33.828" endtime="20191205 16:06:33.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:06:33.828" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191205 16:06:33.828" endtime="20191205 16:06:33.828"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:06:38.828" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:06:33.828" endtime="20191205 16:06:38.828"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:06:49.326" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205150157.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205160633.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205160633", "accession_number": "A20191205160633", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205160633.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:06:49.326" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205160633", "accession_number": "A20191205160633", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:06:38.828" endtime="20191205 16:06:49.326"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:49.326" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205160633', 'accession_number': 'A20191205160633', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:06:49.326" endtime="20191205 16:06:49.326"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:06:49.357" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:49.326" endtime="20191205 16:06:49.357"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:49.357" endtime="20191205 16:06:49.357"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191205 16:06:59.370" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191205 16:06:49.357" endtime="20191205 16:06:59.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n \ Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2. \n</arg>
</arguments>
<msg timestamp="20191205 16:06:59.370" level="INFO">Step 4 
 Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2. 
</msg>
<status status="PASS" starttime="20191205 16:06:59.370" endtime="20191205 16:06:59.370"></status>
</kw>
<kw name="Report Get Info From Afp Reportinfo" library="PUMA_ReportLibrary">
<doc>report_get_info_from_afp_reportinfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191205 16:06:59.401" level="INFO">['StudyInstanceUID', 'ReportStatus', 'StatusTime', 'AccessionNumber', 'FileName', 'PatientID', 'PatientName', 'PrintTime', 'PrintStatus', 'DeleteStatus', 'PrintCount', 'Gender', 'ExamName', 'PatientType', 'ModalityName', 'ExamDateTime', 'ReferringDepartment', 'VerifyDateTime', 'ModalityType', 'ForwardDestination', 'ForwardDateTime', 'BodyPart', 'AAccessionNumber', 'AStudyInstanceUID', 'CreatedTime', 'DepartmentID', 'PageCount', 'TerminalID', 'SyncToECS', 'CopiesCount', 'PdfPassword', 'HospitalDistrict']
{'result': True, 'StudyInstanceUID': ('63816486143f4854a3687c570eb0373e',), 'ReportStatus': (2,), 'StatusTime': ('2019-12-05 16:06:41.737000',), 'AccessionNumber': ('A20191205160633',), 'FileName': ('E:\\Report\\Archive\\20191205\\A20191205160633_160641_db632abe353f40789e53f66792a64d16.pdf',), 'PatientID': ('P20191205160633                                                 ',), 'PatientName': ('CN20191205160633',), 'PrintTime': (None,), 'PrintStatus': (0,), 'DeleteStatus': (0,), 'PrintCount': (0,), 'Gender': ('F',), 'ExamName': ('Exam20191205160633',), 'PatientType': ('2',), 'ModalityName': ('XA',), 'ExamDateTime': ('2019-12-05 16:06:33.749612',), 'ReferringDepartment': ('',), 'VerifyDateTime': ('2019-12-05 16:06:41',), 'ModalityType': ('IO',), 'ForwardDestination': (None,), 'ForwardDateTime': (None,), 'BodyPart': ('',), 'AAccessionNumber': (None,), 'AStudyInstanceUID': (None,), 'CreatedTime': ('2019-12-05 16:06:41.737000',), 'DepartmentID': (1,), 'PageCount': (1,), 'TerminalID': (None,), 'SyncToECS': (9,), 'CopiesCount': (1,), 'PdfPassword': (None,), 'HospitalDistrict': ('',)}</msg>
<msg timestamp="20191205 16:06:59.401" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "StudyInstanceUID": ["63816486143f4854a3687c570eb0373e"], "ReportStatus": [2], "StatusTime": ["2019-12-05 16:06:41.737000"], "AccessionNumber": ["A20191205160633"], "FileName": ["E:\\...</msg>
<status status="PASS" starttime="20191205 16:06:59.370" endtime="20191205 16:06:59.401"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:06:59.401" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'StudyInstanceUID': ['63816486143f4854a3687c570eb0373e'], 'ReportStatus': [2], 'StatusTime': ['2019-12-05 16:06:41.737000'], 'AccessionNumber': ['A20191205160633'], 'FileName': ['E:\\...</msg>
<status status="PASS" starttime="20191205 16:06:59.401" endtime="20191205 16:06:59.401"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191205 16:06:59.432" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:06:59.401" endtime="20191205 16:06:59.432"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191205 16:06:59.464" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = [[2]]</msg>
<status status="PASS" starttime="20191205 16:06:59.432" endtime="20191205 16:06:59.464"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>FileName</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportPath}</var>
</assign>
<msg timestamp="20191205 16:06:59.479" level="INFO">${Report_Check_ReportInfo_Info_ReportPath} = [['E:\\Report\\Archive\\20191205\\A20191205160633_160641_db632abe353f40789e53f66792a64d16.pdf']]</msg>
<status status="PASS" starttime="20191205 16:06:59.464" endtime="20191205 16:06:59.479"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191205 16:06:59.479" endtime="20191205 16:06:59.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0][0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191205 16:06:59.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:06:59.479" endtime="20191205 16:06:59.479"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:07:04.482" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:06:59.479" endtime="20191205 16:07:04.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description:\n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. \n</arg>
</arguments>
<msg timestamp="20191205 16:07:04.482" level="INFO">Step 5: 
Description:
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. 
</msg>
<status status="PASS" starttime="20191205 16:07:04.482" endtime="20191205 16:07:04.482"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>PrintStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_PrintStatus}</var>
</assign>
<msg timestamp="20191205 16:07:04.514" level="INFO">${Report_Check_ReportInfo_Info_PrintStatus} = [[0]]</msg>
<status status="PASS" starttime="20191205 16:07:04.482" endtime="20191205 16:07:04.514"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191205 16:07:04.514" endtime="20191205 16:07:04.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_PrintStatus}[0][0]</arg>
<arg>0</arg>
<arg>The report printstatus value is 0</arg>
</arguments>
<msg timestamp="20191205 16:07:04.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:07:04.514" endtime="20191205 16:07:04.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:07:09.515" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:07:04.514" endtime="20191205 16:07:09.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table \n Expected:\n 1. Can find a new record in this table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 16:07:09.515" level="INFO">Step 6 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table 
Expected:
1. Can find a new record in this table and value should be correct. 
</msg>
<status status="PASS" starttime="20191205 16:07:09.515" endtime="20191205 16:07:09.515"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191205 16:07:09.515" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191205160633", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-12-05 16:06:42.627000", "HoldFlag": 1, "PrintWaitTime": "600", "ReportWaitTime": "600...</msg>
<status status="PASS" starttime="20191205 16:07:09.515" endtime="20191205 16:07:09.515"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191205 16:07:09.515" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191205160633', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-12-05 16:06:42.627000', 'HoldFlag': 1, 'PrintWaitTime': '600', 'ReportWaitTime': '600...</msg>
<status status="PASS" starttime="20191205 16:07:09.515" endtime="20191205 16:07:09.515"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191205 16:07:09.546" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:07:09.515" endtime="20191205 16:07:09.546"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191205 16:07:09.562" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191205 16:07:09.546" endtime="20191205 16:07:09.562"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:07:09.562" endtime="20191205 16:07:09.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191205 16:07:09.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:07:09.562" endtime="20191205 16:07:09.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:07:14.570" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:07:09.562" endtime="20191205 16:07:14.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191205 16:07:14.570" level="INFO">Step 7 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191205 16:07:14.570" endtime="20191205 16:07:14.570"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191205 16:07:14.570" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191205160633, A20191205160633] correct and value is 9</msg>
<msg timestamp="20191205 16:07:14.570" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191205 16:07:14.570" endtime="20191205 16:07:14.570"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191205 16:07:14.570" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191205 16:07:14.570" endtime="20191205 16:07:14.570"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191205 16:07:14.601" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:07:14.570" endtime="20191205 16:07:14.601"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191205 16:07:14.632" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191205 16:07:14.601" endtime="20191205 16:07:14.632"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:07:14.632" endtime="20191205 16:07:14.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191205 16:07:14.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:07:14.632" endtime="20191205 16:07:14.632"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:07:19.632" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:07:14.632" endtime="20191205 16:07:19.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8: \n Description: \n 1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. \n Expected: \n1. The Report can find in the table. \n</arg>
</arguments>
<msg timestamp="20191205 16:07:19.632" level="INFO">Step 8: 
Description: 
1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. 
Expected: 
1. The Report can find in the table. 
</msg>
<status status="PASS" starttime="20191205 16:07:19.632" endtime="20191205 16:07:19.632"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_exam_info}</var>
</assign>
<msg timestamp="20191205 16:07:19.632" level="INFO">${Report_exam_info} = {"Result": true, "AccessionNumber": "A20191205160633", "FilmPrintStatus": -1, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 0, "Modalities": "IO", "ExamName": null, "BodyPart": null, "PatientID"...</msg>
<status status="PASS" starttime="20191205 16:07:19.632" endtime="20191205 16:07:19.632"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_exam_info}</arg>
</arguments>
<assign>
<var>${Report_exam_info_Json}</var>
</assign>
<msg timestamp="20191205 16:07:19.632" level="INFO">${Report_exam_info_Json} = {'Result': True, 'AccessionNumber': 'A20191205160633', 'FilmPrintStatus': -1, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 0, 'Modalities': 'IO', 'ExamName': None, 'BodyPart': None, 'PatientID'...</msg>
<status status="PASS" starttime="20191205 16:07:19.632" endtime="20191205 16:07:19.632"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_exam_info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_exam_info_Result}</var>
</assign>
<msg timestamp="20191205 16:07:19.664" level="INFO">${Report_exam_info_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:07:19.632" endtime="20191205 16:07:19.664"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_exam_info_Result}[0]</arg>
<arg>The report can find in the wggc.dbo.afp_ExamInfo table.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:07:19.664" endtime="20191205 16:07:19.664"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:07:24.672" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:07:19.664" endtime="20191205 16:07:24.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 9 \n Description \n 1. Check the report in archived folder. (default is E:\\Report\\Archive.) \n Expected: \n 1.The file should exist in the folder \n</arg>
</arguments>
<msg timestamp="20191205 16:07:24.672" level="INFO">Step 9 
Description 
1. Check the report in archived folder. (default is E:\Report\Archive.) 
Expected: 
1.The file should exist in the folder 
</msg>
<status status="PASS" starttime="20191205 16:07:24.672" endtime="20191205 16:07:24.672"></status>
</kw>
<kw name="Report Check File Exist By Path Remote" library="PUMA_ReportLibrary">
<doc>report_check_file_exist_by_path_remote</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportPath}[0][0]</arg>
</arguments>
<assign>
<var>${Report_File_Pathc_Check_Result}</var>
</assign>
<msg timestamp="20191205 16:07:27.624" level="INFO">E:\Report\Archive\20191205\A20191205160633_160641_db632abe353f40789e53f66792a64d16.pdf
C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\PowerShellScripts\PS_Check_File_Exist_temp.ps1
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\PowerShellScripts\PS_Check_File_Exist_temp.ps1
b'True\r\n'
Report.report_check_file_exist_by_path_remote: Message come from powershell: b'True\r\n'
Report.report_check_file_exist_by_path_remote: The file is exsit in the PS system [E:\Report\Archive\20191205\A20191205160633_160641_db632abe353f40789e53f66792a64d16.pdf].</msg>
<msg timestamp="20191205 16:07:27.624" level="INFO">${Report_File_Pathc_Check_Result} = True</msg>
<status status="PASS" starttime="20191205 16:07:24.672" endtime="20191205 16:07:27.624"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_File_Pathc_Check_Result}</arg>
<arg>The file exist in the folder.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:07:27.624" endtime="20191205 16:07:27.624"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:06:33.750" endtime="20191205 16:07:27.624" critical="yes"></status>
</test>
<test id="s1-t6" name="SmokeTest_006_Core_4176_03.01.02 Report receive from Virtual Print failure.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191205 16:07:27.624" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191205 16:07:27.624" endtime="20191205 16:07:27.624"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:07:27.624" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:07:27.639" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:07:27.639" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:07:27.623843", "UpdateDT": "2019-12-05 16:07:27.623843", "PatientID": "P20191205160727", "AccessionNumber": "A20191205160727", "StudyInstanceUID": "UID20191205160727", "NameCN": "CN20191205160727", "NameEN": "EN20191205160727", "Gender": "M", "Birthday": "1998-12-10", "Modality": "DX", "ModalityName": "NM", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:07:27.623843", "RegisterDT": "2019-12-05 16:07:27.623843", "ExamDT": "2019-12-05 16:07:27.623843", "ReportDT": "2019-12-05 16:07:27.623843", "SubmitDT": "2019-12-05 16:07:27.623843", "ApproveDT": "2019-12-05 16:07:27.623843", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205160727", "ExamBodyPart": "Lung", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:07:27.639" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:07:27.623843", "UpdateDT": "2019-12-05 16:07:27.623843", "PatientID": "P20191205160727", "AccessionNumber": "A20191205160727", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:07:27.624" endtime="20191205 16:07:27.639"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:07:27.639" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:07:27.623843', 'UpdateDT': '2019-12-05 16:07:27.623843', 'PatientID': 'P20191205160727', 'AccessionNumber': 'A20191205160727', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:07:27.639" endtime="20191205 16:07:27.639"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:07:27.655" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:07:27.639" endtime="20191205 16:07:27.655"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:07:27.655" endtime="20191205 16:07:27.655"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:07:27.686" level="INFO">${patientID} = ['P20191205160727']</msg>
<status status="PASS" starttime="20191205 16:07:27.655" endtime="20191205 16:07:27.686"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191205 16:07:27.702" level="INFO">${AccessionNumber} = ['A20191205160727']</msg>
<status status="PASS" starttime="20191205 16:07:27.686" endtime="20191205 16:07:27.702"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191205 16:07:27.718" level="INFO">${PatientName} = ['CN20191205160727']</msg>
<status status="PASS" starttime="20191205 16:07:27.702" endtime="20191205 16:07:27.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n 3. Delete the patient information of step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191205 16:07:27.718" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
3. Delete the patient information of step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191205 16:07:27.718" endtime="20191205 16:07:27.718"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Patient_Delete_Result}</var>
</assign>
<msg timestamp="20191205 16:07:27.733" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191205 16:07:27.733" level="INFO">${Patient_Delete_Result} = True</msg>
<status status="PASS" starttime="20191205 16:07:27.718" endtime="20191205 16:07:27.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:07:27.733" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191205 16:07:27.733" endtime="20191205 16:07:27.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:07:32.736" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:07:27.733" endtime="20191205 16:07:32.736"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:09:32.980" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205160633.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205160727.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
Report archived failed.
Report achived failed. {"Status": false, "server": "10.112.20.150", "patient_id": "P20191205160727", "accession_number": "A20191205160727", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205160727.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:09:32.980" level="INFO">${Report_archived_Info} = {"Status": false, "server": "10.112.20.150", "patient_id": "P20191205160727", "accession_number": "A20191205160727", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSampl...</msg>
<status status="PASS" starttime="20191205 16:07:32.736" endtime="20191205 16:09:32.980"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:09:32.980" level="INFO">${Report_archived_Info_Json} = {'Status': False, 'server': '10.112.20.150', 'patient_id': 'P20191205160727', 'accession_number': 'A20191205160727', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSampl...</msg>
<status status="PASS" starttime="20191205 16:09:32.980" endtime="20191205 16:09:32.980"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:09:33.011" level="INFO">${Report_archived_result} = [False]</msg>
<status status="PASS" starttime="20191205 16:09:32.980" endtime="20191205 16:09:33.011"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == False</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:09:33.011" endtime="20191205 16:09:33.011"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191205 16:09:43.018" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191205 16:09:33.011" endtime="20191205 16:09:43.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n \ Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be -1. \n</arg>
</arguments>
<msg timestamp="20191205 16:09:43.018" level="INFO">Step 4 
 Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be -1. 
</msg>
<status status="PASS" starttime="20191205 16:09:43.018" endtime="20191205 16:09:43.018"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Reportinfo By Pid" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with patientid from table wggc.dbp.afp_reportinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${patientID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191205 16:09:43.049" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"Result": true, "StudyInstanceUID": "e4e6356315064b4b8106008818623a12", "ReportStatus": -1, "StatusTime": "2019-12-05 16:07:37.290000", "AccessionNumber": "A20191205160727", "FileName": "E:\\Report\\...</msg>
<status status="PASS" starttime="20191205 16:09:43.018" endtime="20191205 16:09:43.049"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:09:43.049" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'Result': True, 'StudyInstanceUID': 'e4e6356315064b4b8106008818623a12', 'ReportStatus': -1, 'StatusTime': '2019-12-05 16:07:37.290000', 'AccessionNumber': 'A20191205160727', 'FileName': 'E:\\Report\\...</msg>
<status status="PASS" starttime="20191205 16:09:43.049" endtime="20191205 16:09:43.049"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191205 16:09:43.081" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:09:43.049" endtime="20191205 16:09:43.081"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191205 16:09:43.096" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = [-1]</msg>
<status status="PASS" starttime="20191205 16:09:43.081" endtime="20191205 16:09:43.096"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>FileName</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportPath}</var>
</assign>
<msg timestamp="20191205 16:09:43.112" level="INFO">${Report_Check_ReportInfo_Info_ReportPath} = ['E:\\Report\\Archive\\20191205\\P20191205160727.pdf']</msg>
<status status="PASS" starttime="20191205 16:09:43.096" endtime="20191205 16:09:43.112"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191205 16:09:43.112" endtime="20191205 16:09:43.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>-1</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is -1</arg>
</arguments>
<msg timestamp="20191205 16:09:43.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:09:43.112" endtime="20191205 16:09:43.112"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:09:48.113" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:09:43.112" endtime="20191205 16:09:48.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description:\n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. \n</arg>
</arguments>
<msg timestamp="20191205 16:09:48.113" level="INFO">Step 5: 
Description:
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. 
</msg>
<status status="PASS" starttime="20191205 16:09:48.113" endtime="20191205 16:09:48.113"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>PrintStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_PrintStatus}</var>
</assign>
<msg timestamp="20191205 16:09:48.145" level="INFO">${Report_Check_ReportInfo_Info_PrintStatus} = [0]</msg>
<status status="PASS" starttime="20191205 16:09:48.113" endtime="20191205 16:09:48.145"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191205 16:09:48.145" endtime="20191205 16:09:48.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_PrintStatus}[0]</arg>
<arg>0</arg>
<arg>The report printstatus value is 0</arg>
</arguments>
<msg timestamp="20191205 16:09:48.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 16:09:48.145" endtime="20191205 16:09:48.145"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:09:53.145" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:09:48.145" endtime="20191205 16:09:53.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table \n Expected:\n 1. Cannot find a new record in this table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 16:09:53.145" level="INFO">Step 6 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table 
Expected:
1. Cannot find a new record in this table and value should be correct. 
</msg>
<status status="PASS" starttime="20191205 16:09:53.145" endtime="20191205 16:09:53.145"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191205 16:09:53.145" level="INFO">Printmode.printmode_get_info_from_db_by_accn: Data Exception for the exam [A20191205160727] in wggc.dbo_afp_printmode table
Printmode.printmode_get_info_from_db_by_accn: There are [0] records in table</msg>
<msg timestamp="20191205 16:09:53.145" level="INFO">${PrintMode_info} = {"result": false}</msg>
<status status="PASS" starttime="20191205 16:09:53.145" endtime="20191205 16:09:53.145"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191205 16:09:53.145" level="INFO">${PrintMode_info_Json} = {'result': False}</msg>
<status status="PASS" starttime="20191205 16:09:53.145" endtime="20191205 16:09:53.145"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191205 16:09:53.175" level="INFO">${PrintMode_result} = [False]</msg>
<status status="PASS" starttime="20191205 16:09:53.145" endtime="20191205 16:09:53.175"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191205 16:09:53.207" level="INFO">${PrintMode_value} = []</msg>
<status status="PASS" starttime="20191205 16:09:53.175" endtime="20191205 16:09:53.207"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}[0] == False</arg>
</arguments>
<status status="PASS" starttime="20191205 16:09:53.207" endtime="20191205 16:09:53.207"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191205 16:09:58.219" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191205 16:09:53.207" endtime="20191205 16:09:58.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. Cannot find records in the table. \n</arg>
</arguments>
<msg timestamp="20191205 16:09:58.219" level="INFO">Step 7 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. Cannot find records in the table. 
</msg>
<status status="PASS" starttime="20191205 16:09:58.219" endtime="20191205 16:09:58.219"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191205 16:09:58.219" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Data Exception for the patient [P20191205160727, A20191205160727]</msg>
<msg timestamp="20191205 16:09:58.219" level="INFO">${Report_ReportStoreFlag_info} = {"result": false}</msg>
<status status="PASS" starttime="20191205 16:09:58.219" endtime="20191205 16:09:58.219"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191205 16:09:58.219" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': False}</msg>
<status status="PASS" starttime="20191205 16:09:58.219" endtime="20191205 16:09:58.219"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191205 16:09:58.251" level="INFO">${Report_ReportStoreFlage_info_result} = [False]</msg>
<status status="PASS" starttime="20191205 16:09:58.219" endtime="20191205 16:09:58.251"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0] == False</arg>
<arg>Cannot find the records in the database.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:09:58.251" endtime="20191205 16:09:58.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8: \n Description: \n 1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. \n Expected: \n 1.Cannot find a new record in table. \n</arg>
</arguments>
<msg timestamp="20191205 16:09:58.251" level="INFO">Step 8: 
Description: 
1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. 
Expected: 
1.Cannot find a new record in table. 
</msg>
<status status="PASS" starttime="20191205 16:09:58.251" endtime="20191205 16:09:58.251"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_exam_info}</var>
</assign>
<msg timestamp="20191205 16:09:58.266" level="INFO">Databaseinfo.DB_get_wggc_dbo_afp_examinfo_by_accn: Data Exception for the exam [A20191205160727] in wggc.dbo.AFP_ExamInfo table
Databaseinfo.DB_get_wggc_dbo_afp_examinfo_by_accn: There are [0] records in table</msg>
<msg timestamp="20191205 16:09:58.266" level="INFO">${Report_exam_info} = {"Result": false}</msg>
<status status="PASS" starttime="20191205 16:09:58.251" endtime="20191205 16:09:58.266"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_exam_info}</arg>
</arguments>
<assign>
<var>${Report_exam_info_Json}</var>
</assign>
<msg timestamp="20191205 16:09:58.266" level="INFO">${Report_exam_info_Json} = {'Result': False}</msg>
<status status="PASS" starttime="20191205 16:09:58.266" endtime="20191205 16:09:58.266"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_exam_info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_exam_info_Result}</var>
</assign>
<msg timestamp="20191205 16:09:58.282" level="INFO">${Report_exam_info_Result} = [False]</msg>
<status status="PASS" starttime="20191205 16:09:58.266" endtime="20191205 16:09:58.282"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_exam_info_Result}[0] == False</arg>
<arg>1.Cannot find a new record in table.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:09:58.282" endtime="20191205 16:09:58.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 9 \n Description \n 1. Check the report in archived folder. (default is E:\\Report\\Archive.) \n Expected: \n 1.The file should exist in the folder \n</arg>
</arguments>
<msg timestamp="20191205 16:09:58.282" level="INFO">Step 9 
Description 
1. Check the report in archived folder. (default is E:\Report\Archive.) 
Expected: 
1.The file should exist in the folder 
</msg>
<status status="PASS" starttime="20191205 16:09:58.282" endtime="20191205 16:09:58.282"></status>
</kw>
<kw name="Report Check File Exist By Path Remote" library="PUMA_ReportLibrary">
<doc>report_check_file_exist_by_path_remote</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportPath}[0]</arg>
</arguments>
<assign>
<var>${Report_File_Pathc_Check_Result}</var>
</assign>
<msg timestamp="20191205 16:09:59.313" level="INFO">E:\Report\Archive\20191205\P20191205160727.pdf
C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\PowerShellScripts\PS_Check_File_Exist_temp.ps1
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\PowerShellScripts\PS_Check_File_Exist_temp.ps1
b'True\r\n'
Report.report_check_file_exist_by_path_remote: Message come from powershell: b'True\r\n'
Report.report_check_file_exist_by_path_remote: The file is exsit in the PS system [E:\Report\Archive\20191205\P20191205160727.pdf].</msg>
<msg timestamp="20191205 16:09:59.313" level="INFO">${Report_File_Pathc_Check_Result} = True</msg>
<status status="PASS" starttime="20191205 16:09:58.282" endtime="20191205 16:09:59.313"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_File_Pathc_Check_Result}</arg>
<arg>The file exist in the folder.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:09:59.313" endtime="20191205 16:09:59.313"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:07:27.624" endtime="20191205 16:09:59.313" critical="yes"></status>
</test>
<test id="s1-t7" name="SmokeTest_007_Core_4178_04.01.01 Terminal K3 Print Workflow with multiple films and multiple reports.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:09:59.313" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:09:59.313" endtime="20191205 16:09:59.313"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191205 16:09:59.313" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:10:00.032" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 650</msg>
<msg timestamp="20191205 16:10:00.032" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9791,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20146,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191205 16:10:00.032" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191205 16:09:59.313" endtime="20191205 16:10:00.032"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191205 16:10:00.032" endtime="20191205 16:10:00.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create multiple films for patientA/ExamA. \n Expected \n 1. The films can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:10:00.032" level="INFO">Step 2 
Description: 
1. Create multiple films for patientA/ExamA. 
Expected 
1. The films can archived successfully. 
</msg>
<status status="PASS" starttime="20191205 16:10:00.032" endtime="20191205 16:10:00.032"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:10:00.032" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:10:00.047" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:10:00.047" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:10:00.031583", "UpdateDT": "2019-12-05 16:10:00.031583", "PatientID": "P20191205161000", "AccessionNumber": "A20191205161000", "StudyInstanceUID": "UID20191205161000", "NameCN": "CN20191205161000", "NameEN": "EN20191205161000", "Gender": "M", "Birthday": "1973-12-16", "Modality": "MR", "ModalityName": "OT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:10:00.031583", "RegisterDT": "2019-12-05 16:10:00.031583", "ExamDT": "2019-12-05 16:10:00.031583", "ReportDT": "2019-12-05 16:10:00.031583", "SubmitDT": "2019-12-05 16:10:00.031583", "ApproveDT": "2019-12-05 16:10:00.031583", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205161000", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:10:00.047" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:10:00.031583", "UpdateDT": "2019-12-05 16:10:00.031583", "PatientID": "P20191205161000", "AccessionNumber": "A20191205161000", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:10:00.032" endtime="20191205 16:10:00.047"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:10:00.047" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:10:00.031583', 'UpdateDT': '2019-12-05 16:10:00.031583', 'PatientID': 'P20191205161000', 'AccessionNumber': 'A20191205161000', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:10:00.047" endtime="20191205 16:10:00.047"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:10:00.079" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:10:00.047" endtime="20191205 16:10:00.079"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:10:00.094" level="INFO">${patientID} = ['P20191205161000']</msg>
<status status="PASS" starttime="20191205 16:10:00.079" endtime="20191205 16:10:00.094"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:10:00.126" level="INFO">${Accessionnumber} = ['A20191205161000']</msg>
<status status="PASS" starttime="20191205 16:10:00.094" endtime="20191205 16:10:00.126"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:10:00.126" endtime="20191205 16:10:00.126"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:10:31.268" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205161000", "AccessionNumber": "A20191205161000", "FilmSessionLable": "20191205161000125681", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:10:31.268" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205161000", "AccessionNumber": "A20191205161000", "FilmSessionLable": "20191205161000125681", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:10:00.126" endtime="20191205 16:10:31.268"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:10:31.268" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205161000', 'AccessionNumber': 'A20191205161000', 'FilmSessionLable': '20191205161000125681', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:10:31.268" endtime="20191205 16:10:31.268"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:10:31.299" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:10:31.268" endtime="20191205 16:10:31.299"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:10:31.299" endtime="20191205 16:10:31.299"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:11:02.308" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205161000", "AccessionNumber": "A20191205161000", "FilmSessionLable": "20191205161031298943", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:11:02.308" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205161000", "AccessionNumber": "A20191205161000", "FilmSessionLable": "20191205161031298943", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:10:31.299" endtime="20191205 16:11:02.308"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:11:02.308" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205161000', 'AccessionNumber': 'A20191205161000', 'FilmSessionLable': '20191205161031298943', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:11:02.308" endtime="20191205 16:11:02.308"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:11:02.340" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:11:02.308" endtime="20191205 16:11:02.340"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:11:02.340" endtime="20191205 16:11:02.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create multiple reports for patientA/ExamA. \n Expected: \n 1. The reports can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:11:02.340" level="INFO">Step 3 
Description:
1. Create multiple reports for patientA/ExamA. 
Expected: 
1. The reports can archived successfully. 
</msg>
<status status="PASS" starttime="20191205 16:11:02.340" endtime="20191205 16:11:02.340"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:11:12.513" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205160727.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205161000.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205161000", "accession_number": "A20191205161000", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205161000.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:11:12.513" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205161000", "accession_number": "A20191205161000", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:11:02.340" endtime="20191205 16:11:12.513"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:11:12.513" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205161000', 'accession_number': 'A20191205161000', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:11:12.513" endtime="20191205 16:11:12.513"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:11:12.544" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:11:12.513" endtime="20191205 16:11:12.544"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:11:12.544" endtime="20191205 16:11:12.544"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:11:22.699" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205161000.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205161000.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       3
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
Select ReportStatus From wggc.dbo.AFP_ReportInfo  WHERE StudyInstanceUID not in ('9266a416c1a24ede81a0df605dae7f7d') AND PatientID = 'P20191205161000' AND AccessionNumber = 'A20191205161000'
[(2, )]
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205161000", "accession_number": "A20191205161000", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205161000.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:11:22.699" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205161000", "accession_number": "A20191205161000", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:11:12.544" endtime="20191205 16:11:22.699"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:11:22.699" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205161000', 'accession_number': 'A20191205161000', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:11:22.699" endtime="20191205 16:11:22.699"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:11:22.731" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:11:22.699" endtime="20191205 16:11:22.731"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:11:22.731" endtime="20191205 16:11:22.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Set the print mode to both for ExamA \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:11:22.731" level="INFO">Step 4 
Description:
1. Set the print mode to both for ExamA 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:11:22.731" endtime="20191205 16:11:22.731"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>both</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191205 16:11:22.746" level="DEBUG">reading WSDL at: http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76769e48, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76769c48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76769f48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76769488, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168b08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168688, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec761689c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168088, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168108, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168b48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec761684c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168f08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec761688c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168e08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168c08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168708, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168e48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168288, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168408, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168848, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168e88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.824" level="DEBUG">Element:0x1ec76168d88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168948, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168a88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec761681c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168908, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168348, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168d08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168dc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168448, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168808, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec761686c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76168bc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec761687c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec764b5708, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec764b58c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec764b5f08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec764b50c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec764b5c08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec764b5b48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec764b59c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2c048, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2cc08, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2cb88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2c648, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2c588, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2c8c8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2cf48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2cf88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2cbc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2c908, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2c5c8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2c748, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76b2ce88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494c4c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494ccc8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494c748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494c708, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494c688, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494c6c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494cd08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494ca88, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494cb88, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494c948, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec7494cbc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b0c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b248, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9bb48, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9bf08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b608, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b308, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9bf48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b7c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9ba08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9bf88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b348, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b708, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9bb88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e9b9c8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e7aa88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e7aa48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e7a9c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e7a8c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e7a808, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">Element:0x1ec76e7ac08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">loaded:

schema collection
   Schema:0x1ec76769f08
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x1ec767697c8 name="NotifyExamInfo"&gt;
         &lt;Complex:0x1ec76769888&gt;
            &lt;Sequence:0x1ec76769948&gt;
               &lt;Element:0x1ec76769e48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76e66f88 name="ExamInfo"&gt;
         &lt;Sequence:0x1ec76769608&gt;
            &lt;Element:0x1ec76769c48 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76769f48 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76769488 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168b08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168688 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec761689c8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168088 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168108 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168b48 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec761684c8 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168f08 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec761688c8 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168e08 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168c08 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168708 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168e48 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168288 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168408 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168848 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168e88 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168d88 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168948 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168a88 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec761681c8 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168908 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168348 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168d08 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168dc8 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168448 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168808 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec761686c8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76168bc8 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec761687c8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec764b5708 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec764b58c8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec764b5f08 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec764b50c8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec764b5c08 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec764b5b48 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec764b59c8 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76769308 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x1ec764b5848&gt;
            &lt;Sequence:0x1ec764b52c8&gt;
               &lt;Element:0x1ec76b2c048 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76769cc8 name="NotifyReportFile"&gt;
         &lt;Complex:0x1ec764b5cc8&gt;
            &lt;Sequence:0x1ec76b2cd48&gt;
               &lt;Element:0x1ec76b2cc08 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec76b2cb88 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76b2c648 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76b2c588 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec764b5808 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x1ec76b2cdc8&gt;
            &lt;Sequence:0x1ec76b2c9c8&gt;
               &lt;Element:0x1ec76b2c8c8 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76b2c088 name="SetPrintMode"&gt;
         &lt;Complex:0x1ec76b2c948&gt;
            &lt;Sequence:0x1ec76b2c208&gt;
               &lt;Element:0x1ec76b2cf48 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76b2cf88 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76b2cbc8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76b2c908 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76b2c5c8 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76b2c548 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x1ec76b2cfc8&gt;
            &lt;Sequence:0x1ec76b2c708&gt;
               &lt;Element:0x1ec76b2c748 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76b2cb48 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x1ec76b2c2c8&gt;
            &lt;Sequence:0x1ec76b2c888&gt;
               &lt;Element:0x1ec76b2ce88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7494c4c8 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76b2ca88 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x1ec76b2c1c8&gt;
            &lt;Sequence:0x1ec7494c288&gt;
               &lt;Element:0x1ec7494ccc8 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76b2c988 name="NotifyReportInfo"&gt;
         &lt;Complex:0x1ec7494c548&gt;
            &lt;Sequence:0x1ec7494cb48&gt;
               &lt;Element:0x1ec7494c748 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7494c708 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7494c688 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7494c6c8 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7494cd08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7494ca88 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec7494cb88 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76b2c6c8 name="ArrayOfString"&gt;
         &lt;Sequence:0x1ec7494c248&gt;
            &lt;Element:0x1ec7494c948 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec7494c188 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x1ec7494c408&gt;
            &lt;Sequence:0x1ec7494c108&gt;
               &lt;Element:0x1ec7494cbc8 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7494c448 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x1ec7494c2c8&gt;
            &lt;Sequence:0x1ec76e9b588&gt;
               &lt;Element:0x1ec76e9b0c8 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7494cac8 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x1ec76e9bdc8&gt;
            &lt;Sequence:0x1ec76e9b3c8&gt;
               &lt;Element:0x1ec76e9b248 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76e9bcc8 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x1ec76e9b6c8&gt;
            &lt;Sequence:0x1ec76e9ba88&gt;
               &lt;Element:0x1ec76e9bb48 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76e9b408 name="PatientInfoEx"&gt;
         &lt;Sequence:0x1ec76e9b648&gt;
            &lt;Element:0x1ec76e9bf08 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9b608 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9b308 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9bf48 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9b7c8 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9b148 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9ba08 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9bf88 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9b348 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9b708 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e9bb88 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76e9b548 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x1ec76e9b908&gt;
            &lt;Sequence:0x1ec76e9b288&gt;
               &lt;Element:0x1ec76e9b9c8 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76e9be48 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x1ec76e9b488&gt;
            &lt;Sequence:0x1ec76e9bec8&gt;
               &lt;Element:0x1ec76e7aa88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76e7aa48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76e9b448 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x1ec76e9b088&gt;
            &lt;Sequence:0x1ec76e7a848&gt;
               &lt;Element:0x1ec76e7a9c8 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76e9b788 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x1ec76e7af08&gt;
            &lt;Sequence:0x1ec76e7aec8&gt;
               &lt;Element:0x1ec76e7a8c8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76e7a808 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76e7ae48 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x1ec76e7ab48&gt;
            &lt;Sequence:0x1ec76e7ac48&gt;
               &lt;Element:0x1ec76e7ac08 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">MERGED:
Schema:0x1ec76769f08
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x1ec767697c8 name="NotifyExamInfo"&gt;
      &lt;Complex:0x1ec76769888&gt;
         &lt;Sequence:0x1ec76769948&gt;
            &lt;Element:0x1ec76769e48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76e66f88 name="ExamInfo"&gt;
      &lt;Sequence:0x1ec76769608&gt;
         &lt;Element:0x1ec76769c48 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76769f48 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76769488 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168b08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168688 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec761689c8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168088 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168108 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168b48 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec761684c8 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168f08 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec761688c8 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168e08 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168c08 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168708 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168e48 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168288 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168408 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168848 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168e88 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168d88 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168948 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168a88 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec761681c8 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168908 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168348 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168d08 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168dc8 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168448 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168808 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec761686c8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76168bc8 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec761687c8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec764b5708 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec764b58c8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec764b5f08 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec764b50c8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec764b5c08 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec764b5b48 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec764b59c8 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76769308 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x1ec764b5848&gt;
         &lt;Sequence:0x1ec764b52c8&gt;
            &lt;Element:0x1ec76b2c048 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76769cc8 name="NotifyReportFile"&gt;
      &lt;Complex:0x1ec764b5cc8&gt;
         &lt;Sequence:0x1ec76b2cd48&gt;
            &lt;Element:0x1ec76b2cc08 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec76b2cb88 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76b2c648 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76b2c588 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec764b5808 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x1ec76b2cdc8&gt;
         &lt;Sequence:0x1ec76b2c9c8&gt;
            &lt;Element:0x1ec76b2c8c8 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76b2c088 name="SetPrintMode"&gt;
      &lt;Complex:0x1ec76b2c948&gt;
         &lt;Sequence:0x1ec76b2c208&gt;
            &lt;Element:0x1ec76b2cf48 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76b2cf88 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76b2cbc8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76b2c908 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76b2c5c8 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76b2c548 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x1ec76b2cfc8&gt;
         &lt;Sequence:0x1ec76b2c708&gt;
            &lt;Element:0x1ec76b2c748 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76b2cb48 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x1ec76b2c2c8&gt;
         &lt;Sequence:0x1ec76b2c888&gt;
            &lt;Element:0x1ec76b2ce88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7494c4c8 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76b2ca88 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x1ec76b2c1c8&gt;
         &lt;Sequence:0x1ec7494c288&gt;
            &lt;Element:0x1ec7494ccc8 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76b2c988 name="NotifyReportInfo"&gt;
      &lt;Complex:0x1ec7494c548&gt;
         &lt;Sequence:0x1ec7494cb48&gt;
            &lt;Element:0x1ec7494c748 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7494c708 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7494c688 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7494c6c8 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7494cd08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7494ca88 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec7494cb88 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76b2c6c8 name="ArrayOfString"&gt;
      &lt;Sequence:0x1ec7494c248&gt;
         &lt;Element:0x1ec7494c948 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7494c188 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x1ec7494c408&gt;
         &lt;Sequence:0x1ec7494c108&gt;
            &lt;Element:0x1ec7494cbc8 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7494c448 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x1ec7494c2c8&gt;
         &lt;Sequence:0x1ec76e9b588&gt;
            &lt;Element:0x1ec76e9b0c8 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7494cac8 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x1ec76e9bdc8&gt;
         &lt;Sequence:0x1ec76e9b3c8&gt;
            &lt;Element:0x1ec76e9b248 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76e9bcc8 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x1ec76e9b6c8&gt;
         &lt;Sequence:0x1ec76e9ba88&gt;
            &lt;Element:0x1ec76e9bb48 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76e9b408 name="PatientInfoEx"&gt;
      &lt;Sequence:0x1ec76e9b648&gt;
         &lt;Element:0x1ec76e9bf08 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9b608 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9b308 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9bf48 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9b7c8 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9b148 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9ba08 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9bf88 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9b348 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9b708 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76e9bb88 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76e9b548 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x1ec76e9b908&gt;
         &lt;Sequence:0x1ec76e9b288&gt;
            &lt;Element:0x1ec76e9b9c8 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76e9be48 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x1ec76e9b488&gt;
         &lt;Sequence:0x1ec76e9bec8&gt;
            &lt;Element:0x1ec76e7aa88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e7aa48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76e9b448 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x1ec76e9b088&gt;
         &lt;Sequence:0x1ec76e7a848&gt;
            &lt;Element:0x1ec76e7a9c8 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76e9b788 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x1ec76e7af08&gt;
         &lt;Sequence:0x1ec76e7aec8&gt;
            &lt;Element:0x1ec76e7a8c8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76e7a808 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76e7ae48 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x1ec76e7ab48&gt;
         &lt;Sequence:0x1ec76e7ac48&gt;
            &lt;Element:0x1ec76e7ac08 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec767697c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76769308 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76769cc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec764b5808 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c548 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2cb48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2ca88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c988 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494c188 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494c448 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494cac8 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9bcc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b548 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9be48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b448 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b788 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e7ae48 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec767697c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76769308 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76769cc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec764b5808 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c548 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.840" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2cb48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2ca88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c988 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494c188 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494c448 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494cac8 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9bcc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b548 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9be48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b448 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b788 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.856" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e7ae48 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">WSDL at 'http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x1ec76c7b588"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC76D425C8&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC76C7B508&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC76E4C0C8&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC76D425C8&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC76C7B508&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC76E4C0C8&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x1ec76769f08 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76F77648&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec767697c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyExamInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76769cc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyReportFile' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'SetPrintMode' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2cb48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c988 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyReportInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494c448 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9bcc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9be48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b788 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec767697c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyExamInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76769cc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyReportFile' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'SetPrintMode' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2cb48 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c988 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyReportInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7494c448 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9bcc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9be48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76e9b788 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575533482 (running)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76769e48, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76769e48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76e66f88 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76e9b0c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76e9b0c8 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2ce88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2ce88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494c4c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7494c4c8 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76e9bb48, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76e9bb48 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76e9b408 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2cc08, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76d42a88"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76b2cc08 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76e66f88 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2cb88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76d42a88"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2cb88 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76d42a88, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2c648, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76d42a88"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2c648 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76d42a88, found builtin (int)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2c588, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76d42a88"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2c588 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76d42a88, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494c748, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7494c748 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494c708, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7494c708 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494c688, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7494c688 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494c6c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7494c6c8 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494cd08, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7494cd08 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (int)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494ca88, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec7494ca88 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76b2c6c8 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec7494cb88, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec7494cb88 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76b2c6c8 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76e7aa88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76e7aa88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76e7aa48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76e7aa48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76e7a8c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76e7a8c8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76e7a808, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76e7a808 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2cf48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2cf48 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2cf88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2cf88 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (string)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2cbc8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2cbc8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (int)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2c908, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2c908 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (int)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">Element:0x1ec76b2c5c8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e7a6c8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2c5c8 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">TypeQuery:0x1ec76e7a6c8, found builtin (int)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205161000"
   type = &lt;Element:0x1ec76b2cf48 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b108 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76E7E3C8&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205161000"
   type = &lt;Element:0x1ec76b2cf48 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b108 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205161000"
   type = &lt;Element:0x1ec76b2cf48 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b108 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F4EE88&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F4EE88&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205161000"
   type = &lt;Element:0x1ec76b2cf48 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b108 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F4EE88&gt;)
</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76b2cf88 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b888 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76F4E448&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76b2cf88 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b888 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76b2cf88 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b888 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F4EEC8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F4EEC8&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76b2cf88 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76f9b888 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F4EEC8&gt;)
</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec76b2cbc8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9bc48 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC771002C8&gt;
content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec76b2cbc8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9bc48 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec76b2cbc8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9bc48 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77100448&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77100448&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec76b2cbc8 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9bc48 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77100448&gt;)
</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c908 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b088 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC77100548&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c908 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b088 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c908 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b088 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC77100408&gt;)
&lt;suds.resolver.Frame object at 0x000001EC77100408&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c908 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b088 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC77100408&gt;)
</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c5c8 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b188 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76E79B88&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c5c8 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b188 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c5c8 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b188 /&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76E794C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76E794C8&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76b2c5c8 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76f9b188 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76E794C8&gt;)
</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">message for 'SetPrintMode' created: 0 (ms)</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">sending to (http://10.112.20.150/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x000001EC76F9BAC8&gt;</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191205 16:11:22.871" level="DEBUG">sending:
URL: http://10.112.20.150/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191205161000&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;0&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;600&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;600&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/10.0
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Thu, 05 Dec 2019 08:11:23 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">waited 15 (ms) on server reply</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76b2c548 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">Element:0x1ec76b2c748, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76e79c88"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2c748 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">TypeQuery:0x1ec76e79c88, found builtin (int)</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">reset</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">Element:0x1ec76b2c748, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76f75b88"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76b2c748 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">TypeQuery:0x1ec76f75b88, found builtin (int)</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F75C08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F75C08&gt;</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F75C08&gt;)
</msg>
<msg timestamp="20191205 16:11:22.887" level="DEBUG">method 'SetPrintMode' invoked: 15 (ms)</msg>
<msg timestamp="20191205 16:11:22.887" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191205161000.
Printmode.printmode_set_by_accn: Set exam print mode to [both] successfully.</msg>
<msg timestamp="20191205 16:11:22.887" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191205 16:11:22.731" endtime="20191205 16:11:22.902"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:11:22.902" endtime="20191205 16:11:22.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191205 16:11:32.911" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191205 16:11:22.902" endtime="20191205 16:11:32.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Wait for the holding time of film and report has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:11:32.911" level="INFO">Step 5 
Description: 
1. Wait for the holding time of film and report has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:11:32.911" endtime="20191205 16:11:32.911"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191205 16:21:22.920" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [590] seconds to make print ready arrived.</msg>
<msg timestamp="20191205 16:21:22.920" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191205 16:11:32.911" endtime="20191205 16:21:22.920"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:21:22.920" endtime="20191205 16:21:22.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191205 16:21:22.920" level="INFO">Step 6 
Description: 
1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191205 16:21:22.920" endtime="20191205 16:21:22.920"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191205 16:21:22.920" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:21:22.935" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 650</msg>
<msg timestamp="20191205 16:21:22.935" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:21:23.560" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/printtask/items?Value=A20191205161000&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 1515</msg>
<msg timestamp="20191205 16:21:23.560" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:21:23.716" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 799</msg>
<msg timestamp="20191205 16:21:23.732" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:21:23.748" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/print/14?tid=K3_Terminal01 HTTP/1.1" 200 796</msg>
<msg timestamp="20191205 16:23:18.786" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:23:19.224" level="DEBUG">http://10.112.20.150:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=2330c26aaf1f43b0999d497c12ce063a HTTP/1.1" 200 55715</msg>
<msg timestamp="20191205 16:23:19.240" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:23:19.255" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/report/14/2330c26aaf1f43b0999d497c12ce063a/1?tid=K3_Terminal01 HTTP/1.1" 200 269</msg>
<msg timestamp="20191205 16:23:29.270" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:23:29.286" level="DEBUG">http://10.112.20.150:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=9266a416c1a24ede81a0df605dae7f7d HTTP/1.1" 200 55715</msg>
<msg timestamp="20191205 16:23:29.286" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:23:29.301" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/report/14/9266a416c1a24ede81a0df605dae7f7d/1?tid=K3_Terminal01 HTTP/1.1" 200 269</msg>
<msg timestamp="20191205 16:25:04.317" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:25:04.348" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/printtask/status/14?tid=K3_Terminal01 HTTP/1.1" 200 801</msg>
<msg timestamp="20191205 16:25:04.364" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9791,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20146,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片和报告可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":2,"ColorFilmCount":0,"ReportCount":2,"PatientInfo":{"PatientId":"P20191205161000","PatientName":"CN20191205161000","PatientGender":"M","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":2,"PhotoMetric":null}],"ReportStatistics":[{"ReportID":null,"ReportPath":null,"ReportCount":2,"PageCount":0,"PaperSize":0,"PaperType":0,"ColorType":0}],"ExamItems":[{"AccessionNumber":"A20191205161000","ModalityType":"MR","ModalityName":"OT","ExamName":"Exam20191205161000","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1,"PhotoMetric":"MONOCHROME2"},{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1,"PhotoMetric":"MONOCHROME2"}],"ReportInfos":[{"ReportID":"2330c26aaf1f43b0999d497c12ce063a","ReportPath":"http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=2330c26aaf1f43b0999d497c12ce063a","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0},{"ReportID":"9266a416c1a24ede81a0df605dae7f7d","ReportPath":"http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=9266a416c1a24ede81a0df605dae7f7d","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0}]}],"ExamItemsOfReg":[]}}
Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"14","Status":-1,"TotalFilmCount":2,"TotalReportCount":2,"TotalColorFilmCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9791,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20146,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 14
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"TotalColorFilmCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9791,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20146,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":"14"}}}
Terminal.printtask_get_estimatetime: The estimate time is 85 of task 14 

Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=2330c26aaf1f43b0999d497c12ce063a
Terminal.printtask_report_print: The report 2330c26aaf1f43b0999d497c12ce063a print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"14","Status":1,"TotalFilmCount":2,"TotalReportCount":2,"TotalColorFilmCount":0,"PrintedFilmCount":2,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":85,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=9266a416c1a24ede81a0df605dae7f7d
Terminal.printtask_report_print: The report 9266a416c1a24ede81a0df605dae7f7d print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"14","Status":1,"TotalFilmCount":2,"TotalReportCount":2,"TotalColorFilmCount":0,"PrintedFilmCount":2,"PrintedReportCount":2,"PrintedColorFilmCount":0,"EstimatedTime":85,"TerminalInfo":null}}
Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"14","Status":4,"TotalFilmCount":2,"TotalReportCount":2,"TotalColorFilmCount":0,"PrintedFilmCount":2,"PrintedReportCount":2,"PrintedColorFilmCount":0,"EstimatedTime":85,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9789,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20144,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 14 print successfully, the task status is Printed</msg>
<msg timestamp="20191205 16:25:04.364" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191205 16:21:22.920" endtime="20191205 16:25:04.364"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:25:04.364" endtime="20191205 16:25:04.364"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:09:59.313" endtime="20191205 16:25:04.364" critical="yes"></status>
</test>
<test id="s1-t8" name="SmokeTest_008_Core_4177_04.01.02 Terminal K3 Print Workflow with one film and one report.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:25:04.364" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:25:04.364" endtime="20191205 16:25:04.364"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191205 16:25:04.364" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:25:04.380" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 650</msg>
<msg timestamp="20191205 16:25:04.380" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9789,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20144,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191205 16:25:04.380" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191205 16:25:04.364" endtime="20191205 16:25:04.380"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191205 16:25:04.380" endtime="20191205 16:25:04.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:25:04.380" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191205 16:25:04.380" endtime="20191205 16:25:04.380"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:25:04.380" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:25:04.380" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:25:04.395" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:25:04.379895", "UpdateDT": "2019-12-05 16:25:04.379895", "PatientID": "P20191205162504", "AccessionNumber": "A20191205162504", "StudyInstanceUID": "UID20191205162504", "NameCN": "CN20191205162504", "NameEN": "EN20191205162504", "Gender": "F", "Birthday": "1928-12-27", "Modality": "US", "ModalityName": "NM", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:25:04.379895", "RegisterDT": "2019-12-05 16:25:04.379895", "ExamDT": "2019-12-05 16:25:04.379895", "ReportDT": "2019-12-05 16:25:04.379895", "SubmitDT": "2019-12-05 16:25:04.379895", "ApproveDT": "2019-12-05 16:25:04.379895", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205162504", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:25:04.395" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:25:04.379895", "UpdateDT": "2019-12-05 16:25:04.379895", "PatientID": "P20191205162504", "AccessionNumber": "A20191205162504", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:25:04.380" endtime="20191205 16:25:04.395"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:25:04.395" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:25:04.379895', 'UpdateDT': '2019-12-05 16:25:04.379895', 'PatientID': 'P20191205162504', 'AccessionNumber': 'A20191205162504', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:25:04.395" endtime="20191205 16:25:04.395"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:25:04.411" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:25:04.395" endtime="20191205 16:25:04.411"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:25:04.442" level="INFO">${patientID} = ['P20191205162504']</msg>
<status status="PASS" starttime="20191205 16:25:04.411" endtime="20191205 16:25:04.442"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:25:04.458" level="INFO">${Accessionnumber} = ['A20191205162504']</msg>
<status status="PASS" starttime="20191205 16:25:04.442" endtime="20191205 16:25:04.458"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:25:04.458" endtime="20191205 16:25:04.458"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:25:35.520" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205162504", "AccessionNumber": "A20191205162504", "FilmSessionLable": "20191205162504457676", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:25:35.520" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205162504", "AccessionNumber": "A20191205162504", "FilmSessionLable": "20191205162504457676", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:25:04.458" endtime="20191205 16:25:35.520"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:25:35.520" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205162504', 'AccessionNumber': 'A20191205162504', 'FilmSessionLable': '20191205162504457676', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:25:35.520" endtime="20191205 16:25:35.520"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:25:35.551" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:25:35.520" endtime="20191205 16:25:35.551"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:25:35.551" endtime="20191205 16:25:35.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create one report for patientB/ExamB. \n Expected: \n 1. The report can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:25:35.551" level="INFO">Step 3 
Description:
1. Create one report for patientB/ExamB. 
Expected: 
1. The report can archived successfully. 
</msg>
<status status="PASS" starttime="20191205 16:25:35.551" endtime="20191205 16:25:35.551"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:25:45.695" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205161000.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205162504.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205162504", "accession_number": "A20191205162504", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205162504.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:25:45.695" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205162504", "accession_number": "A20191205162504", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:25:35.551" endtime="20191205 16:25:45.695"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:25:45.695" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205162504', 'accession_number': 'A20191205162504', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:25:45.695" endtime="20191205 16:25:45.695"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:25:45.727" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:25:45.695" endtime="20191205 16:25:45.727"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:25:45.727" endtime="20191205 16:25:45.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Set the print mode to both for ExamB \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:25:45.727" level="INFO">Step 4 
Description:
1. Set the print mode to both for ExamB 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:25:45.727" endtime="20191205 16:25:45.727"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>both</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191205 16:25:45.727" level="DEBUG">reading WSDL at: http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264748, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec772647c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264908, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264988, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264a08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264a88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264ac8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264bc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264c48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264cc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264b08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264d88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264e08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264e88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264f08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264f88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77264fc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c0c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c1c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c248, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c2c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c348, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c3c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c448, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c4c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c5c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c648, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c6c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c7c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c848, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c8c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c948, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724c9c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724ca48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724cac8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724cb48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724cbc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724cc48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724ce88, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d0c8, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d248, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d2c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d488, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d6c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d848, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d8c8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724d948, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724dac8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724dcc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724dd48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec7724df08, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259188, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259208, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259308, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259388, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259408, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259448, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259548, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259808, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259a08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259c08, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259e08, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259e88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77259fc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec772949c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294d48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294348, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec772943c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294908, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294688, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294ec8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec772947c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec772946c8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294848, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294a88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294e48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294b88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294a48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">Element:0x1ec77294cc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">loaded:

schema collection
   Schema:0x1ec77264348
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x1ec772644c8 name="NotifyExamInfo"&gt;
         &lt;Complex:0x1ec77264548&gt;
            &lt;Sequence:0x1ec77264608&gt;
               &lt;Element:0x1ec77264748 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec7624b6c8 name="ExamInfo"&gt;
         &lt;Sequence:0x1ec77264508&gt;
            &lt;Element:0x1ec772647c8 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264908 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264988 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264a08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264a88 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264ac8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264bc8 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264c48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264cc8 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264b08 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264d88 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264e08 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264e88 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264f08 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264f88 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77264fc8 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c0c8 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c148 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c1c8 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c248 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c2c8 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c348 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c3c8 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c448 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c4c8 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c548 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c5c8 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c648 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c6c8 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c748 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c7c8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c848 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c8c8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c948 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724c9c8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724ca48 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724cac8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724cb48 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724cbc8 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724cc48 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec772646c8 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x1ec7724ccc8&gt;
            &lt;Sequence:0x1ec7724cd08&gt;
               &lt;Element:0x1ec7724ce88 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77264888 name="NotifyReportFile"&gt;
         &lt;Complex:0x1ec7724cd48&gt;
            &lt;Sequence:0x1ec7724cf08&gt;
               &lt;Element:0x1ec7724d0c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec7724d148 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7724d248 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7724d2c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7724ce08 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x1ec7724d348&gt;
            &lt;Sequence:0x1ec7724d388&gt;
               &lt;Element:0x1ec7724d488 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7724d088 name="SetPrintMode"&gt;
         &lt;Complex:0x1ec7724d3c8&gt;
            &lt;Sequence:0x1ec7724d508&gt;
               &lt;Element:0x1ec7724d6c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7724d748 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7724d848 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7724d8c8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7724d948 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7724d448 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x1ec7724d5c8&gt;
            &lt;Sequence:0x1ec7724d688&gt;
               &lt;Element:0x1ec7724dac8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7724d648 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x1ec7724d988&gt;
            &lt;Sequence:0x1ec7724db48&gt;
               &lt;Element:0x1ec7724dcc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec7724dd48 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7724da88 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x1ec7724dc88&gt;
            &lt;Sequence:0x1ec7724dc08&gt;
               &lt;Element:0x1ec7724df08 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec7724cfc8 name="NotifyReportInfo"&gt;
         &lt;Complex:0x1ec7724de48&gt;
            &lt;Sequence:0x1ec77259088&gt;
               &lt;Element:0x1ec77259188 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77259208 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77259308 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77259388 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77259408 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77259448 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec77259548 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec7724dec8 name="ArrayOfString"&gt;
         &lt;Sequence:0x1ec77259108&gt;
            &lt;Element:0x1ec77259148 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec7724df88 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x1ec772595c8&gt;
            &lt;Sequence:0x1ec77259688&gt;
               &lt;Element:0x1ec77259808 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77259648 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x1ec772596c8&gt;
            &lt;Sequence:0x1ec77259888&gt;
               &lt;Element:0x1ec77259a08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77259788 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x1ec77259948&gt;
            &lt;Sequence:0x1ec77259a88&gt;
               &lt;Element:0x1ec77259c08 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec772599c8 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x1ec77259b48&gt;
            &lt;Sequence:0x1ec77259c88&gt;
               &lt;Element:0x1ec77259e08 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec77259bc8 name="PatientInfoEx"&gt;
         &lt;Sequence:0x1ec77259d48&gt;
            &lt;Element:0x1ec77259e88 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77259fc8 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec772949c8 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294148 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294d48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294348 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec772943c8 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294908 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294688 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294ec8 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec772947c8 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec77259dc8 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x1ec77294fc8&gt;
            &lt;Sequence:0x1ec772941c8&gt;
               &lt;Element:0x1ec772946c8 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77259f48 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x1ec77294788&gt;
            &lt;Sequence:0x1ec77294c88&gt;
               &lt;Element:0x1ec77294848 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77294a88 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77294708 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x1ec77294608&gt;
            &lt;Sequence:0x1ec77294d88&gt;
               &lt;Element:0x1ec77294e48 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77294588 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x1ec77294988&gt;
            &lt;Sequence:0x1ec772944c8&gt;
               &lt;Element:0x1ec77294b88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec77294a48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec77294088 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x1ec77294748&gt;
            &lt;Sequence:0x1ec77294e88&gt;
               &lt;Element:0x1ec77294cc8 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">MERGED:
Schema:0x1ec77264348
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x1ec772644c8 name="NotifyExamInfo"&gt;
      &lt;Complex:0x1ec77264548&gt;
         &lt;Sequence:0x1ec77264608&gt;
            &lt;Element:0x1ec77264748 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec7624b6c8 name="ExamInfo"&gt;
      &lt;Sequence:0x1ec77264508&gt;
         &lt;Element:0x1ec772647c8 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264908 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264988 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264a08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264a88 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264ac8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264bc8 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264c48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264cc8 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264b08 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264d88 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264e08 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264e88 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264f08 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264f88 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77264fc8 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c0c8 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c148 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c1c8 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c248 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c2c8 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c348 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c3c8 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c448 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c4c8 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c548 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c5c8 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c648 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c6c8 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c748 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c7c8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c848 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c8c8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c948 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724c9c8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724ca48 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724cac8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724cb48 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724cbc8 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec7724cc48 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec772646c8 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x1ec7724ccc8&gt;
         &lt;Sequence:0x1ec7724cd08&gt;
            &lt;Element:0x1ec7724ce88 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77264888 name="NotifyReportFile"&gt;
      &lt;Complex:0x1ec7724cd48&gt;
         &lt;Sequence:0x1ec7724cf08&gt;
            &lt;Element:0x1ec7724d0c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec7724d148 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724d248 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724d2c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7724ce08 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x1ec7724d348&gt;
         &lt;Sequence:0x1ec7724d388&gt;
            &lt;Element:0x1ec7724d488 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7724d088 name="SetPrintMode"&gt;
      &lt;Complex:0x1ec7724d3c8&gt;
         &lt;Sequence:0x1ec7724d508&gt;
            &lt;Element:0x1ec7724d6c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724d748 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724d848 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724d8c8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724d948 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7724d448 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x1ec7724d5c8&gt;
         &lt;Sequence:0x1ec7724d688&gt;
            &lt;Element:0x1ec7724dac8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7724d648 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x1ec7724d988&gt;
         &lt;Sequence:0x1ec7724db48&gt;
            &lt;Element:0x1ec7724dcc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec7724dd48 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7724da88 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x1ec7724dc88&gt;
         &lt;Sequence:0x1ec7724dc08&gt;
            &lt;Element:0x1ec7724df08 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec7724cfc8 name="NotifyReportInfo"&gt;
      &lt;Complex:0x1ec7724de48&gt;
         &lt;Sequence:0x1ec77259088&gt;
            &lt;Element:0x1ec77259188 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77259208 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77259308 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77259388 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77259408 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77259448 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec77259548 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec7724dec8 name="ArrayOfString"&gt;
      &lt;Sequence:0x1ec77259108&gt;
         &lt;Element:0x1ec77259148 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec7724df88 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x1ec772595c8&gt;
         &lt;Sequence:0x1ec77259688&gt;
            &lt;Element:0x1ec77259808 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77259648 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x1ec772596c8&gt;
         &lt;Sequence:0x1ec77259888&gt;
            &lt;Element:0x1ec77259a08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77259788 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x1ec77259948&gt;
         &lt;Sequence:0x1ec77259a88&gt;
            &lt;Element:0x1ec77259c08 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec772599c8 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x1ec77259b48&gt;
         &lt;Sequence:0x1ec77259c88&gt;
            &lt;Element:0x1ec77259e08 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec77259bc8 name="PatientInfoEx"&gt;
      &lt;Sequence:0x1ec77259d48&gt;
         &lt;Element:0x1ec77259e88 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77259fc8 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec772949c8 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77294148 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77294d48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77294348 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec772943c8 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77294908 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77294688 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec77294ec8 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec772947c8 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec77259dc8 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x1ec77294fc8&gt;
         &lt;Sequence:0x1ec772941c8&gt;
            &lt;Element:0x1ec772946c8 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77259f48 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x1ec77294788&gt;
         &lt;Sequence:0x1ec77294c88&gt;
            &lt;Element:0x1ec77294848 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294a88 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77294708 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x1ec77294608&gt;
         &lt;Sequence:0x1ec77294d88&gt;
            &lt;Element:0x1ec77294e48 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77294588 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x1ec77294988&gt;
         &lt;Sequence:0x1ec772944c8&gt;
            &lt;Element:0x1ec77294b88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec77294a48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec77294088 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x1ec77294748&gt;
         &lt;Sequence:0x1ec77294e88&gt;
            &lt;Element:0x1ec77294cc8 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772644c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec772646c8 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec77264888 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724ce08 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d448 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d648 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724da88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724cfc8 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724df88 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259648 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259788 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772599c8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259dc8 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259f48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294708 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294588 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294088 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772644c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec772646c8 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec77264888 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724ce08 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d448 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d648 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724da88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724cfc8 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724df88 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259648 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259788 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772599c8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259dc8 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259f48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294708 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294588 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.742" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294088 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.758" level="DEBUG">WSDL at 'http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x1ec77304788"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC7725E2C8&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC77304E08&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC77304BC8&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC7725E2C8&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC77304E08&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC77304BC8&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x1ec77264348 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC77294B48&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772644c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyExamInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec77264888 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyReportFile' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'SetPrintMode' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d648 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724cfc8 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyReportInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259648 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772599c8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259f48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294588 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772644c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyExamInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec77264888 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyReportFile' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'SetPrintMode' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d648 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724cfc8 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyReportInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259648 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec772599c8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec77259f48 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec77294588 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575534345 (running)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77264748, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77286e48"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec77264748 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec7624b6c8 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259a08, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77286e48"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77259a08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77286e48, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724dcc8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724dcc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724dd48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724dd48 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259e08, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec77259e08 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x1ec77259bc8 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d0c8, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77286fc8"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec7724d0c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec7624b6c8 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d148, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77286fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d148 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77286fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d248, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77286fc8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d248 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77286fc8, found builtin (int)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d2c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77286fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d2c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77286fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259188, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77259188 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259208, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77259208 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259308, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77259308 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259388, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77259388 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259408, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77259408 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (int)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259448, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec77259448 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec7724dec8 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77259548, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec77259548 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec7724dec8 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77294848, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77294848 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77294a88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77294a88 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77294b88, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77294b88 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec77294a48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec77294a48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d6c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d6c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d748, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d748 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (string)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d848, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d848 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (int)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d8c8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d8c8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (int)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">Element:0x1ec7724d948, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec77287808"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724d948 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">TypeQuery:0x1ec77287808, found builtin (int)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d088 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205162504"
   type = &lt;Element:0x1ec7724d6c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e4c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76F6E3C8&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205162504"
   type = &lt;Element:0x1ec7724d6c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e4c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205162504"
   type = &lt;Element:0x1ec7724d6c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e4c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC7729D648&gt;)
&lt;suds.resolver.Frame object at 0x000001EC7729D648&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205162504"
   type = &lt;Element:0x1ec7724d6c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e4c8 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC7729D648&gt;)
</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec7724d748 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e088 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC7729D208&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec7724d748 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e088 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec7724d748 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e088 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC7729D288&gt;)
&lt;suds.resolver.Frame object at 0x000001EC7729D288&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec7724d748 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec7728e088 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC7729D288&gt;)
</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec7724d848 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e608 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC7729DDC8&gt;
content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec7724d848 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e608 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec7724d848 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e608 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC7729DE48&gt;)
&lt;suds.resolver.Frame object at 0x000001EC7729DE48&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x1ec7724d848 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e608 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC7729DE48&gt;)
</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d8c8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e888 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC772B6448&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d8c8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e888 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d8c8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e888 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC772B64C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC772B64C8&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d8c8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e888 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC772B64C8&gt;)
</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d948 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e188 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC772B6A88&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d948 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e188 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d948 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e188 /&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC772B6B08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC772B6B08&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec7724d948 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec7728e188 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC772B6B08&gt;)
</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">message for 'SetPrintMode' created: 0 (ms)</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">sending to (http://10.112.20.150/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x000001EC7728EB48&gt;</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191205 16:25:45.774" level="DEBUG">sending:
URL: http://10.112.20.150/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191205162504&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;0&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;600&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;600&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/10.0
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Thu, 05 Dec 2019 08:25:45 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">waited 15 (ms) on server reply</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec7724d448 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">Element:0x1ec7724dac8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec772bd108"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724dac8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">TypeQuery:0x1ec772bd108, found builtin (int)</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">reset</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">Element:0x1ec7724dac8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec7728a608"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec7724dac8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">TypeQuery:0x1ec7728a608, found builtin (int)</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC7728A388&gt;)
&lt;suds.resolver.Frame object at 0x000001EC7728A388&gt;</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC7728A388&gt;)
</msg>
<msg timestamp="20191205 16:25:45.789" level="DEBUG">method 'SetPrintMode' invoked: 15 (ms)</msg>
<msg timestamp="20191205 16:25:45.789" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191205162504.
Printmode.printmode_set_by_accn: Set exam print mode to [both] successfully.</msg>
<msg timestamp="20191205 16:25:45.789" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191205 16:25:45.727" endtime="20191205 16:25:45.789"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:25:45.789" endtime="20191205 16:25:45.789"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191205 16:25:55.803" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191205 16:25:45.789" endtime="20191205 16:25:55.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Wait for the holding time of film and report has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:25:55.803" level="INFO">Step 5 
Description: 
1. Wait for the holding time of film and report has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:25:55.803" endtime="20191205 16:25:55.803"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191205 16:35:45.816" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [590] seconds to make print ready arrived.</msg>
<msg timestamp="20191205 16:35:45.816" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191205 16:25:55.803" endtime="20191205 16:35:45.816"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:35:45.816" endtime="20191205 16:35:45.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191205 16:35:45.816" level="INFO">Step 6 
Description: 
1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191205 16:35:45.816" endtime="20191205 16:35:45.816"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191205 16:35:45.816" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:35:45.832" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 650</msg>
<msg timestamp="20191205 16:35:45.832" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:35:45.925" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/printtask/items?Value=A20191205162504&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 1196</msg>
<msg timestamp="20191205 16:35:45.925" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:35:45.957" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 799</msg>
<msg timestamp="20191205 16:35:45.957" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:35:45.972" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/print/15?tid=K3_Terminal01 HTTP/1.1" 200 796</msg>
<msg timestamp="20191205 16:37:19.014" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:37:19.030" level="DEBUG">http://10.112.20.150:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=2330c26aaf1f43b0999d497c12ce063a HTTP/1.1" 200 55715</msg>
<msg timestamp="20191205 16:37:19.030" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:37:19.045" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/report/15/2330c26aaf1f43b0999d497c12ce063a/1?tid=K3_Terminal01 HTTP/1.1" 200 269</msg>
<msg timestamp="20191205 16:37:29.052" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:37:29.068" level="DEBUG">http://10.112.20.150:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=9266a416c1a24ede81a0df605dae7f7d HTTP/1.1" 200 55715</msg>
<msg timestamp="20191205 16:37:29.068" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:37:29.083" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/report/15/9266a416c1a24ede81a0df605dae7f7d/1?tid=K3_Terminal01 HTTP/1.1" 200 269</msg>
<msg timestamp="20191205 16:37:39.090" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:37:39.105" level="DEBUG">http://10.112.20.150:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=99cdd921ccdf4682aa45a906200d3f90 HTTP/1.1" 200 55716</msg>
<msg timestamp="20191205 16:37:39.105" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:37:39.121" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/report/15/99cdd921ccdf4682aa45a906200d3f90/1?tid=K3_Terminal01 HTTP/1.1" 200 269</msg>
<msg timestamp="20191205 16:38:52.136" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:38:52.152" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/printtask/status/15?tid=K3_Terminal01 HTTP/1.1" 200 801</msg>
<msg timestamp="20191205 16:38:52.152" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9789,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20144,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片和报告可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":1,"ColorFilmCount":0,"ReportCount":1,"PatientInfo":{"PatientId":"P20191205162504","PatientName":"CN20191205162504","PatientGender":"F","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1,"PhotoMetric":null}],"ReportStatistics":[{"ReportID":null,"ReportPath":null,"ReportCount":1,"PageCount":0,"PaperSize":0,"PaperType":0,"ColorType":0}],"ExamItems":[{"AccessionNumber":"A20191205162504","ModalityType":"US","ModalityName":"NM","ExamName":"Exam20191205162504","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1,"PhotoMetric":"MONOCHROME2"}],"ReportInfos":[{"ReportID":"99cdd921ccdf4682aa45a906200d3f90","ReportPath":"http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=99cdd921ccdf4682aa45a906200d3f90","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0}]}],"ExamItemsOfReg":[]}}
Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"15","Status":-1,"TotalFilmCount":1,"TotalReportCount":1,"TotalColorFilmCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9789,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20144,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 15
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"TotalColorFilmCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9789,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20144,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":"15"}}}
Terminal.printtask_get_estimatetime: The estimate time is 63 of task 15 

Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=2330c26aaf1f43b0999d497c12ce063a
Terminal.printtask_report_print: The report 2330c26aaf1f43b0999d497c12ce063a print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"15","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"TotalColorFilmCount":0,"PrintedFilmCount":1,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=9266a416c1a24ede81a0df605dae7f7d
Terminal.printtask_report_print: The report 9266a416c1a24ede81a0df605dae7f7d print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"15","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"TotalColorFilmCount":0,"PrintedFilmCount":1,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.150/ImageSuite/Web/report/pdfviewer.aspx?id=99cdd921ccdf4682aa45a906200d3f90
Terminal.printtask_report_print: The report 99cdd921ccdf4682aa45a906200d3f90 print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"15","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"TotalColorFilmCount":0,"PrintedFilmCount":1,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"15","Status":4,"TotalFilmCount":1,"TotalReportCount":1,"TotalColorFilmCount":0,"PrintedFilmCount":1,"PrintedReportCount":1,"PrintedColorFilmCount":0,"EstimatedTime":63,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9788,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20143,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 15 print successfully, the task status is Printed</msg>
<msg timestamp="20191205 16:38:52.152" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191205 16:35:45.816" endtime="20191205 16:38:52.152"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:38:52.152" endtime="20191205 16:38:52.152"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:25:04.364" endtime="20191205 16:38:52.152" critical="yes"></status>
</test>
<test id="s1-t9" name="SmokeTest_009_Core_4187_04.01.03 Terminal K3 Print Workflow with one film.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:38:52.152" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:38:52.152" endtime="20191205 16:38:52.152"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191205 16:38:52.152" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:38:52.167" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 650</msg>
<msg timestamp="20191205 16:38:52.167" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9788,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20143,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191205 16:38:52.167" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191205 16:38:52.152" endtime="20191205 16:38:52.167"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191205 16:38:52.167" endtime="20191205 16:38:52.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:38:52.167" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191205 16:38:52.167" endtime="20191205 16:38:52.167"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:38:52.183" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:38:52.183" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:38:52.183" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:38:52.166965", "UpdateDT": "2019-12-05 16:38:52.166965", "PatientID": "P20191205163852", "AccessionNumber": "A20191205163852", "StudyInstanceUID": "UID20191205163852", "NameCN": "CN20191205163852", "NameEN": "EN20191205163852", "Gender": "F", "Birthday": "1989-12-12", "Modality": "OT", "ModalityName": "MG", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:38:52.166965", "RegisterDT": "2019-12-05 16:38:52.166965", "ExamDT": "2019-12-05 16:38:52.166965", "ReportDT": "2019-12-05 16:38:52.166965", "SubmitDT": "2019-12-05 16:38:52.166965", "ApproveDT": "2019-12-05 16:38:52.166965", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205163852", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:38:52.183" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:38:52.166965", "UpdateDT": "2019-12-05 16:38:52.166965", "PatientID": "P20191205163852", "AccessionNumber": "A20191205163852", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:38:52.167" endtime="20191205 16:38:52.183"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:38:52.198" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:38:52.166965', 'UpdateDT': '2019-12-05 16:38:52.166965', 'PatientID': 'P20191205163852', 'AccessionNumber': 'A20191205163852', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:38:52.183" endtime="20191205 16:38:52.198"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:38:52.214" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:38:52.198" endtime="20191205 16:38:52.214"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:38:52.245" level="INFO">${patientID} = ['P20191205163852']</msg>
<status status="PASS" starttime="20191205 16:38:52.214" endtime="20191205 16:38:52.245"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:38:52.261" level="INFO">${Accessionnumber} = ['A20191205163852']</msg>
<status status="PASS" starttime="20191205 16:38:52.245" endtime="20191205 16:38:52.261"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:38:52.261" endtime="20191205 16:38:52.261"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:39:23.668" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205163852", "AccessionNumber": "A20191205163852", "FilmSessionLable": "20191205163852261052", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:39:23.668" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205163852", "AccessionNumber": "A20191205163852", "FilmSessionLable": "20191205163852261052", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:38:52.261" endtime="20191205 16:39:23.668"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:39:23.668" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205163852', 'AccessionNumber': 'A20191205163852', 'FilmSessionLable': '20191205163852261052', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:39:23.668" endtime="20191205 16:39:23.668"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:39:23.700" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:39:23.668" endtime="20191205 16:39:23.700"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:39:23.700" endtime="20191205 16:39:23.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Set the print mode to Film only for ExamB \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:39:23.700" level="INFO">Step 3 
Description:
1. Set the print mode to Film only for ExamB 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:39:23.700" endtime="20191205 16:39:23.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191205 16:39:33.703" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191205 16:39:23.700" endtime="20191205 16:39:33.703"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>film</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191205 16:39:33.703" level="DEBUG">reading WSDL at: http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7a48, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7ac8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7c08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7c88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7d08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7d88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7dc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7ec8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7f48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7fc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe7e08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe30c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe31c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3248, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe32c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3348, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe33c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3448, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe34c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe35c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3648, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe36c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3748, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe37c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3848, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe38c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3948, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe39c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3a48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3ac8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3b48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3bc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3c48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3cc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3d48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3dc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3e48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3ec8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe3f48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe51c8, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe53c8, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5448, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5548, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe55c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5788, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe59c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5a48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5b48, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5bc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5c48, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5dc8, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe5fc8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1088, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1248, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1488, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1508, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1608, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1688, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1708, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1748, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1848, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1448, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1b08, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1d08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fe1f08, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0508, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0148, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0188, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0248, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0548, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0388, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0588, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd00c8, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0a88, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0b08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0088, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0688, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0f08, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0d48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0a48, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd0c08, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd1088, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd1108, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.719" level="DEBUG">Element:0x1ec76fd1308, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">loaded:

schema collection
   Schema:0x1ec76fe7648
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x1ec76fe77c8 name="NotifyExamInfo"&gt;
         &lt;Complex:0x1ec76fe7848&gt;
            &lt;Sequence:0x1ec76fe7908&gt;
               &lt;Element:0x1ec76fe7a48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec77313148 name="ExamInfo"&gt;
         &lt;Sequence:0x1ec76fe7808&gt;
            &lt;Element:0x1ec76fe7ac8 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7c08 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7c88 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7d08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7d88 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7dc8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7ec8 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7f48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7fc8 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe7e08 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe30c8 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3148 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe31c8 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3248 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe32c8 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3348 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe33c8 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3448 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe34c8 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3548 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe35c8 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3648 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe36c8 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3748 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe37c8 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3848 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe38c8 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3948 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe39c8 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3a48 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3ac8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3b48 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3bc8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3c48 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3cc8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3d48 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3dc8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3e48 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3ec8 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe3f48 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76fe79c8 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x1ec76fe7b88&gt;
            &lt;Sequence:0x1ec76fe5088&gt;
               &lt;Element:0x1ec76fe51c8 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe3fc8 name="NotifyReportFile"&gt;
         &lt;Complex:0x1ec76fe5048&gt;
            &lt;Sequence:0x1ec76fe5248&gt;
               &lt;Element:0x1ec76fe53c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec76fe5448 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe5548 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe55c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe5148 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x1ec76fe5648&gt;
            &lt;Sequence:0x1ec76fe5688&gt;
               &lt;Element:0x1ec76fe5788 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe5308 name="SetPrintMode"&gt;
         &lt;Complex:0x1ec76fe56c8&gt;
            &lt;Sequence:0x1ec76fe5808&gt;
               &lt;Element:0x1ec76fe59c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe5a48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe5b48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe5bc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe5c48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe5748 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x1ec76fe58c8&gt;
            &lt;Sequence:0x1ec76fe5988&gt;
               &lt;Element:0x1ec76fe5dc8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe5948 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x1ec76fe5c88&gt;
            &lt;Sequence:0x1ec76fe5e48&gt;
               &lt;Element:0x1ec76fe5fc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe1088 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe5d88 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x1ec76fe5f88&gt;
            &lt;Sequence:0x1ec76fe1188&gt;
               &lt;Element:0x1ec76fe1248 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe5388 name="NotifyReportInfo"&gt;
         &lt;Complex:0x1ec76fe1208&gt;
            &lt;Sequence:0x1ec76fe12c8&gt;
               &lt;Element:0x1ec76fe1488 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe1508 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe1608 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe1688 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe1708 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fe1748 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x1ec76fe1848 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76fe5f08 name="ArrayOfString"&gt;
         &lt;Sequence:0x1ec76fe1388&gt;
            &lt;Element:0x1ec76fe1448 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76fe1408 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x1ec76fe18c8&gt;
            &lt;Sequence:0x1ec76fe1988&gt;
               &lt;Element:0x1ec76fe1b08 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe1948 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x1ec76fe19c8&gt;
            &lt;Sequence:0x1ec76fe1b88&gt;
               &lt;Element:0x1ec76fe1d08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe1a88 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x1ec76fe1c48&gt;
            &lt;Sequence:0x1ec76fe1d88&gt;
               &lt;Element:0x1ec76fe1f08 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fe1cc8 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x1ec76fe1e48&gt;
            &lt;Sequence:0x1ec76fd0448&gt;
               &lt;Element:0x1ec76fd0508 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x1ec76fe1ec8 name="PatientInfoEx"&gt;
         &lt;Sequence:0x1ec76fd04c8&gt;
            &lt;Element:0x1ec76fd0148 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0188 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0248 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0548 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0388 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0588 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd00c8 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0a88 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0b08 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0088 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0688 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x1ec76fe1f88 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x1ec76fd0288&gt;
            &lt;Sequence:0x1ec76fd0748&gt;
               &lt;Element:0x1ec76fd0f08 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fd0708 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x1ec76fd0788&gt;
            &lt;Sequence:0x1ec76fd0948&gt;
               &lt;Element:0x1ec76fd0d48 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fd0a48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fd0848 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x1ec76fd0c48&gt;
            &lt;Sequence:0x1ec76fd0d88&gt;
               &lt;Element:0x1ec76fd0c08 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fd0888 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x1ec76fd0e88&gt;
            &lt;Sequence:0x1ec76fd0c88&gt;
               &lt;Element:0x1ec76fd1088 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x1ec76fd1108 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x1ec76fd0e48 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x1ec76fd0ec8&gt;
            &lt;Sequence:0x1ec76fd1208&gt;
               &lt;Element:0x1ec76fd1308 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">MERGED:
Schema:0x1ec76fe7648
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="HospitalDistrict" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x1ec76fe77c8 name="NotifyExamInfo"&gt;
      &lt;Complex:0x1ec76fe7848&gt;
         &lt;Sequence:0x1ec76fe7908&gt;
            &lt;Element:0x1ec76fe7a48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec77313148 name="ExamInfo"&gt;
      &lt;Sequence:0x1ec76fe7808&gt;
         &lt;Element:0x1ec76fe7ac8 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7c08 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7c88 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7d08 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7d88 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7dc8 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7ec8 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7f48 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7fc8 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe7e08 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe30c8 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3148 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe31c8 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3248 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe32c8 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3348 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe33c8 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3448 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe34c8 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3548 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe35c8 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3648 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe36c8 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3748 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe37c8 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3848 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe38c8 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3948 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe39c8 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3a48 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3ac8 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3b48 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3bc8 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3c48 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3cc8 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3d48 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3dc8 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3e48 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3ec8 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fe3f48 name="HospitalDistrict" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76fe79c8 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x1ec76fe7b88&gt;
         &lt;Sequence:0x1ec76fe5088&gt;
            &lt;Element:0x1ec76fe51c8 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe3fc8 name="NotifyReportFile"&gt;
      &lt;Complex:0x1ec76fe5048&gt;
         &lt;Sequence:0x1ec76fe5248&gt;
            &lt;Element:0x1ec76fe53c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec76fe5448 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe5548 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe55c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe5148 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x1ec76fe5648&gt;
         &lt;Sequence:0x1ec76fe5688&gt;
            &lt;Element:0x1ec76fe5788 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe5308 name="SetPrintMode"&gt;
      &lt;Complex:0x1ec76fe56c8&gt;
         &lt;Sequence:0x1ec76fe5808&gt;
            &lt;Element:0x1ec76fe59c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe5a48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe5b48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe5bc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe5c48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe5748 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x1ec76fe58c8&gt;
         &lt;Sequence:0x1ec76fe5988&gt;
            &lt;Element:0x1ec76fe5dc8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe5948 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x1ec76fe5c88&gt;
         &lt;Sequence:0x1ec76fe5e48&gt;
            &lt;Element:0x1ec76fe5fc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe1088 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe5d88 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x1ec76fe5f88&gt;
         &lt;Sequence:0x1ec76fe1188&gt;
            &lt;Element:0x1ec76fe1248 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe5388 name="NotifyReportInfo"&gt;
      &lt;Complex:0x1ec76fe1208&gt;
         &lt;Sequence:0x1ec76fe12c8&gt;
            &lt;Element:0x1ec76fe1488 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe1508 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe1608 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe1688 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe1708 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fe1748 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x1ec76fe1848 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76fe5f08 name="ArrayOfString"&gt;
      &lt;Sequence:0x1ec76fe1388&gt;
         &lt;Element:0x1ec76fe1448 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76fe1408 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x1ec76fe18c8&gt;
         &lt;Sequence:0x1ec76fe1988&gt;
            &lt;Element:0x1ec76fe1b08 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe1948 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x1ec76fe19c8&gt;
         &lt;Sequence:0x1ec76fe1b88&gt;
            &lt;Element:0x1ec76fe1d08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe1a88 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x1ec76fe1c48&gt;
         &lt;Sequence:0x1ec76fe1d88&gt;
            &lt;Element:0x1ec76fe1f08 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fe1cc8 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x1ec76fe1e48&gt;
         &lt;Sequence:0x1ec76fd0448&gt;
            &lt;Element:0x1ec76fd0508 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x1ec76fe1ec8 name="PatientInfoEx"&gt;
      &lt;Sequence:0x1ec76fd04c8&gt;
         &lt;Element:0x1ec76fd0148 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0188 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0248 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0548 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0388 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0588 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd00c8 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0a88 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0b08 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0088 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x1ec76fd0688 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x1ec76fe1f88 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x1ec76fd0288&gt;
         &lt;Sequence:0x1ec76fd0748&gt;
            &lt;Element:0x1ec76fd0f08 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fd0708 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x1ec76fd0788&gt;
         &lt;Sequence:0x1ec76fd0948&gt;
            &lt;Element:0x1ec76fd0d48 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd0a48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fd0848 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x1ec76fd0c48&gt;
         &lt;Sequence:0x1ec76fd0d88&gt;
            &lt;Element:0x1ec76fd0c08 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fd0888 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x1ec76fd0e88&gt;
         &lt;Sequence:0x1ec76fd0c88&gt;
            &lt;Element:0x1ec76fd1088 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x1ec76fd1108 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x1ec76fd0e48 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x1ec76fd0ec8&gt;
         &lt;Sequence:0x1ec76fd1208&gt;
            &lt;Element:0x1ec76fd1308 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe77c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe79c8 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe3fc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5148 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5308 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5748 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5948 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5d88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5388 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1408 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1948 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1a88 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1cc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1f88 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0708 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0848 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0888 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0e48 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe77c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe79c8 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe3fc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5148 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5308 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5748 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5948 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5d88 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5388 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1408 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1948 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1a88 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1cc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1f88 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0708 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0848 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0888 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.734" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0e48 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">WSDL at 'http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x1ec772ff608"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC772BA108&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC772FFF48&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC772BA748&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x000001EC772BA108&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x000001EC772FFF48&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x000001EC75C74CC8&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x000001EC772BA748&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x1ec76fe7648 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.150/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x000001EC76FD0E08&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe77c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyExamInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe3fc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyReportFile' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5308 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'SetPrintMode' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5948 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5388 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyReportInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1948 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1cc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0708 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0888 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe77c8 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyExamInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe3fc8 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191205 16:39:33.750" level="DEBUG">method 'NotifyReportFile' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5308 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">method 'SetPrintMode' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5948 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">method 'NotifyFilmInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5388 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">method 'NotifyReportInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1948 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe1cc8 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">method 'NotifyPatientInfo' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0708 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fd0888 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1575535173 (running)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe7a48, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76fe7a48 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec77313148 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1d08, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe1d08 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe5fc8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5fc8 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1088, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe1088 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fd0508, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76fd0508 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76fe1ec8 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe53c8, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1ac8"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76fe53c8 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x1ec77313148 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe5448, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1ac8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5448 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1ac8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe5548, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1ac8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5548 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1ac8, found builtin (int)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe55c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1ac8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe55c8 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1ac8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1488, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe1488 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1508, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe1508 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1608, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe1608 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1688, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe1688 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1708, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe1708 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (int)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1748, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76fe1748 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76fe5f08 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe1848, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x1ec76fe1848 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x1ec76fe5f08 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fd0d48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fd0d48 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fd0a48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fd0a48 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fd1088, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fd1088 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fd1108, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fd1108 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe59c8, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe59c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe5a48, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5a48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (string)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe5b48, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5b48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (int)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe5bc8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5bc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (int)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">Element:0x1ec76fe5c48, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fc1fc8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5c48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">TypeQuery:0x1ec76fc1fc8, found builtin (int)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5308 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5308 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205163852"
   type = &lt;Element:0x1ec76fe59c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa408 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC772ADE48&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205163852"
   type = &lt;Element:0x1ec76fe59c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa408 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205163852"
   type = &lt;Element:0x1ec76fe59c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa408 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F88748&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F88748&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191205163852"
   type = &lt;Element:0x1ec76fe59c8 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa408 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F88748&gt;)
</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76fe5a48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa288 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76F88388&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76fe5a48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa288 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76fe5a48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa288 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F88408&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F88408&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x1ec76fe5a48 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x1ec76faa288 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F88408&gt;)
</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x1ec76fe5b48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa708 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76F88EC8&gt;
content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x1ec76fe5b48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa708 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x1ec76fe5b48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa708 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F88F48&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F88F48&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x1ec76fe5b48 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa708 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F88F48&gt;)
</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5bc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa988 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76F8D548&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5bc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa988 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5bc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa988 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F8D5C8&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F8D5C8&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5bc8 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa988 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F8D5C8&gt;)
</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5c48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa3c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x000001EC76F8DB88&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5c48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa3c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5c48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa3c8 /&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76F8DC08&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76F8DC08&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "600"
   type = &lt;Element:0x1ec76fe5c48 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x1ec76faa3c8 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76F8DC08&gt;)
</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">message for 'SetPrintMode' created: 0 (ms)</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">sending to (http://10.112.20.150/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x000001EC76FAAC48&gt;</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191205 16:39:33.765" level="DEBUG">sending:
URL: http://10.112.20.150/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191205163852&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;1&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;600&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;600&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/10.0
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Thu, 05 Dec 2019 08:39:33 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">waited 15 (ms) on server reply</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x1ec76fe5748 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">Element:0x1ec76fe5dc8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fb6b48"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5dc8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">TypeQuery:0x1ec76fb6b48, found builtin (int)</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">reset</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">Element:0x1ec76fe5dc8, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x1ec76fb26c8"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x1ec76fe5dc8 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">TypeQuery:0x1ec76fb26c8, found builtin (int)</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x000001EC76FB2448&gt;)
&lt;suds.resolver.Frame object at 0x000001EC76FB2448&gt;</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x000001EC76FB2448&gt;)
</msg>
<msg timestamp="20191205 16:39:33.781" level="DEBUG">method 'SetPrintMode' invoked: 15 (ms)</msg>
<msg timestamp="20191205 16:39:33.781" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191205163852.
Printmode.printmode_set_by_accn: Set exam print mode to [film] successfully.</msg>
<msg timestamp="20191205 16:39:33.781" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191205 16:39:33.703" endtime="20191205 16:39:33.781"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:39:33.781" endtime="20191205 16:39:33.781"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191205 16:39:43.796" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191205 16:39:33.781" endtime="20191205 16:39:43.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Wait for the holding time of film has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:39:43.796" level="INFO">Step 4 
Description: 
1. Wait for the holding time of film has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:39:43.796" endtime="20191205 16:39:43.796"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191205 16:49:30.808" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [587] seconds to make print ready arrived.</msg>
<msg timestamp="20191205 16:49:30.808" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191205 16:39:43.796" endtime="20191205 16:49:30.808"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:49:30.808" endtime="20191205 16:49:30.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1.Print the prepared exam with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191205 16:49:30.808" level="INFO">Step 5 
Description: 
1.Print the prepared exam with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191205 16:49:30.808" endtime="20191205 16:49:30.808"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191205 16:49:30.808" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:49:30.823" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 650</msg>
<msg timestamp="20191205 16:49:30.823" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:49:30.933" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/printtask/items?Value=A20191205163852&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 862</msg>
<msg timestamp="20191205 16:49:30.933" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:49:30.979" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 799</msg>
<msg timestamp="20191205 16:49:30.979" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:49:30.995" level="DEBUG">http://10.112.20.150:80 "POST /EHDPS/printtask/print/16?tid=K3_Terminal01 HTTP/1.1" 200 796</msg>
<msg timestamp="20191205 16:52:07.023" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:52:07.038" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/printtask/status/16?tid=K3_Terminal01 HTTP/1.1" 200 801</msg>
<msg timestamp="20191205 16:52:07.038" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9788,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20143,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":1,"ColorFilmCount":0,"ReportCount":0,"PatientInfo":{"PatientId":"P20191205163852","PatientName":"CN20191205163852","PatientGender":"F","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1,"PhotoMetric":null}],"ReportStatistics":[],"ExamItems":[{"AccessionNumber":"A20191205163852","ModalityType":"OT","ModalityName":"DCMPSTATE1","ExamName":"Exam20191205163852","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1,"PhotoMetric":"MONOCHROME2"}],"ReportInfos":null}],"ExamItemsOfReg":[]}}
Terminal.printtask_report_getinfo: No report to print. [A20191205163852]
Terminal.terminal_print_with_cardinfo: There are no report need to print for the patient.

Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"16","Status":-1,"TotalFilmCount":1,"TotalReportCount":0,"TotalColorFilmCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9788,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20143,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 16
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"TotalColorFilmCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9788,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20143,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":"16"}}}
Terminal.printtask_get_estimatetime: The estimate time is 63 of task 16 

Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"16","Status":4,"TotalFilmCount":1,"TotalReportCount":0,"TotalColorFilmCount":0,"PrintedFilmCount":1,"PrintedReportCount":0,"PrintedColorFilmCount":0,"EstimatedTime":63,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9787,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20142,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":null}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 16 print successfully, the task status is Printed</msg>
<msg timestamp="20191205 16:52:07.038" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191205 16:49:30.808" endtime="20191205 16:52:07.038"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:52:07.038" endtime="20191205 16:52:07.038"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:38:52.152" endtime="20191205 16:52:07.038" critical="yes"></status>
</test>
<test id="s1-t10" name="SmokeTest_010_Core_4179_05.01.01 Central Print multi patients with custom terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:52:07.038" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 16:52:07.038" endtime="20191205 16:52:07.038"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191205 16:52:07.038" level="INFO">${exam_count} = 5</msg>
<status status="PASS" starttime="20191205 16:52:07.038" endtime="20191205 16:52:07.038"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>Customer_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191205 16:52:07.038" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:52:07.054" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=Customer_Terminal01 HTTP/1.1" 200 662</msg>
<msg timestamp="20191205 16:52:07.054" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"Customer_Terminal01","Status":0,"Type":1,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9787,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20142,"IsPrinting":false,"TerminalId":"Customer_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191205 16:52:07.054" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191205 16:52:07.038" endtime="20191205 16:52:07.054"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191205 16:52:07.054" endtime="20191205 16:52:07.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191205 16:52:07.054" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191205 16:52:07.054" endtime="20191205 16:52:07.054"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191205 16:52:07.054" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191205 16:52:07.054" endtime="20191205 16:52:07.054"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191205 16:52:07.070" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191205 16:52:07.054" endtime="20191205 16:52:07.070"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:52:07.070" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:52:07.070" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:52:07.085" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:52:07.069562", "UpdateDT": "2019-12-05 16:52:07.069562", "PatientID": "P20191205165207", "AccessionNumber": "A20191205165207", "StudyInstanceUID": "UID20191205165207", "NameCN": "CN20191205165207", "NameEN": "EN20191205165207", "Gender": "M", "Birthday": "1960-12-19", "Modality": "IO", "ModalityName": "DX", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:52:07.069562", "RegisterDT": "2019-12-05 16:52:07.069562", "ExamDT": "2019-12-05 16:52:07.069562", "ReportDT": "2019-12-05 16:52:07.069562", "SubmitDT": "2019-12-05 16:52:07.069562", "ApproveDT": "2019-12-05 16:52:07.069562", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205165207", "ExamBodyPart": "Lung", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:52:07.085" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:52:07.069562", "UpdateDT": "2019-12-05 16:52:07.069562", "PatientID": "P20191205165207", "AccessionNumber": "A20191205165207", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:52:07.070" endtime="20191205 16:52:07.085"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:52:07.085" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:52:07.069562', 'UpdateDT': '2019-12-05 16:52:07.069562', 'PatientID': 'P20191205165207', 'AccessionNumber': 'A20191205165207', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:52:07.085" endtime="20191205 16:52:07.085"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:52:07.116" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:52:07.085" endtime="20191205 16:52:07.116"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:52:07.132" level="INFO">${patientID} = ['P20191205165207']</msg>
<status status="PASS" starttime="20191205 16:52:07.116" endtime="20191205 16:52:07.132"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:52:07.148" level="INFO">${Accessionnumber} = ['A20191205165207']</msg>
<status status="PASS" starttime="20191205 16:52:07.132" endtime="20191205 16:52:07.148"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:52:07.148" endtime="20191205 16:52:07.148"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:52:38.236" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205165207", "AccessionNumber": "A20191205165207", "FilmSessionLable": "20191205165207147742", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:52:38.236" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205165207", "AccessionNumber": "A20191205165207", "FilmSessionLable": "20191205165207147742", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:52:07.148" endtime="20191205 16:52:38.236"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:52:38.236" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205165207', 'AccessionNumber': 'A20191205165207', 'FilmSessionLable': '20191205165207147742', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:52:38.236" endtime="20191205 16:52:38.236"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:52:38.267" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:52:38.236" endtime="20191205 16:52:38.267"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:52:38.267" endtime="20191205 16:52:38.267"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:52:48.481" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205162504.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165207.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165207", "accession_number": "A20191205165207", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205165207.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:52:48.481" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165207", "accession_number": "A20191205165207", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:52:38.267" endtime="20191205 16:52:48.481"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:52:48.481" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205165207', 'accession_number': 'A20191205165207', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:52:48.481" endtime="20191205 16:52:48.481"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:52:48.512" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:52:48.481" endtime="20191205 16:52:48.512"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:52:48.512" endtime="20191205 16:52:48.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191205 16:52:48.512" level="INFO">A20191205165207</msg>
<status status="PASS" starttime="20191205 16:52:48.512" endtime="20191205 16:52:48.512"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:52:48.512" endtime="20191205 16:52:48.512"></status>
</kw>
<status status="PASS" starttime="20191205 16:52:07.070" endtime="20191205 16:52:48.512"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:52:48.512" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:52:48.527" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:52:48.527" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:52:48.512110", "UpdateDT": "2019-12-05 16:52:48.512110", "PatientID": "P20191205165248", "AccessionNumber": "A20191205165248", "StudyInstanceUID": "UID20191205165248", "NameCN": "CN20191205165248", "NameEN": "EN20191205165248", "Gender": "F", "Birthday": "1975-12-16", "Modality": "DR", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:52:48.512110", "RegisterDT": "2019-12-05 16:52:48.512110", "ExamDT": "2019-12-05 16:52:48.512110", "ReportDT": "2019-12-05 16:52:48.512110", "SubmitDT": "2019-12-05 16:52:48.512110", "ApproveDT": "2019-12-05 16:52:48.512110", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205165248", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:52:48.527" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:52:48.512110", "UpdateDT": "2019-12-05 16:52:48.512110", "PatientID": "P20191205165248", "AccessionNumber": "A20191205165248", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:52:48.512" endtime="20191205 16:52:48.527"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:52:48.527" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:52:48.512110', 'UpdateDT': '2019-12-05 16:52:48.512110', 'PatientID': 'P20191205165248', 'AccessionNumber': 'A20191205165248', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:52:48.527" endtime="20191205 16:52:48.527"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:52:48.543" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:52:48.527" endtime="20191205 16:52:48.543"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:52:48.559" level="INFO">${patientID} = ['P20191205165248']</msg>
<status status="PASS" starttime="20191205 16:52:48.543" endtime="20191205 16:52:48.559"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:52:48.574" level="INFO">${Accessionnumber} = ['A20191205165248']</msg>
<status status="PASS" starttime="20191205 16:52:48.559" endtime="20191205 16:52:48.574"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:52:48.574" endtime="20191205 16:52:48.574"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:53:19.777" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205165248", "AccessionNumber": "A20191205165248", "FilmSessionLable": "20191205165248574266", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:53:19.777" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205165248", "AccessionNumber": "A20191205165248", "FilmSessionLable": "20191205165248574266", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:52:48.574" endtime="20191205 16:53:19.777"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:53:19.777" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205165248', 'AccessionNumber': 'A20191205165248', 'FilmSessionLable': '20191205165248574266', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:53:19.777" endtime="20191205 16:53:19.777"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:53:19.808" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:53:19.777" endtime="20191205 16:53:19.808"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:53:19.808" endtime="20191205 16:53:19.808"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:53:30.016" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165207.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165248.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165248", "accession_number": "A20191205165248", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205165248.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:53:30.016" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165248", "accession_number": "A20191205165248", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:53:19.808" endtime="20191205 16:53:30.016"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:53:30.016" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205165248', 'accession_number': 'A20191205165248', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:53:30.016" endtime="20191205 16:53:30.016"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:53:30.047" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:53:30.016" endtime="20191205 16:53:30.047"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:53:30.047" endtime="20191205 16:53:30.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191205 16:53:30.047" level="INFO">A20191205165248</msg>
<status status="PASS" starttime="20191205 16:53:30.047" endtime="20191205 16:53:30.047"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:53:30.047" endtime="20191205 16:53:30.047"></status>
</kw>
<status status="PASS" starttime="20191205 16:52:48.512" endtime="20191205 16:53:30.047"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:53:30.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:53:30.062" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:53:30.062" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:53:30.047076", "UpdateDT": "2019-12-05 16:53:30.047076", "PatientID": "P20191205165330", "AccessionNumber": "A20191205165330", "StudyInstanceUID": "UID20191205165330", "NameCN": "CN20191205165330", "NameEN": "EN20191205165330", "Gender": "M", "Birthday": "1928-12-27", "Modality": "US", "ModalityName": "IO", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:53:30.047076", "RegisterDT": "2019-12-05 16:53:30.047076", "ExamDT": "2019-12-05 16:53:30.047076", "ReportDT": "2019-12-05 16:53:30.047076", "SubmitDT": "2019-12-05 16:53:30.047076", "ApproveDT": "2019-12-05 16:53:30.047076", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205165330", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:53:30.062" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:53:30.047076", "UpdateDT": "2019-12-05 16:53:30.047076", "PatientID": "P20191205165330", "AccessionNumber": "A20191205165330", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:53:30.047" endtime="20191205 16:53:30.062"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:53:30.062" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:53:30.047076', 'UpdateDT': '2019-12-05 16:53:30.047076', 'PatientID': 'P20191205165330', 'AccessionNumber': 'A20191205165330', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:53:30.062" endtime="20191205 16:53:30.062"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:53:30.110" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:53:30.062" endtime="20191205 16:53:30.110"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:53:30.125" level="INFO">${patientID} = ['P20191205165330']</msg>
<status status="PASS" starttime="20191205 16:53:30.110" endtime="20191205 16:53:30.125"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:53:30.141" level="INFO">${Accessionnumber} = ['A20191205165330']</msg>
<status status="PASS" starttime="20191205 16:53:30.125" endtime="20191205 16:53:30.141"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:53:30.141" endtime="20191205 16:53:30.141"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:54:01.237" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205165330", "AccessionNumber": "A20191205165330", "FilmSessionLable": "20191205165330140822", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:54:01.237" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205165330", "AccessionNumber": "A20191205165330", "FilmSessionLable": "20191205165330140822", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:53:30.141" endtime="20191205 16:54:01.237"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:54:01.237" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205165330', 'AccessionNumber': 'A20191205165330', 'FilmSessionLable': '20191205165330140822', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:54:01.237" endtime="20191205 16:54:01.237"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:54:01.268" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:54:01.237" endtime="20191205 16:54:01.268"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:01.268" endtime="20191205 16:54:01.268"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:54:11.441" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165248.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165330.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165330", "accession_number": "A20191205165330", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205165330.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:54:11.441" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165330", "accession_number": "A20191205165330", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:54:01.268" endtime="20191205 16:54:11.441"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:54:11.441" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205165330', 'accession_number': 'A20191205165330', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:54:11.441" endtime="20191205 16:54:11.441"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:54:11.472" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:54:11.441" endtime="20191205 16:54:11.472"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:11.472" endtime="20191205 16:54:11.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191205 16:54:11.472" level="INFO">A20191205165330</msg>
<status status="PASS" starttime="20191205 16:54:11.472" endtime="20191205 16:54:11.472"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:11.472" endtime="20191205 16:54:11.472"></status>
</kw>
<status status="PASS" starttime="20191205 16:53:30.047" endtime="20191205 16:54:11.472"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:54:11.472" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:54:11.488" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:54:11.488" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:54:11.472318", "UpdateDT": "2019-12-05 16:54:11.472318", "PatientID": "P20191205165411", "AccessionNumber": "A20191205165411", "StudyInstanceUID": "UID20191205165411", "NameCN": "CN20191205165411", "NameEN": "EN20191205165411", "Gender": "F", "Birthday": "2006-12-08", "Modality": "MG", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:54:11.472318", "RegisterDT": "2019-12-05 16:54:11.472318", "ExamDT": "2019-12-05 16:54:11.472318", "ReportDT": "2019-12-05 16:54:11.472318", "SubmitDT": "2019-12-05 16:54:11.472318", "ApproveDT": "2019-12-05 16:54:11.472318", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205165411", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:54:11.488" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:54:11.472318", "UpdateDT": "2019-12-05 16:54:11.472318", "PatientID": "P20191205165411", "AccessionNumber": "A20191205165411", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:54:11.472" endtime="20191205 16:54:11.488"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:54:11.488" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:54:11.472318', 'UpdateDT': '2019-12-05 16:54:11.472318', 'PatientID': 'P20191205165411', 'AccessionNumber': 'A20191205165411', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:54:11.488" endtime="20191205 16:54:11.488"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:54:11.503" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:54:11.488" endtime="20191205 16:54:11.503"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:54:11.519" level="INFO">${patientID} = ['P20191205165411']</msg>
<status status="PASS" starttime="20191205 16:54:11.503" endtime="20191205 16:54:11.519"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:54:11.534" level="INFO">${Accessionnumber} = ['A20191205165411']</msg>
<status status="PASS" starttime="20191205 16:54:11.519" endtime="20191205 16:54:11.534"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:11.534" endtime="20191205 16:54:11.534"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:54:42.605" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205165411", "AccessionNumber": "A20191205165411", "FilmSessionLable": "20191205165411534476", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:54:42.605" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205165411", "AccessionNumber": "A20191205165411", "FilmSessionLable": "20191205165411534476", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:54:11.534" endtime="20191205 16:54:42.605"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:54:42.605" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205165411', 'AccessionNumber': 'A20191205165411', 'FilmSessionLable': '20191205165411534476', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:54:42.605" endtime="20191205 16:54:42.605"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:54:42.636" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:54:42.605" endtime="20191205 16:54:42.636"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:42.636" endtime="20191205 16:54:42.636"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:54:52.809" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165330.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165411.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       3
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165411", "accession_number": "A20191205165411", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205165411.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:54:52.809" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165411", "accession_number": "A20191205165411", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:54:42.636" endtime="20191205 16:54:52.809"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:54:52.809" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205165411', 'accession_number': 'A20191205165411', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:54:52.809" endtime="20191205 16:54:52.809"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:54:52.840" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:54:52.809" endtime="20191205 16:54:52.840"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:52.840" endtime="20191205 16:54:52.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191205 16:54:52.840" level="INFO">A20191205165411</msg>
<status status="PASS" starttime="20191205 16:54:52.840" endtime="20191205 16:54:52.840"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:52.840" endtime="20191205 16:54:52.840"></status>
</kw>
<status status="PASS" starttime="20191205 16:54:11.472" endtime="20191205 16:54:52.840"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 16:54:52.840" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:54:52.855" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 16:54:52.855" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 16:54:52.839777", "UpdateDT": "2019-12-05 16:54:52.839777", "PatientID": "P20191205165452", "AccessionNumber": "A20191205165452", "StudyInstanceUID": "UID20191205165452", "NameCN": "CN20191205165452", "NameEN": "EN20191205165452", "Gender": "F", "Birthday": "1932-12-26", "Modality": "MG", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 16:54:52.839777", "RegisterDT": "2019-12-05 16:54:52.839777", "ExamDT": "2019-12-05 16:54:52.839777", "ReportDT": "2019-12-05 16:54:52.839777", "SubmitDT": "2019-12-05 16:54:52.839777", "ApproveDT": "2019-12-05 16:54:52.839777", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205165452", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 16:54:52.855" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 16:54:52.839777", "UpdateDT": "2019-12-05 16:54:52.839777", "PatientID": "P20191205165452", "AccessionNumber": "A20191205165452", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 16:54:52.840" endtime="20191205 16:54:52.855"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 16:54:52.855" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 16:54:52.839777', 'UpdateDT': '2019-12-05 16:54:52.839777', 'PatientID': 'P20191205165452', 'AccessionNumber': 'A20191205165452', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 16:54:52.855" endtime="20191205 16:54:52.855"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 16:54:52.871" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 16:54:52.855" endtime="20191205 16:54:52.871"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 16:54:52.887" level="INFO">${patientID} = ['P20191205165452']</msg>
<status status="PASS" starttime="20191205 16:54:52.871" endtime="20191205 16:54:52.887"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 16:54:52.902" level="INFO">${Accessionnumber} = ['A20191205165452']</msg>
<status status="PASS" starttime="20191205 16:54:52.887" endtime="20191205 16:54:52.902"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:54:52.902" endtime="20191205 16:54:52.902"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 16:55:24.018" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205165452", "AccessionNumber": "A20191205165452", "FilmSessionLable": "20191205165452902271", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 16:55:24.018" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205165452", "AccessionNumber": "A20191205165452", "FilmSessionLable": "20191205165452902271", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:54:52.902" endtime="20191205 16:55:24.018"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 16:55:24.018" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205165452', 'AccessionNumber': 'A20191205165452', 'FilmSessionLable': '20191205165452902271', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 16:55:24.018" endtime="20191205 16:55:24.018"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 16:55:24.049" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 16:55:24.018" endtime="20191205 16:55:24.049"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:24.049" endtime="20191205 16:55:24.049"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 16:55:34.277" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165411.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165452.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165452", "accession_number": "A20191205165452", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205165452.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 16:55:34.277" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205165452", "accession_number": "A20191205165452", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:55:24.049" endtime="20191205 16:55:34.277"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 16:55:34.277" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205165452', 'accession_number': 'A20191205165452', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 16:55:34.277" endtime="20191205 16:55:34.277"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 16:55:34.308" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 16:55:34.277" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191205 16:55:34.308" level="INFO">A20191205165452</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<status status="PASS" starttime="20191205 16:54:52.840" endtime="20191205 16:55:34.308"></status>
</kw>
<status status="PASS" starttime="20191205 16:52:07.070" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${list_Accn}</arg>
</arguments>
<msg timestamp="20191205 16:55:34.308" level="INFO">['A20191205165207', 'A20191205165248', 'A20191205165330', 'A20191205165411', 'A20191205165452']</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Report_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191205 16:55:34.308" level="INFO">${Report_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Film_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191205 16:55:34.308" level="INFO">${Film_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 16:55:34.308" level="INFO">${ACCN} = A20191205165207</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 16:55:34.308" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165207", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam20191205165207", "BodyPart": nu...</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 16:55:34.308" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165207', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam20191205165207', 'BodyPart': No...</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.308"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.324" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.324"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.355" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.324" endtime="20191205 16:55:34.355"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.355" endtime="20191205 16:55:34.355"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.355" endtime="20191205 16:55:34.355"></status>
</kw>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.355"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 16:55:34.355" level="INFO">${ACCN} = A20191205165248</msg>
<status status="PASS" starttime="20191205 16:55:34.355" endtime="20191205 16:55:34.355"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 16:55:34.355" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165248", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam20191205165248", "BodyPart": nu...</msg>
<status status="PASS" starttime="20191205 16:55:34.355" endtime="20191205 16:55:34.355"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 16:55:34.355" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165248', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam20191205165248', 'BodyPart': No...</msg>
<status status="PASS" starttime="20191205 16:55:34.355" endtime="20191205 16:55:34.355"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.371" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.355" endtime="20191205 16:55:34.371"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.386" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.371" endtime="20191205 16:55:34.386"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.386" endtime="20191205 16:55:34.386"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.386" endtime="20191205 16:55:34.386"></status>
</kw>
<status status="PASS" starttime="20191205 16:55:34.355" endtime="20191205 16:55:34.386"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 16:55:34.386" level="INFO">${ACCN} = A20191205165330</msg>
<status status="PASS" starttime="20191205 16:55:34.386" endtime="20191205 16:55:34.386"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 16:55:34.386" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165330", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam20191205165330", "BodyPart": nu...</msg>
<status status="PASS" starttime="20191205 16:55:34.386" endtime="20191205 16:55:34.386"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 16:55:34.386" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165330', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam20191205165330', 'BodyPart': No...</msg>
<status status="PASS" starttime="20191205 16:55:34.386" endtime="20191205 16:55:34.386"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.418" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.386" endtime="20191205 16:55:34.418"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.433" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.418" endtime="20191205 16:55:34.433"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.433" endtime="20191205 16:55:34.433"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.433" endtime="20191205 16:55:34.433"></status>
</kw>
<status status="PASS" starttime="20191205 16:55:34.386" endtime="20191205 16:55:34.433"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 16:55:34.433" level="INFO">${ACCN} = A20191205165411</msg>
<status status="PASS" starttime="20191205 16:55:34.433" endtime="20191205 16:55:34.433"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 16:55:34.433" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165411", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam20191205165411", "BodyPart": nu...</msg>
<status status="PASS" starttime="20191205 16:55:34.433" endtime="20191205 16:55:34.433"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 16:55:34.433" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165411', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam20191205165411', 'BodyPart': No...</msg>
<status status="PASS" starttime="20191205 16:55:34.433" endtime="20191205 16:55:34.433"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.449" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.433" endtime="20191205 16:55:34.449"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.464" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.449" endtime="20191205 16:55:34.464"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.464" endtime="20191205 16:55:34.464"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.464" endtime="20191205 16:55:34.464"></status>
</kw>
<status status="PASS" starttime="20191205 16:55:34.433" endtime="20191205 16:55:34.464"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 16:55:34.464" level="INFO">${ACCN} = A20191205165452</msg>
<status status="PASS" starttime="20191205 16:55:34.464" endtime="20191205 16:55:34.464"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 16:55:34.464" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165452", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam20191205165452", "BodyPart": nu...</msg>
<status status="PASS" starttime="20191205 16:55:34.464" endtime="20191205 16:55:34.464"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 16:55:34.464" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165452', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam20191205165452', 'BodyPart': No...</msg>
<status status="PASS" starttime="20191205 16:55:34.464" endtime="20191205 16:55:34.464"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.480" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.464" endtime="20191205 16:55:34.480"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191205 16:55:34.511" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 16:55:34.496" endtime="20191205 16:55:34.511"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.511" endtime="20191205 16:55:34.511"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.511" endtime="20191205 16:55:34.511"></status>
</kw>
<status status="PASS" starttime="20191205 16:55:34.464" endtime="20191205 16:55:34.511"></status>
</kw>
<status status="PASS" starttime="20191205 16:55:34.308" endtime="20191205 16:55:34.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191205 16:55:34.511" level="INFO">[None, None, None, None, None]</msg>
<status status="PASS" starttime="20191205 16:55:34.511" endtime="20191205 16:55:34.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191205 16:55:34.511" level="INFO">[None, None, None, None, None]</msg>
<status status="PASS" starttime="20191205 16:55:34.511" endtime="20191205 16:55:34.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n1. Use the API to simulate the central print operation: \ \ Print the exams created in step2 with the terminal which created in step1. \n Excepted:\n 1. The API should return the successful response. \n</arg>
</arguments>
<msg timestamp="20191205 16:55:34.511" level="INFO">Step 3 
Description: 
1. Use the API to simulate the central print operation:   Print the exams created in step2 with the terminal which created in step1. 
Excepted:
1. The API should return the successful response. 
</msg>
<status status="PASS" starttime="20191205 16:55:34.511" endtime="20191205 16:55:34.511"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191205 16:55:34.511" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:34.527" level="DEBUG">http://10.112.20.150:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191205 16:55:34.527" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:34.589" level="DEBUG">http://10.112.20.150:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191205 16:55:34.589" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191205 16:55:34.589" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191205 16:55:34.511" endtime="20191205 16:55:34.589"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 16:55:34.589" endtime="20191205 16:55:34.589"></status>
</kw>
<kw name="Platform Worklist Central Print" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_central_print</doc>
<arguments>
<arg>Customer_Terminal01</arg>
<arg>admin</arg>
<arg>${list_Accn}</arg>
<arg>${restinstanceids}</arg>
</arguments>
<assign>
<var>${centralprint_result}</var>
</assign>
<msg timestamp="20191205 16:55:34.589" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:39.153" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/centralPrint HTTP/1.1" 200 631</msg>
<msg timestamp="20191205 16:55:39.169" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:39.372" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printEstimateTime/ HTTP/1.1" 200 3</msg>
<msg timestamp="20191205 16:55:44.381" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:44.396" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:55:44.396" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:44.537" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 16:55:49.549" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:49.565" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:55:49.565" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:49.596" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 16:55:54.612" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:54.627" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:55:54.627" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:54.643" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 16:55:59.643" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:59.658" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:55:59.658" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:55:59.674" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 16:56:04.674" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:04.690" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:04.690" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:04.705" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 16:56:09.720" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:09.720" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:09.736" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:09.751" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:14.761" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:14.776" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:14.776" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:14.792" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:19.792" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:19.808" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:19.808" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:19.823" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:24.839" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:24.839" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:24.855" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:24.886" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:29.898" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:29.913" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:29.913" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:29.929" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:34.930" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:34.930" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:34.930" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:34.962" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:39.972" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:39.988" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:39.988" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:40.004" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:45.005" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:45.020" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:45.020" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:45.036" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:50.041" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:50.056" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:50.056" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:50.072" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:56:55.081" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:55.096" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:56:55.096" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:56:55.112" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 16:57:00.112" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:00.127" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:00.127" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:00.143" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:05.153" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:05.169" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:05.169" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:05.185" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:10.191" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:10.206" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:10.206" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:10.222" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:15.234" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:15.234" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:15.250" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:15.250" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:20.258" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:20.273" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:20.273" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:20.289" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:25.298" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:25.298" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:25.314" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:25.330" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:30.331" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:30.487" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:30.487" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:30.518" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:35.532" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:35.547" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 16:57:35.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:35.563" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:40.564" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:40.564" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:57:40.579" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:40.595" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:45.595" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:45.611" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:57:45.611" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:45.626" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:50.634" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:50.650" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:57:50.650" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:50.666" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:57:55.681" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:55.697" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:57:55.697" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:57:55.712" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:00.718" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:00.734" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:00.734" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:00.765" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:05.772" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:05.772" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:05.772" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:05.803" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:10.809" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:10.825" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:10.825" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:10.856" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:15.857" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:15.872" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:15.872" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:15.904" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:20.916" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:20.931" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:20.931" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:20.947" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:25.956" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:25.971" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:25.971" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:25.987" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:30.994" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:30.994" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:31.009" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:31.025" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:36.036" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:36.051" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:36.051" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:36.067" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:41.071" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:41.087" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:41.087" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:41.102" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:46.105" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:46.105" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:46.121" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:46.136" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:51.137" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:51.153" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:51.153" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:51.169" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:58:56.172" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:56.187" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:58:56.187" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:58:56.203" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:01.219" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:01.234" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:01.234" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:01.250" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:06.250" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:06.265" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:06.265" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:06.281" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:11.291" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:11.306" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:11.306" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:11.322" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:16.324" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:16.339" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:16.339" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:16.355" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:21.367" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:21.382" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:21.382" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:21.398" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:26.406" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:26.421" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:26.421" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:26.437" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:31.444" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:31.444" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:31.444" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:31.475" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:36.488" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:36.503" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:36.503" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:36.519" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:41.519" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:41.535" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:41.535" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:41.551" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:46.554" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:46.569" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:46.569" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:46.584" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:51.590" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:51.605" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:51.605" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:51.621" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 16:59:56.624" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:56.624" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 16:59:56.640" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 16:59:56.670" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 17:00:01.675" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:01.691" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:00:01.691" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:01.706" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 17:00:06.709" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:06.725" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:00:06.725" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:06.741" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 17:00:11.741" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:11.756" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:00:11.756" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:11.772" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 17:00:16.780" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:16.780" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:00:16.795" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:16.811" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191205 17:00:21.813" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:21.828" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:00:21.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:21.844" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 17:00:21.844" level="INFO">Platform.Platform_worklist_central_print_get_tasks: All exams can central print.
350
105
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_worklist_central_print: Print successfully:
{'printedTime': 350, 'isFinishPrint': True, 'failedTasks': 0}</msg>
<msg timestamp="20191205 17:00:21.844" level="INFO">${centralprint_result} = (True, [{'returnValue': 0, 'patientName': 'CN20191205165207', 'printTaskID': '17', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}, {'returnValue': 0, 'patientName': 'CN20191205165248', ...</msg>
<status status="PASS" starttime="20191205 16:55:34.589" endtime="20191205 17:00:21.844"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${centralprint_result}[0] == True</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:21.844" endtime="20191205 17:00:21.844"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191205 17:00:21.844" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191205165207', 'printTaskID': '17', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191205 17:00:21.844" endtime="20191205 17:00:21.844"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191205 17:00:21.844" level="INFO">${printtask_sn} = 17</msg>
<status status="PASS" starttime="20191205 17:00:21.844" endtime="20191205 17:00:21.844"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:21.891" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 17, "PatientID": "P20191205165207", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc": null, "...</msg>
<status status="PASS" starttime="20191205 17:00:21.844" endtime="20191205 17:00:21.891"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:21.891" level="INFO">${json} = {'Result': True, 'SN': 17, 'PatientID': 'P20191205165207', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc': None, '...</msg>
<status status="PASS" starttime="20191205 17:00:21.891" endtime="20191205 17:00:21.891"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191205 17:00:21.923" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191205 17:00:21.891" endtime="20191205 17:00:21.923"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:21.938" level="INFO">${Patient_id} = ['P20191205165207']</msg>
<status status="PASS" starttime="20191205 17:00:21.923" endtime="20191205 17:00:21.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191205 17:00:21.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:21.938" endtime="20191205 17:00:21.938"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:21.844" endtime="20191205 17:00:21.938"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191205 17:00:21.938" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191205165248', 'printTaskID': '18', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191205 17:00:21.938" endtime="20191205 17:00:21.938"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191205 17:00:21.938" level="INFO">${printtask_sn} = 18</msg>
<status status="PASS" starttime="20191205 17:00:21.938" endtime="20191205 17:00:21.938"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:21.954" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 18, "PatientID": "P20191205165248", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc": null, "...</msg>
<status status="PASS" starttime="20191205 17:00:21.938" endtime="20191205 17:00:21.954"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:21.954" level="INFO">${json} = {'Result': True, 'SN': 18, 'PatientID': 'P20191205165248', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc': None, '...</msg>
<status status="PASS" starttime="20191205 17:00:21.954" endtime="20191205 17:00:21.954"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191205 17:00:21.985" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191205 17:00:21.954" endtime="20191205 17:00:21.985"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.001" level="INFO">${Patient_id} = ['P20191205165248']</msg>
<status status="PASS" starttime="20191205 17:00:21.985" endtime="20191205 17:00:22.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191205 17:00:22.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.001" endtime="20191205 17:00:22.001"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:21.938" endtime="20191205 17:00:22.001"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191205 17:00:22.001" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191205165330', 'printTaskID': '19', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191205 17:00:22.001" endtime="20191205 17:00:22.001"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191205 17:00:22.001" level="INFO">${printtask_sn} = 19</msg>
<status status="PASS" starttime="20191205 17:00:22.001" endtime="20191205 17:00:22.001"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.001" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 19, "PatientID": "P20191205165330", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc": null, "...</msg>
<status status="PASS" starttime="20191205 17:00:22.001" endtime="20191205 17:00:22.001"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.001" level="INFO">${json} = {'Result': True, 'SN': 19, 'PatientID': 'P20191205165330', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc': None, '...</msg>
<status status="PASS" starttime="20191205 17:00:22.001" endtime="20191205 17:00:22.001"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191205 17:00:22.016" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191205 17:00:22.001" endtime="20191205 17:00:22.016"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.032" level="INFO">${Patient_id} = ['P20191205165330']</msg>
<status status="PASS" starttime="20191205 17:00:22.016" endtime="20191205 17:00:22.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191205 17:00:22.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.032" endtime="20191205 17:00:22.032"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.001" endtime="20191205 17:00:22.032"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191205 17:00:22.032" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191205165411', 'printTaskID': '20', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191205 17:00:22.032" endtime="20191205 17:00:22.032"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191205 17:00:22.032" level="INFO">${printtask_sn} = 20</msg>
<status status="PASS" starttime="20191205 17:00:22.032" endtime="20191205 17:00:22.032"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.047" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 20, "PatientID": "P20191205165411", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc": null, "...</msg>
<status status="PASS" starttime="20191205 17:00:22.032" endtime="20191205 17:00:22.047"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.047" level="INFO">${json} = {'Result': True, 'SN': 20, 'PatientID': 'P20191205165411', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc': None, '...</msg>
<status status="PASS" starttime="20191205 17:00:22.047" endtime="20191205 17:00:22.047"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191205 17:00:22.063" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191205 17:00:22.047" endtime="20191205 17:00:22.063"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.094" level="INFO">${Patient_id} = ['P20191205165411']</msg>
<status status="PASS" starttime="20191205 17:00:22.063" endtime="20191205 17:00:22.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191205 17:00:22.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.094" endtime="20191205 17:00:22.094"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.032" endtime="20191205 17:00:22.094"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191205 17:00:22.094" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191205165452', 'printTaskID': '21', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191205 17:00:22.094" endtime="20191205 17:00:22.094"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191205 17:00:22.094" level="INFO">${printtask_sn} = 21</msg>
<status status="PASS" starttime="20191205 17:00:22.094" endtime="20191205 17:00:22.094"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.094" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 21, "PatientID": "P20191205165452", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc": null, "...</msg>
<status status="PASS" starttime="20191205 17:00:22.094" endtime="20191205 17:00:22.094"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.094" level="INFO">${json} = {'Result': True, 'SN': 21, 'PatientID': 'P20191205165452', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc': None, '...</msg>
<status status="PASS" starttime="20191205 17:00:22.094" endtime="20191205 17:00:22.094"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191205 17:00:22.126" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191205 17:00:22.094" endtime="20191205 17:00:22.126"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.141" level="INFO">${Patient_id} = ['P20191205165452']</msg>
<status status="PASS" starttime="20191205 17:00:22.126" endtime="20191205 17:00:22.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191205 17:00:22.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.141"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.094" endtime="20191205 17:00:22.141"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:21.844" endtime="20191205 17:00:22.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Check the print task status in the wggc.dbo.afp_printtask table. \n Expected: \n 1. All print tasks should be successful and status should be 4. \n</arg>
</arguments>
<msg timestamp="20191205 17:00:22.141" level="INFO">Step 4 
Description: 
1. Check the print task status in the wggc.dbo.afp_printtask table. 
Expected: 
1. All print tasks should be successful and status should be 4. 
</msg>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.141"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.141" level="INFO">${ACCN} = A20191205165207</msg>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.141"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.141" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165207", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:56:33.210000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.141"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.141" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165207', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:56:33.210000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.141"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.157" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.157"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.173" level="INFO">${Patient_id} = ['P20191205165207']</msg>
<status status="PASS" starttime="20191205 17:00:22.157" endtime="20191205 17:00:22.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.173" endtime="20191205 17:00:22.173"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.173"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.173" level="INFO">${ACCN} = A20191205165248</msg>
<status status="PASS" starttime="20191205 17:00:22.173" endtime="20191205 17:00:22.173"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.173" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165248", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:57:28.997000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.173" endtime="20191205 17:00:22.173"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.173" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165248', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:57:28.997000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.173" endtime="20191205 17:00:22.173"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.188" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.173" endtime="20191205 17:00:22.188"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.219" level="INFO">${Patient_id} = ['P20191205165248']</msg>
<status status="PASS" starttime="20191205 17:00:22.204" endtime="20191205 17:00:22.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.219" endtime="20191205 17:00:22.219"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.173" endtime="20191205 17:00:22.219"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.219" level="INFO">${ACCN} = A20191205165330</msg>
<status status="PASS" starttime="20191205 17:00:22.219" endtime="20191205 17:00:22.219"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.219" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165330", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:58:25.297000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.219" endtime="20191205 17:00:22.219"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.219" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165330', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:58:25.297000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.219" endtime="20191205 17:00:22.219"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.235" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.219" endtime="20191205 17:00:22.235"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.251" level="INFO">${Patient_id} = ['P20191205165330']</msg>
<status status="PASS" starttime="20191205 17:00:22.235" endtime="20191205 17:00:22.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.251" endtime="20191205 17:00:22.251"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.219" endtime="20191205 17:00:22.251"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.251" level="INFO">${ACCN} = A20191205165411</msg>
<status status="PASS" starttime="20191205 17:00:22.251" endtime="20191205 17:00:22.251"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.251" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165411", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:59:20.830000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.251" endtime="20191205 17:00:22.251"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.251" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165411', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:59:20.830000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.251" endtime="20191205 17:00:22.251"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.266" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.251" endtime="20191205 17:00:22.266"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.298" level="INFO">${Patient_id} = ['P20191205165411']</msg>
<status status="PASS" starttime="20191205 17:00:22.266" endtime="20191205 17:00:22.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.298" endtime="20191205 17:00:22.298"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.251" endtime="20191205 17:00:22.298"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.298" level="INFO">${ACCN} = A20191205165452</msg>
<status status="PASS" starttime="20191205 17:00:22.298" endtime="20191205 17:00:22.298"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.298" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165452", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:00:16.960000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.298" endtime="20191205 17:00:22.298"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.298" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165452', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:00:16.960000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.298" endtime="20191205 17:00:22.298"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.313" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.298" endtime="20191205 17:00:22.313"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.329" level="INFO">${Patient_id} = ['P20191205165452']</msg>
<status status="PASS" starttime="20191205 17:00:22.313" endtime="20191205 17:00:22.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.329"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.298" endtime="20191205 17:00:22.329"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.141" endtime="20191205 17:00:22.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. \n Expected: \n 1. The status should be printed.</arg>
</arguments>
<msg timestamp="20191205 17:00:22.329" level="INFO">Step 5 
Description: 
1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. 
Expected: 
1. The status should be printed.</msg>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.329"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.329" level="INFO">${ACCN} = A20191205165207</msg>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.329"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.329" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165207", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:56:33.210000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.329"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.329" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165207', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:56:33.210000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.329"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.344" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.344"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.360" level="INFO">${Patient_id} = ['P20191205165207']</msg>
<status status="PASS" starttime="20191205 17:00:22.344" endtime="20191205 17:00:22.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.360" endtime="20191205 17:00:22.360"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.360"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.376" level="INFO">${ACCN} = A20191205165248</msg>
<status status="PASS" starttime="20191205 17:00:22.360" endtime="20191205 17:00:22.376"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.376" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165248", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:57:28.997000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.376" endtime="20191205 17:00:22.376"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.376" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165248', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:57:28.997000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.376" endtime="20191205 17:00:22.376"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.391" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.376" endtime="20191205 17:00:22.391"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.407" level="INFO">${Patient_id} = ['P20191205165248']</msg>
<status status="PASS" starttime="20191205 17:00:22.391" endtime="20191205 17:00:22.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.407" endtime="20191205 17:00:22.407"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.360" endtime="20191205 17:00:22.407"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.407" level="INFO">${ACCN} = A20191205165330</msg>
<status status="PASS" starttime="20191205 17:00:22.407" endtime="20191205 17:00:22.407"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.407" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165330", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:58:25.297000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.407" endtime="20191205 17:00:22.407"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.407" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165330', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:58:25.297000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.407" endtime="20191205 17:00:22.407"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.422" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.407" endtime="20191205 17:00:22.422"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.438" level="INFO">${Patient_id} = ['P20191205165330']</msg>
<status status="PASS" starttime="20191205 17:00:22.422" endtime="20191205 17:00:22.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.438" endtime="20191205 17:00:22.438"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.407" endtime="20191205 17:00:22.438"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.454" level="INFO">${ACCN} = A20191205165411</msg>
<status status="PASS" starttime="20191205 17:00:22.438" endtime="20191205 17:00:22.454"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.454" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165411", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:59:20.830000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.454" endtime="20191205 17:00:22.454"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.454" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165411', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:59:20.830000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.454" endtime="20191205 17:00:22.454"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.469" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.454" endtime="20191205 17:00:22.469"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.485" level="INFO">${Patient_id} = ['P20191205165411']</msg>
<status status="PASS" starttime="20191205 17:00:22.469" endtime="20191205 17:00:22.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.485" endtime="20191205 17:00:22.485"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.438" endtime="20191205 17:00:22.485"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.485" level="INFO">${ACCN} = A20191205165452</msg>
<status status="PASS" starttime="20191205 17:00:22.485" endtime="20191205 17:00:22.485"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.485" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165452", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:00:16.960000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.485" endtime="20191205 17:00:22.485"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.485" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165452', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:00:16.960000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.485" endtime="20191205 17:00:22.485"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.501" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:00:22.485" endtime="20191205 17:00:22.501"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:00:22.516" level="INFO">${Patient_id} = ['P20191205165452']</msg>
<status status="PASS" starttime="20191205 17:00:22.501" endtime="20191205 17:00:22.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:00:22.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:00:22.516" endtime="20191205 17:00:22.516"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.485" endtime="20191205 17:00:22.516"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.329" endtime="20191205 17:00:22.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the ReportPrintStatus of these patients \ in WGGC.dbo.afp_ExamInfo table. \n Expected: \n The status should be printed. \n</arg>
</arguments>
<msg timestamp="20191205 17:00:22.516" level="INFO">Step 6 
Description: 
1. Check the ReportPrintStatus of these patients  in WGGC.dbo.afp_ExamInfo table. 
Expected: 
The status should be printed. 
</msg>
<status status="PASS" starttime="20191205 17:00:22.516" endtime="20191205 17:00:22.516"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.532" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.516" endtime="20191205 17:00:22.532"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.532" level="INFO">${ACCN} = A20191205165207</msg>
<status status="PASS" starttime="20191205 17:00:22.532" endtime="20191205 17:00:22.532"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.532" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165207", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:56:33.210000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.532" endtime="20191205 17:00:22.532"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.532" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165207', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:56:33.210000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.532" endtime="20191205 17:00:22.532"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.548" level="INFO">${ReportPrint_DateTime} = ['2019-12-05 16:56:33.210000']</msg>
<status status="PASS" starttime="20191205 17:00:22.532" endtime="20191205 17:00:22.548"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.548" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:56:33.210000]</msg>
<msg timestamp="20191205 17:00:22.548" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.548"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.548"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.516" endtime="20191205 17:00:22.548"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.548" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.548"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.548" level="INFO">${ACCN} = A20191205165248</msg>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.548"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.548" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165248", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:57:28.997000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.548"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.548" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165248', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:57:28.997000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.548"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.563" level="INFO">${ReportPrint_DateTime} = ['2019-12-05 16:57:28.997000']</msg>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.563"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.578" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:57:28.997000]</msg>
<msg timestamp="20191205 17:00:22.578" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.563" endtime="20191205 17:00:22.578"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.578" endtime="20191205 17:00:22.578"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.548" endtime="20191205 17:00:22.578"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.578" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.578" endtime="20191205 17:00:22.578"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.578" level="INFO">${ACCN} = A20191205165330</msg>
<status status="PASS" starttime="20191205 17:00:22.578" endtime="20191205 17:00:22.578"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.578" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165330", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:58:25.297000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.578" endtime="20191205 17:00:22.578"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.578" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165330', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:58:25.297000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.578" endtime="20191205 17:00:22.578"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.594" level="INFO">${ReportPrint_DateTime} = ['2019-12-05 16:58:25.307000']</msg>
<status status="PASS" starttime="20191205 17:00:22.578" endtime="20191205 17:00:22.594"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.594" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:58:25.307000]</msg>
<msg timestamp="20191205 17:00:22.594" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.594" endtime="20191205 17:00:22.594"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.594" endtime="20191205 17:00:22.594"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.578" endtime="20191205 17:00:22.594"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.594" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.594" endtime="20191205 17:00:22.594"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.594" level="INFO">${ACCN} = A20191205165411</msg>
<status status="PASS" starttime="20191205 17:00:22.594" endtime="20191205 17:00:22.594"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.604" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165411", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:59:20.830000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.594" endtime="20191205 17:00:22.604"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.604" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165411', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:59:20.830000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.604" endtime="20191205 17:00:22.604"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.620" level="INFO">${ReportPrint_DateTime} = ['2019-12-05 16:59:20.830000']</msg>
<status status="PASS" starttime="20191205 17:00:22.604" endtime="20191205 17:00:22.620"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.620" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:59:20.830000]</msg>
<msg timestamp="20191205 17:00:22.620" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.620"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.620"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.594" endtime="20191205 17:00:22.620"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.620" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.620"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.620" level="INFO">${ACCN} = A20191205165452</msg>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.620"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.620" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165452", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:00:16.960000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.620"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.620" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165452', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:00:16.960000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.620"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.636" level="INFO">${ReportPrint_DateTime} = ['2019-12-05 17:00:16.960000']</msg>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.636" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 17:00:16.960000]</msg>
<msg timestamp="20191205 17:00:22.636" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.636"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.620" endtime="20191205 17:00:22.636"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.516" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the report print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191205 17:00:22.636" level="INFO">Step 7 
Description: 
1. Check the report print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.636" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.636" level="INFO">${ACCN} = A20191205165207</msg>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.636" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165207", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:56:33.210000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.636" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165207', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:56:33.210000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.636"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.667" level="INFO">${FilmPrint_DateTime} = ['2019-12-05 16:56:33.210000']</msg>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.667"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.667" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:56:33.210000]</msg>
<msg timestamp="20191205 17:00:22.667" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.667"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.667"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.667"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.667" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.667"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.667" level="INFO">${ACCN} = A20191205165248</msg>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.667"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.667" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165248", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:57:28.997000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.667"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.667" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165248', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:57:28.997000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.667"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.683" level="INFO">${FilmPrint_DateTime} = ['2019-12-05 16:57:28.997000']</msg>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.683"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.683" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:57:28.997000]</msg>
<msg timestamp="20191205 17:00:22.683" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.683"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.683"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.667" endtime="20191205 17:00:22.683"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.683" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.683"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.683" level="INFO">${ACCN} = A20191205165330</msg>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.683"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.683" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165330", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:58:25.297000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.683"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.683" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165330', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:58:25.297000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.683"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.698" level="INFO">${FilmPrint_DateTime} = ['2019-12-05 16:58:25.297000']</msg>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.698"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.698" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:58:25.297000]</msg>
<msg timestamp="20191205 17:00:22.698" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.698" endtime="20191205 17:00:22.698"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.698" endtime="20191205 17:00:22.698"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.683" endtime="20191205 17:00:22.698"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.698" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.698" endtime="20191205 17:00:22.698"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.698" level="INFO">${ACCN} = A20191205165411</msg>
<status status="PASS" starttime="20191205 17:00:22.698" endtime="20191205 17:00:22.698"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.714" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165411", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 16:59:20.830000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.698" endtime="20191205 17:00:22.714"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.714" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165411', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 16:59:20.830000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.714" endtime="20191205 17:00:22.714"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.729" level="INFO">${FilmPrint_DateTime} = ['2019-12-05 16:59:20.830000']</msg>
<status status="PASS" starttime="20191205 17:00:22.714" endtime="20191205 17:00:22.729"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.729" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 16:59:20.830000]</msg>
<msg timestamp="20191205 17:00:22.729" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.729"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.729"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.698" endtime="20191205 17:00:22.729"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:00:22.729" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.729"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:00:22.729" level="INFO">${ACCN} = A20191205165452</msg>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.729"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:00:22.729" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205165452", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:00:16.960000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.729"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:00:22.729" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205165452', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:00:16.960000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.729"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:00:22.745" level="INFO">${FilmPrint_DateTime} = ['2019-12-05 17:00:16.960000']</msg>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.745"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:00:22.745" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 17:00:16.960000]</msg>
<msg timestamp="20191205 17:00:22.745" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.745" endtime="20191205 17:00:22.745"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.745" endtime="20191205 17:00:22.745"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.729" endtime="20191205 17:00:22.745"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.636" endtime="20191205 17:00:22.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8 \n Description: \n 1. Check the Film print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191205 17:00:22.745" level="INFO">Step 8 
Description: 
1. Check the Film print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191205 17:00:22.745" endtime="20191205 17:00:22.745"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 16:52:07.038" endtime="20191205 17:00:22.745" critical="yes"></status>
</test>
<test id="s1-t11" name="SmokeTest_011_Core_4180_06.01.01 Central Print multi patients with standard terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 17:00:22.745" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 17:00:22.745" endtime="20191205 17:00:22.745"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191205 17:00:22.745" level="INFO">${exam_count} = 1</msg>
<status status="PASS" starttime="20191205 17:00:22.745" endtime="20191205 17:00:22.745"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191205 17:00:22.745" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:22.760" level="DEBUG">http://10.112.20.150:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 650</msg>
<msg timestamp="20191205 17:00:22.760" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"IgnorePrinterType":true,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9782,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20137,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0,"PrinterType":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191205 17:00:22.760" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191205 17:00:22.745" endtime="20191205 17:00:22.760"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.760" endtime="20191205 17:00:22.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191205 17:00:22.760" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191205 17:00:22.760" endtime="20191205 17:00:22.760"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191205 17:00:22.760" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191205 17:00:22.760" endtime="20191205 17:00:22.760"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191205 17:00:22.760" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191205 17:00:22.760" endtime="20191205 17:00:22.760"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191205 17:00:22.760" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:00:22.776" level="DEBUG">http://10.112.20.150:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191205 17:00:22.776" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-12-05 17:00:22.760353", "UpdateDT": "2019-12-05 17:00:22.760353", "PatientID": "P20191205170022", "AccessionNumber": "A20191205170022", "StudyInstanceUID": "UID20191205170022", "NameCN": "CN20191205170022", "NameEN": "EN20191205170022", "Gender": "M", "Birthday": "2018-12-05", "Modality": "US", "ModalityName": "US", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-12-05 17:00:22.760353", "RegisterDT": "2019-12-05 17:00:22.760353", "ExamDT": "2019-12-05 17:00:22.760353", "ReportDT": "2019-12-05 17:00:22.760353", "SubmitDT": "2019-12-05 17:00:22.760353", "ApproveDT": "2019-12-05 17:00:22.760353", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191205170022", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191205 17:00:22.776" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-12-05 17:00:22.760353", "UpdateDT": "2019-12-05 17:00:22.760353", "PatientID": "P20191205170022", "AccessionNumber": "A20191205170022", "StudyInstanceUID": "UID20191...</msg>
<status status="PASS" starttime="20191205 17:00:22.760" endtime="20191205 17:00:22.776"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191205 17:00:22.776" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-12-05 17:00:22.760353', 'UpdateDT': '2019-12-05 17:00:22.760353', 'PatientID': 'P20191205170022', 'AccessionNumber': 'A20191205170022', 'StudyInstanceUID': 'UID20191...</msg>
<status status="PASS" starttime="20191205 17:00:22.776" endtime="20191205 17:00:22.776"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191205 17:00:22.808" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191205 17:00:22.776" endtime="20191205 17:00:22.808"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191205 17:00:22.839" level="INFO">${patientID} = ['P20191205170022']</msg>
<status status="PASS" starttime="20191205 17:00:22.808" endtime="20191205 17:00:22.839"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191205 17:00:22.854" level="INFO">${Accessionnumber} = ['A20191205170022']</msg>
<status status="PASS" starttime="20191205 17:00:22.839" endtime="20191205 17:00:22.854"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:22.854" endtime="20191205 17:00:22.854"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191205 17:00:54.547" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191205170022", "AccessionNumber": "A20191205170022", "FilmSessionLable": "20191205170022854449", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191205 17:00:54.547" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191205170022", "AccessionNumber": "A20191205170022", "FilmSessionLable": "20191205170022854449", "DeliveryJob_status": 2, "WaterMark_Path": "C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 17:00:22.854" endtime="20191205 17:00:54.547"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191205 17:00:54.547" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191205170022', 'AccessionNumber': 'A20191205170022', 'FilmSessionLable': '20191205170022854449', 'DeliveryJob_status': 2, 'WaterMark_Path': 'C:\\PUMA_AUTO\\RF_PUMA\\P...</msg>
<status status="PASS" starttime="20191205 17:00:54.547" endtime="20191205 17:00:54.547"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191205 17:00:54.578" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191205 17:00:54.547" endtime="20191205 17:00:54.578"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 17:00:54.578" endtime="20191205 17:00:54.578"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191205 17:01:04.773" level="INFO">Delete File: C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205165452.pdf
PUMA_ReportLibrary._convert_report_to_PDF: The PDF file create successfully. [C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\ReportSample\P20191205170022.pdf]
['', '', '10.112.20.150', 'Report', 'Received']
本地名称     
远程名称     \\10.112.20.150\Report\Received
资源类型     Disk
状态         OK
# 打开       2
# 连接       1
命令成功完成。


已复制         1 个文件。

PUMA_ReportLibrary._copy_file_to_share_folder: The file copy successfully.
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205170022", "accession_number": "A20191205170022", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "pdf_report_folder": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\", "pdf_report_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\P20191205170022.pdf", "PS_report_shared_folder": "\\\\10.112.20.150\\Report\\Received", "powershell_path": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.150/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.150/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191205 17:01:04.773" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.150", "patient_id": "P20191205170022", "accession_number": "A20191205170022", "report_file": "C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 17:00:54.578" endtime="20191205 17:01:04.773"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191205 17:01:04.773" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.150', 'patient_id': 'P20191205170022', 'accession_number': 'A20191205170022', 'report_file': 'C:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample...</msg>
<status status="PASS" starttime="20191205 17:01:04.773" endtime="20191205 17:01:04.773"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191205 17:01:04.804" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191205 17:01:04.773" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191205 17:01:04.804" level="INFO">A20191205170022</msg>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.760" endtime="20191205 17:01:04.804"></status>
</kw>
<status status="PASS" starttime="20191205 17:00:22.760" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${list_Accn}</arg>
</arguments>
<msg timestamp="20191205 17:01:04.804" level="INFO">['A20191205170022']</msg>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Report_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191205 17:01:04.804" level="INFO">${Report_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Film_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191205 17:01:04.804" level="INFO">${Film_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:01:04.804" level="INFO">${ACCN} = A20191205170022</msg>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:01:04.804" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205170022", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam20191205170022", "BodyPart": nu...</msg>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:01:04.804" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205170022', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam20191205170022', 'BodyPart': No...</msg>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.804"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191205 17:01:04.835" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 17:01:04.819" endtime="20191205 17:01:04.835"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191205 17:01:04.851" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191205 17:01:04.835" endtime="20191205 17:01:04.851"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 17:01:04.851" endtime="20191205 17:01:04.851"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191205 17:01:04.851" endtime="20191205 17:01:04.851"></status>
</kw>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.851"></status>
</kw>
<status status="PASS" starttime="20191205 17:01:04.804" endtime="20191205 17:01:04.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191205 17:01:04.851" level="INFO">[None]</msg>
<status status="PASS" starttime="20191205 17:01:04.851" endtime="20191205 17:01:04.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191205 17:01:04.851" level="INFO">[None]</msg>
<status status="PASS" starttime="20191205 17:01:04.851" endtime="20191205 17:01:04.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n1. Use the API to simulate the central print operation: \ \ Print the exams created in step2 with the terminal which created in step1. \n Excepted:\n 1. The API should return the successful response. \n</arg>
</arguments>
<msg timestamp="20191205 17:01:04.851" level="INFO">Step 3 
Description: 
1. Use the API to simulate the central print operation:   Print the exams created in step2 with the terminal which created in step1. 
Excepted:
1. The API should return the successful response. 
</msg>
<status status="PASS" starttime="20191205 17:01:04.851" endtime="20191205 17:01:04.851"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191205 17:01:04.851" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:04.866" level="DEBUG">http://10.112.20.150:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191205 17:01:04.866" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:04.913" level="DEBUG">http://10.112.20.150:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191205 17:01:04.913" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191205 17:01:04.913" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191205 17:01:04.851" endtime="20191205 17:01:04.913"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 17:01:04.913" endtime="20191205 17:01:04.929"></status>
</kw>
<kw name="Platform Worklist Central Print" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_central_print</doc>
<arguments>
<arg>Customer_Terminal01</arg>
<arg>admin</arg>
<arg>${list_Accn}</arg>
<arg>${restinstanceids}</arg>
</arguments>
<assign>
<var>${centralprint_result}</var>
</assign>
<msg timestamp="20191205 17:01:04.929" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:05.398" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/centralPrint HTTP/1.1" 200 127</msg>
<msg timestamp="20191205 17:01:05.398" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:05.429" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printEstimateTime/ HTTP/1.1" 200 2</msg>
<msg timestamp="20191205 17:01:10.438" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:10.453" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:01:10.453" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:10.469" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 17:01:15.486" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:15.501" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:01:15.501" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:15.517" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 17:01:20.521" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:20.536" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:01:20.536" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:20.552" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 17:01:25.554" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:25.569" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:01:25.569" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:25.585" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 17:01:30.587" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:30.602" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:01:30.602" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:30.618" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 17:01:35.618" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:35.633" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:01:35.633" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:35.649" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 17:01:40.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:40.656" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:01:40.671" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:40.671" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 17:01:45.690" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:45.706" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:01:45.706" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:45.721" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 17:01:50.733" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:50.748" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:01:50.748" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:50.764" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 17:01:55.775" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:55.790" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:01:55.790" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:01:55.806" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191205 17:02:00.807" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:00.822" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 5</msg>
<msg timestamp="20191205 17:02:00.822" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:00.838" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191205 17:02:00.838" level="INFO">Platform.Platform_worklist_central_print_get_tasks: All exams can central print.
70
21
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_account_check_login_status: the user login status is false 
Platform.Platform_worklist_central_print: Print successfully:
{'printedTime': 70, 'isFinishPrint': True, 'failedTasks': 0}</msg>
<msg timestamp="20191205 17:02:00.838" level="INFO">${centralprint_result} = (True, [{'returnValue': 0, 'patientName': 'CN20191205170022', 'printTaskID': '22', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}])</msg>
<status status="PASS" starttime="20191205 17:01:04.929" endtime="20191205 17:02:00.838"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${centralprint_result}[0] == True</arg>
</arguments>
<status status="PASS" starttime="20191205 17:02:00.838" endtime="20191205 17:02:00.838"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191205 17:02:00.838" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191205170022', 'printTaskID': '22', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191205 17:02:00.838" endtime="20191205 17:02:00.838"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191205 17:02:00.838" level="INFO">${printtask_sn} = 22</msg>
<status status="PASS" starttime="20191205 17:02:00.838" endtime="20191205 17:02:00.838"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:02:00.854" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 22, "PatientID": "P20191205170022", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc": null, "...</msg>
<status status="PASS" starttime="20191205 17:02:00.838" endtime="20191205 17:02:00.854"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:02:00.854" level="INFO">${json} = {'Result': True, 'SN': 22, 'PatientID': 'P20191205170022', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc': None, '...</msg>
<status status="PASS" starttime="20191205 17:02:00.854" endtime="20191205 17:02:00.854"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191205 17:02:00.885" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191205 17:02:00.854" endtime="20191205 17:02:00.885"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:02:00.901" level="INFO">${Patient_id} = ['P20191205170022']</msg>
<status status="PASS" starttime="20191205 17:02:00.885" endtime="20191205 17:02:00.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191205 17:02:00.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.901"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.838" endtime="20191205 17:02:00.901"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.838" endtime="20191205 17:02:00.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Check the print task status in the wggc.dbo.afp_printtask table. \n Expected: \n 1. All print tasks should be successful and status should be 4. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:00.901" level="INFO">Step 4 
Description: 
1. Check the print task status in the wggc.dbo.afp_printtask table. 
Expected: 
1. All print tasks should be successful and status should be 4. 
</msg>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.901"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:02:00.901" level="INFO">${ACCN} = A20191205170022</msg>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.901"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:02:00.901" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205170022", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:02:00.613000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.901"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:02:00.901" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205170022', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:02:00.613000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.901"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191205 17:02:00.916" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.916"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:02:00.932" level="INFO">${Patient_id} = ['P20191205170022']</msg>
<status status="PASS" starttime="20191205 17:02:00.916" endtime="20191205 17:02:00.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:02:00.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:02:00.932" endtime="20191205 17:02:00.932"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.932"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.901" endtime="20191205 17:02:00.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. \n Expected: \n 1. The status should be printed.</arg>
</arguments>
<msg timestamp="20191205 17:02:00.932" level="INFO">Step 5 
Description: 
1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. 
Expected: 
1. The status should be printed.</msg>
<status status="PASS" starttime="20191205 17:02:00.932" endtime="20191205 17:02:00.932"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:02:00.932" level="INFO">${ACCN} = A20191205170022</msg>
<status status="PASS" starttime="20191205 17:02:00.932" endtime="20191205 17:02:00.932"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:02:00.947" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205170022", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:02:00.613000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:00.947" endtime="20191205 17:02:00.947"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:02:00.947" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205170022', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:02:00.613000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:00.947" endtime="20191205 17:02:00.947"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191205 17:02:00.963" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191205 17:02:00.947" endtime="20191205 17:02:00.963"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191205 17:02:00.994" level="INFO">${Patient_id} = ['P20191205170022']</msg>
<status status="PASS" starttime="20191205 17:02:00.963" endtime="20191205 17:02:00.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191205 17:02:00.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:00.994"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.932" endtime="20191205 17:02:00.994"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.932" endtime="20191205 17:02:00.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the ReportPrintStatus of these patients \ in WGGC.dbo.afp_ExamInfo table. \n Expected: \n The status should be printed. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:00.994" level="INFO">Step 6 
Description: 
1. Check the ReportPrintStatus of these patients  in WGGC.dbo.afp_ExamInfo table. 
Expected: 
The status should be printed. 
</msg>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:00.994"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:02:00.994" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:00.994"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:02:00.994" level="INFO">${ACCN} = A20191205170022</msg>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:00.994"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:02:00.994" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205170022", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:02:00.613000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:00.994"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:02:00.994" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205170022', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:02:00.613000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:00.994"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:02:01.010" level="INFO">${ReportPrint_DateTime} = ['2019-12-05 17:02:00.613000']</msg>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:01.010"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:02:01.010" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 17:02:00.613000]</msg>
<msg timestamp="20191205 17:02:01.010" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.010"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.010"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:01.010"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:00.994" endtime="20191205 17:02:01.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the report print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.010" level="INFO">Step 7 
Description: 
1. Check the report print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.010"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191205 17:02:01.010" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.010"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191205 17:02:01.010" level="INFO">${ACCN} = A20191205170022</msg>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.010"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191205 17:02:01.026" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191205170022", "FilmPrintStatus": 1, "FilmPrintTime": "2019-12-05 17:02:00.613000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "US", "ExamName": "Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.026"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191205 17:02:01.026" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191205170022', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-12-05 17:02:00.613000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'US', 'ExamName': 'Exam2019120...</msg>
<status status="PASS" starttime="20191205 17:02:01.026" endtime="20191205 17:02:01.026"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191205 17:02:01.041" level="INFO">${FilmPrint_DateTime} = ['2019-12-05 17:02:00.613000']</msg>
<status status="PASS" starttime="20191205 17:02:01.026" endtime="20191205 17:02:01.041"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191205 17:02:01.041" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-12-05 17:02:00.613000]</msg>
<msg timestamp="20191205 17:02:01.041" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191205 17:02:01.041" endtime="20191205 17:02:01.041"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191205 17:02:01.041" endtime="20191205 17:02:01.041"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.041"></status>
</kw>
<status status="PASS" starttime="20191205 17:02:01.010" endtime="20191205 17:02:01.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8 \n Description: \n 1. Check the Film print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.041" level="INFO">Step 8 
Description: 
1. Check the Film print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191205 17:02:01.041" endtime="20191205 17:02:01.041"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191205 17:00:22.745" endtime="20191205 17:02:01.041" critical="yes"></status>
</test>
<test id="s1-t12" name="SmokeTest_0012_Core_4181_07.01.01 Worklist workflow fuzzy query by patientid">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.041" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191205 17:02:01.041" endtime="20191205 17:02:01.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.041" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191205 17:02:01.041" endtime="20191205 17:02:01.041"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191205 17:02:01.041" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.041" level="DEBUG">http://10.112.20.150:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191205 17:02:01.057" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.088" level="DEBUG">http://10.112.20.150:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191205 17:02:01.088" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191205 17:02:01.088" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191205 17:02:01.041" endtime="20191205 17:02:01.088"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 17:02:01.088" endtime="20191205 17:02:01.088"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By PatientID" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientID</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191205 17:02:01.104" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.104" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.104" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.119" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:01.135" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.166" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.166" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.182" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:01.182" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.197" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.197" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.213" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13280</msg>
<msg timestamp="20191205 17:02:01.213" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.229" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.229" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.260" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12799</msg>
<msg timestamp="20191205 17:02:01.260" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.276" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.276" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.291" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12046</msg>
<msg timestamp="20191205 17:02:01.307" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
web data: +++++++++++++++++++++++++++++++++++++++++++++++++++: 
 
79
[{'accessionNumber': 'A20191205170022', 'patientID': 'P20191205170022', 'patientName': 'CN20191205170022', 'studyDate': '2019-12-05', 'studyTime': '17:00:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205170022', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 17:02:00.613', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 17:02:00.613', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165452', 'patientID': 'P20191205165452', 'patientName': 'CN20191205165452', 'studyDate': '2019-12-05', 'studyTime': '16:55:19', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165452', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 17:00:16.960', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 17:00:16.960', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165411', 'patientID': 'P20191205165411', 'patientName': 'CN20191205165411', 'studyDate': '2019-12-05', 'studyTime': '16:54:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165411', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 16:59:20.830', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:59:20.830', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165330', 'patientID': 'P20191205165330', 'patientName': 'CN20191205165330', 'studyDate': '2019-12-05', 'studyTime': '16:53:58', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165330', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 16:58:25.297', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:58:25.307', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165248', 'patientID': 'P20191205165248', 'patientName': 'CN20191205165248', 'studyDate': '2019-12-05', 'studyTime': '16:53:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165248', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 16:57:28.997', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:57:28.997', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165207', 'patientID': 'P20191205165207', 'patientName': 'CN20191205165207', 'studyDate': '2019-12-05', 'studyTime': '16:52:33', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165207', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 16:56:33.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:56:33.210', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205163852', 'patientID': 'P20191205163852', 'patientName': 'CN20191205163852', 'studyDate': '2019-12-05', 'studyTime': '16:39:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191205163852', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 16:50:00.180', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205162504', 'patientID': 'P20191205162504', 'patientName': 'CN20191205162504', 'studyDate': '2019-12-05', 'studyTime': '16:25:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205162504', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 16:37:40.173', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:37:39.237', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205161000', 'patientID': 'P20191205161000', 'patientName': 'CN20191205161000', 'studyDate': '2019-12-05', 'studyTime': '16:10:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205161000', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 16:23:30.423', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:23:29.423', 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160633', 'patientID': 'P20191205160633', 'patientName': 'CN20191205160633', 'studyDate': '2019-12-05', 'studyTime': '16:06:41', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160622', 'patientID': 'P20191205160622', 'patientName': 'CN20191205160622', 'studyDate': '2019-12-05', 'studyTime': '16:06:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160611', 'patientID': 'P20191205160611', 'patientName': 'CN20191205160611', 'studyDate': '2019-12-05', 'studyTime': '16:06:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160540', 'patientID': 'P20191205160540', 'patientName': 'CN20191205160540', 'studyDate': '2019-12-05', 'studyTime': '16:06:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205160540', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205150157', 'patientID': 'P20191205150157', 'patientName': 'CN20191205150157', 'studyDate': '2019-12-05', 'studyTime': '15:02:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205150157', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205150115', 'patientID': 'P20191205150115', 'patientName': 'CN20191205150115', 'studyDate': '2019-12-05', 'studyTime': '15:01:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205150115', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205150032', 'patientID': 'P20191205150032', 'patientName': 'CN20191205150032', 'studyDate': '2019-12-05', 'studyTime': '15:01:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205150032', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141448', 'patientID': 'P20191205141448', 'patientName': 'CN20191205141448', 'studyDate': '2019-12-05', 'studyTime': '14:15:16', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141448', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141407', 'patientID': 'P20191205141407', 'patientName': 'CN20191205141407', 'studyDate': '2019-12-05', 'studyTime': '14:14:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141407', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141325', 'patientID': 'P20191205141325', 'patientName': 'CN20191205141325', 'studyDate': '2019-12-05', 'studyTime': '14:13:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141325', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141243', 'patientID': 'P20191205141243', 'patientName': 'CN20191205141243', 'studyDate': '2019-12-05', 'studyTime': '14:13:11', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141243', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141202', 'patientID': 'P20191205141202', 'patientName': 'CN20191205141202', 'studyDate': '2019-12-05', 'studyTime': '14:12:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141202', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132846', 'patientID': 'P20191205132846', 'patientName': 'CN20191205132846', 'studyDate': '2019-12-05', 'studyTime': '13:29:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132846', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132328', 'patientID': 'P20191205132328', 'patientName': 'CN20191205132328', 'studyDate': '2019-12-05', 'studyTime': '13:23:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132328', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132247', 'patientID': 'P20191205132247', 'patientName': 'CN20191205132247', 'studyDate': '2019-12-05', 'studyTime': '13:23:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132247', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132205', 'patientID': 'P20191205132205', 'patientName': 'CN20191205132205', 'studyDate': '2019-12-05', 'studyTime': '13:22:32', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132205', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132124', 'patientID': 'P20191205132124', 'patientName': 'CN20191205132124', 'studyDate': '2019-12-05', 'studyTime': '13:21:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132124', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132042', 'patientID': 'P20191205132042', 'patientName': 'CN20191205132042', 'studyDate': '2019-12-05', 'studyTime': '13:21:11', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132042', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205112138', 'patientID': 'P20191205112138', 'patientName': 'CN20191205112138', 'studyDate': '2019-12-05', 'studyTime': '11:22:07', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191205112138', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 11:32:48.933', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205111054', 'patientID': 'P20191205111054', 'patientName': 'CN20191205111054', 'studyDate': '2019-12-05', 'studyTime': '11:11:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191205111054', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205105703', 'patientID': 'P20191205105703', 'patientName': 'CN20191205105703', 'studyDate': '2019-12-05', 'studyTime': '10:57:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205105703', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 11:09:42.360', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 11:09:41.750', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205104158', 'patientID': 'P20191205104158', 'patientName': 'CN20191205104158', 'studyDate': '2019-12-05', 'studyTime': '10:42:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205104158', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-05 10:55:28.760', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 10:55:28.477', 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103833', 'patientID': 'P20191205103833', 'patientName': 'CN20191205103833', 'studyDate': '2019-12-05', 'studyTime': '10:38:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103822', 'patientID': 'P20191205103822', 'patientName': 'CN20191205103822', 'studyDate': '2019-12-05', 'studyTime': '10:38:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103810', 'patientID': 'P20191205103810', 'patientName': 'CN20191205103810', 'studyDate': '2019-12-05', 'studyTime': '10:38:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103739', 'patientID': 'P20191205103739', 'patientName': 'CN20191205103739', 'studyDate': '2019-12-05', 'studyTime': '10:38:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205103739', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180905', 'patientID': 'P20191204180905', 'patientName': 'CN20191204180905', 'studyDate': '2019-12-04', 'studyTime': '18:09:34', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180905', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 18:10:42.540', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:10:42.540', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180321', 'patientID': 'P20191204180321', 'patientName': 'CN20191204180321', 'studyDate': '2019-12-04', 'studyTime': '18:03:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180321', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 18:09:01.890', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:09:01.890', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180240', 'patientID': 'P20191204180240', 'patientName': 'CN20191204180240', 'studyDate': '2019-12-04', 'studyTime': '18:03:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180240', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 18:08:05.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:08:05.100', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180159', 'patientID': 'P20191204180159', 'patientName': 'CN20191204180159', 'studyDate': '2019-12-04', 'studyTime': '18:02:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180159', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 18:07:09.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:07:09.107', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180117', 'patientID': 'P20191204180117', 'patientName': 'CN20191204180117', 'studyDate': '2019-12-04', 'studyTime': '18:01:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180117', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 18:06:12.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:06:12.100', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180036', 'patientID': 'P20191204180036', 'patientName': 'CN20191204180036', 'studyDate': '2019-12-04', 'studyTime': '18:01:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180036', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 18:05:16.110', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:05:16.110', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204174721', 'patientID': 'P20191204174721', 'patientName': 'CN20191204174721', 'studyDate': '2019-12-04', 'studyTime': '17:47:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191204174721', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 17:58:30.657', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204173333', 'patientID': 'P20191204173333', 'patientName': 'CN20191204173333', 'studyDate': '2019-12-04', 'studyTime': '17:34:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204173333', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 17:46:08.787', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 17:46:08.473', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171820', 'patientID': 'P20191204171820', 'patientName': 'CN20191204171820', 'studyDate': '2019-12-04', 'studyTime': '17:18:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204171820', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 17:31:59.473', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 17:31:58.520', 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171454', 'patientID': 'P20191204171454', 'patientName': 'CN20191204171454', 'studyDate': '2019-12-04', 'studyTime': '17:15:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171443', 'patientID': 'P20191204171443', 'patientName': 'CN20191204171443', 'studyDate': '2019-12-04', 'studyTime': '17:14:49', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171430', 'patientID': 'P20191204171430', 'patientName': 'CN20191204171430', 'studyDate': '2019-12-04', 'studyTime': '17:14:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171358', 'patientID': 'P20191204171358', 'patientName': 'CN20191204171358', 'studyDate': '2019-12-04', 'studyTime': '17:14:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204171358', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171127', 'patientID': 'P20191204171127', 'patientName': 'CN20191204171127', 'studyDate': '2019-12-04', 'studyTime': '17:11:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204170844', 'patientID': 'P20191204170844', 'patientName': 'CN20191204170844', 'studyDate': '2019-12-04', 'studyTime': '17:08:54', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204170515', 'patientID': 'P20191204170515', 'patientName': 'CN20191204170515', 'studyDate': '2019-12-04', 'studyTime': '17:05:23', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204170324', 'patientID': 'P20191204170324', 'patientName': 'CN20191204170324', 'studyDate': '2019-12-04', 'studyTime': '17:03:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204165125', 'patientID': 'P20191204165125', 'patientName': 'CN20191204165125', 'studyDate': '2019-12-04', 'studyTime': '16:51:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164959', 'patientID': 'P20191204164959', 'patientName': 'CN20191204164959', 'studyDate': '2019-12-04', 'studyTime': '16:50:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164908', 'patientID': 'P20191204164908', 'patientName': 'CN20191204164908', 'studyDate': '2019-12-04', 'studyTime': '16:49:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164741', 'patientID': 'P20191204164741', 'patientName': 'CN20191204164741', 'studyDate': '2019-12-04', 'studyTime': '16:47:44', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164408', 'patientID': 'P20191204164408', 'patientName': 'CN20191204164408', 'studyDate': '2019-12-04', 'studyTime': '16:44:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164303', 'patientID': 'P20191204164303', 'patientName': 'CN20191204164303', 'studyDate': '2019-12-04', 'studyTime': '16:43:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164234', 'patientID': 'P20191204164234', 'patientName': 'CN20191204164234', 'studyDate': '2019-12-04', 'studyTime': '16:42:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164151', 'patientID': 'P20191204164151', 'patientName': 'CN20191204164151', 'studyDate': '2019-12-04', 'studyTime': '16:41:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164106', 'patientID': 'P20191204164106', 'patientName': 'CN20191204164106', 'studyDate': '2019-12-04', 'studyTime': '16:41:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163431', 'patientID': 'P20191204163431', 'patientName': 'CN20191204163431', 'studyDate': '2019-12-04', 'studyTime': '16:39:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163401', 'patientID': 'P20191204163401', 'patientName': 'CN20191204163401', 'studyDate': '2019-12-04', 'studyTime': '16:39:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163329', 'patientID': 'P20191204163329', 'patientName': 'CN20191204163329', 'studyDate': '2019-12-04', 'studyTime': '16:39:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163019', 'patientID': 'P20191204163019', 'patientName': 'CN20191204163019', 'studyDate': '2019-12-04', 'studyTime': '16:39:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204162909', 'patientID': 'P20191204162909', 'patientName': 'CN20191204162909', 'studyDate': '2019-12-04', 'studyTime': '16:39:19', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204162158', 'patientID': 'P20191204162158', 'patientName': 'CN20191204162158', 'studyDate': '2019-12-04', 'studyTime': '16:39:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204153338', 'patientID': 'P20191204153338', 'patientName': 'CN20191204153338', 'studyDate': '2019-12-04', 'studyTime': '16:39:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204151928', 'patientID': 'P20191204151928', 'patientName': 'CN20191204151928', 'studyDate': '2019-12-04', 'studyTime': '16:39:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204151048', 'patientID': 'P20191204151048', 'patientName': 'CN20191204151048', 'studyDate': '2019-12-04', 'studyTime': '16:39:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204142346', 'patientID': 'P20191204142346', 'patientName': 'CN20191204142346', 'studyDate': '2019-12-04', 'studyTime': '14:23:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204140039', 'patientID': 'P20191204140039', 'patientName': 'CN20191204140039', 'studyDate': '2019-12-04', 'studyTime': '14:01:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204140039', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204135817', 'patientID': 'P20191204135817', 'patientName': 'CN20191204135817', 'studyDate': '2019-12-04', 'studyTime': '13:58:46', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204135817', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204134040', 'patientID': 'P20191204134040', 'patientName': 'CN20191204134040', 'studyDate': '2019-12-04', 'studyTime': '13:41:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191204134040', 'bodayPart': None, 'filmPrintStatus': 1, 'filmStatus': 1, 'filmPrintTime': '2019-12-04 13:51:59.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133958', 'patientID': 'P20191204133958', 'patientName': 'CN20191204133958', 'studyDate': '2019-12-04', 'studyTime': '13:40:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204133958', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133826', 'patientID': 'P20191204133826', 'patientName': 'CN20191204133826', 'studyDate': '2019-12-04', 'studyTime': '13:38:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204133826', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133600', 'patientID': 'P20191204133600', 'patientName': 'CN20191204133600', 'studyDate': '2019-12-04', 'studyTime': '13:36:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133528', 'patientID': 'P20191204133528', 'patientName': 'CN20191204133528', 'studyDate': '2019-12-04', 'studyTime': '13:35:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204132746', 'patientID': 'P20191204132746', 'patientName': 'CN20191204132746', 'studyDate': '2019-12-04', 'studyTime': '13:28:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204132746', 'bodayPart': None, 'filmPrintStatus': 0, 'filmStatus': 1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'memoRecord': None, 'departmentID': None, 'hospitalDistrict': '本院', 'departmentName': '其他科室', 'reportInfos': None, 'filmInfos': None}]
db data: --------------------------------------------------- 
 
79
[{'accessionNumber': 'A20191205170022', 'patientID': 'P20191205170022', 'patientName': 'CN20191205170022', 'studyDate': '2019-12-05', 'studyTime': '17:00:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205170022', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 17:02:00.613', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 17:02:00.613', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165452', 'patientID': 'P20191205165452', 'patientName': 'CN20191205165452', 'studyDate': '2019-12-05', 'studyTime': '16:55:19', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165452', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 17:00:16.960', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 17:00:16.960', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165411', 'patientID': 'P20191205165411', 'patientName': 'CN20191205165411', 'studyDate': '2019-12-05', 'studyTime': '16:54:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165411', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 16:59:20.830', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:59:20.830', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165330', 'patientID': 'P20191205165330', 'patientName': 'CN20191205165330', 'studyDate': '2019-12-05', 'studyTime': '16:53:58', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165330', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 16:58:25.297', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:58:25.307', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165248', 'patientID': 'P20191205165248', 'patientName': 'CN20191205165248', 'studyDate': '2019-12-05', 'studyTime': '16:53:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165248', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 16:57:28.997', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:57:28.997', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205165207', 'patientID': 'P20191205165207', 'patientName': 'CN20191205165207', 'studyDate': '2019-12-05', 'studyTime': '16:52:33', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205165207', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 16:56:33.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:56:33.210', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205163852', 'patientID': 'P20191205163852', 'patientName': 'CN20191205163852', 'studyDate': '2019-12-05', 'studyTime': '16:39:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191205163852', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 16:50:00.180', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205162504', 'patientID': 'P20191205162504', 'patientName': 'CN20191205162504', 'studyDate': '2019-12-05', 'studyTime': '16:25:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205162504', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 16:37:40.173', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:37:39.237', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205161000', 'patientID': 'P20191205161000', 'patientName': 'CN20191205161000', 'studyDate': '2019-12-05', 'studyTime': '16:10:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205161000', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 16:23:30.423', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 16:23:29.423', 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160633', 'patientID': 'P20191205160633', 'patientName': 'CN20191205160633', 'studyDate': '2019-12-05', 'studyTime': '16:06:41', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160622', 'patientID': 'P20191205160622', 'patientName': 'CN20191205160622', 'studyDate': '2019-12-05', 'studyTime': '16:06:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160611', 'patientID': 'P20191205160611', 'patientName': 'CN20191205160611', 'studyDate': '2019-12-05', 'studyTime': '16:06:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205160540', 'patientID': 'P20191205160540', 'patientName': 'CN20191205160540', 'studyDate': '2019-12-05', 'studyTime': '16:06:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205160540', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205150157', 'patientID': 'P20191205150157', 'patientName': 'CN20191205150157', 'studyDate': '2019-12-05', 'studyTime': '15:02:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205150157', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205150115', 'patientID': 'P20191205150115', 'patientName': 'CN20191205150115', 'studyDate': '2019-12-05', 'studyTime': '15:01:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205150115', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205150032', 'patientID': 'P20191205150032', 'patientName': 'CN20191205150032', 'studyDate': '2019-12-05', 'studyTime': '15:01:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205150032', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141448', 'patientID': 'P20191205141448', 'patientName': 'CN20191205141448', 'studyDate': '2019-12-05', 'studyTime': '14:15:16', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141448', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141407', 'patientID': 'P20191205141407', 'patientName': 'CN20191205141407', 'studyDate': '2019-12-05', 'studyTime': '14:14:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141407', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141325', 'patientID': 'P20191205141325', 'patientName': 'CN20191205141325', 'studyDate': '2019-12-05', 'studyTime': '14:13:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141325', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141243', 'patientID': 'P20191205141243', 'patientName': 'CN20191205141243', 'studyDate': '2019-12-05', 'studyTime': '14:13:11', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141243', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205141202', 'patientID': 'P20191205141202', 'patientName': 'CN20191205141202', 'studyDate': '2019-12-05', 'studyTime': '14:12:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205141202', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132846', 'patientID': 'P20191205132846', 'patientName': 'CN20191205132846', 'studyDate': '2019-12-05', 'studyTime': '13:29:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132846', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132328', 'patientID': 'P20191205132328', 'patientName': 'CN20191205132328', 'studyDate': '2019-12-05', 'studyTime': '13:23:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132328', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132247', 'patientID': 'P20191205132247', 'patientName': 'CN20191205132247', 'studyDate': '2019-12-05', 'studyTime': '13:23:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132247', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132205', 'patientID': 'P20191205132205', 'patientName': 'CN20191205132205', 'studyDate': '2019-12-05', 'studyTime': '13:22:32', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132205', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132124', 'patientID': 'P20191205132124', 'patientName': 'CN20191205132124', 'studyDate': '2019-12-05', 'studyTime': '13:21:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132124', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205132042', 'patientID': 'P20191205132042', 'patientName': 'CN20191205132042', 'studyDate': '2019-12-05', 'studyTime': '13:21:11', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205132042', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205112138', 'patientID': 'P20191205112138', 'patientName': 'CN20191205112138', 'studyDate': '2019-12-05', 'studyTime': '11:22:07', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191205112138', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 11:32:48.933', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205111054', 'patientID': 'P20191205111054', 'patientName': 'CN20191205111054', 'studyDate': '2019-12-05', 'studyTime': '11:11:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191205111054', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205105703', 'patientID': 'P20191205105703', 'patientName': 'CN20191205105703', 'studyDate': '2019-12-05', 'studyTime': '10:57:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205105703', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 11:09:42.360', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 11:09:41.750', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205104158', 'patientID': 'P20191205104158', 'patientName': 'CN20191205104158', 'studyDate': '2019-12-05', 'studyTime': '10:42:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205104158', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-05 10:55:28.760', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-05 10:55:28.477', 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103833', 'patientID': 'P20191205103833', 'patientName': 'CN20191205103833', 'studyDate': '2019-12-05', 'studyTime': '10:38:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103822', 'patientID': 'P20191205103822', 'patientName': 'CN20191205103822', 'studyDate': '2019-12-05', 'studyTime': '10:38:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103810', 'patientID': 'P20191205103810', 'patientName': 'CN20191205103810', 'studyDate': '2019-12-05', 'studyTime': '10:38:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191205103739', 'patientID': 'P20191205103739', 'patientName': 'CN20191205103739', 'studyDate': '2019-12-05', 'studyTime': '10:38:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191205103739', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180905', 'patientID': 'P20191204180905', 'patientName': 'CN20191204180905', 'studyDate': '2019-12-04', 'studyTime': '18:09:34', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180905', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 18:10:42.540', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:10:42.540', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180321', 'patientID': 'P20191204180321', 'patientName': 'CN20191204180321', 'studyDate': '2019-12-04', 'studyTime': '18:03:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180321', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 18:09:01.890', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:09:01.890', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180240', 'patientID': 'P20191204180240', 'patientName': 'CN20191204180240', 'studyDate': '2019-12-04', 'studyTime': '18:03:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180240', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 18:08:05.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:08:05.100', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180159', 'patientID': 'P20191204180159', 'patientName': 'CN20191204180159', 'studyDate': '2019-12-04', 'studyTime': '18:02:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180159', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 18:07:09.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:07:09.107', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180117', 'patientID': 'P20191204180117', 'patientName': 'CN20191204180117', 'studyDate': '2019-12-04', 'studyTime': '18:01:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180117', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 18:06:12.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:06:12.100', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204180036', 'patientID': 'P20191204180036', 'patientName': 'CN20191204180036', 'studyDate': '2019-12-04', 'studyTime': '18:01:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204180036', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 18:05:16.110', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 18:05:16.110', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204174721', 'patientID': 'P20191204174721', 'patientName': 'CN20191204174721', 'studyDate': '2019-12-04', 'studyTime': '17:47:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191204174721', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 17:58:30.657', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204173333', 'patientID': 'P20191204173333', 'patientName': 'CN20191204173333', 'studyDate': '2019-12-04', 'studyTime': '17:34:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204173333', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 17:46:08.787', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 17:46:08.473', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171820', 'patientID': 'P20191204171820', 'patientName': 'CN20191204171820', 'studyDate': '2019-12-04', 'studyTime': '17:18:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204171820', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 17:31:59.473', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-12-04 17:31:58.520', 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171454', 'patientID': 'P20191204171454', 'patientName': 'CN20191204171454', 'studyDate': '2019-12-04', 'studyTime': '17:15:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171443', 'patientID': 'P20191204171443', 'patientName': 'CN20191204171443', 'studyDate': '2019-12-04', 'studyTime': '17:14:49', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171430', 'patientID': 'P20191204171430', 'patientName': 'CN20191204171430', 'studyDate': '2019-12-04', 'studyTime': '17:14:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171358', 'patientID': 'P20191204171358', 'patientName': 'CN20191204171358', 'studyDate': '2019-12-04', 'studyTime': '17:14:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204171358', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204171127', 'patientID': 'P20191204171127', 'patientName': 'CN20191204171127', 'studyDate': '2019-12-04', 'studyTime': '17:11:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204170844', 'patientID': 'P20191204170844', 'patientName': 'CN20191204170844', 'studyDate': '2019-12-04', 'studyTime': '17:08:54', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204170515', 'patientID': 'P20191204170515', 'patientName': 'CN20191204170515', 'studyDate': '2019-12-04', 'studyTime': '17:05:23', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204170324', 'patientID': 'P20191204170324', 'patientName': 'CN20191204170324', 'studyDate': '2019-12-04', 'studyTime': '17:03:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204165125', 'patientID': 'P20191204165125', 'patientName': 'CN20191204165125', 'studyDate': '2019-12-04', 'studyTime': '16:51:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164959', 'patientID': 'P20191204164959', 'patientName': 'CN20191204164959', 'studyDate': '2019-12-04', 'studyTime': '16:50:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164908', 'patientID': 'P20191204164908', 'patientName': 'CN20191204164908', 'studyDate': '2019-12-04', 'studyTime': '16:49:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164741', 'patientID': 'P20191204164741', 'patientName': 'CN20191204164741', 'studyDate': '2019-12-04', 'studyTime': '16:47:44', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164408', 'patientID': 'P20191204164408', 'patientName': 'CN20191204164408', 'studyDate': '2019-12-04', 'studyTime': '16:44:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164303', 'patientID': 'P20191204164303', 'patientName': 'CN20191204164303', 'studyDate': '2019-12-04', 'studyTime': '16:43:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164234', 'patientID': 'P20191204164234', 'patientName': 'CN20191204164234', 'studyDate': '2019-12-04', 'studyTime': '16:42:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164151', 'patientID': 'P20191204164151', 'patientName': 'CN20191204164151', 'studyDate': '2019-12-04', 'studyTime': '16:41:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204164106', 'patientID': 'P20191204164106', 'patientName': 'CN20191204164106', 'studyDate': '2019-12-04', 'studyTime': '16:41:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163431', 'patientID': 'P20191204163431', 'patientName': 'CN20191204163431', 'studyDate': '2019-12-04', 'studyTime': '16:39:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163401', 'patientID': 'P20191204163401', 'patientName': 'CN20191204163401', 'studyDate': '2019-12-04', 'studyTime': '16:39:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163329', 'patientID': 'P20191204163329', 'patientName': 'CN20191204163329', 'studyDate': '2019-12-04', 'studyTime': '16:39:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204163019', 'patientID': 'P20191204163019', 'patientName': 'CN20191204163019', 'studyDate': '2019-12-04', 'studyTime': '16:39:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204162909', 'patientID': 'P20191204162909', 'patientName': 'CN20191204162909', 'studyDate': '2019-12-04', 'studyTime': '16:39:19', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204162158', 'patientID': 'P20191204162158', 'patientName': 'CN20191204162158', 'studyDate': '2019-12-04', 'studyTime': '16:39:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204153338', 'patientID': 'P20191204153338', 'patientName': 'CN20191204153338', 'studyDate': '2019-12-04', 'studyTime': '16:39:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204151928', 'patientID': 'P20191204151928', 'patientName': 'CN20191204151928', 'studyDate': '2019-12-04', 'studyTime': '16:39:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204151048', 'patientID': 'P20191204151048', 'patientName': 'CN20191204151048', 'studyDate': '2019-12-04', 'studyTime': '16:39:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204142346', 'patientID': 'P20191204142346', 'patientName': 'CN20191204142346', 'studyDate': '2019-12-04', 'studyTime': '14:23:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204140039', 'patientID': 'P20191204140039', 'patientName': 'CN20191204140039', 'studyDate': '2019-12-04', 'studyTime': '14:01:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204140039', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204135817', 'patientID': 'P20191204135817', 'patientName': 'CN20191204135817', 'studyDate': '2019-12-04', 'studyTime': '13:58:46', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204135817', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204134040', 'patientID': 'P20191204134040', 'patientName': 'CN20191204134040', 'studyDate': '2019-12-04', 'studyTime': '13:41:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191204134040', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-12-04 13:51:59.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133958', 'patientID': 'P20191204133958', 'patientName': 'CN20191204133958', 'studyDate': '2019-12-04', 'studyTime': '13:40:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204133958', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133826', 'patientID': 'P20191204133826', 'patientName': 'CN20191204133826', 'studyDate': '2019-12-04', 'studyTime': '13:38:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204133826', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133600', 'patientID': 'P20191204133600', 'patientName': 'CN20191204133600', 'studyDate': '2019-12-04', 'studyTime': '13:36:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204133528', 'patientID': 'P20191204133528', 'patientName': 'CN20191204133528', 'studyDate': '2019-12-04', 'studyTime': '13:35:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191204132746', 'patientID': 'P20191204132746', 'patientName': 'CN20191204132746', 'studyDate': '2019-12-04', 'studyTime': '13:28:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191204132746', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}]
Platform.platform_worklist_fuzzy_query_by_patientID: There are [79] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientID: Compare the data between API and database failed 
&lt;class 'KeyError'&gt;</msg>
<msg timestamp="20191205 17:02:01.322" level="FAIL">'filmStatus'</msg>
<msg timestamp="20191205 17:02:01.322" level="DEBUG">Traceback (most recent call last):
  File "C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_PlatformLibrary\Platform.py", line 362, in platform_worklist_fuzzy_query_by_patientID
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191205 17:02:01.088" endtime="20191205 17:02:01.322"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191205 17:02:01.041" endtime="20191205 17:02:01.322" critical="yes">'filmStatus'</status>
</test>
<test id="s1-t13" name="SmokeTest_0013_Core_4182_07.01.02 Worklist workflow fuzzy query by accession number.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.322" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191205 17:02:01.322" endtime="20191205 17:02:01.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.322" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191205 17:02:01.322" endtime="20191205 17:02:01.322"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191205 17:02:01.322" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.338" level="DEBUG">http://10.112.20.150:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191205 17:02:01.338" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.401" level="DEBUG">http://10.112.20.150:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191205 17:02:01.416" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191205 17:02:01.416" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191205 17:02:01.322" endtime="20191205 17:02:01.416"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 17:02:01.416" endtime="20191205 17:02:01.416"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Accn" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_accn</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result_accn}</var>
</assign>
<msg timestamp="20191205 17:02:01.416" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.432" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.432" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.463" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:01.463" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.479" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.479" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.494" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:01.510" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.526" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.526" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.557" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13280</msg>
<msg timestamp="20191205 17:02:01.557" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.572" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.572" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.604" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12799</msg>
<msg timestamp="20191205 17:02:01.619" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.619" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.635" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.651" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12046</msg>
<msg timestamp="20191205 17:02:01.697" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_accn: There are [79] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_accn:Compare the data between database and API failed.
&lt;class 'KeyError'&gt;</msg>
<msg timestamp="20191205 17:02:01.697" level="FAIL">'filmStatus'</msg>
<msg timestamp="20191205 17:02:01.697" level="DEBUG">Traceback (most recent call last):
  File "C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_PlatformLibrary\Platform.py", line 516, in platform_worklist_fuzzy_query_by_accn
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191205 17:02:01.416" endtime="20191205 17:02:01.697"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191205 17:02:01.322" endtime="20191205 17:02:01.697" critical="yes">'filmStatus'</status>
</test>
<test id="s1-t14" name="SmokeTest_0014_Core_4183_07.01.03 Worklist workflow fuzzy query by patient name.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.697" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191205 17:02:01.697" endtime="20191205 17:02:01.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:01.697" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191205 17:02:01.697" endtime="20191205 17:02:01.697"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191205 17:02:01.697" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.713" level="DEBUG">http://10.112.20.150:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191205 17:02:01.713" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.760" level="DEBUG">http://10.112.20.150:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191205 17:02:01.776" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191205 17:02:01.776" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191205 17:02:01.697" endtime="20191205 17:02:01.776"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 17:02:01.776" endtime="20191205 17:02:01.776"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patientname" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientname</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191205 17:02:01.776" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.791" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.791" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.822" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:01.822" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.838" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.838" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.854" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:01.869" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.885" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.885" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.901" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13280</msg>
<msg timestamp="20191205 17:02:01.916" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.932" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.932" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.963" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12799</msg>
<msg timestamp="20191205 17:02:01.963" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:01.979" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:01.979" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.010" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12046</msg>
<msg timestamp="20191205 17:02:02.026" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patientname: There are [79] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientname:Compare the data between database and API failed.
&lt;class 'KeyError'&gt;</msg>
<msg timestamp="20191205 17:02:02.026" level="FAIL">'filmStatus'</msg>
<msg timestamp="20191205 17:02:02.026" level="DEBUG">Traceback (most recent call last):
  File "C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_PlatformLibrary\Platform.py", line 670, in platform_worklist_fuzzy_query_by_patientname
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191205 17:02:01.776" endtime="20191205 17:02:02.026"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191205 17:02:01.697" endtime="20191205 17:02:02.026" critical="yes">'filmStatus'</status>
</test>
<test id="s1-t15" name="SmokeTest_0015_Core_4184_07.01.04 Worklist workflow create a short cut with condition of patient type.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description: \n 1. Prepare some patients/exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:02.026" level="INFO">Step 1 
Description: 
1. Prepare some patients/exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191205 17:02:02.026" endtime="20191205 17:02:02.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n 1.Clear the query condition with API in worklist. \n Expected Result:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:02.026" level="INFO">Step 2 
Description:
1.Clear the query condition with API in worklist. 
Expected Result:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191205 17:02:02.026" endtime="20191205 17:02:02.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n 1. Use the query API to query all records of one patient type. \n Expected:\n 1. The query result should be correct. \n</arg>
</arguments>
<msg timestamp="20191205 17:02:02.026" level="INFO">Step 3 
Description: 
1. Use the query API to query all records of one patient type. 
Expected:
1. The query result should be correct. 
</msg>
<status status="PASS" starttime="20191205 17:02:02.026" endtime="20191205 17:02:02.026"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191205 17:02:02.026" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.041" level="DEBUG">http://10.112.20.150:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191205 17:02:02.041" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.088" level="DEBUG">http://10.112.20.150:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191205 17:02:02.088" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191205 17:02:02.088" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191205 17:02:02.026" endtime="20191205 17:02:02.088"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191205 17:02:02.088" endtime="20191205 17:02:02.088"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patienttype" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patienttype</doc>
<arguments>
<arg>门诊病人,住院病人</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191205 17:02:02.104" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.104" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:02.119" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.151" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:02.151" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.166" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:02.166" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.182" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13341</msg>
<msg timestamp="20191205 17:02:02.198" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.198" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:02.213" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.229" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 13280</msg>
<msg timestamp="20191205 17:02:02.244" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.260" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:02.260" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.291" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12799</msg>
<msg timestamp="20191205 17:02:02.291" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.307" level="DEBUG">http://10.112.20.150:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191205 17:02:02.307" level="DEBUG">Starting new HTTP connection (1): 10.112.20.150:80</msg>
<msg timestamp="20191205 17:02:02.338" level="DEBUG">http://10.112.20.150:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12046</msg>
<msg timestamp="20191205 17:02:02.354" level="INFO">2,1
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patienttype: There are [79] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patienttype:Try to compare the data between database and APi failed.</msg>
<msg timestamp="20191205 17:02:02.354" level="FAIL">TypeError: 'str' object is not callable</msg>
<msg timestamp="20191205 17:02:02.354" level="DEBUG">Traceback (most recent call last):
  File "C:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_PlatformLibrary\Platform.py", line 846, in platform_worklist_fuzzy_query_by_patienttype
    print(type(e))</msg>
<status status="FAIL" starttime="20191205 17:02:02.088" endtime="20191205 17:02:02.354"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191205 17:02:02.026" endtime="20191205 17:02:02.354" critical="yes">TypeError: 'str' object is not callable</status>
</test>
<status status="FAIL" starttime="20191205 16:05:08.830" endtime="20191205 17:02:02.354"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="4">Critical Tests</stat>
<stat pass="11" fail="4">All Tests</stat>
</total>
<tag>
<stat pass="11" fail="4">Smoke</stat>
</tag>
<suite>
<stat pass="11" fail="4" id="s1" name="SmokeTest">SmokeTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
