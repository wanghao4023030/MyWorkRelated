<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on win32)" generated="20191111 16:42:16.613" rpa="false">
<suite id="s1" name="SmokeTest" source="D:\PUMA_AUTO\RF_PUMA\PUMA\SmokeTest.robot">
<test id="s1-t1" name="SmokeTest_001_Core_4170_01.01.01 OCR Image process failed(9).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step1 \nDescription:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:17.127" level="INFO">Step1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191111 16:42:17.127" endtime="20191111 16:42:17.127"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:42:17.133" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:42:17.167" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:42:17.169" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:42:17.126858", "UpdateDT": "2019-11-11 16:42:17.126858", "PatientID": "P20191111164217126858", "AccessionNumber": "A20191111164217126858", "StudyInstanceUID": "UID20191111164217126858", "NameCN": "CN20191111164217126858", "NameEN": "EN20191111164217126858", "Gender": "M", "Birthday": "1968-11-23", "Modality": "US", "ModalityName": "MR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:42:17.126858", "RegisterDT": "2019-11-11 16:42:17.126858", "ExamDT": "2019-11-11 16:42:17.126858", "ReportDT": "2019-11-11 16:42:17.126858", "SubmitDT": "2019-11-11 16:42:17.126858", "ApproveDT": "2019-11-11 16:42:17.126858", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164217126858", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:42:17.169" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:42:17.126858", "UpdateDT": "2019-11-11 16:42:17.126858", "PatientID": "P20191111164217126858", "AccessionNumber": "A20191111164217126858", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:42:17.127" endtime="20191111 16:42:17.169"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:42:17.170" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:42:17.126858', 'UpdateDT': '2019-11-11 16:42:17.126858', 'PatientID': 'P20191111164217126858', 'AccessionNumber': 'A20191111164217126858', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:42:17.170" endtime="20191111 16:42:17.170"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:42:17.243" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:42:17.171" endtime="20191111 16:42:17.243"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:42:17.281" level="INFO">${patientID} = ['P20191111164217126858']</msg>
<status status="PASS" starttime="20191111 16:42:17.243" endtime="20191111 16:42:17.281"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191111 16:42:17.319" level="INFO">${Accessionnumber} = ['A20191111164217126858']</msg>
<status status="PASS" starttime="20191111 16:42:17.281" endtime="20191111 16:42:17.319"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:42:17.320" endtime="20191111 16:42:17.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:17.321" level="INFO">Step2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191111 16:42:17.320" endtime="20191111 16:42:17.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step3\n Description:\n 1. Delete the patient information from RIS or local table in step1. \nExpected:\n The patient can delete successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:17.321" level="INFO">Step3
Description:
1. Delete the patient information from RIS or local table in step1. 
Expected:
The patient can delete successfully.</msg>
<status status="PASS" starttime="20191111 16:42:17.321" endtime="20191111 16:42:17.321"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${delete_result}</var>
</assign>
<msg timestamp="20191111 16:42:17.350" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191111 16:42:17.350" level="INFO">${delete_result} = True</msg>
<status status="PASS" starttime="20191111 16:42:17.321" endtime="20191111 16:42:17.350"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${delete_result} == True</arg>
<arg>The patient delete successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:42:17.350" endtime="20191111 16:42:17.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:17.351" level="INFO">Step 4 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191111 16:42:17.351" endtime="20191111 16:42:17.351"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:42:58.584" level="INFO">Film.film_create_film_with_sample:Film archived failed: {"Status": false, "PatientID": "P20191111164217126858", "AccessionNumber": "A20191111164217126858", "FilmSessionLable": "20191111164217351872", "DeliveryJob_status": 9, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:42:58.584" level="INFO">${Print_res} = {"Status": false, "PatientID": "P20191111164217126858", "AccessionNumber": "A20191111164217126858", "FilmSessionLable": "20191111164217351872", "DeliveryJob_status": 9, "WaterMark_Path": "D:\\PUMA_AUT...</msg>
<status status="PASS" starttime="20191111 16:42:17.352" endtime="20191111 16:42:58.584"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:42:58.585" level="INFO">${Print_Res_Json} = {'Status': False, 'PatientID': 'P20191111164217126858', 'AccessionNumber': 'A20191111164217126858', 'FilmSessionLable': '20191111164217351872', 'DeliveryJob_status': 9, 'WaterMark_Path': 'D:\\PUMA_AUT...</msg>
<status status="PASS" starttime="20191111 16:42:58.584" endtime="20191111 16:42:58.585"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:42:58.623" level="INFO">${Print_Result} = [False]</msg>
<status status="PASS" starttime="20191111 16:42:58.585" endtime="20191111 16:42:58.623"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.624" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191111 16:42:58.623" endtime="20191111 16:42:58.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 9 means grammar configured but identify failed.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.624" level="INFO">Step 5
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 9 means grammar configured but identify failed.</msg>
<status status="PASS" starttime="20191111 16:42:58.624" endtime="20191111 16:42:58.624"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191111 16:42:58.674" level="INFO">${Job_status} = [9]</msg>
<status status="PASS" starttime="20191111 16:42:58.624" endtime="20191111 16:42:58.674"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191111 16:42:58.674" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191111 16:42:58.675" level="INFO">${Job_status} = 9</msg>
<status status="PASS" starttime="20191111 16:42:58.674" endtime="20191111 16:42:58.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>9</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 9.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.675" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:42:58.675" endtime="20191111 16:42:58.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.676" level="INFO">Step 6:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191111 16:42:58.675" endtime="20191111 16:42:58.676"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191111 16:42:58.678" level="INFO">Film.film_check_archive_in_filminfo_table: Data exception!
Film.film_check_archive_in_filminfo_table:There is [0] records for patient[P20191111164217126858, A20191111164217126858] and filmsessionlable is [20191111164217351872]</msg>
<msg timestamp="20191111 16:42:58.678" level="INFO">${Archive_Filminfo_Table_Result} = False</msg>
<status status="PASS" starttime="20191111 16:42:58.676" endtime="20191111 16:42:58.678"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_filminfo table.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:42:58.678" endtime="20191111 16:42:58.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.679" level="INFO">Step 7:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191111 16:42:58.679" endtime="20191111 16:42:58.679"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191111 16:42:58.681" level="INFO">Film.film_check_archive_in_examinfo_table: There are no film records in wggc.dbo.Examinfo of patient [A20191111164217126858, P20191111164217126858]</msg>
<msg timestamp="20191111 16:42:58.682" level="INFO">${Archived_Examinfo_Table_result} = False</msg>
<status status="PASS" starttime="20191111 16:42:58.679" endtime="20191111 16:42:58.682"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_examinfo table.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:42:58.682" endtime="20191111 16:42:58.682"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:42:17.126" endtime="20191111 16:42:58.682" critical="yes"></status>
</test>
<test id="s1-t2" name="SmokeTest_002_Core_4172_01.01.02 OCR Image process success(2).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.684" level="INFO">Step 1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191111 16:42:58.683" endtime="20191111 16:42:58.684"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:42:58.687" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:42:58.697" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:42:58.699" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:42:58.683681", "UpdateDT": "2019-11-11 16:42:58.683681", "PatientID": "P20191111164258683681", "AccessionNumber": "A20191111164258683681", "StudyInstanceUID": "UID20191111164258683681", "NameCN": "CN20191111164258683681", "NameEN": "EN20191111164258683681", "Gender": "F", "Birthday": "1967-11-24", "Modality": "MR", "ModalityName": "RF", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:42:58.683681", "RegisterDT": "2019-11-11 16:42:58.683681", "ExamDT": "2019-11-11 16:42:58.683681", "ReportDT": "2019-11-11 16:42:58.683681", "SubmitDT": "2019-11-11 16:42:58.683681", "ApproveDT": "2019-11-11 16:42:58.683681", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164258683681", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:42:58.699" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:42:58.683681", "UpdateDT": "2019-11-11 16:42:58.683681", "PatientID": "P20191111164258683681", "AccessionNumber": "A20191111164258683681", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:42:58.684" endtime="20191111 16:42:58.699"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:42:58.699" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:42:58.683681', 'UpdateDT': '2019-11-11 16:42:58.683681', 'PatientID': 'P20191111164258683681', 'AccessionNumber': 'A20191111164258683681', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:42:58.699" endtime="20191111 16:42:58.699"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:42:58.737" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:42:58.700" endtime="20191111 16:42:58.737"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:42:58.775" level="INFO">${patientID} = ['P20191111164258683681']</msg>
<status status="PASS" starttime="20191111 16:42:58.737" endtime="20191111 16:42:58.776"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191111 16:42:58.813" level="INFO">${Accessionnumber} = ['A20191111164258683681']</msg>
<status status="PASS" starttime="20191111 16:42:58.776" endtime="20191111 16:42:58.813"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0] == True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:42:58.813" endtime="20191111 16:42:58.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.814" level="INFO">Step 2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191111 16:42:58.814" endtime="20191111 16:42:58.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191111 16:42:58.815" level="INFO">Step 3 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191111 16:42:58.814" endtime="20191111 16:42:58.815"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:43:29.500" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191111164258683681", "AccessionNumber": "A20191111164258683681", "FilmSessionLable": "20191111164258814804", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:43:29.500" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191111164258683681", "AccessionNumber": "A20191111164258683681", "FilmSessionLable": "20191111164258814804", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:42:58.815" endtime="20191111 16:43:29.500"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:43:29.501" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191111164258683681', 'AccessionNumber': 'A20191111164258683681', 'FilmSessionLable': '20191111164258814804', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:43:29.500" endtime="20191111 16:43:29.501"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:43:29.539" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:29.501" endtime="20191111 16:43:29.539"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:29.539" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191111 16:43:29.539" endtime="20191111 16:43:29.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 2 means have condifuration but indentfy successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:29.540" level="INFO">Step 4
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 2 means have condifuration but indentfy successfully.</msg>
<status status="PASS" starttime="20191111 16:43:29.540" endtime="20191111 16:43:29.540"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191111 16:43:29.578" level="INFO">${Job_status} = [2]</msg>
<status status="PASS" starttime="20191111 16:43:29.540" endtime="20191111 16:43:29.578"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191111 16:43:29.579" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191111 16:43:29.579" level="INFO">${Job_status} = 2</msg>
<status status="PASS" starttime="20191111 16:43:29.578" endtime="20191111 16:43:29.579"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>2</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 2.</arg>
</arguments>
<msg timestamp="20191111 16:43:29.579" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:43:29.579" endtime="20191111 16:43:29.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191111 16:43:29.580" level="INFO">Step 5:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191111 16:43:29.579" endtime="20191111 16:43:29.580"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191111 16:43:29.582" level="INFO">Film.film_check_archive_in_filminfo_table:There is [1] records for patient[P20191111164258683681, A20191111164258683681] and filmsessionlable is [20191111164258814804]</msg>
<msg timestamp="20191111 16:43:29.582" level="INFO">${Archive_Filminfo_Table_Result} = True</msg>
<status status="PASS" starttime="20191111 16:43:29.580" endtime="20191111 16:43:29.582"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:29.582" endtime="20191111 16:43:29.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191111 16:43:29.583" level="INFO">Step 6:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191111 16:43:29.583" endtime="20191111 16:43:29.583"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191111 16:43:29.586" level="INFO">Film.film_check_archive_in_examinfo_table: There are [1] new records archived in wggc.dbo.Examinfo for film of patient [A20191111164258683681, P20191111164258683681]</msg>
<msg timestamp="20191111 16:43:29.586" level="INFO">${Archived_Examinfo_Table_result} = True</msg>
<status status="PASS" starttime="20191111 16:43:29.583" endtime="20191111 16:43:29.586"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:29.586" endtime="20191111 16:43:29.586"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:42:58.683" endtime="20191111 16:43:29.586" critical="yes"></status>
</test>
<test id="s1-t3" name="SmokeTest_003_Core_4713_02.01.01 Report receive from web service NotifyServer.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:29.588" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191111 16:43:29.588" endtime="20191111 16:43:29.588"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:43:29.591" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:43:29.606" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:43:29.607" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:43:29.587752", "UpdateDT": "2019-11-11 16:43:29.587752", "PatientID": "P20191111164329587752", "AccessionNumber": "A20191111164329587752", "StudyInstanceUID": "UID20191111164329587752", "NameCN": "CN20191111164329587752", "NameEN": "EN20191111164329587752", "Gender": "F", "Birthday": "1928-12-03", "Modality": "CT", "ModalityName": "US", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:43:29.587752", "RegisterDT": "2019-11-11 16:43:29.587752", "ExamDT": "2019-11-11 16:43:29.587752", "ReportDT": "2019-11-11 16:43:29.587752", "SubmitDT": "2019-11-11 16:43:29.587752", "ApproveDT": "2019-11-11 16:43:29.587752", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164329587752", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:43:29.607" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:43:29.587752", "UpdateDT": "2019-11-11 16:43:29.587752", "PatientID": "P20191111164329587752", "AccessionNumber": "A20191111164329587752", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:29.588" endtime="20191111 16:43:29.607"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:43:29.607" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:43:29.587752', 'UpdateDT': '2019-11-11 16:43:29.587752', 'PatientID': 'P20191111164329587752', 'AccessionNumber': 'A20191111164329587752', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:29.607" endtime="20191111 16:43:29.608"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:43:29.646" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:29.608" endtime="20191111 16:43:29.646"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:29.646" endtime="20191111 16:43:29.646"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:43:29.684" level="INFO">${patientID} = ['P20191111164329587752']</msg>
<status status="PASS" starttime="20191111 16:43:29.646" endtime="20191111 16:43:29.684"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191111 16:43:29.722" level="INFO">${AccessionNumber} = ['A20191111164329587752']</msg>
<status status="PASS" starttime="20191111 16:43:29.684" endtime="20191111 16:43:29.722"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191111 16:43:29.760" level="INFO">${PatientName} = ['CN20191111164329587752']</msg>
<status status="PASS" starttime="20191111 16:43:29.723" endtime="20191111 16:43:29.760"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191111 16:43:29.761" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191111 16:43:29.761" endtime="20191111 16:43:29.761"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf,E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191111 16:43:29.761" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf,E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191111 16:43:29.761" endtime="20191111 16:43:29.761"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>,</arg>
</arguments>
<assign>
<var>${PDF_Password}</var>
</assign>
<msg timestamp="20191111 16:43:29.762" level="INFO">${PDF_Password} = ,</msg>
<status status="PASS" starttime="20191111 16:43:29.762" endtime="20191111 16:43:29.762"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191111 16:43:34.763" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191111 16:43:29.762" endtime="20191111 16:43:34.763"></status>
</kw>
<kw name="Report Create By Notifyserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_notifyserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
<arg>${PDF_Password}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:43:34.765" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191111 16:43:34.765" level="DEBUG">opening (http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl)</msg>
<msg timestamp="20191111 16:43:34.782" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://carestream.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="http://carestream.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;\r\n      &lt;s:element name="NotifyExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ExamInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFile"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFileResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyPatientInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PatientInfoEx"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyPatientInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrl"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFile" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="NotifyServiceSoap"&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportFileSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportFileSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamReservationInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamReservationInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyPatientInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyPatientInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlForQrCodeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlForQrCodeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap12" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="NotifyService"&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap" binding="tns:NotifyServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.84/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap12" binding="tns:NotifyServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.84/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 12 (ms)</msg>
<msg timestamp="20191111 16:43:34.795" level="DEBUG">Element:0x396f0f0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f190, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f1b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f1d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f1f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f270, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.796" level="DEBUG">Element:0x396f290, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f210, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f2b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f2d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f2f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f310, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f330, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f350, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.797" level="DEBUG">Element:0x396f3b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f3d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f3f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f450, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f4b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f4d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.798" level="DEBUG">Element:0x396f4f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f510, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f5b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f5d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f5f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f610, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.799" level="DEBUG">Element:0x396f630, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f690, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f710, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f770, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f790, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f7b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f810, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f930, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.800" level="DEBUG">Element:0x396f950, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396f970, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396f990, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396fa30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396fa90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396fa70, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396fb30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396fbb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396fbd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.801" level="DEBUG">Element:0x396fbf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fc10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fc50, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fc70, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fb90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fcf0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fd70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fdf0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fe70, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:43:34.802" level="DEBUG">Element:0x396fed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396ff10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396ff30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396ff50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396ff70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396ffb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396ffd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396fff0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396ff90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x396fef0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.803" level="DEBUG">Element:0x397b050, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.804" level="DEBUG">Element:0x397b0b0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.804" level="DEBUG">Element:0x397b130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.804" level="DEBUG">Element:0x397b190, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.804" level="DEBUG">Element:0x397b1d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.804" level="DEBUG">Element:0x397b250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.804" level="DEBUG">Element:0x397b2b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.804" level="DEBUG">Element:0x397b2f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:34.811" level="DEBUG">loaded:

schema collection
   Schema:0x396f030
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x396f050 name="NotifyExamInfo"&gt;
         &lt;Complex:0x396f070&gt;
            &lt;Sequence:0x396f0b0&gt;
               &lt;Element:0x396f0f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x396f090 name="ExamInfo"&gt;
         &lt;Sequence:0x396f0d0&gt;
            &lt;Element:0x396f150 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f190 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f1b0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f1d0 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f1f0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f230 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f250 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f270 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f290 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f210 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f2b0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f2d0 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f2f0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f310 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f330 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f350 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f370 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f390 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f3b0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f3d0 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f3f0 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f410 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f430 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f450 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f470 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f490 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f4b0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f4d0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f4f0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f510 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f530 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f550 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f570 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f590 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f5b0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f5d0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f5f0 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f610 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f630 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x396f110 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x396f130&gt;
            &lt;Sequence:0x396f170&gt;
               &lt;Element:0x396f690 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396f650 name="NotifyReportFile"&gt;
         &lt;Complex:0x396f670&gt;
            &lt;Sequence:0x396f6f0&gt;
               &lt;Element:0x396f710 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x396f770 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396f790 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396f7b0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396f6b0 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x396f730&gt;
            &lt;Sequence:0x396f750&gt;
               &lt;Element:0x396f810 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396f7d0 name="SetPrintMode"&gt;
         &lt;Complex:0x396f7f0&gt;
            &lt;Sequence:0x396f870&gt;
               &lt;Element:0x396f890 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396f910 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396f930 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396f950 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396f970 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396f830 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x396f850&gt;
            &lt;Sequence:0x396f8f0&gt;
               &lt;Element:0x396f990 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396f8b0 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x396f9b0&gt;
            &lt;Sequence:0x396fa10&gt;
               &lt;Element:0x396fa30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396fa90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396f9d0 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x396f6d0&gt;
            &lt;Sequence:0x396fa50&gt;
               &lt;Element:0x396fa70 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396f9f0 name="NotifyReportInfo"&gt;
         &lt;Complex:0x396fab0&gt;
            &lt;Sequence:0x396fb10&gt;
               &lt;Element:0x396fb30 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396fbb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396fbd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396fbf0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396fc10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x396fc50 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x396fc70 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
         &lt;Sequence:0x396faf0&gt;
            &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x396fb50 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x396fc90&gt;
            &lt;Sequence:0x396fc30&gt;
               &lt;Element:0x396fcf0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396fcb0 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x396fcd0&gt;
            &lt;Sequence:0x396fd50&gt;
               &lt;Element:0x396fd70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396fd10 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x396fd30&gt;
            &lt;Sequence:0x396fdd0&gt;
               &lt;Element:0x396fdf0 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396fd90 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x396fdb0&gt;
            &lt;Sequence:0x396fe50&gt;
               &lt;Element:0x396fe70 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x396fe10 name="PatientInfoEx"&gt;
         &lt;Sequence:0x396fe30&gt;
            &lt;Element:0x396fed0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396ff10 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396ff30 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396ff50 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396ff70 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396ffb0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396ffd0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fff0 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396ff90 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fef0 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x397b050 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x396fe90 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x397b070&gt;
            &lt;Sequence:0x397b030&gt;
               &lt;Element:0x397b0b0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x396feb0 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x397b090&gt;
            &lt;Sequence:0x397b110&gt;
               &lt;Element:0x397b130 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x397b190 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x397b0d0 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x397b0f0&gt;
            &lt;Sequence:0x397b1b0&gt;
               &lt;Element:0x397b1d0 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x397b150 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x397b170&gt;
            &lt;Sequence:0x397b230&gt;
               &lt;Element:0x397b250 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x397b2b0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x397b1f0 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x397b210&gt;
            &lt;Sequence:0x397b2d0&gt;
               &lt;Element:0x397b2f0 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191111 16:43:34.817" level="DEBUG">MERGED:
Schema:0x396f030
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x396f050 name="NotifyExamInfo"&gt;
      &lt;Complex:0x396f070&gt;
         &lt;Sequence:0x396f0b0&gt;
            &lt;Element:0x396f0f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x396f090 name="ExamInfo"&gt;
      &lt;Sequence:0x396f0d0&gt;
         &lt;Element:0x396f150 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f190 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f1b0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f1d0 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f1f0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f230 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f250 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f270 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f290 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f210 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f2b0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f2d0 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f2f0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f310 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f330 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f350 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f370 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f390 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f3b0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f3d0 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f3f0 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f410 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f430 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f450 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f470 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f490 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f4b0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f4d0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f4f0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f510 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f530 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f550 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f570 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f590 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f5b0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f5d0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f5f0 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f610 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396f630 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x396f110 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x396f130&gt;
         &lt;Sequence:0x396f170&gt;
            &lt;Element:0x396f690 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396f650 name="NotifyReportFile"&gt;
      &lt;Complex:0x396f670&gt;
         &lt;Sequence:0x396f6f0&gt;
            &lt;Element:0x396f710 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x396f770 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f790 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f7b0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396f6b0 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x396f730&gt;
         &lt;Sequence:0x396f750&gt;
            &lt;Element:0x396f810 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396f7d0 name="SetPrintMode"&gt;
      &lt;Complex:0x396f7f0&gt;
         &lt;Sequence:0x396f870&gt;
            &lt;Element:0x396f890 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f910 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f930 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f950 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396f970 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396f830 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x396f850&gt;
         &lt;Sequence:0x396f8f0&gt;
            &lt;Element:0x396f990 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396f8b0 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x396f9b0&gt;
         &lt;Sequence:0x396fa10&gt;
            &lt;Element:0x396fa30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fa90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396f9d0 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x396f6d0&gt;
         &lt;Sequence:0x396fa50&gt;
            &lt;Element:0x396fa70 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396f9f0 name="NotifyReportInfo"&gt;
      &lt;Complex:0x396fab0&gt;
         &lt;Sequence:0x396fb10&gt;
            &lt;Element:0x396fb30 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fbb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fbd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fbf0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fc10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x396fc50 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x396fc70 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
      &lt;Sequence:0x396faf0&gt;
         &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x396fb50 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x396fc90&gt;
         &lt;Sequence:0x396fc30&gt;
            &lt;Element:0x396fcf0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396fcb0 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x396fcd0&gt;
         &lt;Sequence:0x396fd50&gt;
            &lt;Element:0x396fd70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396fd10 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x396fd30&gt;
         &lt;Sequence:0x396fdd0&gt;
            &lt;Element:0x396fdf0 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396fd90 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x396fdb0&gt;
         &lt;Sequence:0x396fe50&gt;
            &lt;Element:0x396fe70 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x396fe10 name="PatientInfoEx"&gt;
      &lt;Sequence:0x396fe30&gt;
         &lt;Element:0x396fed0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396ff10 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396ff30 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396ff50 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396ff70 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396ffb0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396ffd0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396fff0 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396ff90 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x396fef0 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x397b050 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x396fe90 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x397b070&gt;
         &lt;Sequence:0x397b030&gt;
            &lt;Element:0x397b0b0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x396feb0 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x397b090&gt;
         &lt;Sequence:0x397b110&gt;
            &lt;Element:0x397b130 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x397b190 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x397b0d0 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x397b0f0&gt;
         &lt;Sequence:0x397b1b0&gt;
            &lt;Element:0x397b1d0 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x397b150 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x397b170&gt;
         &lt;Sequence:0x397b230&gt;
            &lt;Element:0x397b250 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x397b2b0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x397b1f0 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x397b210&gt;
         &lt;Sequence:0x397b2d0&gt;
            &lt;Element:0x397b2f0 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191111 16:43:34.818" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f050 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.818" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f110 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.818" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x396f650 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:43:34.819" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f6b0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.819" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x396f7d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.819" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f830 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.819" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f8b0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.819" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f9d0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.819" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f9f0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.820" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396fb50 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.820" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fcb0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.820" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396fd10 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.820" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fd90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.820" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396fe90 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.820" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x396feb0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:43:34.821" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x397b0d0 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.821" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x397b150 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.821" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x397b1f0 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.821" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f050 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.821" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f110 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.821" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x396f650 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:43:34.821" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f6b0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x396f7d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f830 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f8b0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396f9d0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f9f0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396fb50 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fcb0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396fd10 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.822" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fd90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.823" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396fe90 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.823" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x396feb0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:43:34.823" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x397b0d0 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.823" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x397b150 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.823" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x397b1f0 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:34.860" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x3688230"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x036B09D0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03209890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x036881D0&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03209890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x036B0E70&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x036B09D0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03209890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x036881D0&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03209890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x036B0E70&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x396f030 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03965FF0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f050 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">method 'NotifyExamInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x396f650 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">method 'NotifyReportFile' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x396f7d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">method 'SetPrintMode' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f8b0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.865" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f9f0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">method 'NotifyReportInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fcb0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fd90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x396feb0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:43:34.866" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x397b150 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f050 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">method 'NotifyExamInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x396f650 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">method 'NotifyReportFile' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x396f7d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.867" level="DEBUG">method 'SetPrintMode' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f8b0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f9f0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">method 'NotifyReportInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fcb0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x396fd90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.868" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.869" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x396feb0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:43:34.869" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.869" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x397b150 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:43:34.869" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573461814 (running)</msg>
<msg timestamp="20191111 16:43:34.869" level="DEBUG">Element:0x396f0f0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x396f0f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.869" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x396f090 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.869" level="DEBUG">Element:0x396fd70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fd70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.870" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.870" level="DEBUG">Element:0x396fa30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fa30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.870" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.870" level="DEBUG">Element:0x396fa90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fa90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.870" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.870" level="DEBUG">Element:0x396fe70, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x396fe70 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.870" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x396fe10 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191111 16:43:34.871" level="DEBUG">Element:0x396f710, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x397bb70"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x396f710 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.871" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x396f090 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.871" level="DEBUG">Element:0x396f770, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x397bb70"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f770 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.871" level="DEBUG">TypeQuery:0x397bb70, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.871" level="DEBUG">Element:0x396f790, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x397bb70"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f790 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.872" level="DEBUG">TypeQuery:0x397bb70, found builtin (int)</msg>
<msg timestamp="20191111 16:43:34.872" level="DEBUG">Element:0x396f7b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x397bb70"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f7b0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.872" level="DEBUG">TypeQuery:0x397bb70, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.872" level="DEBUG">Element:0x396fb30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fb30 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.872" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.872" level="DEBUG">Element:0x396fbb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fbb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.873" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.873" level="DEBUG">Element:0x396fbd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fbd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.873" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.873" level="DEBUG">Element:0x396fbf0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fbf0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.873" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.873" level="DEBUG">Element:0x396fc10, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fc10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.873" level="DEBUG">TypeQuery:0x209ea50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:34.874" level="DEBUG">Element:0x396fc50, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x396fc50 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.874" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x396fad0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:34.874" level="DEBUG">Element:0x396fc70, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x396fc70 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.874" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x396fad0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:34.874" level="DEBUG">Element:0x397b130, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x397b130 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.874" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.875" level="DEBUG">Element:0x397b190, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x397b190 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.875" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.875" level="DEBUG">Element:0x397b250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x397b250 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.875" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.875" level="DEBUG">Element:0x397b2b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x397b2b0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.875" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.876" level="DEBUG">Element:0x396f890, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f890 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.876" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.876" level="DEBUG">Element:0x396f910, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f910 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.876" level="DEBUG">TypeQuery:0x209ea50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.876" level="DEBUG">Element:0x396f930, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f930 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.876" level="DEBUG">TypeQuery:0x209ea50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:34.877" level="DEBUG">Element:0x396f950, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f950 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.877" level="DEBUG">TypeQuery:0x209ea50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:34.877" level="DEBUG">Element:0x396f970, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x209ea50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396f970 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.877" level="DEBUG">TypeQuery:0x209ea50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:34.877" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191111 16:43:34.877" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x396fad0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:34.878" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191111 16:43:34.878" level="DEBUG">Element:0x396fb90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x20d2170"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:34.878" level="DEBUG">TypeQuery:0x20d2170, found builtin (string)</msg>
<msg timestamp="20191111 16:43:34.878" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191111 16:43:34.878" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191111 16:43:34.878" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x396fad0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:34.878" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191111 16:43:34.879" level="DEBUG">ArrayOfString created: 1 (ms)</msg>
<msg timestamp="20191111 16:43:34.879" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f9f0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.879" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x396f9f0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:34.879" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191111164329587752"
   type = &lt;Element:0x396fb30 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d250 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.880" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0398DB10&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191111164329587752"
   type = &lt;Element:0x396fb30 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d250 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.880" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191111164329587752"
   type = &lt;Element:0x396fb30 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d250 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.880" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DB50&gt;)
&lt;suds.resolver.Frame object at 0x0398DB50&gt;</msg>
<msg timestamp="20191111 16:43:34.880" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.880" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191111164329587752"
   type = &lt;Element:0x396fb30 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d250 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.880" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DB50&gt;)
</msg>
<msg timestamp="20191111 16:43:34.881" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191111164329587752"
   type = &lt;Element:0x396fbb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d1f0 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.881" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0398DDF0&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191111164329587752"
   type = &lt;Element:0x396fbb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d1f0 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.881" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191111164329587752"
   type = &lt;Element:0x396fbb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d1f0 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.881" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DE30&gt;)
&lt;suds.resolver.Frame object at 0x0398DE30&gt;</msg>
<msg timestamp="20191111 16:43:34.881" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.882" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191111164329587752"
   type = &lt;Element:0x396fbb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d1f0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.882" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DE30&gt;)
</msg>
<msg timestamp="20191111 16:43:34.882" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191111164329587752"
   type = &lt;Element:0x396fbd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d110 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.882" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039A4110&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191111164329587752"
   type = &lt;Element:0x396fbd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d110 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.882" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191111164329587752"
   type = &lt;Element:0x396fbd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d110 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.882" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039A4150&gt;)
&lt;suds.resolver.Frame object at 0x039A4150&gt;</msg>
<msg timestamp="20191111 16:43:34.883" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.883" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191111164329587752"
   type = &lt;Element:0x396fbd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d110 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.883" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039A4150&gt;)
</msg>
<msg timestamp="20191111 16:43:34.883" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "8afad323-5e04-4827-97c6-b43678fa1a87"
   type = &lt;Element:0x396fbf0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d330 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.883" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039A43F0&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "8afad323-5e04-4827-97c6-b43678fa1a87"
   type = &lt;Element:0x396fbf0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d330 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.883" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "8afad323-5e04-4827-97c6-b43678fa1a87"
   type = &lt;Element:0x396fbf0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d330 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.884" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039A4430&gt;)
&lt;suds.resolver.Frame object at 0x039A4430&gt;</msg>
<msg timestamp="20191111 16:43:34.884" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.884" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "8afad323-5e04-4827-97c6-b43678fa1a87"
   type = &lt;Element:0x396fbf0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d330 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.884" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039A4430&gt;)
</msg>
<msg timestamp="20191111 16:43:34.884" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x396fc10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x398d370 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.884" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039A46B0&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x396fc10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x398d370 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.885" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x396fc10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x398d370 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.885" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039A46F0&gt;)
&lt;suds.resolver.Frame object at 0x039A46F0&gt;</msg>
<msg timestamp="20191111 16:43:34.885" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.885" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x396fc10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x398d370 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.885" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039A46F0&gt;)
</msg>
<msg timestamp="20191111 16:43:34.886" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x396fc50 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.886" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0398DDB0&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x396fc50 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.886" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x396fc50 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.886" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DDD0&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;</msg>
<msg timestamp="20191111 16:43:34.886" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">searching parent (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x02489310&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;
&lt;suds.resolver.Frame object at 0x02489310&gt;</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x02489310&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191111 16:43:34.887" level="DEBUG">searching parent (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:34.888" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DE70&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;
&lt;suds.resolver.Frame object at 0x0398DE70&gt;</msg>
<msg timestamp="20191111 16:43:34.888" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.888" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d450 /&gt;
   ancestry[] = 
      &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x396faf0&gt;
   &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:34.888" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DE70&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;</msg>
<msg timestamp="20191111 16:43:34.888" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf&lt;/tns:string&gt;
&lt;/tns:reportFileName&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191111 16:43:34.888" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191111 16:43:34.889" level="DEBUG">searching parent (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:34.889" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DD70&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;
&lt;suds.resolver.Frame object at 0x0398DD70&gt;</msg>
<msg timestamp="20191111 16:43:34.889" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.889" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d450 /&gt;
   ancestry[] = 
      &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x396faf0&gt;
   &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:34.889" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DD70&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;</msg>
<msg timestamp="20191111 16:43:34.889" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x02489310&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;
&lt;suds.resolver.Frame object at 0x02489310&gt;</msg>
<msg timestamp="20191111 16:43:34.890" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
   type = &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d450 /&gt;
   ancestry[] = 
      &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x396faf0&gt;
   &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:34.890" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x02489310&gt;)
&lt;suds.resolver.Frame object at 0x0398DDD0&gt;</msg>
<msg timestamp="20191111 16:43:34.890" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x396fc50 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.890" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DDD0&gt;)
</msg>
<msg timestamp="20191111 16:43:34.890" level="DEBUG">processing:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x396fc70 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.891" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0398DBF0&gt;
content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x396fc70 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.891" level="DEBUG">starting content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x396fc70 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.891" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DC30&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;</msg>
<msg timestamp="20191111 16:43:34.891" level="DEBUG">created - node:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.891" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">searching parent (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DB90&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;
&lt;suds.resolver.Frame object at 0x0398DB90&gt;</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DB90&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">searching parent (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:34.892" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398D810&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;
&lt;suds.resolver.Frame object at 0x0398D810&gt;</msg>
<msg timestamp="20191111 16:43:34.893" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.893" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d450 /&gt;
   ancestry[] = 
      &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x396faf0&gt;
   &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:34.893" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398D810&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;</msg>
<msg timestamp="20191111 16:43:34.893" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;&lt;/tns:string&gt;
&lt;/tns:pdfPassword&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191111 16:43:34.893" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191111 16:43:34.893" level="DEBUG">searching parent (&lt;Complex:0x396fad0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:34.894" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DAF0&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;
&lt;suds.resolver.Frame object at 0x0398DAF0&gt;</msg>
<msg timestamp="20191111 16:43:34.894" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:34.894" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d450 /&gt;
   ancestry[] = 
      &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x396faf0&gt;
   &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:34.894" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DAF0&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;</msg>
<msg timestamp="20191111 16:43:34.894" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398DB90&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;
&lt;suds.resolver.Frame object at 0x0398DB90&gt;</msg>
<msg timestamp="20191111 16:43:34.895" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
   type = &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x398d450 /&gt;
   ancestry[] = 
      &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x396faf0&gt;
   &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:34.895" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DB90&gt;)
&lt;suds.resolver.Frame object at 0x0398DC30&gt;</msg>
<msg timestamp="20191111 16:43:34.895" level="DEBUG">ending content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x396fc70 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x396fad0 name="ArrayOfString"&gt;
   &lt;Sequence:0x396faf0&gt;
      &lt;Element:0x396fb90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:34.895" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398DC30&gt;)
</msg>
<msg timestamp="20191111 16:43:34.895" level="DEBUG">message for 'NotifyReportInfo' created: 16 (ms)</msg>
<msg timestamp="20191111 16:43:34.895" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x0398D610&gt;</msg>
<msg timestamp="20191111 16:43:34.896" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191111 16:43:34.896" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:NotifyReportInfo&gt;&lt;ns1:patientName&gt;CN20191111164329587752&lt;/ns1:patientName&gt;&lt;ns1:patientID&gt;P20191111164329587752&lt;/ns1:patientID&gt;&lt;ns1:accessionNumber&gt;A20191111164329587752&lt;/ns1:accessionNumber&gt;&lt;ns1:studyInstanceUID&gt;8afad323-5e04-4827-97c6-b43678fa1a87&lt;/ns1:studyInstanceUID&gt;&lt;ns1:reportStatus&gt;2&lt;/ns1:reportStatus&gt;&lt;ns1:reportFileName&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;/ns1:reportFileName&gt;&lt;ns1:pdfPassword&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;/ns1:pdfPassword&gt;&lt;/ns1:NotifyReportInfo&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191111 16:43:35.181" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Mon, 11 Nov 2019 08:43:35 GMT
Connection: close
Content-Length: 380


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191111 16:43:35.181" level="DEBUG">waited 285 (ms) on server reply</msg>
<msg timestamp="20191111 16:43:35.181" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191111 16:43:35.182" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191111 16:43:35.182" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x396fb50 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:35.182" level="DEBUG">Element:0x396fcf0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398dbb0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fcf0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:35.183" level="DEBUG">TypeQuery:0x398dbb0, found builtin (int)</msg>
<msg timestamp="20191111 16:43:35.183" level="DEBUG">reset</msg>
<msg timestamp="20191111 16:43:35.183" level="DEBUG">Element:0x396fcf0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d7b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x396fcf0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:35.183" level="DEBUG">TypeQuery:0x398d7b0, found builtin (int)</msg>
<msg timestamp="20191111 16:43:35.183" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0398D8D0&gt;)
&lt;suds.resolver.Frame object at 0x0398D8D0&gt;</msg>
<msg timestamp="20191111 16:43:35.183" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0398D8D0&gt;)
</msg>
<msg timestamp="20191111 16:43:35.183" level="DEBUG">method 'NotifyReportInfo' invoked: 288 (ms)</msg>
<msg timestamp="20191111 16:43:35.184" level="INFO">Report.report_create_by_notifyserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191111 16:43:35.184" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191111164329587752", "patient_id": "P20191111164329587752", "accessionNumber": "A20191111164329587752", "StudyInstanceUID": "8afad323-5e04-4827-97c6-b43678fa1a87"...</msg>
<status status="PASS" starttime="20191111 16:43:34.763" endtime="20191111 16:43:35.184"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191111 16:43:35.184" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191111164329587752', 'patient_id': 'P20191111164329587752', 'accessionNumber': 'A20191111164329587752', 'StudyInstanceUID': '8afad323-5e04-4827-97c6-b43678fa1a87'...</msg>
<status status="PASS" starttime="20191111 16:43:35.184" endtime="20191111 16:43:35.184"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191111 16:43:35.223" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:35.185" endtime="20191111 16:43:35.223"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:35.223" endtime="20191111 16:43:35.224"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191111 16:43:40.225" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191111 16:43:35.224" endtime="20191111 16:43:40.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191111 16:43:40.225" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191111 16:43:40.225" endtime="20191111 16:43:40.225"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191111 16:43:40.264" level="INFO">${Report_StudyInstanceUID} = ['8afad323-5e04-4827-97c6-b43678fa1a87']</msg>
<status status="PASS" starttime="20191111 16:43:40.226" endtime="20191111 16:43:40.264"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191111 16:43:40.667" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191111 16:43:40.667" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191111 16:43:40.264" endtime="20191111 16:43:40.667"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191111 16:43:40.667" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191111 16:43:40.667" endtime="20191111 16:43:40.668"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191111 16:43:40.706" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:40.668" endtime="20191111 16:43:40.706"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191111 16:43:40.744" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191111 16:43:40.706" endtime="20191111 16:43:40.744"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:40.745" endtime="20191111 16:43:40.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191111 16:43:40.746" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:43:40.745" endtime="20191111 16:43:40.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191111 16:43:40.746" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191111 16:43:40.746" endtime="20191111 16:43:40.746"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191111 16:43:40.748" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191111164329587752", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-11 16:43:36.637000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191111 16:43:40.746" endtime="20191111 16:43:40.748"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191111 16:43:40.749" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191111164329587752', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-11 16:43:36.637000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191111 16:43:40.748" endtime="20191111 16:43:40.749"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191111 16:43:40.787" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:40.749" endtime="20191111 16:43:40.787"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191111 16:43:40.825" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191111 16:43:40.787" endtime="20191111 16:43:40.825"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:40.825" endtime="20191111 16:43:40.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191111 16:43:40.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:43:40.826" endtime="20191111 16:43:40.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191111 16:43:40.827" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191111 16:43:40.826" endtime="20191111 16:43:40.827"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191111 16:43:40.828" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191111164329587752, A20191111164329587752] correct and value is 9</msg>
<msg timestamp="20191111 16:43:40.829" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191111 16:43:40.827" endtime="20191111 16:43:40.829"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191111 16:43:40.829" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191111 16:43:40.829" endtime="20191111 16:43:40.829"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191111 16:43:40.867" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:40.829" endtime="20191111 16:43:40.867"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191111 16:43:40.905" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191111 16:43:40.867" endtime="20191111 16:43:40.905"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:40.905" endtime="20191111 16:43:40.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191111 16:43:40.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:43:40.906" endtime="20191111 16:43:40.906"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:43:29.587" endtime="20191111 16:43:40.906" critical="yes"></status>
</test>
<test id="s1-t4" name="SmokeTest_004_Core_4714_02.01.02 Report receive from web service PrintServer_Reportinfo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:40.908" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191111 16:43:40.907" endtime="20191111 16:43:40.908"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:43:40.911" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:43:40.919" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:43:40.920" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:43:40.907857", "UpdateDT": "2019-11-11 16:43:40.907857", "PatientID": "P20191111164340907857", "AccessionNumber": "A20191111164340907857", "StudyInstanceUID": "UID20191111164340907857", "NameCN": "CN20191111164340907857", "NameEN": "EN20191111164340907857", "Gender": "M", "Birthday": "1932-12-02", "Modality": "OT", "ModalityName": "IO", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:43:40.907857", "RegisterDT": "2019-11-11 16:43:40.907857", "ExamDT": "2019-11-11 16:43:40.907857", "ReportDT": "2019-11-11 16:43:40.907857", "SubmitDT": "2019-11-11 16:43:40.907857", "ApproveDT": "2019-11-11 16:43:40.907857", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164340907857", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:43:40.920" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:43:40.907857", "UpdateDT": "2019-11-11 16:43:40.907857", "PatientID": "P20191111164340907857", "AccessionNumber": "A20191111164340907857", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:40.908" endtime="20191111 16:43:40.920"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:43:40.921" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:43:40.907857', 'UpdateDT': '2019-11-11 16:43:40.907857', 'PatientID': 'P20191111164340907857', 'AccessionNumber': 'A20191111164340907857', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:40.921" endtime="20191111 16:43:40.921"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:43:40.959" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:40.921" endtime="20191111 16:43:40.959"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:40.959" endtime="20191111 16:43:40.960"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:43:40.997" level="INFO">${patientID} = ['P20191111164340907857']</msg>
<status status="PASS" starttime="20191111 16:43:40.960" endtime="20191111 16:43:40.997"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191111 16:43:41.049" level="INFO">${AccessionNumber} = ['A20191111164340907857']</msg>
<status status="PASS" starttime="20191111 16:43:40.997" endtime="20191111 16:43:41.049"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191111 16:43:41.087" level="INFO">${PatientName} = ['CN20191111164340907857']</msg>
<status status="PASS" starttime="20191111 16:43:41.049" endtime="20191111 16:43:41.087"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191111 16:43:41.088" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191111 16:43:41.088" endtime="20191111 16:43:41.088"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191111 16:43:41.088" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191111 16:43:41.088" endtime="20191111 16:43:41.088"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191111 16:43:46.090" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191111 16:43:41.089" endtime="20191111 16:43:46.090"></status>
</kw>
<kw name="Report Create By Printserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_printserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:43:46.091" level="DEBUG">reading WSDL at: http://10.112.20.84/PrintServer/PrintService.asmx?wsdl ...</msg>
<msg timestamp="20191111 16:43:46.091" level="DEBUG">opening (http://10.112.20.84/PrintServer/PrintService.asmx?wsdl)</msg>
<msg timestamp="20191111 16:43:46.134" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/" xmlns:s1="http://tempuri.org/AbstractTypes" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatus"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2Response"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Print"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="PrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PrintTask"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrintCombine"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintCombineResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfInt"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrint"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLog"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLogResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Version"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="VersionResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="TaskInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="PatientInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfFilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="FilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="int" type="s:int" /&gt;\r\n      &lt;s:element name="string" nillable="true" type="s:string" /&gt;\r\n      &lt;s:element name="boolean" type="s:boolean" /&gt;\r\n      &lt;s:element name="PrintTask" type="tns:TaskInfo" /&gt;\r\n    &lt;/s:schema&gt;\r\n    &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;\r\n      &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/" /&gt;\r\n      &lt;s:complexType name="StringArray"&gt;\r\n        &lt;s:complexContent mixed="false"&gt;\r\n          &lt;s:restriction base="soapenc:Array"&gt;\r\n            &lt;s:sequence&gt;\r\n              &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string" /&gt;\r\n            &lt;/s:sequence&gt;\r\n          &lt;/s:restriction&gt;\r\n        &lt;/s:complexContent&gt;\r\n      &lt;/s:complexType&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Print" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:PrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrint" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLog" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Version" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:VersionResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpGetIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpPostIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="PrintServiceSoap"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintServerStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintServerStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTask2SoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTask2SoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;wsdl:input message="tns:PrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:PrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintTaskStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintTaskStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintCombineSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintCombineSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpGet"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpPost"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap12" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpGet" type="tns:PrintServiceHttpGet"&gt;\r\n    &lt;http:binding verb="GET" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpPost" type="tns:PrintServiceHttpPost"&gt;\r\n    &lt;http:binding verb="POST" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="PrintService"&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap" binding="tns:PrintServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap12" binding="tns:PrintServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpGet" binding="tns:PrintServiceHttpGet"&gt;\r\n      &lt;http:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpPost" binding="tns:PrintServiceHttpPost"&gt;\r\n      &lt;http:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 28 (ms)</msg>
<msg timestamp="20191111 16:43:46.156" level="DEBUG">binding: "PrintServiceHttpGet" not a SOAP binding</msg>
<msg timestamp="20191111 16:43:46.156" level="DEBUG">binding: "PrintServiceHttpPost" not a SOAP binding</msg>
<msg timestamp="20191111 16:43:46.157" level="DEBUG">binding "PrintServiceHttpGet" - not a SOAP binding, discarded</msg>
<msg timestamp="20191111 16:43:46.157" level="DEBUG">binding "PrintServiceHttpPost" - not a SOAP binding, discarded</msg>
<msg timestamp="20191111 16:43:46.163" level="DEBUG">Import:0x338bff0, importing ns="http://schemas.xmlsoap.org/soap/encoding/", location="suds://schemas.xmlsoap.org/soap/encoding/"</msg>
<msg timestamp="20191111 16:43:46.172" level="DEBUG">b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;\n&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"\n    xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/"\n    targetNamespace="http://schemas.xmlsoap.org/soap/encoding/"&gt;\n\n &lt;xs:attribute name="root"&gt;\n   &lt;xs:annotation&gt;\n     &lt;xs:documentation&gt;\n       \'root\' can be used to distinguish serialization roots from other\n       elements that are present in a serialization but are not roots of\n       a serialized value graph\n     &lt;/xs:documentation&gt;\n   &lt;/xs:annotation&gt;\n   &lt;xs:simpleType&gt;\n     &lt;xs:restriction base="xs:boolean"&gt;\n       &lt;xs:pattern value="0|1"/&gt;\n     &lt;/xs:restriction&gt;\n   &lt;/xs:simpleType&gt;\n &lt;/xs:attribute&gt;\n\n  &lt;xs:attributeGroup name="commonAttributes"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n        Attributes common to all elements that function as accessors or\n        represent independent (multi-ref) values.  The href attribute is\n        intended to be used in a manner like CONREF.  That is, the element\n        content should be empty iff the href attribute appears\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:attribute name="id" type="xs:ID"/&gt;\n    &lt;xs:attribute name="href" type="xs:anyURI"/&gt;\n    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;!-- Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them. --&gt;\n\n  &lt;!-- Array attributes. Needed to give the type and dimensions of an array\'s contents, and the offset for partially-transmitted arrays. --&gt;\n\n  &lt;xs:simpleType name="arrayCoordinate"&gt;\n    &lt;xs:restriction base="xs:string"/&gt;\n  &lt;/xs:simpleType&gt;\n\n  &lt;xs:attribute name="arrayType" type="xs:string"/&gt;\n  &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayAttributes"&gt;\n    &lt;xs:attribute ref="tns:arrayType"/&gt;\n    &lt;xs:attribute ref="tns:offset"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;\n    &lt;xs:attribute ref="tns:position"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:group name="Array"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:element name="Array" type="tns:Array"/&gt;\n  &lt;xs:complexType name="Array"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n       \'Array\' is a complex type for accessors identified by position\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Struct\' is a complex type for accessors identified by name.\n       Constraint: No element may be have the same name as any other,\n       nor may any element have a maxOccurs &gt; 1. --&gt;\n\n  &lt;xs:element name="Struct" type="tns:Struct"/&gt;\n\n  &lt;xs:group name="Struct"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:complexType name="Struct"&gt;\n    &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Base64\' can be used to serialize binary data using base64 encoding\n       as defined in RFC2045 but without the MIME line length limitation. --&gt;\n\n  &lt;xs:simpleType name="base64"&gt;\n    &lt;xs:restriction base="xs:base64Binary"/&gt;\n  &lt;/xs:simpleType&gt;\n\n &lt;!-- Element declarations corresponding to each of the simple types in the\n      XML Schemas Specification. --&gt;\n\n  &lt;xs:element name="duration" type="tns:duration"/&gt;\n  &lt;xs:complexType name="duration"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:duration"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;\n  &lt;xs:complexType name="dateTime"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:dateTime"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;\n  &lt;xs:complexType name="NOTATION"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="time" type="tns:time"/&gt;\n  &lt;xs:complexType name="time"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:time"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="date" type="tns:date"/&gt;\n  &lt;xs:complexType name="date"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:date"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;\n  &lt;xs:complexType name="gYearMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYearMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYear" type="tns:gYear"/&gt;\n  &lt;xs:complexType name="gYear"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYear"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;\n  &lt;xs:complexType name="gMonthDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonthDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gDay" type="tns:gDay"/&gt;\n  &lt;xs:complexType name="gDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;\n  &lt;xs:complexType name="gMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="boolean" type="tns:boolean"/&gt;\n  &lt;xs:complexType name="boolean"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:boolean"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;\n  &lt;xs:complexType name="base64Binary"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:base64Binary"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;\n  &lt;xs:complexType name="hexBinary"&gt;\n    &lt;xs:simpleContent&gt;\n     &lt;xs:extension base="xs:hexBinary"&gt;\n       &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n     &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="float" type="tns:float"/&gt;\n  &lt;xs:complexType name="float"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:float"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="double" type="tns:double"/&gt;\n  &lt;xs:complexType name="double"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:double"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;\n  &lt;xs:complexType name="anyURI"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:anyURI"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="QName" type="tns:QName"/&gt;\n  &lt;xs:complexType name="QName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="string" type="tns:string"/&gt;\n  &lt;xs:complexType name="string"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:string"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;\n  &lt;xs:complexType name="normalizedString"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:normalizedString"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="token" type="tns:token"/&gt;\n  &lt;xs:complexType name="token"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:token"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="language" type="tns:language"/&gt;\n  &lt;xs:complexType name="language"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:language"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="Name" type="tns:Name"/&gt;\n  &lt;xs:complexType name="Name"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:Name"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;\n  &lt;xs:complexType name="NMTOKEN"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKEN"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NCName" type="tns:NCName"/&gt;\n  &lt;xs:complexType name="NCName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NCName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;\n  &lt;xs:complexType name="NMTOKENS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKENS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ID" type="tns:ID"/&gt;\n  &lt;xs:complexType name="ID"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ID"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;\n  &lt;xs:complexType name="IDREF"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREF"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;\n  &lt;xs:complexType name="ENTITY"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITY"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;\n  &lt;xs:complexType name="IDREFS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREFS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;\n  &lt;xs:complexType name="ENTITIES"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITIES"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="decimal" type="tns:decimal"/&gt;\n  &lt;xs:complexType name="decimal"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:decimal"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="integer" type="tns:integer"/&gt;\n  &lt;xs:complexType name="integer"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:integer"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;\n  &lt;xs:complexType name="nonPositiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonPositiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;\n  &lt;xs:complexType name="negativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:negativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="long" type="tns:long"/&gt;\n  &lt;xs:complexType name="long"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:long"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="int" type="tns:int"/&gt;\n  &lt;xs:complexType name="int"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:int"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="short" type="tns:short"/&gt;\n  &lt;xs:complexType name="short"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:short"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="byte" type="tns:byte"/&gt;\n  &lt;xs:complexType name="byte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:byte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;\n  &lt;xs:complexType name="nonNegativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonNegativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;\n  &lt;xs:complexType name="unsignedLong"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedLong"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;\n  &lt;xs:complexType name="unsignedInt"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedInt"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;\n  &lt;xs:complexType name="unsignedShort"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedShort"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;\n  &lt;xs:complexType name="unsignedByte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedByte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;\n  &lt;xs:complexType name="positiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:positiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyType"/&gt;\n&lt;/xs:schema&gt;\n'
sax duration: 8 (ms)</msg>
<msg timestamp="20191111 16:43:46.186" level="DEBUG">built:
Schema:0x3363530
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x33632b0 name="root" /&gt;
   &lt;AttributeGroup:0x3363a70 name="commonAttributes"&gt;
      &lt;Attribute:0x3363830 name="id" type="xs:ID" /&gt;@
      &lt;Attribute:0x3363bb0 name="href" type="xs:anyURI" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x33630f0 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x3363890 name="arrayType" type="xs:string" /&gt;
   &lt;Attribute:0x3363d70 name="offset" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x36832f0 name="arrayAttributes"&gt;
      &lt;Attribute:0x3683150 ref="tns:arrayType" /&gt;@
      &lt;Attribute:0x3683a30 ref="tns:offset" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3683650 name="position" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x3683930 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3683b30 ref="tns:position" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3683cd0 name="Array"&gt;
      &lt;Sequence:0x3683430&gt;
         &lt;Any:0x3683fb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3363f90 name="Array" type="tns:Array" /&gt;
   &lt;Complex:0x3683e70 name="Array" /&gt;
   &lt;Element:0x3683750 name="Struct" type="tns:Struct" /&gt;
   &lt;Group:0x338bfd0 name="Struct"&gt;
      &lt;Sequence:0x338bd50&gt;
         &lt;Any:0x338bdb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x338bed0 name="Struct" /&gt;
   &lt;Simple:0x338be30 name="base64" /&gt;
   &lt;Element:0x338be10 name="duration" type="tns:duration" /&gt;
   &lt;Complex:0x338baf0 name="duration" /&gt;
   &lt;Element:0x338bc30 name="dateTime" type="tns:dateTime" /&gt;
   &lt;Complex:0x338b8f0 name="dateTime" /&gt;
   &lt;Element:0x3697950 name="NOTATION" type="tns:NOTATION" /&gt;
   &lt;Complex:0x36974d0 name="NOTATION" /&gt;
   &lt;Element:0x3697fd0 name="time" type="tns:time" /&gt;
   &lt;Complex:0x3697770 name="time" /&gt;
   &lt;Element:0x3697e90 name="date" type="tns:date" /&gt;
   &lt;Complex:0x36adab0 name="date" /&gt;
   &lt;Element:0x36adbb0 name="gYearMonth" type="tns:gYearMonth" /&gt;
   &lt;Complex:0x36adfb0 name="gYearMonth" /&gt;
   &lt;Element:0x36ad150 name="gYear" type="tns:gYear" /&gt;
   &lt;Complex:0x369fb90 name="gYear" /&gt;
   &lt;Element:0x369f170 name="gMonthDay" type="tns:gMonthDay" /&gt;
   &lt;Complex:0x369f590 name="gMonthDay" /&gt;
   &lt;Element:0x369fa90 name="gDay" type="tns:gDay" /&gt;
   &lt;Complex:0x36b1570 name="gDay" /&gt;
   &lt;Element:0x36b1cf0 name="gMonth" type="tns:gMonth" /&gt;
   &lt;Complex:0x36b19d0 name="gMonth" /&gt;
   &lt;Element:0x36b1bf0 name="boolean" type="tns:boolean" /&gt;
   &lt;Complex:0x36b1f30 name="boolean" /&gt;
   &lt;Element:0x3696570 name="base64Binary" type="tns:base64Binary" /&gt;
   &lt;Complex:0x3696a70 name="base64Binary" /&gt;
   &lt;Element:0x3696cd0 name="hexBinary" type="tns:hexBinary" /&gt;
   &lt;Complex:0x3696fb0 name="hexBinary" /&gt;
   &lt;Element:0x3696e10 name="float" type="tns:float" /&gt;
   &lt;Complex:0x36b5870 name="float" /&gt;
   &lt;Element:0x36b5c10 name="double" type="tns:double" /&gt;
   &lt;Complex:0x36b5f70 name="double" /&gt;
   &lt;Element:0x36b5c30 name="anyURI" type="tns:anyURI" /&gt;
   &lt;Complex:0x36d6770 name="anyURI" /&gt;
   &lt;Element:0x36d6a50 name="QName" type="tns:QName" /&gt;
   &lt;Complex:0x36d6e30 name="QName" /&gt;
   &lt;Element:0x36d6b50 name="string" type="tns:string" /&gt;
   &lt;Complex:0x36c1570 name="string" /&gt;
   &lt;Element:0x36c1690 name="normalizedString" type="tns:normalizedString" /&gt;
   &lt;Complex:0x36c1710 name="normalizedString" /&gt;
   &lt;Element:0x36c1750 name="token" type="tns:token" /&gt;
   &lt;Complex:0x36c17b0 name="token" /&gt;
   &lt;Element:0x36c17f0 name="language" type="tns:language" /&gt;
   &lt;Complex:0x36c1850 name="language" /&gt;
   &lt;Element:0x36c1890 name="Name" type="tns:Name" /&gt;
   &lt;Complex:0x36c18f0 name="Name" /&gt;
   &lt;Element:0x36c1930 name="NMTOKEN" type="tns:NMTOKEN" /&gt;
   &lt;Complex:0x36c1990 name="NMTOKEN" /&gt;
   &lt;Element:0x36c19d0 name="NCName" type="tns:NCName" /&gt;
   &lt;Complex:0x36c1a30 name="NCName" /&gt;
   &lt;Element:0x36c1a70 name="NMTOKENS" type="tns:NMTOKENS" /&gt;
   &lt;Complex:0x36c1ad0 name="NMTOKENS" /&gt;
   &lt;Element:0x36c1b10 name="ID" type="tns:ID" /&gt;
   &lt;Complex:0x36c1b70 name="ID" /&gt;
   &lt;Element:0x36c1bb0 name="IDREF" type="tns:IDREF" /&gt;
   &lt;Complex:0x36c1c10 name="IDREF" /&gt;
   &lt;Element:0x36c1c50 name="ENTITY" type="tns:ENTITY" /&gt;
   &lt;Complex:0x36c1cb0 name="ENTITY" /&gt;
   &lt;Element:0x36c1cf0 name="IDREFS" type="tns:IDREFS" /&gt;
   &lt;Complex:0x36c1d50 name="IDREFS" /&gt;
   &lt;Element:0x36c1d90 name="ENTITIES" type="tns:ENTITIES" /&gt;
   &lt;Complex:0x36c1df0 name="ENTITIES" /&gt;
   &lt;Element:0x36c1e30 name="decimal" type="tns:decimal" /&gt;
   &lt;Complex:0x36c1e90 name="decimal" /&gt;
   &lt;Element:0x36c1ed0 name="integer" type="tns:integer" /&gt;
   &lt;Complex:0x36c1f30 name="integer" /&gt;
   &lt;Element:0x36c1f70 name="nonPositiveInteger" type="tns:nonPositiveInteger" /&gt;
   &lt;Complex:0x36c1fd0 name="nonPositiveInteger" /&gt;
   &lt;Element:0x36c1ff0 name="negativeInteger" type="tns:negativeInteger" /&gt;
   &lt;Complex:0x36f1090 name="negativeInteger" /&gt;
   &lt;Element:0x36f10d0 name="long" type="tns:long" /&gt;
   &lt;Complex:0x36f1130 name="long" /&gt;
   &lt;Element:0x36f1170 name="int" type="tns:int" /&gt;
   &lt;Complex:0x36f11d0 name="int" /&gt;
   &lt;Element:0x36f1210 name="short" type="tns:short" /&gt;
   &lt;Complex:0x36f1270 name="short" /&gt;
   &lt;Element:0x36f12b0 name="byte" type="tns:byte" /&gt;
   &lt;Complex:0x36f1310 name="byte" /&gt;
   &lt;Element:0x36f1350 name="nonNegativeInteger" type="tns:nonNegativeInteger" /&gt;
   &lt;Complex:0x36f13b0 name="nonNegativeInteger" /&gt;
   &lt;Element:0x36f13f0 name="unsignedLong" type="tns:unsignedLong" /&gt;
   &lt;Complex:0x36f1450 name="unsignedLong" /&gt;
   &lt;Element:0x36f1490 name="unsignedInt" type="tns:unsignedInt" /&gt;
   &lt;Complex:0x36f14f0 name="unsignedInt" /&gt;
   &lt;Element:0x36f1530 name="unsignedShort" type="tns:unsignedShort" /&gt;
   &lt;Complex:0x36f1590 name="unsignedShort" /&gt;
   &lt;Element:0x36f15d0 name="unsignedByte" type="tns:unsignedByte" /&gt;
   &lt;Complex:0x36f1630 name="unsignedByte" /&gt;
   &lt;Element:0x36f1670 name="positiveInteger" type="tns:positiveInteger" /&gt;
   &lt;Complex:0x36f16d0 name="positiveInteger" /&gt;
   &lt;Element:0x36f1710 name="anyType" type="xs:anyType" /&gt;
</msg>
<msg timestamp="20191111 16:43:46.187" level="DEBUG">Attribute:0x3363830, convert type="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.187" level="DEBUG">Attribute:0x3363bb0, convert type="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.187" level="DEBUG">Restriction:0x3363d10, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">TypeQuery:0x36f1770, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">Attribute:0x3363890, convert type="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">Attribute:0x3363d70, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">Attribute:0x3683150, convert ref="tns:arrayType" to ('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x3363890 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">Attribute:0x3683a30, convert ref="tns:offset" to ('offset', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">('offset', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x3363d70 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">Attribute:0x3683650, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.188" level="DEBUG">Attribute:0x3683b30, convert ref="tns:position" to ('position', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">('position', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x3683650 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">Element:0x3363f90, convert type="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">Group:0x338beb0, convert ref="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x3683cd0 name="Array" /&gt;</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">AttributeGroup:0x338bf10, convert ref="tns:arrayAttributes" to ('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x36832f0 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">AttributeGroup:0x338bdd0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">Element:0x3683750, convert type="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.189" level="DEBUG">Group:0x338be70, convert ref="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">('Struct', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x338bfd0 name="Struct" /&gt;</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">AttributeGroup:0x338bfb0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">Restriction:0x338bbf0, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">TypeQuery:0x36f1870, found builtin (base64Binary)</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">Element:0x338be10, convert type="tns:duration" to ('duration', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">Extension:0x338b970, convert ref="xs:duration" to ('duration', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">TypeQuery:0x36f17f0, found builtin (duration)</msg>
<msg timestamp="20191111 16:43:46.190" level="DEBUG">AttributeGroup:0x3697130, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">Element:0x338bc30, convert type="tns:dateTime" to ('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">Extension:0x3697a50, convert ref="xs:dateTime" to ('dateTime', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">TypeQuery:0x36f17b0, found builtin (dateTime)</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">AttributeGroup:0x3697d30, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">Element:0x3697950, convert type="tns:NOTATION" to ('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">Extension:0x3697690, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.191" level="DEBUG">TypeQuery:0x36f1950, found builtin (QName)</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">AttributeGroup:0x36972b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">Element:0x3697fd0, convert type="tns:time" to ('time', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">Extension:0x36ad2d0, convert ref="xs:time" to ('time', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">TypeQuery:0x36f19d0, found builtin (time)</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">AttributeGroup:0x36ad890, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">Element:0x3697e90, convert type="tns:date" to ('date', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.192" level="DEBUG">Extension:0x36ad4f0, convert ref="xs:date" to ('date', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">TypeQuery:0x36f17f0, found builtin (date)</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">AttributeGroup:0x36ade50, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">Element:0x36adbb0, convert type="tns:gYearMonth" to ('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">Extension:0x369fe30, convert ref="xs:gYearMonth" to ('gYearMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">TypeQuery:0x36f19f0, found builtin (gYearMonth)</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">AttributeGroup:0x369f730, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.193" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">Element:0x36ad150, convert type="tns:gYear" to ('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">Extension:0x369fcf0, convert ref="xs:gYear" to ('gYear', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">TypeQuery:0x36f1990, found builtin (gYear)</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">AttributeGroup:0x369f450, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">Element:0x369f170, convert type="tns:gMonthDay" to ('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">Extension:0x36b1070, convert ref="xs:gMonthDay" to ('gMonthDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">TypeQuery:0x36f1a70, found builtin (gMonthDay)</msg>
<msg timestamp="20191111 16:43:46.194" level="DEBUG">AttributeGroup:0x36b1410, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">Element:0x369fa90, convert type="tns:gDay" to ('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">Extension:0x36b16f0, convert ref="xs:gDay" to ('gDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">TypeQuery:0x36f1ab0, found builtin (gDay)</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">AttributeGroup:0x36b1890, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">Element:0x36b1cf0, convert type="tns:gMonth" to ('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">Extension:0x36b1170, convert ref="xs:gMonth" to ('gMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.195" level="DEBUG">TypeQuery:0x36f1930, found builtin (gMonth)</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">AttributeGroup:0x3696110, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">Element:0x36b1bf0, convert type="tns:boolean" to ('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">Extension:0x3696430, convert ref="xs:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">TypeQuery:0x36f1a50, found builtin (boolean)</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">AttributeGroup:0x3696850, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">Element:0x3696570, convert type="tns:base64Binary" to ('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.196" level="DEBUG">Extension:0x3696b70, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">TypeQuery:0x36f1990, found builtin (base64Binary)</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">AttributeGroup:0x36b5110, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">Element:0x3696cd0, convert type="tns:hexBinary" to ('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">Extension:0x36b5330, convert ref="xs:hexBinary" to ('hexBinary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">TypeQuery:0x36f1ad0, found builtin (hexBinary)</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">AttributeGroup:0x36b5710, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.197" level="DEBUG">Element:0x3696e10, convert type="tns:float" to ('float', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">Extension:0x36b59b0, convert ref="xs:float" to ('float', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">TypeQuery:0x36f18b0, found builtin (float)</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">AttributeGroup:0x36b5df0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">Element:0x36b5c10, convert type="tns:double" to ('double', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">Extension:0x36d6130, convert ref="xs:double" to ('double', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">TypeQuery:0x36f1a50, found builtin (double)</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">AttributeGroup:0x36d6590, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.198" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">Element:0x36b5c30, convert type="tns:anyURI" to ('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">Extension:0x36d6870, convert ref="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">TypeQuery:0x36f1b30, found builtin (anyURI)</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">AttributeGroup:0x36d6d30, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">Element:0x36d6a50, convert type="tns:QName" to ('QName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">Extension:0x36c1030, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">TypeQuery:0x36f1990, found builtin (QName)</msg>
<msg timestamp="20191111 16:43:46.199" level="DEBUG">AttributeGroup:0x36c1410, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">Element:0x36d6b50, convert type="tns:string" to ('string', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">Extension:0x36c15f0, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">TypeQuery:0x36f1af0, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">AttributeGroup:0x36c16f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">Element:0x36c1690, convert type="tns:normalizedString" to ('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">Extension:0x36c1730, convert ref="xs:normalizedString" to ('normalizedString', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.200" level="DEBUG">TypeQuery:0x36f1bb0, found builtin (normalizedString)</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">AttributeGroup:0x36c1790, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">Element:0x36c1750, convert type="tns:token" to ('token', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">Extension:0x36c17d0, convert ref="xs:token" to ('token', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">TypeQuery:0x36f1c70, found builtin (token)</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">AttributeGroup:0x36c1830, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">Element:0x36c17f0, convert type="tns:language" to ('language', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.201" level="DEBUG">Extension:0x36c1870, convert ref="xs:language" to ('language', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">TypeQuery:0x36f17f0, found builtin (language)</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">AttributeGroup:0x36c18d0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">Element:0x36c1890, convert type="tns:Name" to ('Name', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">Extension:0x36c1910, convert ref="xs:Name" to ('Name', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">TypeQuery:0x36f1a90, found builtin (Name)</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">AttributeGroup:0x36c1970, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.202" level="DEBUG">Element:0x36c1930, convert type="tns:NMTOKEN" to ('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">Extension:0x36c19b0, convert ref="xs:NMTOKEN" to ('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">TypeQuery:0x36f1c50, found builtin (NMTOKEN)</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">AttributeGroup:0x36c1a10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">Element:0x36c19d0, convert type="tns:NCName" to ('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">Extension:0x36c1a50, convert ref="xs:NCName" to ('NCName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">TypeQuery:0x36f1cd0, found builtin (NCName)</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">AttributeGroup:0x36c1ab0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.203" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">Element:0x36c1a70, convert type="tns:NMTOKENS" to ('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">Extension:0x36c1af0, convert ref="xs:NMTOKENS" to ('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">TypeQuery:0x36f1c70, found builtin (NMTOKENS)</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">AttributeGroup:0x36c1b50, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">Element:0x36c1b10, convert type="tns:ID" to ('ID', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">Extension:0x36c1b90, convert ref="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.204" level="DEBUG">TypeQuery:0x36f1d30, found builtin (ID)</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">AttributeGroup:0x36c1bf0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">Element:0x36c1bb0, convert type="tns:IDREF" to ('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">Extension:0x36c1c30, convert ref="xs:IDREF" to ('IDREF', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">TypeQuery:0x36f1c90, found builtin (IDREF)</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">AttributeGroup:0x36c1c90, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">Element:0x36c1c50, convert type="tns:ENTITY" to ('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.205" level="DEBUG">Extension:0x36c1cd0, convert ref="xs:ENTITY" to ('ENTITY', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">TypeQuery:0x36f1cd0, found builtin (ENTITY)</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">AttributeGroup:0x36c1d30, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">Element:0x36c1cf0, convert type="tns:IDREFS" to ('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">Extension:0x36c1d70, convert ref="xs:IDREFS" to ('IDREFS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">TypeQuery:0x36f1d70, found builtin (IDREFS)</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">AttributeGroup:0x36c1dd0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">Element:0x36c1d90, convert type="tns:ENTITIES" to ('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.206" level="DEBUG">Extension:0x36c1e10, convert ref="xs:ENTITIES" to ('ENTITIES', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">TypeQuery:0x36f1af0, found builtin (ENTITIES)</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">AttributeGroup:0x36c1e70, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">Element:0x36c1e30, convert type="tns:decimal" to ('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">Extension:0x36c1eb0, convert ref="xs:decimal" to ('decimal', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">TypeQuery:0x36f1d90, found builtin (decimal)</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">AttributeGroup:0x36c1f10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.207" level="DEBUG">Element:0x36c1ed0, convert type="tns:integer" to ('integer', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">Extension:0x36c1f50, convert ref="xs:integer" to ('integer', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">TypeQuery:0x36f1eb0, found builtin (integer)</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">AttributeGroup:0x36c1fb0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">Element:0x36c1f70, convert type="tns:nonPositiveInteger" to ('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">Extension:0x36f1030, convert ref="xs:nonPositiveInteger" to ('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">TypeQuery:0x36f1e30, found builtin (nonPositiveInteger)</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">AttributeGroup:0x36f1070, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.208" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">Element:0x36c1ff0, convert type="tns:negativeInteger" to ('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">Extension:0x36f10b0, convert ref="xs:negativeInteger" to ('negativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">TypeQuery:0x36f1f10, found builtin (negativeInteger)</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">AttributeGroup:0x36f1110, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">Element:0x36f10d0, convert type="tns:long" to ('long', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">Extension:0x36f1150, convert ref="xs:long" to ('long', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.209" level="DEBUG">TypeQuery:0x36f1ef0, found builtin (long)</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">AttributeGroup:0x36f11b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">Element:0x36f1170, convert type="tns:int" to ('int', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">Extension:0x36f11f0, convert ref="xs:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">TypeQuery:0x36f1eb0, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">AttributeGroup:0x36f1250, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">Element:0x36f1210, convert type="tns:short" to ('short', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.210" level="DEBUG">Extension:0x36f1290, convert ref="xs:short" to ('short', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">TypeQuery:0x36f1ed0, found builtin (short)</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">AttributeGroup:0x36f12f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">Element:0x36f12b0, convert type="tns:byte" to ('byte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">Extension:0x36f1330, convert ref="xs:byte" to ('byte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">TypeQuery:0x36f1c30, found builtin (byte)</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">AttributeGroup:0x36f1390, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.211" level="DEBUG">Element:0x36f1350, convert type="tns:nonNegativeInteger" to ('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">Extension:0x36f13d0, convert ref="xs:nonNegativeInteger" to ('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">TypeQuery:0x36f1e70, found builtin (nonNegativeInteger)</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">AttributeGroup:0x36f1430, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">Element:0x36f13f0, convert type="tns:unsignedLong" to ('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">Extension:0x36f1470, convert ref="xs:unsignedLong" to ('unsignedLong', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">TypeQuery:0x36f1f90, found builtin (unsignedLong)</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">AttributeGroup:0x36f14d0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.212" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">Element:0x36f1490, convert type="tns:unsignedInt" to ('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">Extension:0x36f1510, convert ref="xs:unsignedInt" to ('unsignedInt', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">TypeQuery:0x36f1f50, found builtin (unsignedInt)</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">AttributeGroup:0x36f1570, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">Element:0x36f1530, convert type="tns:unsignedShort" to ('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">Extension:0x36f15b0, convert ref="xs:unsignedShort" to ('unsignedShort', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">TypeQuery:0x36f1e50, found builtin (unsignedShort)</msg>
<msg timestamp="20191111 16:43:46.213" level="DEBUG">AttributeGroup:0x36f1610, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">Element:0x36f15d0, convert type="tns:unsignedByte" to ('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">Extension:0x36f1650, convert ref="xs:unsignedByte" to ('unsignedByte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">TypeQuery:0x36f1e30, found builtin (unsignedByte)</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">AttributeGroup:0x36f16b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">Element:0x36f1670, convert type="tns:positiveInteger" to ('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">Extension:0x36f16f0, convert ref="xs:positiveInteger" to ('positiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.214" level="DEBUG">TypeQuery:0x36f1f70, found builtin (positiveInteger)</msg>
<msg timestamp="20191111 16:43:46.215" level="DEBUG">AttributeGroup:0x36f1750, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.215" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.215" level="DEBUG">Element:0x36f1710, convert type="xs:anyType" to ('anyType', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.216" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x3683150 ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x3363890 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191111 16:43:46.216" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x3683a30 ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x3363d70 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191111 16:43:46.216" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x3683b30 ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x3683650 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191111 16:43:46.216" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x338beb0 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x3683cd0 name="Array" /&gt;</msg>
<msg timestamp="20191111 16:43:46.216" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x338bf10 ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x36832f0 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.216" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x338bdd0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.216" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x338be70 ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x338bfd0 name="Struct" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x338bfb0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3697130 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3697d30 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36972b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36ad890 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36ade50 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x369f730 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x369f450 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.217" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36b1410 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36b1890 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3696110 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3696850 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36b5110 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36b5710 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36b5df0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36d6590 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36d6d30 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1410 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.218" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c16f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1790 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1830 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c18d0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1970 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1a10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1ab0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1b50 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1bf0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.219" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1c90 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1d30 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1dd0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1e70 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1f10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36c1fb0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1070 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1110 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f11b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.220" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1250 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f12f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1390 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1430 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f14d0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1570 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1610 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f16b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.221" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x36f1750 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3363a70 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191111 16:43:46.232" level="DEBUG">dereferenced:
Schema:0x3363530
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x33632b0 name="root" /&gt;
   &lt;AttributeGroup:0x3363a70 name="commonAttributes"&gt;
      &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x33630f0 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x3363890 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x3363d70 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x36832f0 name="arrayAttributes"&gt;
      &lt;Attribute:0x3683150 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3683a30 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3683650 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3683930 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3683b30 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3683cd0 name="Array"&gt;
      &lt;Sequence:0x3683430&gt;
         &lt;Any:0x3683fb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3363f90 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3683e70 name="Array"&gt;
      &lt;Group:0x338beb0 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x3683430&gt;
            &lt;Any:0x3683fb0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x338bf10 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3683150 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3683a30 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x338bdd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3683750 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x338bfd0 name="Struct"&gt;
      &lt;Sequence:0x338bd50&gt;
         &lt;Any:0x338bdb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x338bed0 name="Struct"&gt;
      &lt;Group:0x338be70 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x338bd50&gt;
            &lt;Any:0x338bdb0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x338bfb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x338be30 name="base64" /&gt;
   &lt;Element:0x338be10 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x338baf0 name="duration"&gt;
      &lt;SimpleContent:0x338bb50&gt;
         &lt;Extension:0x338b970 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3697130 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x338bc30 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x338b8f0 name="dateTime"&gt;
      &lt;SimpleContent:0x3697530&gt;
         &lt;Extension:0x3697a50 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3697d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697950 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36974d0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3697c30&gt;
         &lt;Extension:0x3697690 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36972b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697fd0 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3697770 name="time"&gt;
      &lt;SimpleContent:0x36ad5f0&gt;
         &lt;Extension:0x36ad2d0 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36ad890 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697e90 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36adab0 name="date"&gt;
      &lt;SimpleContent:0x36ad750&gt;
         &lt;Extension:0x36ad4f0 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36ade50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36adbb0 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36adfb0 name="gYearMonth"&gt;
      &lt;SimpleContent:0x36add10&gt;
         &lt;Extension:0x369fe30 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x369f730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36ad150 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x369fb90 name="gYear"&gt;
      &lt;SimpleContent:0x369f870&gt;
         &lt;Extension:0x369fcf0 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x369f450 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x369f170 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x369f590 name="gMonthDay"&gt;
      &lt;SimpleContent:0x369f2b0&gt;
         &lt;Extension:0x36b1070 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b1410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x369fa90 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b1570 name="gDay"&gt;
      &lt;SimpleContent:0x36b12d0&gt;
         &lt;Extension:0x36b16f0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b1890 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b1cf0 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b19d0 name="gMonth"&gt;
      &lt;SimpleContent:0x36b1f10&gt;
         &lt;Extension:0x36b1170 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3696110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b1bf0 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b1f30 name="boolean"&gt;
      &lt;SimpleContent:0x3696290&gt;
         &lt;Extension:0x3696430 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3696850 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696570 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3696a70 name="base64Binary"&gt;
      &lt;SimpleContent:0x3696710&gt;
         &lt;Extension:0x3696b70 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696cd0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3696fb0 name="hexBinary"&gt;
      &lt;SimpleContent:0x36b5430&gt;
         &lt;Extension:0x36b5330 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5710 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696e10 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b5870 name="float"&gt;
      &lt;SimpleContent:0x36b5610&gt;
         &lt;Extension:0x36b59b0 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5df0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b5c10 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b5f70 name="double"&gt;
      &lt;SimpleContent:0x36d6270&gt;
         &lt;Extension:0x36d6130 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36d6590 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b5c30 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36d6770 name="anyURI"&gt;
      &lt;SimpleContent:0x36d6490&gt;
         &lt;Extension:0x36d6870 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36d6d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36d6a50 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36d6e30 name="QName"&gt;
      &lt;SimpleContent:0x36c1130&gt;
         &lt;Extension:0x36c1030 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36d6b50 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1570 name="string"&gt;
      &lt;SimpleContent:0x36c1310&gt;
         &lt;Extension:0x36c15f0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c16f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1690 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1710 name="normalizedString"&gt;
      &lt;SimpleContent:0x36c16d0&gt;
         &lt;Extension:0x36c1730 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1790 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1750 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c17b0 name="token"&gt;
      &lt;SimpleContent:0x36c1770&gt;
         &lt;Extension:0x36c17d0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c17f0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1850 name="language"&gt;
      &lt;SimpleContent:0x36c1810&gt;
         &lt;Extension:0x36c1870 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c18d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1890 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c18f0 name="Name"&gt;
      &lt;SimpleContent:0x36c18b0&gt;
         &lt;Extension:0x36c1910 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1970 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1930 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1990 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x36c1950&gt;
         &lt;Extension:0x36c19b0 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1a10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c19d0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1a30 name="NCName"&gt;
      &lt;SimpleContent:0x36c19f0&gt;
         &lt;Extension:0x36c1a50 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1ab0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1a70 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1ad0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x36c1a90&gt;
         &lt;Extension:0x36c1af0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1b50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1b10 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1b70 name="ID"&gt;
      &lt;SimpleContent:0x36c1b30&gt;
         &lt;Extension:0x36c1b90 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1bf0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1bb0 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1c10 name="IDREF"&gt;
      &lt;SimpleContent:0x36c1bd0&gt;
         &lt;Extension:0x36c1c30 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1c90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1c50 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1cb0 name="ENTITY"&gt;
      &lt;SimpleContent:0x36c1c70&gt;
         &lt;Extension:0x36c1cd0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1cf0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1d50 name="IDREFS"&gt;
      &lt;SimpleContent:0x36c1d10&gt;
         &lt;Extension:0x36c1d70 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1dd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1d90 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1df0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x36c1db0&gt;
         &lt;Extension:0x36c1e10 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1e70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1e30 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1e90 name="decimal"&gt;
      &lt;SimpleContent:0x36c1e50&gt;
         &lt;Extension:0x36c1eb0 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1f10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1ed0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1f30 name="integer"&gt;
      &lt;SimpleContent:0x36c1ef0&gt;
         &lt;Extension:0x36c1f50 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1fb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1f70 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1fd0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x36c1f90&gt;
         &lt;Extension:0x36f1030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1070 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1ff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1090 name="negativeInteger"&gt;
      &lt;SimpleContent:0x36f1050&gt;
         &lt;Extension:0x36f10b0 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f10d0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1130 name="long"&gt;
      &lt;SimpleContent:0x36f10f0&gt;
         &lt;Extension:0x36f1150 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f11b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1170 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f11d0 name="int"&gt;
      &lt;SimpleContent:0x36f1190&gt;
         &lt;Extension:0x36f11f0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1250 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1210 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1270 name="short"&gt;
      &lt;SimpleContent:0x36f1230&gt;
         &lt;Extension:0x36f1290 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f12f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f12b0 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1310 name="byte"&gt;
      &lt;SimpleContent:0x36f12d0&gt;
         &lt;Extension:0x36f1330 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1390 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1350 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f13b0 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x36f1370&gt;
         &lt;Extension:0x36f13d0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1430 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f13f0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1450 name="unsignedLong"&gt;
      &lt;SimpleContent:0x36f1410&gt;
         &lt;Extension:0x36f1470 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f14d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1490 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f14f0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x36f14b0&gt;
         &lt;Extension:0x36f1510 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1570 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1530 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1590 name="unsignedShort"&gt;
      &lt;SimpleContent:0x36f1550&gt;
         &lt;Extension:0x36f15b0 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1610 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f15d0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1630 name="unsignedByte"&gt;
      &lt;SimpleContent:0x36f15f0&gt;
         &lt;Extension:0x36f1650 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f16b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1670 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f16d0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x36f1690&gt;
         &lt;Extension:0x36f16f0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1750 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1710 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191111 16:43:46.243" level="DEBUG">imported:
Schema:0x3363530
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x33632b0 name="root" /&gt;
   &lt;AttributeGroup:0x3363a70 name="commonAttributes"&gt;
      &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x33630f0 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x3363890 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x3363d70 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x36832f0 name="arrayAttributes"&gt;
      &lt;Attribute:0x3683150 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3683a30 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3683650 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3683930 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3683b30 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3683cd0 name="Array"&gt;
      &lt;Sequence:0x3683430&gt;
         &lt;Any:0x3683fb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3363f90 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3683e70 name="Array"&gt;
      &lt;Group:0x338beb0 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x3683430&gt;
            &lt;Any:0x3683fb0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x338bf10 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3683150 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3683a30 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x338bdd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3683750 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x338bfd0 name="Struct"&gt;
      &lt;Sequence:0x338bd50&gt;
         &lt;Any:0x338bdb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x338bed0 name="Struct"&gt;
      &lt;Group:0x338be70 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x338bd50&gt;
            &lt;Any:0x338bdb0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x338bfb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x338be30 name="base64" /&gt;
   &lt;Element:0x338be10 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x338baf0 name="duration"&gt;
      &lt;SimpleContent:0x338bb50&gt;
         &lt;Extension:0x338b970 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3697130 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x338bc30 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x338b8f0 name="dateTime"&gt;
      &lt;SimpleContent:0x3697530&gt;
         &lt;Extension:0x3697a50 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3697d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697950 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36974d0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3697c30&gt;
         &lt;Extension:0x3697690 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36972b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697fd0 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3697770 name="time"&gt;
      &lt;SimpleContent:0x36ad5f0&gt;
         &lt;Extension:0x36ad2d0 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36ad890 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697e90 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36adab0 name="date"&gt;
      &lt;SimpleContent:0x36ad750&gt;
         &lt;Extension:0x36ad4f0 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36ade50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36adbb0 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36adfb0 name="gYearMonth"&gt;
      &lt;SimpleContent:0x36add10&gt;
         &lt;Extension:0x369fe30 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x369f730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36ad150 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x369fb90 name="gYear"&gt;
      &lt;SimpleContent:0x369f870&gt;
         &lt;Extension:0x369fcf0 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x369f450 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x369f170 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x369f590 name="gMonthDay"&gt;
      &lt;SimpleContent:0x369f2b0&gt;
         &lt;Extension:0x36b1070 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b1410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x369fa90 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b1570 name="gDay"&gt;
      &lt;SimpleContent:0x36b12d0&gt;
         &lt;Extension:0x36b16f0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b1890 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b1cf0 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b19d0 name="gMonth"&gt;
      &lt;SimpleContent:0x36b1f10&gt;
         &lt;Extension:0x36b1170 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3696110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b1bf0 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b1f30 name="boolean"&gt;
      &lt;SimpleContent:0x3696290&gt;
         &lt;Extension:0x3696430 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3696850 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696570 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3696a70 name="base64Binary"&gt;
      &lt;SimpleContent:0x3696710&gt;
         &lt;Extension:0x3696b70 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696cd0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3696fb0 name="hexBinary"&gt;
      &lt;SimpleContent:0x36b5430&gt;
         &lt;Extension:0x36b5330 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5710 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696e10 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b5870 name="float"&gt;
      &lt;SimpleContent:0x36b5610&gt;
         &lt;Extension:0x36b59b0 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5df0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b5c10 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b5f70 name="double"&gt;
      &lt;SimpleContent:0x36d6270&gt;
         &lt;Extension:0x36d6130 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36d6590 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b5c30 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36d6770 name="anyURI"&gt;
      &lt;SimpleContent:0x36d6490&gt;
         &lt;Extension:0x36d6870 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36d6d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36d6a50 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36d6e30 name="QName"&gt;
      &lt;SimpleContent:0x36c1130&gt;
         &lt;Extension:0x36c1030 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36d6b50 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1570 name="string"&gt;
      &lt;SimpleContent:0x36c1310&gt;
         &lt;Extension:0x36c15f0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c16f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1690 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1710 name="normalizedString"&gt;
      &lt;SimpleContent:0x36c16d0&gt;
         &lt;Extension:0x36c1730 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1790 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1750 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c17b0 name="token"&gt;
      &lt;SimpleContent:0x36c1770&gt;
         &lt;Extension:0x36c17d0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c17f0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1850 name="language"&gt;
      &lt;SimpleContent:0x36c1810&gt;
         &lt;Extension:0x36c1870 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c18d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1890 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c18f0 name="Name"&gt;
      &lt;SimpleContent:0x36c18b0&gt;
         &lt;Extension:0x36c1910 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1970 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1930 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1990 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x36c1950&gt;
         &lt;Extension:0x36c19b0 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1a10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c19d0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1a30 name="NCName"&gt;
      &lt;SimpleContent:0x36c19f0&gt;
         &lt;Extension:0x36c1a50 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1ab0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1a70 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1ad0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x36c1a90&gt;
         &lt;Extension:0x36c1af0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1b50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1b10 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1b70 name="ID"&gt;
      &lt;SimpleContent:0x36c1b30&gt;
         &lt;Extension:0x36c1b90 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1bf0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1bb0 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1c10 name="IDREF"&gt;
      &lt;SimpleContent:0x36c1bd0&gt;
         &lt;Extension:0x36c1c30 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1c90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1c50 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1cb0 name="ENTITY"&gt;
      &lt;SimpleContent:0x36c1c70&gt;
         &lt;Extension:0x36c1cd0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1cf0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1d50 name="IDREFS"&gt;
      &lt;SimpleContent:0x36c1d10&gt;
         &lt;Extension:0x36c1d70 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1dd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1d90 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1df0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x36c1db0&gt;
         &lt;Extension:0x36c1e10 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1e70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1e30 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1e90 name="decimal"&gt;
      &lt;SimpleContent:0x36c1e50&gt;
         &lt;Extension:0x36c1eb0 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1f10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1ed0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1f30 name="integer"&gt;
      &lt;SimpleContent:0x36c1ef0&gt;
         &lt;Extension:0x36c1f50 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1fb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1f70 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1fd0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x36c1f90&gt;
         &lt;Extension:0x36f1030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1070 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1ff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1090 name="negativeInteger"&gt;
      &lt;SimpleContent:0x36f1050&gt;
         &lt;Extension:0x36f10b0 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f10d0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1130 name="long"&gt;
      &lt;SimpleContent:0x36f10f0&gt;
         &lt;Extension:0x36f1150 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f11b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1170 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f11d0 name="int"&gt;
      &lt;SimpleContent:0x36f1190&gt;
         &lt;Extension:0x36f11f0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1250 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1210 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1270 name="short"&gt;
      &lt;SimpleContent:0x36f1230&gt;
         &lt;Extension:0x36f1290 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f12f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f12b0 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1310 name="byte"&gt;
      &lt;SimpleContent:0x36f12d0&gt;
         &lt;Extension:0x36f1330 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1390 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1350 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f13b0 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x36f1370&gt;
         &lt;Extension:0x36f13d0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1430 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f13f0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1450 name="unsignedLong"&gt;
      &lt;SimpleContent:0x36f1410&gt;
         &lt;Extension:0x36f1470 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f14d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1490 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f14f0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x36f14b0&gt;
         &lt;Extension:0x36f1510 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1570 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1530 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1590 name="unsignedShort"&gt;
      &lt;SimpleContent:0x36f1550&gt;
         &lt;Extension:0x36f15b0 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1610 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f15d0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1630 name="unsignedByte"&gt;
      &lt;SimpleContent:0x36f15f0&gt;
         &lt;Extension:0x36f1650 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f16b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1670 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f16d0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x36f1690&gt;
         &lt;Extension:0x36f16f0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1750 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1710 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191111 16:43:46.254" level="DEBUG">imported:
Schema:0x3363530
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x33632b0 name="root" /&gt;
   &lt;AttributeGroup:0x3363a70 name="commonAttributes"&gt;
      &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x33630f0 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x3363890 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x3363d70 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x36832f0 name="arrayAttributes"&gt;
      &lt;Attribute:0x3683150 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3683a30 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3683650 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3683930 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3683b30 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3683cd0 name="Array"&gt;
      &lt;Sequence:0x3683430&gt;
         &lt;Any:0x3683fb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3363f90 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3683e70 name="Array"&gt;
      &lt;Group:0x338beb0 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x3683430&gt;
            &lt;Any:0x3683fb0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x338bf10 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3683150 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3683a30 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x338bdd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3683750 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x338bfd0 name="Struct"&gt;
      &lt;Sequence:0x338bd50&gt;
         &lt;Any:0x338bdb0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x338bed0 name="Struct"&gt;
      &lt;Group:0x338be70 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x338bd50&gt;
            &lt;Any:0x338bdb0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x338bfb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x338be30 name="base64" /&gt;
   &lt;Element:0x338be10 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x338baf0 name="duration"&gt;
      &lt;SimpleContent:0x338bb50&gt;
         &lt;Extension:0x338b970 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3697130 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x338bc30 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x338b8f0 name="dateTime"&gt;
      &lt;SimpleContent:0x3697530&gt;
         &lt;Extension:0x3697a50 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3697d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697950 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36974d0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3697c30&gt;
         &lt;Extension:0x3697690 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36972b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697fd0 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3697770 name="time"&gt;
      &lt;SimpleContent:0x36ad5f0&gt;
         &lt;Extension:0x36ad2d0 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36ad890 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3697e90 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36adab0 name="date"&gt;
      &lt;SimpleContent:0x36ad750&gt;
         &lt;Extension:0x36ad4f0 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36ade50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36adbb0 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36adfb0 name="gYearMonth"&gt;
      &lt;SimpleContent:0x36add10&gt;
         &lt;Extension:0x369fe30 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x369f730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36ad150 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x369fb90 name="gYear"&gt;
      &lt;SimpleContent:0x369f870&gt;
         &lt;Extension:0x369fcf0 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x369f450 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x369f170 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x369f590 name="gMonthDay"&gt;
      &lt;SimpleContent:0x369f2b0&gt;
         &lt;Extension:0x36b1070 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b1410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x369fa90 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b1570 name="gDay"&gt;
      &lt;SimpleContent:0x36b12d0&gt;
         &lt;Extension:0x36b16f0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b1890 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b1cf0 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b19d0 name="gMonth"&gt;
      &lt;SimpleContent:0x36b1f10&gt;
         &lt;Extension:0x36b1170 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3696110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b1bf0 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b1f30 name="boolean"&gt;
      &lt;SimpleContent:0x3696290&gt;
         &lt;Extension:0x3696430 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3696850 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696570 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3696a70 name="base64Binary"&gt;
      &lt;SimpleContent:0x3696710&gt;
         &lt;Extension:0x3696b70 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696cd0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3696fb0 name="hexBinary"&gt;
      &lt;SimpleContent:0x36b5430&gt;
         &lt;Extension:0x36b5330 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5710 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3696e10 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b5870 name="float"&gt;
      &lt;SimpleContent:0x36b5610&gt;
         &lt;Extension:0x36b59b0 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36b5df0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b5c10 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36b5f70 name="double"&gt;
      &lt;SimpleContent:0x36d6270&gt;
         &lt;Extension:0x36d6130 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36d6590 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36b5c30 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36d6770 name="anyURI"&gt;
      &lt;SimpleContent:0x36d6490&gt;
         &lt;Extension:0x36d6870 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36d6d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36d6a50 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36d6e30 name="QName"&gt;
      &lt;SimpleContent:0x36c1130&gt;
         &lt;Extension:0x36c1030 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36d6b50 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1570 name="string"&gt;
      &lt;SimpleContent:0x36c1310&gt;
         &lt;Extension:0x36c15f0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c16f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1690 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1710 name="normalizedString"&gt;
      &lt;SimpleContent:0x36c16d0&gt;
         &lt;Extension:0x36c1730 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1790 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1750 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c17b0 name="token"&gt;
      &lt;SimpleContent:0x36c1770&gt;
         &lt;Extension:0x36c17d0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c17f0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1850 name="language"&gt;
      &lt;SimpleContent:0x36c1810&gt;
         &lt;Extension:0x36c1870 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c18d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1890 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c18f0 name="Name"&gt;
      &lt;SimpleContent:0x36c18b0&gt;
         &lt;Extension:0x36c1910 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1970 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1930 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1990 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x36c1950&gt;
         &lt;Extension:0x36c19b0 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1a10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c19d0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1a30 name="NCName"&gt;
      &lt;SimpleContent:0x36c19f0&gt;
         &lt;Extension:0x36c1a50 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1ab0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1a70 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1ad0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x36c1a90&gt;
         &lt;Extension:0x36c1af0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1b50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1b10 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1b70 name="ID"&gt;
      &lt;SimpleContent:0x36c1b30&gt;
         &lt;Extension:0x36c1b90 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1bf0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1bb0 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1c10 name="IDREF"&gt;
      &lt;SimpleContent:0x36c1bd0&gt;
         &lt;Extension:0x36c1c30 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1c90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1c50 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1cb0 name="ENTITY"&gt;
      &lt;SimpleContent:0x36c1c70&gt;
         &lt;Extension:0x36c1cd0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1d30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1cf0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1d50 name="IDREFS"&gt;
      &lt;SimpleContent:0x36c1d10&gt;
         &lt;Extension:0x36c1d70 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1dd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1d90 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1df0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x36c1db0&gt;
         &lt;Extension:0x36c1e10 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1e70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1e30 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1e90 name="decimal"&gt;
      &lt;SimpleContent:0x36c1e50&gt;
         &lt;Extension:0x36c1eb0 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1f10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1ed0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1f30 name="integer"&gt;
      &lt;SimpleContent:0x36c1ef0&gt;
         &lt;Extension:0x36c1f50 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36c1fb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1f70 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36c1fd0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x36c1f90&gt;
         &lt;Extension:0x36f1030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1070 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36c1ff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1090 name="negativeInteger"&gt;
      &lt;SimpleContent:0x36f1050&gt;
         &lt;Extension:0x36f10b0 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1110 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f10d0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1130 name="long"&gt;
      &lt;SimpleContent:0x36f10f0&gt;
         &lt;Extension:0x36f1150 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f11b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1170 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f11d0 name="int"&gt;
      &lt;SimpleContent:0x36f1190&gt;
         &lt;Extension:0x36f11f0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1250 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1210 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1270 name="short"&gt;
      &lt;SimpleContent:0x36f1230&gt;
         &lt;Extension:0x36f1290 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f12f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f12b0 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1310 name="byte"&gt;
      &lt;SimpleContent:0x36f12d0&gt;
         &lt;Extension:0x36f1330 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1390 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1350 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f13b0 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x36f1370&gt;
         &lt;Extension:0x36f13d0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1430 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f13f0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1450 name="unsignedLong"&gt;
      &lt;SimpleContent:0x36f1410&gt;
         &lt;Extension:0x36f1470 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f14d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1490 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f14f0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x36f14b0&gt;
         &lt;Extension:0x36f1510 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1570 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1530 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1590 name="unsignedShort"&gt;
      &lt;SimpleContent:0x36f1550&gt;
         &lt;Extension:0x36f15b0 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1610 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f15d0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f1630 name="unsignedByte"&gt;
      &lt;SimpleContent:0x36f15f0&gt;
         &lt;Extension:0x36f1650 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f16b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1670 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x36f16d0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x36f1690&gt;
         &lt;Extension:0x36f16f0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x36f1750 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x36f1710 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191111 16:43:46.255" level="DEBUG">Element:0x3384bb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.255" level="DEBUG">Element:0x3384b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.255" level="DEBUG">Element:0x3384bf0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.255" level="DEBUG">Element:0x3384cf0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384db0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384e30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384e50, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384e90, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384d90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x3384f30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.256" level="DEBUG">Element:0x339c030, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c070, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c090, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c0d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c110, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c1d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c1f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c210, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.257" level="DEBUG">Element:0x339c230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c2d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c310, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c3b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c3d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c3f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.258" level="DEBUG">Element:0x339c4d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c530, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c610, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c670, convert type="tns:PrintTask" to ('PrintTask', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c690, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c6d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c6f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c710, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.259" level="DEBUG">Element:0x339c730, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c770, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c790, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c7b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c7d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c810, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c890, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c8b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c8d0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.260" level="DEBUG">Element:0x339c8f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339c930, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339c910, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339c9d0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339c9f0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339ca10, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339ca30, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339ca70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339c9b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339caf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.261" level="DEBUG">Element:0x339cb50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339cb70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339cb90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339cbd0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339cc50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339cc70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339cc90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339ccb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339ccf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.262" level="DEBUG">Element:0x339ccd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cd90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cdb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cdd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cdf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339ce10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cef0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cf70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cfd0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x339cff0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.263" level="DEBUG">Element:0x338ba90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b9d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b0b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b0f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b170, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b090, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b1d0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b310, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.264" level="DEBUG">Element:0x338b350, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b3d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b3f0, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b450, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b4f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b510, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b5d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b5f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.265" level="DEBUG">Element:0x338b530, convert type="tns:PatientInfo" to ('PatientInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b550, convert type="tns:ArrayOfFilmInfo" to ('ArrayOfFilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b5b0, convert type="tns:ArrayOfReportInfo" to ('ArrayOfReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b610, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b630, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b650, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b4d0, convert type="tns:FilmInfo" to ('FilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b6b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b730, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.266" level="DEBUG">Element:0x338b750, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338b770, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338b710, convert type="tns:ReportInfo" to ('ReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338b7d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338b890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338bb10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338bbd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338bd30, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338b930, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.267" level="DEBUG">Element:0x338bd70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.268" level="DEBUG">Element:0x338be90, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:43:46.268" level="DEBUG">Element:0x338bd90, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191111 16:43:46.269" level="DEBUG">Restriction:0x338bf90, convert ref="soapenc:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191111 16:43:46.269" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Complex:0x3683e70 name="Array" /&gt;</msg>
<msg timestamp="20191111 16:43:46.269" level="DEBUG">"&lt;Complex:0x3683e70 name="Array" /&gt;" not found, skipped</msg>
<msg timestamp="20191111 16:43:46.269" level="DEBUG">(http://tempuri.org/AbstractTypes) merging &lt;Restriction:0x338bf90 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Complex:0x3683e70 name="Array" /&gt;</msg>
<msg timestamp="20191111 16:43:46.279" level="DEBUG">loaded:

schema collection
   Schema:0x3384c50
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatus"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2Response"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Print"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="PrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PrintTask"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrintCombine"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintCombineResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfInt"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrint"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLog"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLogResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Version"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="VersionResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="TaskInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="PatientInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfFilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="FilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="int" type="s:int"/&gt;
         &lt;s:element name="string" nillable="true" type="s:string"/&gt;
         &lt;s:element name="boolean" type="s:boolean"/&gt;
         &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x3384c90 name="SetPrintMode"&gt;
         &lt;Complex:0x3384c30&gt;
            &lt;Sequence:0x3384b30&gt;
               &lt;Element:0x3384bb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3384b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3384bf0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3384cd0 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x3384b70&gt;
            &lt;Sequence:0x3384950&gt;
               &lt;Element:0x3384cf0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3384bd0 name="NotifyReportInfo"&gt;
         &lt;Complex:0x3384b90&gt;
            &lt;Sequence:0x3384d50&gt;
               &lt;Element:0x3384d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3384db0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3384e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3384e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3384e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3384e90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
         &lt;Sequence:0x3384d30&gt;
            &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3384dd0 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x3384ed0&gt;
            &lt;Sequence:0x3384ef0&gt;
               &lt;Element:0x3384f30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3384e70 name="GetPrintServerStatus" /&gt;
      &lt;Element:0x3384f50 name="GetPrintServerStatusResponse"&gt;
         &lt;Complex:0x3384f70&gt;
            &lt;Sequence:0x3384fb0&gt;
               &lt;Element:0x339c030 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c070 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c090 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3384f90 name="CreatePrintTask"&gt;
         &lt;Complex:0x3384fd0&gt;
            &lt;Sequence:0x339c0b0&gt;
               &lt;Element:0x339c0d0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c130 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3384ff0 name="CreatePrintTaskResponse"&gt;
         &lt;Complex:0x339c050&gt;
            &lt;Sequence:0x339c0f0&gt;
               &lt;Element:0x339c110 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c1d0 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c1f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c210 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c230 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3384eb0 name="CreatePrintTask2"&gt;
         &lt;Complex:0x339c150&gt;
            &lt;Sequence:0x339c1b0&gt;
               &lt;Element:0x339c250 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c2d0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339c170 name="CreatePrintTask2Response"&gt;
         &lt;Complex:0x339c270&gt;
            &lt;Sequence:0x339c2f0&gt;
               &lt;Element:0x339c310 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c390 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c3b0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c3d0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c3f0 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c430 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339c290 name="Print"&gt;
         &lt;Complex:0x339c2b0&gt;
            &lt;Sequence:0x339c370&gt;
               &lt;Element:0x339c410 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339c330 name="PrintResponse"&gt;
         &lt;Complex:0x339c450&gt;
            &lt;Sequence:0x339c4b0&gt;
               &lt;Element:0x339c4d0 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c530 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c550 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339c470 name="GetPrintTaskStatus"&gt;
         &lt;Complex:0x339c490&gt;
            &lt;Sequence:0x339c570&gt;
               &lt;Element:0x339c590 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339c4f0 name="GetPrintTaskStatusResponse"&gt;
         &lt;Complex:0x339c510&gt;
            &lt;Sequence:0x339c5f0&gt;
               &lt;Element:0x339c610 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c670 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x339c5b0 name="PrintTask"&gt;
         &lt;Sequence:0x339c5d0&gt;
            &lt;Element:0x339c690 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c6d0 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c6f0 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c710 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c730 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c770 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c790 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c7b0 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c7d0 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x339c630 name="CentralPrintCombine"&gt;
         &lt;Complex:0x339c650&gt;
            &lt;Sequence:0x339c6b0&gt;
               &lt;Element:0x339c810 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c890 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x339c8b0 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c8d0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x339c8f0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339c930 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339c750 name="CentralPrintCombineResponse"&gt;
         &lt;Complex:0x339c7f0&gt;
            &lt;Sequence:0x339c870&gt;
               &lt;Element:0x339c910 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x339c9d0 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x339c9f0 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x339ca10 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x339ca30 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x339ca70 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x339c830 name="ArrayOfInt"&gt;
         &lt;Sequence:0x339c950&gt;
            &lt;Element:0x339c9b0 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x339c970 name="CentralPrint"&gt;
         &lt;Complex:0x339ca90&gt;
            &lt;Sequence:0x339ca50&gt;
               &lt;Element:0x339caf0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cb50 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cb70 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cb90 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339cab0 name="CentralPrintResponse"&gt;
         &lt;Complex:0x339cad0&gt;
            &lt;Sequence:0x339cbb0&gt;
               &lt;Element:0x339cbd0 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cc50 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cc70 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cc90 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339ccb0 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339ccf0 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339cb10 name="AddQCLog"&gt;
         &lt;Complex:0x339cb30&gt;
            &lt;Sequence:0x339cc30&gt;
               &lt;Element:0x339ccd0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cd90 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cdb0 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cdd0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cdf0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339cbf0 name="AddQCLogResponse"&gt;
         &lt;Complex:0x339cd10&gt;
            &lt;Sequence:0x339cd70&gt;
               &lt;Element:0x339ce10 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339cd30 name="Version" /&gt;
      &lt;Element:0x339ce50 name="VersionResponse"&gt;
         &lt;Complex:0x339ce70&gt;
            &lt;Sequence:0x339ceb0&gt;
               &lt;Element:0x339cef0 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339ce90 name="UpdateReportPrinterStatus"&gt;
         &lt;Complex:0x339ced0&gt;
            &lt;Sequence:0x339cf50&gt;
               &lt;Element:0x339cf70 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cfd0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x339cff0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339cf10 name="UpdateReportPrinterStatusResponse"&gt;
         &lt;Complex:0x339cf30&gt;
            &lt;Sequence:0x338bb90&gt;
               &lt;Element:0x338ba90 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339cf90 name="QueryExamInfo"&gt;
         &lt;Complex:0x338bf50&gt;
            &lt;Sequence:0x338b910&gt;
               &lt;Element:0x338b9d0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x338b0b0 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x339cfb0 name="QueryExamInfoResponse"&gt;
         &lt;Complex:0x338bcf0&gt;
            &lt;Sequence:0x338b0d0&gt;
               &lt;Element:0x338b0f0 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b030 name="SetReportPrinted"&gt;
         &lt;Complex:0x338b050&gt;
            &lt;Sequence:0x338b150&gt;
               &lt;Element:0x338b170 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x338b090 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b110 name="SetReportPrintedResponse"&gt;
         &lt;Complex:0x338b130&gt;
            &lt;Sequence:0x338b1b0&gt;
               &lt;Element:0x338b1d0 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b190 name="SetReportUnPrinted"&gt;
         &lt;Complex:0x338b070&gt;
            &lt;Sequence:0x338b230&gt;
               &lt;Element:0x338b250 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x338b310 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b1f0 name="SetReportUnPrintedResponse"&gt;
         &lt;Complex:0x338b210&gt;
            &lt;Sequence:0x338b330&gt;
               &lt;Element:0x338b350 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b270 name="QueryPrintTask"&gt;
         &lt;Complex:0x338b290&gt;
            &lt;Sequence:0x338b3b0&gt;
               &lt;Element:0x338b3d0 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b370 name="QueryPrintTaskResponse"&gt;
         &lt;Complex:0x338b390&gt;
            &lt;Sequence:0x338b2f0&gt;
               &lt;Element:0x338b3f0 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x338b2b0 name="TaskInfo"&gt;
         &lt;Sequence:0x338b2d0&gt;
            &lt;Element:0x338b450 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b4f0 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b510 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b570 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b590 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b5d0 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b5f0 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b530 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x338b550 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x338b5b0 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x338b410 name="PatientInfo"&gt;
         &lt;Sequence:0x338b430&gt;
            &lt;Element:0x338b470 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b610 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b630 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b650 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x338b490 name="ArrayOfFilmInfo"&gt;
         &lt;Sequence:0x338b4b0&gt;
            &lt;Element:0x338b4d0 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x338b670 name="FilmInfo"&gt;
         &lt;Sequence:0x338b690&gt;
            &lt;Element:0x338b6b0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b730 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b750 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b770 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x338b6d0 name="ArrayOfReportInfo"&gt;
         &lt;Sequence:0x338b6f0&gt;
            &lt;Element:0x338b710 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x338b790 name="ReportInfo"&gt;
         &lt;Sequence:0x338b7b0&gt;
            &lt;Element:0x338b7d0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b890 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x338b7f0 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x338b810&gt;
            &lt;Sequence:0x338b850&gt;
               &lt;Element:0x338bb10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x338bbd0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b870 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x338b9b0&gt;
            &lt;Sequence:0x338bc50&gt;
               &lt;Element:0x338bd30 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x338b930 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x338bd70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x338be90 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x338bd90 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;

   Schema:0x3384cb0
   (raw)
      &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;
         &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/&gt;
         &lt;s:complexType name="StringArray"&gt;
            &lt;s:complexContent mixed="false"&gt;
               &lt;s:restriction base="soapenc:Array"&gt;
                  &lt;s:sequence&gt;
                     &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string"/&gt;
                  &lt;/s:sequence&gt;
               &lt;/s:restriction&gt;
            &lt;/s:complexContent&gt;
         &lt;/s:complexType&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Complex:0x338bf70 name="StringArray"&gt;
         &lt;ComplexContent:0x338bb70&gt;
            &lt;Restriction:0x338bf90 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Group:0x338beb0 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Sequence:0x3683430&gt;
                     &lt;Any:0x3683fb0 /&gt;
                  &lt;/Sequence&gt;
               &lt;/Group&gt;
               &lt;AttributeGroup:0x338bf10 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x3683150 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x3683a30 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
               &lt;/AttributeGroup&gt;
               &lt;AttributeGroup:0x338bdd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x3363830 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x3363bb0 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;/AttributeGroup&gt;
            &lt;/Restriction&gt;
         &lt;/ComplexContent&gt;
      &lt;/Complex&gt;
</msg>
<msg timestamp="20191111 16:43:46.289" level="DEBUG">MERGED:
Schema:0x3384c50
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatus"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2Response"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Print"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="PrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PrintTask"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrintCombine"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintCombineResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfInt"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrint"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLog"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLogResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Version"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="VersionResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="TaskInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="PatientInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfFilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="FilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="int" type="s:int"/&gt;
      &lt;s:element name="string" nillable="true" type="s:string"/&gt;
      &lt;s:element name="boolean" type="s:boolean"/&gt;
      &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x3384c90 name="SetPrintMode"&gt;
      &lt;Complex:0x3384c30&gt;
         &lt;Sequence:0x3384b30&gt;
            &lt;Element:0x3384bb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3384b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3384bf0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3384cd0 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x3384b70&gt;
         &lt;Sequence:0x3384950&gt;
            &lt;Element:0x3384cf0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3384bd0 name="NotifyReportInfo"&gt;
      &lt;Complex:0x3384b90&gt;
         &lt;Sequence:0x3384d50&gt;
            &lt;Element:0x3384d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3384db0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3384e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3384e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3384e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3384e90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
      &lt;Sequence:0x3384d30&gt;
         &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3384dd0 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x3384ed0&gt;
         &lt;Sequence:0x3384ef0&gt;
            &lt;Element:0x3384f30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3384e70 name="GetPrintServerStatus" /&gt;
   &lt;Element:0x3384f50 name="GetPrintServerStatusResponse"&gt;
      &lt;Complex:0x3384f70&gt;
         &lt;Sequence:0x3384fb0&gt;
            &lt;Element:0x339c030 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c070 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c090 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3384f90 name="CreatePrintTask"&gt;
      &lt;Complex:0x3384fd0&gt;
         &lt;Sequence:0x339c0b0&gt;
            &lt;Element:0x339c0d0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c130 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3384ff0 name="CreatePrintTaskResponse"&gt;
      &lt;Complex:0x339c050&gt;
         &lt;Sequence:0x339c0f0&gt;
            &lt;Element:0x339c110 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c1d0 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c1f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c210 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c230 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3384eb0 name="CreatePrintTask2"&gt;
      &lt;Complex:0x339c150&gt;
         &lt;Sequence:0x339c1b0&gt;
            &lt;Element:0x339c250 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c2d0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339c170 name="CreatePrintTask2Response"&gt;
      &lt;Complex:0x339c270&gt;
         &lt;Sequence:0x339c2f0&gt;
            &lt;Element:0x339c310 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c390 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c3b0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c3d0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c3f0 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c430 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339c290 name="Print"&gt;
      &lt;Complex:0x339c2b0&gt;
         &lt;Sequence:0x339c370&gt;
            &lt;Element:0x339c410 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339c330 name="PrintResponse"&gt;
      &lt;Complex:0x339c450&gt;
         &lt;Sequence:0x339c4b0&gt;
            &lt;Element:0x339c4d0 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c530 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c550 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339c470 name="GetPrintTaskStatus"&gt;
      &lt;Complex:0x339c490&gt;
         &lt;Sequence:0x339c570&gt;
            &lt;Element:0x339c590 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339c4f0 name="GetPrintTaskStatusResponse"&gt;
      &lt;Complex:0x339c510&gt;
         &lt;Sequence:0x339c5f0&gt;
            &lt;Element:0x339c610 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c670 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x339c5b0 name="PrintTask"&gt;
      &lt;Sequence:0x339c5d0&gt;
         &lt;Element:0x339c690 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c6d0 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c6f0 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c710 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c730 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c770 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c790 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c7b0 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x339c7d0 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x339c630 name="CentralPrintCombine"&gt;
      &lt;Complex:0x339c650&gt;
         &lt;Sequence:0x339c6b0&gt;
            &lt;Element:0x339c810 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c890 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x339c8b0 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c8d0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x339c8f0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339c930 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339c750 name="CentralPrintCombineResponse"&gt;
      &lt;Complex:0x339c7f0&gt;
         &lt;Sequence:0x339c870&gt;
            &lt;Element:0x339c910 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x339c9d0 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x339c9f0 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x339ca10 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x339ca30 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x339ca70 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x339c830 name="ArrayOfInt"&gt;
      &lt;Sequence:0x339c950&gt;
         &lt;Element:0x339c9b0 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x339c970 name="CentralPrint"&gt;
      &lt;Complex:0x339ca90&gt;
         &lt;Sequence:0x339ca50&gt;
            &lt;Element:0x339caf0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cb50 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cb70 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cb90 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339cab0 name="CentralPrintResponse"&gt;
      &lt;Complex:0x339cad0&gt;
         &lt;Sequence:0x339cbb0&gt;
            &lt;Element:0x339cbd0 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cc50 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cc70 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cc90 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339ccb0 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339ccf0 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339cb10 name="AddQCLog"&gt;
      &lt;Complex:0x339cb30&gt;
         &lt;Sequence:0x339cc30&gt;
            &lt;Element:0x339ccd0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cd90 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cdb0 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cdd0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cdf0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339cbf0 name="AddQCLogResponse"&gt;
      &lt;Complex:0x339cd10&gt;
         &lt;Sequence:0x339cd70&gt;
            &lt;Element:0x339ce10 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339cd30 name="Version" /&gt;
   &lt;Element:0x339ce50 name="VersionResponse"&gt;
      &lt;Complex:0x339ce70&gt;
         &lt;Sequence:0x339ceb0&gt;
            &lt;Element:0x339cef0 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339ce90 name="UpdateReportPrinterStatus"&gt;
      &lt;Complex:0x339ced0&gt;
         &lt;Sequence:0x339cf50&gt;
            &lt;Element:0x339cf70 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cfd0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x339cff0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339cf10 name="UpdateReportPrinterStatusResponse"&gt;
      &lt;Complex:0x339cf30&gt;
         &lt;Sequence:0x338bb90&gt;
            &lt;Element:0x338ba90 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339cf90 name="QueryExamInfo"&gt;
      &lt;Complex:0x338bf50&gt;
         &lt;Sequence:0x338b910&gt;
            &lt;Element:0x338b9d0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b0b0 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x339cfb0 name="QueryExamInfoResponse"&gt;
      &lt;Complex:0x338bcf0&gt;
         &lt;Sequence:0x338b0d0&gt;
            &lt;Element:0x338b0f0 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b030 name="SetReportPrinted"&gt;
      &lt;Complex:0x338b050&gt;
         &lt;Sequence:0x338b150&gt;
            &lt;Element:0x338b170 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b090 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b110 name="SetReportPrintedResponse"&gt;
      &lt;Complex:0x338b130&gt;
         &lt;Sequence:0x338b1b0&gt;
            &lt;Element:0x338b1d0 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b190 name="SetReportUnPrinted"&gt;
      &lt;Complex:0x338b070&gt;
         &lt;Sequence:0x338b230&gt;
            &lt;Element:0x338b250 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338b310 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b1f0 name="SetReportUnPrintedResponse"&gt;
      &lt;Complex:0x338b210&gt;
         &lt;Sequence:0x338b330&gt;
            &lt;Element:0x338b350 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b270 name="QueryPrintTask"&gt;
      &lt;Complex:0x338b290&gt;
         &lt;Sequence:0x338b3b0&gt;
            &lt;Element:0x338b3d0 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b370 name="QueryPrintTaskResponse"&gt;
      &lt;Complex:0x338b390&gt;
         &lt;Sequence:0x338b2f0&gt;
            &lt;Element:0x338b3f0 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x338b2b0 name="TaskInfo"&gt;
      &lt;Sequence:0x338b2d0&gt;
         &lt;Element:0x338b450 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b4f0 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b510 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b570 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b590 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b5d0 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b5f0 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b530 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x338b550 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x338b5b0 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x338b410 name="PatientInfo"&gt;
      &lt;Sequence:0x338b430&gt;
         &lt;Element:0x338b470 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b610 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b630 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b650 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x338b490 name="ArrayOfFilmInfo"&gt;
      &lt;Sequence:0x338b4b0&gt;
         &lt;Element:0x338b4d0 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x338b670 name="FilmInfo"&gt;
      &lt;Sequence:0x338b690&gt;
         &lt;Element:0x338b6b0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b730 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b750 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b770 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x338b6d0 name="ArrayOfReportInfo"&gt;
      &lt;Sequence:0x338b6f0&gt;
         &lt;Element:0x338b710 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x338b790 name="ReportInfo"&gt;
      &lt;Sequence:0x338b7b0&gt;
         &lt;Element:0x338b7d0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x338b890 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x338b7f0 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x338b810&gt;
         &lt;Sequence:0x338b850&gt;
            &lt;Element:0x338bb10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x338bbd0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b870 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x338b9b0&gt;
         &lt;Sequence:0x338bc50&gt;
            &lt;Element:0x338bd30 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x338b930 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x338bd70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x338be90 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x338bd90 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
</msg>
<msg timestamp="20191111 16:43:46.290" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3384c90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:46.290" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384cd0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.290" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3384bd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.290" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384dd0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.290" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3384e70 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.291" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384f50 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.291" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3384f90 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.291" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384ff0 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.291" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3384eb0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191111 16:43:46.291" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x339c170 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191111 16:43:46.291" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x339c290 name="Print" /&gt;</msg>
<msg timestamp="20191111 16:43:46.292" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339c330 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.292" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339c470 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.292" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339c4f0 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.292" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x339c630 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191111 16:43:46.292" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339c750 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.292" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x339c970 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191111 16:43:46.293" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cab0 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.293" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x339cb10 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191111 16:43:46.293" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cbf0 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.293" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x339cd30 name="Version" /&gt;</msg>
<msg timestamp="20191111 16:43:46.293" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339ce50 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.293" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339ce90 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.293" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cf10 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.294" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x339cf90 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.294" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cfb0 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.294" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b030 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.294" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b110 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.294" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b190 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.294" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b1f0 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.295" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x338b270 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.295" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b370 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.295" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x338b7f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.295" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b870 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.295" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3384c90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:46.295" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384cd0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.295" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3384bd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384dd0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3384e70 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384f50 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3384f90 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384ff0 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3384eb0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x339c170 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191111 16:43:46.296" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x339c290 name="Print" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339c330 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339c470 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339c4f0 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x339c630 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339c750 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x339c970 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cab0 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.297" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x339cb10 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cbf0 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x339cd30 name="Version" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339ce50 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339ce90 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cf10 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x339cf90 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x339cfb0 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.298" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b030 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.299" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b110 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.299" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b190 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.299" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b1f0 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.299" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x338b270 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.299" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b370 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.299" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x338b7f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.299" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x338b870 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.393" level="DEBUG">WSDL at 'http://10.112.20.84/PrintServer/PrintService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x39ba3d0"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x039DB7F0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03209890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x039DBF50&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03209890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x039DBC90&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x039DB7F0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03209890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x039DBF50&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03209890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x039DBC90&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://tempuri.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x3384c50 tns="http://tempuri.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (SetPrintModeSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintMode', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapIn"
               qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapOut"
               qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapIn"
               qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapOut"
               qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapIn"
               qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapOut"
               qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapIn"
               qname = "(PrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Print', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapOut"
               qname = "(PrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('PrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapIn"
               qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapOut"
               qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapIn"
               qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombine', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapOut"
               qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapIn"
               qname = "(CentralPrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrint', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapOut"
               qname = "(CentralPrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapIn"
               qname = "(AddQCLogSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLog', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapOut"
               qname = "(AddQCLogSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLogResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapIn"
               qname = "(VersionSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Version', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapOut"
               qname = "(VersionSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('VersionResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapIn"
               qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapOut"
               qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapIn"
               qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapOut"
               qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapIn"
               qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapOut"
               qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapIn"
               qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapOut"
               qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapIn"
               qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapOut"
               qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetIn"
               qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetOut"
               qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetIn"
               qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetOut"
               qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetIn"
               qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetOut"
               qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetIn"
               qname = "(VersionHttpGetIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetOut"
               qname = "(VersionHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetIn"
               qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetOut"
               qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetIn"
               qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetOut"
               qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetIn"
               qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetOut"
               qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetIn"
               qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetOut"
               qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetIn"
               qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetOut"
               qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetIn"
               qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetOut"
               qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostIn"
               qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostOut"
               qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostIn"
               qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostOut"
               qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostIn"
               qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostOut"
               qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostIn"
               qname = "(VersionHttpPostIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostOut"
               qname = "(VersionHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostIn"
               qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostOut"
               qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostIn"
               qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostOut"
               qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostIn"
               qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostOut"
               qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostIn"
               qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostOut"
               qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostIn"
               qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostOut"
               qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostIn"
               qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostOut"
               qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintMode', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintServerStatusSoapIn"
                                 qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintServerStatusSoapOut"
                                 qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTaskSoapIn"
                                 qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTaskSoapOut"
                                 qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTask2SoapIn"
                                 qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTask2SoapOut"
                                 qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "PrintSoapIn"
                                 qname = "(PrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Print', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "PrintSoapOut"
                                 qname = "(PrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('PrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapIn"
                                 qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapOut"
                                 qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintCombineSoapIn"
                                 qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintCombineSoapOut"
                                 qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintSoapIn"
                                 qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrint', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintSoapOut"
                                 qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogSoapIn"
                                 qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLog', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogSoapOut"
                                 qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionSoapIn"
                                 qname = "(VersionSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Version', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "VersionSoapOut"
                                 qname = "(VersionSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('VersionResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapIn"
                                 qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapOut"
                                 qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoSoapIn"
                                 qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoSoapOut"
                                 qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedSoapIn"
                                 qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedSoapOut"
                                 qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedSoapIn"
                                 qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedSoapOut"
                                 qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskSoapIn"
                                 qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskSoapOut"
                                 qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpGetIn"
                                 qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpGetOut"
                                 qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetIn"
                                 qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetOut"
                                 qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpGetIn"
                                 qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpGetOut"
                                 qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpGetIn"
                                 qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpGetOut"
                                 qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetIn"
                                 qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetOut"
                                 qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpGetIn"
                                 qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpGetOut"
                                 qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpGetIn"
                                 qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpGetOut"
                                 qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetIn"
                                 qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetOut"
                                 qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetIn"
                                 qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetOut"
                                 qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetIn"
                                 qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetOut"
                                 qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpPostIn"
                                 qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpPostOut"
                                 qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostIn"
                                 qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostOut"
                                 qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpPostIn"
                                 qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpPostOut"
                                 qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpPostIn"
                                 qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpPostOut"
                                 qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostIn"
                                 qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostOut"
                                 qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpPostIn"
                                 qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpPostOut"
                                 qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpPostIn"
                                 qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpPostOut"
                                 qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostIn"
                                 qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostOut"
                                 qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostIn"
                                 qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostOut"
                                 qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostIn"
                                 qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostOut"
                                 qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceSoap12, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpGet"
                     qname = "(PrintServiceHttpGet, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpGetIn"
                                       qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpGetOut"
                                       qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetIn"
                                       qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetOut"
                                       qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpGetIn"
                                       qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpGetOut"
                                       qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpGetIn"
                                       qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpGetOut"
                                       qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetIn"
                                       qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetOut"
                                       qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetIn"
                                       qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetOut"
                                       qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetIn"
                                       qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetOut"
                                       qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetIn"
                                       qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetOut"
                                       qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetIn"
                                       qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetOut"
                                       qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetIn"
                                       qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetOut"
                                       qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpPost"
                     qname = "(PrintServiceHttpPost, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpPostIn"
                                       qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpPostOut"
                                       qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostIn"
                                       qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostOut"
                                       qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpPostIn"
                                       qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpPostOut"
                                       qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpPostIn"
                                       qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpPostOut"
                                       qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostIn"
                                       qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostOut"
                                       qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostIn"
                                       qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostOut"
                                       qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostIn"
                                       qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostOut"
                                       qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostIn"
                                       qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostOut"
                                       qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostIn"
                                       qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostOut"
                                       qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostIn"
                                       qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostOut"
                                       qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
      }
   services[] = 
      (Service){
         name = "PrintService"
         qname = "(PrintService, http://tempuri.org/)"
         ports[] = 
            (Port){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap12"
                     qname = "(PrintServiceSoap12, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03384C70&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191111 16:43:46.402" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3384c90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">method 'SetPrintMode' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3384bd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">method 'NotifyReportInfo' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3384e70 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">method 'GetPrintServerStatus' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3384f90 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">method 'CreatePrintTask' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.403" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3384eb0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191111 16:43:46.404" level="DEBUG">method 'CreatePrintTask2' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.404" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x339c290 name="Print" /&gt;</msg>
<msg timestamp="20191111 16:43:46.404" level="DEBUG">method 'Print' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.404" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339c470 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.404" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.404" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x339c630 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191111 16:43:46.404" level="DEBUG">method 'CentralPrintCombine' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x339c970 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">method 'CentralPrint' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x339cb10 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">method 'AddQCLog' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x339cd30 name="Version" /&gt;</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">method 'Version' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339ce90 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.405" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x339cf90 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">method 'QueryExamInfo' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b030 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">method 'SetReportPrinted' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b190 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">method 'SetReportUnPrinted' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x338b270 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.406" level="DEBUG">method 'QueryPrintTask' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x338b7f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3384c90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">method 'SetPrintMode' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3384bd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">method 'NotifyReportInfo' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3384e70 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.407" level="DEBUG">method 'GetPrintServerStatus' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3384f90 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">method 'CreatePrintTask' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3384eb0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">method 'CreatePrintTask2' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x339c290 name="Print" /&gt;</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">method 'Print' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339c470 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.408" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x339c630 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">method 'CentralPrintCombine' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x339c970 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">method 'CentralPrint' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x339cb10 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">method 'AddQCLog' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x339cd30 name="Version" /&gt;</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">method 'Version' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.409" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x339ce90 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191111 16:43:46.410" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.410" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x339cf90 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.410" level="DEBUG">method 'QueryExamInfo' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.410" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b030 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.410" level="DEBUG">method 'SetReportPrinted' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.410" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x338b190 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191111 16:43:46.410" level="DEBUG">method 'SetReportUnPrinted' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.411" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x338b270 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191111 16:43:46.411" level="DEBUG">method 'QueryPrintTask' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.411" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x338b7f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.411" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573461826 (running)</msg>
<msg timestamp="20191111 16:43:46.411" level="DEBUG">Element:0x339ccd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339ccd0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.411" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.411" level="DEBUG">Element:0x339cd90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cd90 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.412" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.412" level="DEBUG">Element:0x339cdb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cdb0 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.412" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.412" level="DEBUG">Element:0x339cdd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cdd0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.412" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.412" level="DEBUG">Element:0x339cdf0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cdf0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.413" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.413" level="DEBUG">Element:0x339caf0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3da7f10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339caf0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.413" level="DEBUG">TypeQuery:0x3da7f10, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.413" level="DEBUG">Element:0x339cb50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3da7f10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cb50 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.413" level="DEBUG">TypeQuery:0x3da7f10, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.413" level="DEBUG">Element:0x339cb70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3da7f10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cb70 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.413" level="DEBUG">TypeQuery:0x3da7f10, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.414" level="DEBUG">Element:0x339cb90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3da7f10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cb90 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.414" level="DEBUG">TypeQuery:0x3da7f10, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.414" level="DEBUG">Element:0x339c810, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c810 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.414" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.414" level="DEBUG">Element:0x339c890, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x339c890 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.414" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3384d10 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:46.415" level="DEBUG">Element:0x339c8b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c8b0 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.415" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.415" level="DEBUG">Element:0x339c8d0, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x339c8d0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.415" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3384d10 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:46.415" level="DEBUG">Element:0x339c8f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c8f0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.415" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.416" level="DEBUG">Element:0x339c930, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c930 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.416" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.416" level="DEBUG">Element:0x339c0d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c0d0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.416" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.416" level="DEBUG">Element:0x339c130, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c130 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.416" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.417" level="DEBUG">Element:0x339c250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c250 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.417" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.417" level="DEBUG">Element:0x339c2d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c2d0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.417" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.417" level="DEBUG">Element:0x339c590, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c590 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.417" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.418" level="DEBUG">Element:0x338bb10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338bb10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.418" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.418" level="DEBUG">Element:0x338bbd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338bbd0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.418" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.418" level="DEBUG">Element:0x3384d70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.418" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.418" level="DEBUG">Element:0x3384db0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384db0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.419" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.419" level="DEBUG">Element:0x3384e10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.419" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.419" level="DEBUG">Element:0x3384e30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.419" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.419" level="DEBUG">Element:0x3384e50, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.420" level="DEBUG">TypeQuery:0x36f6d50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.420" level="DEBUG">Element:0x3384e90, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x3384e90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.420" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3384d10 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:46.420" level="DEBUG">Element:0x339c410, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339c410 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.420" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.420" level="DEBUG">Element:0x338b9d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338b9d0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.421" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.421" level="DEBUG">Element:0x338b0b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338b0b0 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.421" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.421" level="DEBUG">Element:0x338b3d0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338b3d0 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.421" level="DEBUG">TypeQuery:0x36f6d50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.421" level="DEBUG">Element:0x3384bb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384bb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.421" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.422" level="DEBUG">Element:0x3384b50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.422" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.422" level="DEBUG">Element:0x3384bf0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384bf0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.422" level="DEBUG">TypeQuery:0x36f6d50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.422" level="DEBUG">Element:0x338b170, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338b170 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.422" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.423" level="DEBUG">Element:0x338b090, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338b090 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.423" level="DEBUG">TypeQuery:0x36f6d50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.423" level="DEBUG">Element:0x338b250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338b250 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.423" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.423" level="DEBUG">Element:0x338b310, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x338b310 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.423" level="DEBUG">TypeQuery:0x36f6d50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.424" level="DEBUG">Element:0x339cf70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cf70 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.424" level="DEBUG">TypeQuery:0x36f6d50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.424" level="DEBUG">Element:0x339cfd0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cfd0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.424" level="DEBUG">TypeQuery:0x36f6d50, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.424" level="DEBUG">Element:0x339cff0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x36f6d50"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x339cff0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.424" level="DEBUG">TypeQuery:0x36f6d50, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">('ArrayOfString', http://tempuri.org/), found as: &lt;Complex:0x3384d10 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x3384d10 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">Element:0x3384d90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3da7f10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">TypeQuery:0x3da7f10, found builtin (string)</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3384bd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.425" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3384bd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:43:46.427" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191111164340907857"
   type = &lt;Element:0x3384d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe590 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.427" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x036FEF30&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191111164340907857"
   type = &lt;Element:0x3384d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe590 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.427" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191111164340907857"
   type = &lt;Element:0x3384d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe590 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.427" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x036FEF70&gt;)
&lt;suds.resolver.Frame object at 0x036FEF70&gt;</msg>
<msg timestamp="20191111 16:43:46.427" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191111164340907857"
   type = &lt;Element:0x3384d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe590 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x036FEF70&gt;)
</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191111164340907857"
   type = &lt;Element:0x3384db0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe5d0 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03D80230&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191111164340907857"
   type = &lt;Element:0x3384db0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe5d0 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191111164340907857"
   type = &lt;Element:0x3384db0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe5d0 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80270&gt;)
&lt;suds.resolver.Frame object at 0x03D80270&gt;</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:46.428" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191111164340907857"
   type = &lt;Element:0x3384db0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe5d0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.429" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80270&gt;)
</msg>
<msg timestamp="20191111 16:43:46.429" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191111164340907857"
   type = &lt;Element:0x3384e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe610 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.429" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03D80510&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191111164340907857"
   type = &lt;Element:0x3384e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe610 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.429" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191111164340907857"
   type = &lt;Element:0x3384e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe610 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.430" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80550&gt;)
&lt;suds.resolver.Frame object at 0x03D80550&gt;</msg>
<msg timestamp="20191111 16:43:46.430" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:46.430" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191111164340907857"
   type = &lt;Element:0x3384e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe610 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.430" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80550&gt;)
</msg>
<msg timestamp="20191111 16:43:46.430" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "55e9342b-8f6b-4f8d-937b-b3610346acad"
   type = &lt;Element:0x3384e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe650 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.430" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03D807F0&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "55e9342b-8f6b-4f8d-937b-b3610346acad"
   type = &lt;Element:0x3384e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe650 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.431" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "55e9342b-8f6b-4f8d-937b-b3610346acad"
   type = &lt;Element:0x3384e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe650 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.431" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80830&gt;)
&lt;suds.resolver.Frame object at 0x03D80830&gt;</msg>
<msg timestamp="20191111 16:43:46.431" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:46.431" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "55e9342b-8f6b-4f8d-937b-b3610346acad"
   type = &lt;Element:0x3384e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe650 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.431" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80830&gt;)
</msg>
<msg timestamp="20191111 16:43:46.431" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3384e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x36fe690 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.432" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03D80AD0&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3384e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x36fe690 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.432" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3384e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x36fe690 /&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.432" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80B10&gt;)
&lt;suds.resolver.Frame object at 0x03D80B10&gt;</msg>
<msg timestamp="20191111 16:43:46.432" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:46.432" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x3384e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x36fe690 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.432" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80B10&gt;)
</msg>
<msg timestamp="20191111 16:43:46.433" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3384e90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
   &lt;Sequence:0x3384d30&gt;
      &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.433" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03D80DF0&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3384e90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
   &lt;Sequence:0x3384d30&gt;
      &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.433" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3384e90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
   &lt;Sequence:0x3384d30&gt;
      &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.433" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80E30&gt;)
&lt;suds.resolver.Frame object at 0x03D80E30&gt;</msg>
<msg timestamp="20191111 16:43:46.433" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:46.434" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191111 16:43:46.434" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191111 16:43:46.434" level="DEBUG">searching parent (&lt;Complex:0x3384d10 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:46.434" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80EB0&gt;)
&lt;suds.resolver.Frame object at 0x03D80E30&gt;
&lt;suds.resolver.Frame object at 0x03D80EB0&gt;</msg>
<msg timestamp="20191111 16:43:46.434" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80EB0&gt;)
&lt;suds.resolver.Frame object at 0x03D80E30&gt;</msg>
<msg timestamp="20191111 16:43:46.434" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191111 16:43:46.434" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191111 16:43:46.435" level="DEBUG">searching parent (&lt;Complex:0x3384d10 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191111 16:43:46.435" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80FD0&gt;)
&lt;suds.resolver.Frame object at 0x03D80E30&gt;
&lt;suds.resolver.Frame object at 0x03D80FD0&gt;</msg>
<msg timestamp="20191111 16:43:46.435" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191111 16:43:46.435" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
   type = &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe730 /&gt;
   ancestry[] = 
      &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
   &lt;Sequence:0x3384d30&gt;
      &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x3384d30&gt;
   &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:46.435" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80FD0&gt;)
&lt;suds.resolver.Frame object at 0x03D80E30&gt;</msg>
<msg timestamp="20191111 16:43:46.435" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D80EB0&gt;)
&lt;suds.resolver.Frame object at 0x03D80E30&gt;
&lt;suds.resolver.Frame object at 0x03D80EB0&gt;</msg>
<msg timestamp="20191111 16:43:46.436" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
   type = &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x36fe730 /&gt;
   ancestry[] = 
      &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
   &lt;Sequence:0x3384d30&gt;
      &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x3384d30&gt;
   &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191111 16:43:46.436" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80EB0&gt;)
&lt;suds.resolver.Frame object at 0x03D80E30&gt;</msg>
<msg timestamp="20191111 16:43:46.436" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3384e90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3384d10 name="ArrayOfString"&gt;
   &lt;Sequence:0x3384d30&gt;
      &lt;Element:0x3384d90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:43:46.436" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D80E30&gt;)
</msg>
<msg timestamp="20191111 16:43:46.436" level="DEBUG">message for 'NotifyReportInfo' created: 11 (ms)</msg>
<msg timestamp="20191111 16:43:46.436" level="DEBUG">sending to (http://10.112.20.84/PrintServer/PrintService.asmx)
message:
&lt;suds.sax.document.Document object at 0x036FEAB0&gt;</msg>
<msg timestamp="20191111 16:43:46.437" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191111 16:43:46.437" level="DEBUG">sending:
URL: http://10.112.20.84/PrintServer/PrintService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://tempuri.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://tempuri.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:NotifyReportInfo&gt;&lt;ns1:patientName&gt;CN20191111164340907857&lt;/ns1:patientName&gt;&lt;ns1:patientID&gt;P20191111164340907857&lt;/ns1:patientID&gt;&lt;ns1:accessionNumber&gt;A20191111164340907857&lt;/ns1:accessionNumber&gt;&lt;ns1:studyInstanceUID&gt;55e9342b-8f6b-4f8d-937b-b3610346acad&lt;/ns1:studyInstanceUID&gt;&lt;ns1:reportStatus&gt;2&lt;/ns1:reportStatus&gt;&lt;ns1:reportFileName&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;/ns1:reportFileName&gt;&lt;/ns1:NotifyReportInfo&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191111 16:43:46.753" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Mon, 11 Nov 2019 08:43:47 GMT
Connection: close
Content-Length: 377


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191111 16:43:46.753" level="DEBUG">waited 315 (ms) on server reply</msg>
<msg timestamp="20191111 16:43:46.754" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191111 16:43:46.754" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191111 16:43:46.755" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3384dd0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:43:46.755" level="DEBUG">Element:0x3384f30, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3d80e10"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384f30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.755" level="DEBUG">TypeQuery:0x3d80e10, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.755" level="DEBUG">reset</msg>
<msg timestamp="20191111 16:43:46.756" level="DEBUG">Element:0x3384f30, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3d99410"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3384f30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:43:46.756" level="DEBUG">TypeQuery:0x3d99410, found builtin (int)</msg>
<msg timestamp="20191111 16:43:46.756" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03D99150&gt;)
&lt;suds.resolver.Frame object at 0x03D99150&gt;</msg>
<msg timestamp="20191111 16:43:46.756" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03D99150&gt;)
</msg>
<msg timestamp="20191111 16:43:46.757" level="DEBUG">method 'NotifyReportInfo' invoked: 320 (ms)</msg>
<msg timestamp="20191111 16:43:46.757" level="INFO">Report.report_create_by_printserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191111 16:43:46.757" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191111164340907857", "patient_id": "P20191111164340907857", "accessionNumber": "A20191111164340907857", "StudyInstanceUID": "55e9342b-8f6b-4f8d-937b-b3610346acad"...</msg>
<status status="PASS" starttime="20191111 16:43:46.090" endtime="20191111 16:43:46.757"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191111 16:43:46.758" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191111164340907857', 'patient_id': 'P20191111164340907857', 'accessionNumber': 'A20191111164340907857', 'StudyInstanceUID': '55e9342b-8f6b-4f8d-937b-b3610346acad'...</msg>
<status status="PASS" starttime="20191111 16:43:46.757" endtime="20191111 16:43:46.758"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191111 16:43:46.805" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:46.758" endtime="20191111 16:43:46.805"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:46.805" endtime="20191111 16:43:46.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191111 16:43:46.806" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191111 16:43:46.806" endtime="20191111 16:43:46.806"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191111 16:43:46.844" level="INFO">${Report_StudyInstanceUID} = ['55e9342b-8f6b-4f8d-937b-b3610346acad']</msg>
<status status="PASS" starttime="20191111 16:43:46.806" endtime="20191111 16:43:46.844"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191111 16:43:46.861" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191111 16:43:46.861" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191111 16:43:46.844" endtime="20191111 16:43:46.861"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191111 16:43:46.862" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191111 16:43:46.861" endtime="20191111 16:43:46.862"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191111 16:43:46.928" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:46.862" endtime="20191111 16:43:46.928"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191111 16:43:46.993" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191111 16:43:46.928" endtime="20191111 16:43:46.993"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:46.994" endtime="20191111 16:43:46.994"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191111 16:43:46.995" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:43:46.994" endtime="20191111 16:43:46.995"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191111 16:43:51.997" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191111 16:43:46.995" endtime="20191111 16:43:51.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191111 16:43:51.997" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191111 16:43:51.997" endtime="20191111 16:43:51.997"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191111 16:43:51.999" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191111164340907857", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-11 16:43:47.817000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191111 16:43:51.998" endtime="20191111 16:43:51.999"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191111 16:43:52.000" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191111164340907857', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-11 16:43:47.817000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191111 16:43:52.000" endtime="20191111 16:43:52.000"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191111 16:43:52.038" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:52.000" endtime="20191111 16:43:52.038"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191111 16:43:52.076" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191111 16:43:52.038" endtime="20191111 16:43:52.076"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:52.076" endtime="20191111 16:43:52.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191111 16:43:52.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:43:52.077" endtime="20191111 16:43:52.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191111 16:43:52.078" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191111 16:43:52.078" endtime="20191111 16:43:52.078"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191111 16:43:52.080" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191111164340907857, A20191111164340907857] correct and value is 9</msg>
<msg timestamp="20191111 16:43:52.080" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191111 16:43:52.078" endtime="20191111 16:43:52.080"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191111 16:43:52.080" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191111 16:43:52.080" endtime="20191111 16:43:52.080"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191111 16:43:52.118" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:52.080" endtime="20191111 16:43:52.118"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191111 16:43:52.156" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191111 16:43:52.119" endtime="20191111 16:43:52.156"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:52.156" endtime="20191111 16:43:52.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191111 16:43:52.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:43:52.157" endtime="20191111 16:43:52.157"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:43:40.907" endtime="20191111 16:43:52.157" critical="yes"></status>
</test>
<test id="s1-t5" name="SmokeTest_005_Core_4715_03.01.01 Report receive from Virtual Print success.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:52.159" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191111 16:43:52.159" endtime="20191111 16:43:52.159"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:43:52.162" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:43:52.199" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:43:52.200" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:43:52.159161", "UpdateDT": "2019-11-11 16:43:52.159161", "PatientID": "P20191111164352159161", "AccessionNumber": "A20191111164352159161", "StudyInstanceUID": "UID20191111164352159161", "NameCN": "CN20191111164352159161", "NameEN": "EN20191111164352159161", "Gender": "M", "Birthday": "1999-11-16", "Modality": "OT", "ModalityName": "US", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:43:52.159161", "RegisterDT": "2019-11-11 16:43:52.159161", "ExamDT": "2019-11-11 16:43:52.159161", "ReportDT": "2019-11-11 16:43:52.159161", "SubmitDT": "2019-11-11 16:43:52.159161", "ApproveDT": "2019-11-11 16:43:52.159161", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164352159161", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:43:52.201" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:43:52.159161", "UpdateDT": "2019-11-11 16:43:52.159161", "PatientID": "P20191111164352159161", "AccessionNumber": "A20191111164352159161", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:52.159" endtime="20191111 16:43:52.201"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:43:52.201" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:43:52.159161', 'UpdateDT': '2019-11-11 16:43:52.159161', 'PatientID': 'P20191111164352159161', 'AccessionNumber': 'A20191111164352159161', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:52.201" endtime="20191111 16:43:52.201"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:43:52.240" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:52.201" endtime="20191111 16:43:52.240"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:52.240" endtime="20191111 16:43:52.240"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:43:52.278" level="INFO">${patientID} = ['P20191111164352159161']</msg>
<status status="PASS" starttime="20191111 16:43:52.240" endtime="20191111 16:43:52.278"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191111 16:43:52.315" level="INFO">${AccessionNumber} = ['A20191111164352159161']</msg>
<status status="PASS" starttime="20191111 16:43:52.278" endtime="20191111 16:43:52.315"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191111 16:43:52.354" level="INFO">${PatientName} = ['CN20191111164352159161']</msg>
<status status="PASS" starttime="20191111 16:43:52.316" endtime="20191111 16:43:52.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:52.354" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191111 16:43:52.354" endtime="20191111 16:43:52.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:43:52.355" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191111 16:43:52.354" endtime="20191111 16:43:52.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191111 16:43:57.356" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191111 16:43:52.355" endtime="20191111 16:43:57.356"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:43:57.360" level="INFO">PUMA_ReportLibrary.print_report_from_template: Function execute failed.
&lt;class 'SystemError'&gt;
Report.report_create_report_with_sample: Function execute failed.
&lt;class 'Exception'&gt;</msg>
<msg timestamp="20191111 16:43:57.361" level="FAIL">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</msg>
<msg timestamp="20191111 16:43:57.361" level="DEBUG">Traceback (most recent call last):
  File "D:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\Report.py", line 90, in report_create_report_with_sample
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191111 16:43:57.356" endtime="20191111 16:43:57.361"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191111 16:43:52.158" endtime="20191111 16:43:57.362" critical="yes">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</status>
</test>
<test id="s1-t6" name="SmokeTest_006_Core_4176_03.01.02 Report receive from Virtual Print failure.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:57.363" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191111 16:43:57.363" endtime="20191111 16:43:57.363"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:43:57.366" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:43:57.390" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:43:57.391" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:43:57.363188", "UpdateDT": "2019-11-11 16:43:57.363188", "PatientID": "P20191111164357363188", "AccessionNumber": "A20191111164357363188", "StudyInstanceUID": "UID20191111164357363188", "NameCN": "CN20191111164357363188", "NameEN": "EN20191111164357363188", "Gender": "F", "Birthday": "1930-12-03", "Modality": "DX", "ModalityName": "CT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:43:57.363188", "RegisterDT": "2019-11-11 16:43:57.363188", "ExamDT": "2019-11-11 16:43:57.363188", "ReportDT": "2019-11-11 16:43:57.363188", "SubmitDT": "2019-11-11 16:43:57.363188", "ApproveDT": "2019-11-11 16:43:57.363188", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164357363188", "ExamBodyPart": "Lung", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:43:57.391" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:43:57.363188", "UpdateDT": "2019-11-11 16:43:57.363188", "PatientID": "P20191111164357363188", "AccessionNumber": "A20191111164357363188", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:57.363" endtime="20191111 16:43:57.391"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:43:57.392" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:43:57.363188', 'UpdateDT': '2019-11-11 16:43:57.363188', 'PatientID': 'P20191111164357363188', 'AccessionNumber': 'A20191111164357363188', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:43:57.392" endtime="20191111 16:43:57.392"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:43:57.431" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:43:57.392" endtime="20191111 16:43:57.431"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:43:57.431" endtime="20191111 16:43:57.431"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:43:57.470" level="INFO">${patientID} = ['P20191111164357363188']</msg>
<status status="PASS" starttime="20191111 16:43:57.432" endtime="20191111 16:43:57.470"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191111 16:43:57.509" level="INFO">${AccessionNumber} = ['A20191111164357363188']</msg>
<status status="PASS" starttime="20191111 16:43:57.470" endtime="20191111 16:43:57.509"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191111 16:43:57.547" level="INFO">${PatientName} = ['CN20191111164357363188']</msg>
<status status="PASS" starttime="20191111 16:43:57.509" endtime="20191111 16:43:57.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n 3. Delete the patient information of step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191111 16:43:57.547" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
3. Delete the patient information of step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191111 16:43:57.547" endtime="20191111 16:43:57.547"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Patient_Delete_Result}</var>
</assign>
<msg timestamp="20191111 16:43:57.556" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191111 16:43:57.556" level="INFO">${Patient_Delete_Result} = True</msg>
<status status="PASS" starttime="20191111 16:43:57.548" endtime="20191111 16:43:57.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:43:57.556" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191111 16:43:57.556" endtime="20191111 16:43:57.556"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191111 16:44:02.558" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191111 16:43:57.557" endtime="20191111 16:44:02.558"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:44:02.562" level="INFO">PUMA_ReportLibrary.print_report_from_template: Function execute failed.
&lt;class 'SystemError'&gt;
Report.report_create_report_with_sample: Function execute failed.
&lt;class 'Exception'&gt;</msg>
<msg timestamp="20191111 16:44:02.563" level="FAIL">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</msg>
<msg timestamp="20191111 16:44:02.563" level="DEBUG">Traceback (most recent call last):
  File "D:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\Report.py", line 90, in report_create_report_with_sample
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191111 16:44:02.558" endtime="20191111 16:44:02.563"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191111 16:43:57.362" endtime="20191111 16:44:02.563" critical="yes">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</status>
</test>
<test id="s1-t7" name="SmokeTest_007_Core_4178_04.01.01 Terminal K3 Print Workflow with multiple films and multiple reports.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:44:02.565" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:44:02.564" endtime="20191111 16:44:02.565"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191111 16:44:02.567" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:44:03.182" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191111 16:44:03.183" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9897,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20252,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191111 16:44:03.183" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191111 16:44:02.565" endtime="20191111 16:44:03.183"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191111 16:44:03.184" endtime="20191111 16:44:03.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create multiple films for patientA/ExamA. \n Expected \n 1. The films can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:44:03.184" level="INFO">Step 2 
Description: 
1. Create multiple films for patientA/ExamA. 
Expected 
1. The films can archived successfully. 
</msg>
<status status="PASS" starttime="20191111 16:44:03.184" endtime="20191111 16:44:03.185"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:44:03.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:44:03.196" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:44:03.198" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:44:03.184752", "UpdateDT": "2019-11-11 16:44:03.184752", "PatientID": "P20191111164403184752", "AccessionNumber": "A20191111164403184752", "StudyInstanceUID": "UID20191111164403184752", "NameCN": "CN20191111164403184752", "NameEN": "EN20191111164403184752", "Gender": "F", "Birthday": "1971-11-23", "Modality": "OT", "ModalityName": "CT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:44:03.184752", "RegisterDT": "2019-11-11 16:44:03.184752", "ExamDT": "2019-11-11 16:44:03.184752", "ReportDT": "2019-11-11 16:44:03.184752", "SubmitDT": "2019-11-11 16:44:03.184752", "ApproveDT": "2019-11-11 16:44:03.184752", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164403184752", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:44:03.198" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:44:03.184752", "UpdateDT": "2019-11-11 16:44:03.184752", "PatientID": "P20191111164403184752", "AccessionNumber": "A20191111164403184752", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:44:03.185" endtime="20191111 16:44:03.198"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:44:03.198" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:44:03.184752', 'UpdateDT': '2019-11-11 16:44:03.184752', 'PatientID': 'P20191111164403184752', 'AccessionNumber': 'A20191111164403184752', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:44:03.198" endtime="20191111 16:44:03.198"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:44:03.237" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:44:03.199" endtime="20191111 16:44:03.237"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:44:03.275" level="INFO">${patientID} = ['P20191111164403184752']</msg>
<status status="PASS" starttime="20191111 16:44:03.237" endtime="20191111 16:44:03.275"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191111 16:44:03.313" level="INFO">${Accessionnumber} = ['A20191111164403184752']</msg>
<status status="PASS" starttime="20191111 16:44:03.276" endtime="20191111 16:44:03.313"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:44:03.313" endtime="20191111 16:44:03.314"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:44:33.974" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191111164403184752", "AccessionNumber": "A20191111164403184752", "FilmSessionLable": "20191111164403313898", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:44:33.974" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191111164403184752", "AccessionNumber": "A20191111164403184752", "FilmSessionLable": "20191111164403313898", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:44:03.314" endtime="20191111 16:44:33.974"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:44:33.975" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191111164403184752', 'AccessionNumber': 'A20191111164403184752', 'FilmSessionLable': '20191111164403313898', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:44:33.974" endtime="20191111 16:44:33.975"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:44:34.013" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:44:33.975" endtime="20191111 16:44:34.013"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:44:34.013" endtime="20191111 16:44:34.013"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:45:04.900" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191111164403184752", "AccessionNumber": "A20191111164403184752", "FilmSessionLable": "20191111164434013929", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:45:04.900" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191111164403184752", "AccessionNumber": "A20191111164403184752", "FilmSessionLable": "20191111164434013929", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:44:34.013" endtime="20191111 16:45:04.900"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:45:04.901" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191111164403184752', 'AccessionNumber': 'A20191111164403184752', 'FilmSessionLable': '20191111164434013929', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:45:04.901" endtime="20191111 16:45:04.901"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:45:04.968" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:45:04.902" endtime="20191111 16:45:04.969"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:45:04.969" endtime="20191111 16:45:04.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create multiple reports for patientA/ExamA. \n Expected: \n 1. The reports can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:45:04.970" level="INFO">Step 3 
Description:
1. Create multiple reports for patientA/ExamA. 
Expected: 
1. The reports can archived successfully. 
</msg>
<status status="PASS" starttime="20191111 16:45:04.970" endtime="20191111 16:45:04.970"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:45:04.975" level="INFO">PUMA_ReportLibrary.print_report_from_template: Function execute failed.
&lt;class 'SystemError'&gt;
Report.report_create_report_with_sample: Function execute failed.
&lt;class 'Exception'&gt;</msg>
<msg timestamp="20191111 16:45:04.975" level="FAIL">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</msg>
<msg timestamp="20191111 16:45:04.976" level="DEBUG">Traceback (most recent call last):
  File "D:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\Report.py", line 90, in report_create_report_with_sample
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191111 16:45:04.971" endtime="20191111 16:45:04.976"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191111 16:44:02.563" endtime="20191111 16:45:04.976" critical="yes">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</status>
</test>
<test id="s1-t8" name="SmokeTest_008_Core_4177_04.01.02 Terminal K3 Print Workflow with one film and one report.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:45:04.977" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:45:04.977" endtime="20191111 16:45:04.977"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191111 16:45:04.980" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:45:04.999" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191111 16:45:04.999" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9897,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20252,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191111 16:45:04.999" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191111 16:45:04.978" endtime="20191111 16:45:04.999"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191111 16:45:05.000" endtime="20191111 16:45:05.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:45:05.000" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191111 16:45:05.000" endtime="20191111 16:45:05.001"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:45:05.003" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:45:05.013" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:45:05.014" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:45:05.001006", "UpdateDT": "2019-11-11 16:45:05.001006", "PatientID": "P20191111164505001006", "AccessionNumber": "A20191111164505001006", "StudyInstanceUID": "UID20191111164505001006", "NameCN": "CN20191111164505001006", "NameEN": "EN20191111164505001006", "Gender": "M", "Birthday": "2018-11-11", "Modality": "CT", "ModalityName": "DX", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:45:05.001006", "RegisterDT": "2019-11-11 16:45:05.001006", "ExamDT": "2019-11-11 16:45:05.001006", "ReportDT": "2019-11-11 16:45:05.001006", "SubmitDT": "2019-11-11 16:45:05.001006", "ApproveDT": "2019-11-11 16:45:05.001006", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164505001006", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:45:05.014" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:45:05.001006", "UpdateDT": "2019-11-11 16:45:05.001006", "PatientID": "P20191111164505001006", "AccessionNumber": "A20191111164505001006", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:45:05.001" endtime="20191111 16:45:05.014"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:45:05.015" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:45:05.001006', 'UpdateDT': '2019-11-11 16:45:05.001006', 'PatientID': 'P20191111164505001006', 'AccessionNumber': 'A20191111164505001006', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:45:05.014" endtime="20191111 16:45:05.015"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:45:05.053" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:45:05.015" endtime="20191111 16:45:05.053"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:45:05.091" level="INFO">${patientID} = ['P20191111164505001006']</msg>
<status status="PASS" starttime="20191111 16:45:05.053" endtime="20191111 16:45:05.091"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191111 16:45:05.147" level="INFO">${Accessionnumber} = ['A20191111164505001006']</msg>
<status status="PASS" starttime="20191111 16:45:05.091" endtime="20191111 16:45:05.147"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:45:05.147" endtime="20191111 16:45:05.147"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:45:35.807" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191111164505001006", "AccessionNumber": "A20191111164505001006", "FilmSessionLable": "20191111164505148014", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:45:35.807" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191111164505001006", "AccessionNumber": "A20191111164505001006", "FilmSessionLable": "20191111164505148014", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:45:05.148" endtime="20191111 16:45:35.807"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:45:35.808" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191111164505001006', 'AccessionNumber': 'A20191111164505001006', 'FilmSessionLable': '20191111164505148014', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:45:35.807" endtime="20191111 16:45:35.808"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:45:35.846" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:45:35.808" endtime="20191111 16:45:35.846"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:45:35.846" endtime="20191111 16:45:35.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create one report for patientB/ExamB. \n Expected: \n 1. The report can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:45:35.847" level="INFO">Step 3 
Description:
1. Create one report for patientB/ExamB. 
Expected: 
1. The report can archived successfully. 
</msg>
<status status="PASS" starttime="20191111 16:45:35.847" endtime="20191111 16:45:35.847"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:45:35.851" level="INFO">PUMA_ReportLibrary.print_report_from_template: Function execute failed.
&lt;class 'SystemError'&gt;
Report.report_create_report_with_sample: Function execute failed.
&lt;class 'Exception'&gt;</msg>
<msg timestamp="20191111 16:45:35.852" level="FAIL">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</msg>
<msg timestamp="20191111 16:45:35.852" level="DEBUG">Traceback (most recent call last):
  File "D:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\Report.py", line 90, in report_create_report_with_sample
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191111 16:45:35.847" endtime="20191111 16:45:35.852"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191111 16:45:04.976" endtime="20191111 16:45:35.852" critical="yes">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</status>
</test>
<test id="s1-t9" name="SmokeTest_009_Core_4187_04.01.03 Terminal K3 Print Workflow with one film.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:45:35.853" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:45:35.853" endtime="20191111 16:45:35.853"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191111 16:45:35.856" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:45:35.869" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191111 16:45:35.870" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9897,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20252,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191111 16:45:35.870" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191111 16:45:35.854" endtime="20191111 16:45:35.870"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191111 16:45:35.870" endtime="20191111 16:45:35.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:45:35.871" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191111 16:45:35.870" endtime="20191111 16:45:35.871"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:45:35.874" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:45:35.884" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:45:35.885" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:45:35.870727", "UpdateDT": "2019-11-11 16:45:35.870727", "PatientID": "P20191111164535870727", "AccessionNumber": "A20191111164535870727", "StudyInstanceUID": "UID20191111164535870727", "NameCN": "CN20191111164535870727", "NameEN": "EN20191111164535870727", "Gender": "F", "Birthday": "1928-12-03", "Modality": "XA", "ModalityName": "CT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:45:35.870727", "RegisterDT": "2019-11-11 16:45:35.870727", "ExamDT": "2019-11-11 16:45:35.870727", "ReportDT": "2019-11-11 16:45:35.870727", "SubmitDT": "2019-11-11 16:45:35.870727", "ApproveDT": "2019-11-11 16:45:35.870727", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164535870727", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:45:35.885" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:45:35.870727", "UpdateDT": "2019-11-11 16:45:35.870727", "PatientID": "P20191111164535870727", "AccessionNumber": "A20191111164535870727", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:45:35.871" endtime="20191111 16:45:35.885"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:45:35.886" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:45:35.870727', 'UpdateDT': '2019-11-11 16:45:35.870727', 'PatientID': 'P20191111164535870727', 'AccessionNumber': 'A20191111164535870727', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:45:35.885" endtime="20191111 16:45:35.886"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:45:35.924" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:45:35.886" endtime="20191111 16:45:35.924"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:45:35.962" level="INFO">${patientID} = ['P20191111164535870727']</msg>
<status status="PASS" starttime="20191111 16:45:35.924" endtime="20191111 16:45:35.962"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191111 16:45:35.999" level="INFO">${Accessionnumber} = ['A20191111164535870727']</msg>
<status status="PASS" starttime="20191111 16:45:35.962" endtime="20191111 16:45:35.999"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:45:36.000" endtime="20191111 16:45:36.000"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:46:06.798" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191111164535870727", "AccessionNumber": "A20191111164535870727", "FilmSessionLable": "20191111164536000734", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:46:06.798" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191111164535870727", "AccessionNumber": "A20191111164535870727", "FilmSessionLable": "20191111164536000734", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:45:36.000" endtime="20191111 16:46:06.798"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:46:06.799" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191111164535870727', 'AccessionNumber': 'A20191111164535870727', 'FilmSessionLable': '20191111164536000734', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:46:06.798" endtime="20191111 16:46:06.799"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:46:06.837" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:46:06.799" endtime="20191111 16:46:06.838"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:46:06.838" endtime="20191111 16:46:06.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Set the print mode to Film only for ExamB \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:46:06.839" level="INFO">Step 3 
Description:
1. Set the print mode to Film only for ExamB 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:46:06.838" endtime="20191111 16:46:06.839"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>film</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191111 16:46:06.841" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191111 16:46:06.854" level="DEBUG">Element:0x3a647f0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:46:06.854" level="DEBUG">Element:0x3a64850, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.854" level="DEBUG">Element:0x3a648b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.854" level="DEBUG">Element:0x3a648d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.854" level="DEBUG">Element:0x3a64c30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.854" level="DEBUG">Element:0x3a64bf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.854" level="DEBUG">Element:0x3a649b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64a10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64cf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64d90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64b10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64bb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64c10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64bd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.855" level="DEBUG">Element:0x3a64a30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a649f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64a70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64990, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64a90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64ab0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64ad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64c70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64c50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64d30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.856" level="DEBUG">Element:0x3a64d10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64cb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64cd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64dd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64db0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64e70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64e50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64ed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.857" level="DEBUG">Element:0x3a64ef0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x3a64f50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x3a64f30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x3a64f10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x3a64df0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x3a64fb0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x39bad90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x39ba9b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x39ba950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x39ba830, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.858" level="DEBUG">Element:0x39ba750, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba450, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba930, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba430, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba3f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba630, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba1f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39ba1d0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.859" level="DEBUG">Element:0x39bad10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39baa90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39badd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39ba310, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39bae10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39ba6f0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39ba8b0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39baeb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39ba810, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.860" level="DEBUG">Element:0x39bab70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39baf90, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39baff0, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39babd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39ba0f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39ba0d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39babf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39ba190, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39ba050, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39ba2f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.861" level="DEBUG">Element:0x39ba330, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39ba350, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39bacb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39bac10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39ba1b0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39ba4b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39ba670, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39ba610, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39ba2d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.862" level="DEBUG">Element:0x39ba530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.863" level="DEBUG">Element:0x39ba710, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191111 16:46:06.869" level="DEBUG">loaded:

schema collection
   Schema:0x3a64c90
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x3a64f90 name="NotifyExamInfo"&gt;
         &lt;Complex:0x3a64790&gt;
            &lt;Sequence:0x3a648f0&gt;
               &lt;Element:0x3a647f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3a64890 name="ExamInfo"&gt;
         &lt;Sequence:0x3a647b0&gt;
            &lt;Element:0x3a64850 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a648b0 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a648d0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64c30 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64bf0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a649b0 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64a10 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64cf0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64d90 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64950 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64b10 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64b50 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64bb0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64c10 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64bd0 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64a30 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a649f0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64a70 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64990 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64a90 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64ab0 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64ad0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64c70 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64c50 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64d30 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64d10 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64d70 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64cb0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64cd0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64e10 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64dd0 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64db0 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64e70 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64e50 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64ed0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64ef0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64f50 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64f30 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3a64f10 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3a64810 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x3a64830&gt;
            &lt;Sequence:0x3a64870&gt;
               &lt;Element:0x3a64df0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3a64eb0 name="NotifyReportFile"&gt;
         &lt;Complex:0x3a64e90&gt;
            &lt;Sequence:0x3a64ff0&gt;
               &lt;Element:0x3a64fb0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x39bad90 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba9b0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba950 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3a64e30 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x39ba910&gt;
            &lt;Sequence:0x39baef0&gt;
               &lt;Element:0x39ba830 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3a64fd0 name="SetPrintMode"&gt;
         &lt;Complex:0x39ba870&gt;
            &lt;Sequence:0x39ba790&gt;
               &lt;Element:0x39ba750 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba470 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba450 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba930 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba430 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba7d0 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x39ba7b0&gt;
            &lt;Sequence:0x39ba4d0&gt;
               &lt;Element:0x39ba3f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba5f0 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x39ba230&gt;
            &lt;Sequence:0x39ba6b0&gt;
               &lt;Element:0x39ba630 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba1f0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39baab0 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x39ba3d0&gt;
            &lt;Sequence:0x39ba5b0&gt;
               &lt;Element:0x39ba1d0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3a64f70 name="NotifyReportInfo"&gt;
         &lt;Complex:0x39ba090&gt;
            &lt;Sequence:0x39babb0&gt;
               &lt;Element:0x39bad10 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39baa90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39badd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba310 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39bae10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba6f0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x39ba8b0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x39bacf0 name="ArrayOfString"&gt;
         &lt;Sequence:0x39baf70&gt;
            &lt;Element:0x39baeb0 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x39bafb0 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x39bae90&gt;
            &lt;Sequence:0x39ba990&gt;
               &lt;Element:0x39ba810 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba770 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x39ba970&gt;
            &lt;Sequence:0x39bab50&gt;
               &lt;Element:0x39bab70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba850 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x39bab30&gt;
            &lt;Sequence:0x39bafd0&gt;
               &lt;Element:0x39baf90 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39baf50 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x39bab90&gt;
            &lt;Sequence:0x39bac70&gt;
               &lt;Element:0x39baff0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x39bac30 name="PatientInfoEx"&gt;
         &lt;Sequence:0x39bac50&gt;
            &lt;Element:0x39babd0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba0f0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba0d0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39babf0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba190 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba050 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba2f0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba330 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba350 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39bacb0 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39bac10 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x39bac90 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x39baaf0&gt;
            &lt;Sequence:0x39ba130&gt;
               &lt;Element:0x39ba1b0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba390 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x39ba270&gt;
            &lt;Sequence:0x39ba730&gt;
               &lt;Element:0x39ba4b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba670 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba290 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x39ba370&gt;
            &lt;Sequence:0x39ba2b0&gt;
               &lt;Element:0x39ba610 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba590 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x39ba570&gt;
            &lt;Sequence:0x39ba110&gt;
               &lt;Element:0x39ba2d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x39ba530 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x39ba0b0 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x39ba690&gt;
            &lt;Sequence:0x39ba5d0&gt;
               &lt;Element:0x39ba710 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191111 16:46:06.876" level="DEBUG">MERGED:
Schema:0x3a64c90
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x3a64f90 name="NotifyExamInfo"&gt;
      &lt;Complex:0x3a64790&gt;
         &lt;Sequence:0x3a648f0&gt;
            &lt;Element:0x3a647f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3a64890 name="ExamInfo"&gt;
      &lt;Sequence:0x3a647b0&gt;
         &lt;Element:0x3a64850 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a648b0 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a648d0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64c30 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64bf0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a649b0 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64a10 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64cf0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64d90 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64950 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64b10 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64b50 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64bb0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64c10 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64bd0 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64a30 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a649f0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64a70 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64990 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64a90 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64ab0 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64ad0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64c70 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64c50 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64d30 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64d10 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64d70 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64cb0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64cd0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64e10 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64dd0 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64db0 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64e70 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64e50 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64ed0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64ef0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64f50 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64f30 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3a64f10 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3a64810 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x3a64830&gt;
         &lt;Sequence:0x3a64870&gt;
            &lt;Element:0x3a64df0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3a64eb0 name="NotifyReportFile"&gt;
      &lt;Complex:0x3a64e90&gt;
         &lt;Sequence:0x3a64ff0&gt;
            &lt;Element:0x3a64fb0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x39bad90 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba9b0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba950 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3a64e30 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x39ba910&gt;
         &lt;Sequence:0x39baef0&gt;
            &lt;Element:0x39ba830 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3a64fd0 name="SetPrintMode"&gt;
      &lt;Complex:0x39ba870&gt;
         &lt;Sequence:0x39ba790&gt;
            &lt;Element:0x39ba750 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba470 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba450 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba930 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba430 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba7d0 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x39ba7b0&gt;
         &lt;Sequence:0x39ba4d0&gt;
            &lt;Element:0x39ba3f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba5f0 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x39ba230&gt;
         &lt;Sequence:0x39ba6b0&gt;
            &lt;Element:0x39ba630 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba1f0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39baab0 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x39ba3d0&gt;
         &lt;Sequence:0x39ba5b0&gt;
            &lt;Element:0x39ba1d0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3a64f70 name="NotifyReportInfo"&gt;
      &lt;Complex:0x39ba090&gt;
         &lt;Sequence:0x39babb0&gt;
            &lt;Element:0x39bad10 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39baa90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39badd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba310 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39bae10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba6f0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x39ba8b0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x39bacf0 name="ArrayOfString"&gt;
      &lt;Sequence:0x39baf70&gt;
         &lt;Element:0x39baeb0 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x39bafb0 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x39bae90&gt;
         &lt;Sequence:0x39ba990&gt;
            &lt;Element:0x39ba810 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba770 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x39ba970&gt;
         &lt;Sequence:0x39bab50&gt;
            &lt;Element:0x39bab70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba850 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x39bab30&gt;
         &lt;Sequence:0x39bafd0&gt;
            &lt;Element:0x39baf90 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39baf50 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x39bab90&gt;
         &lt;Sequence:0x39bac70&gt;
            &lt;Element:0x39baff0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x39bac30 name="PatientInfoEx"&gt;
      &lt;Sequence:0x39bac50&gt;
         &lt;Element:0x39babd0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39ba0f0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39ba0d0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39babf0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39ba190 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39ba050 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39ba2f0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39ba330 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39ba350 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39bacb0 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x39bac10 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x39bac90 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x39baaf0&gt;
         &lt;Sequence:0x39ba130&gt;
            &lt;Element:0x39ba1b0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba390 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x39ba270&gt;
         &lt;Sequence:0x39ba730&gt;
            &lt;Element:0x39ba4b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba670 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba290 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x39ba370&gt;
         &lt;Sequence:0x39ba2b0&gt;
            &lt;Element:0x39ba610 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba590 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x39ba570&gt;
         &lt;Sequence:0x39ba110&gt;
            &lt;Element:0x39ba2d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x39ba530 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x39ba0b0 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x39ba690&gt;
         &lt;Sequence:0x39ba5d0&gt;
            &lt;Element:0x39ba710 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191111 16:46:06.876" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f90 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.876" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x3a64810 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.876" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x3a64eb0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:46:06.877" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x3a64e30 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.877" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x3a64fd0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.877" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba7d0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.877" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba5f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.877" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39baab0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.877" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f70 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.878" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39bafb0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.878" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba770 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.878" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba850 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.878" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x39baf50 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.878" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39bac90 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.878" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x39ba390 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba290 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x39ba590 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba0b0 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f90 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x3a64810 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x3a64eb0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x3a64e30 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.879" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x3a64fd0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba7d0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba5f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39baab0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f70 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39bafb0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba770 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba850 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.880" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x39baf50 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.881" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x39bac90 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.881" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x39ba390 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:46:06.881" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba290 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.881" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x39ba590 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.881" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba0b0 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.918" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x3f865d0"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x0406D770&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03209890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x03F86630&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03209890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x03DA29D0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x0406D770&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03209890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x03F86630&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03209890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x03DA29D0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x3a64c90 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03A647D0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191111 16:46:06.923" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f90 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.923" level="DEBUG">method 'NotifyExamInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.923" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x3a64eb0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:46:06.923" level="DEBUG">method 'NotifyReportFile' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.923" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x3a64fd0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.923" level="DEBUG">method 'SetPrintMode' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba5f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f70 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">method 'NotifyReportInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba770 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x39baf50 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.924" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x39ba390 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x39ba590 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f90 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">method 'NotifyExamInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x3a64eb0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191111 16:46:06.925" level="DEBUG">method 'NotifyReportFile' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x3a64fd0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">method 'SetPrintMode' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba5f0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x3a64f70 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">method 'NotifyReportInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x39ba770 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.926" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x39baf50 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.927" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.927" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x39ba390 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191111 16:46:06.927" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.927" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x39ba590 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.927" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573461966 (running)</msg>
<msg timestamp="20191111 16:46:06.927" level="DEBUG">Element:0x3a647f0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x3a647f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.927" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x3a64890 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.928" level="DEBUG">Element:0x39bab70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39bab70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.928" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.928" level="DEBUG">Element:0x39ba630, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba630 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.928" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.928" level="DEBUG">Element:0x39ba1f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba1f0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.928" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.929" level="DEBUG">Element:0x39baff0, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x39baff0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.929" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x39bac30 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191111 16:46:06.929" level="DEBUG">Element:0x3a64fb0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x39451b0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x3a64fb0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.929" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x3a64890 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191111 16:46:06.929" level="DEBUG">Element:0x39bad90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x39451b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39bad90 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.929" level="DEBUG">TypeQuery:0x39451b0, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.930" level="DEBUG">Element:0x39ba9b0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x39451b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba9b0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.930" level="DEBUG">TypeQuery:0x39451b0, found builtin (int)</msg>
<msg timestamp="20191111 16:46:06.930" level="DEBUG">Element:0x39ba950, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x39451b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba950 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.930" level="DEBUG">TypeQuery:0x39451b0, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.930" level="DEBUG">Element:0x39bad10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39bad10 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.930" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.931" level="DEBUG">Element:0x39baa90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39baa90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.931" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.931" level="DEBUG">Element:0x39badd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39badd0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.931" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.931" level="DEBUG">Element:0x39ba310, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba310 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.931" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.931" level="DEBUG">Element:0x39bae10, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39bae10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.932" level="DEBUG">TypeQuery:0x398d270, found builtin (int)</msg>
<msg timestamp="20191111 16:46:06.932" level="DEBUG">Element:0x39ba6f0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x39ba6f0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.932" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x39bacf0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:46:06.932" level="DEBUG">Element:0x39ba8b0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x39ba8b0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.932" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x39bacf0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191111 16:46:06.932" level="DEBUG">Element:0x39ba4b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba4b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.932" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.933" level="DEBUG">Element:0x39ba670, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba670 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.933" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.933" level="DEBUG">Element:0x39ba2d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba2d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.933" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.933" level="DEBUG">Element:0x39ba530, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba530 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.933" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.934" level="DEBUG">Element:0x39ba750, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba750 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.934" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.934" level="DEBUG">Element:0x39ba470, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba470 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.934" level="DEBUG">TypeQuery:0x398d270, found builtin (string)</msg>
<msg timestamp="20191111 16:46:06.934" level="DEBUG">Element:0x39ba450, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba450 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.934" level="DEBUG">TypeQuery:0x398d270, found builtin (int)</msg>
<msg timestamp="20191111 16:46:06.935" level="DEBUG">Element:0x39ba930, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba930 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.935" level="DEBUG">TypeQuery:0x398d270, found builtin (int)</msg>
<msg timestamp="20191111 16:46:06.935" level="DEBUG">Element:0x39ba430, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x398d270"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba430 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.935" level="DEBUG">TypeQuery:0x398d270, found builtin (int)</msg>
<msg timestamp="20191111 16:46:06.935" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x3a64fd0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.936" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x3a64fd0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191111 16:46:06.936" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191111164535870727"
   type = &lt;Element:0x39ba750 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945b10 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.936" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039D2FD0&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191111164535870727"
   type = &lt;Element:0x39ba750 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945b10 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.936" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191111164535870727"
   type = &lt;Element:0x39ba750 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945b10 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.936" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039D2130&gt;)
&lt;suds.resolver.Frame object at 0x039D2130&gt;</msg>
<msg timestamp="20191111 16:46:06.937" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:46:06.937" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191111164535870727"
   type = &lt;Element:0x39ba750 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945b10 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.937" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039D2130&gt;)
</msg>
<msg timestamp="20191111 16:46:06.938" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x39ba470 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945fd0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.938" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039D2550&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x39ba470 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945fd0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.938" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x39ba470 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945fd0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.938" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039D2D90&gt;)
&lt;suds.resolver.Frame object at 0x039D2D90&gt;</msg>
<msg timestamp="20191111 16:46:06.939" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:46:06.939" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x39ba470 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3945fd0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.939" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039D2D90&gt;)
</msg>
<msg timestamp="20191111 16:46:06.939" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x39ba450 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945fb0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.939" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039D2B90&gt;
content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x39ba450 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945fb0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.939" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x39ba450 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945fb0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.940" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039D2B30&gt;)
&lt;suds.resolver.Frame object at 0x039D2B30&gt;</msg>
<msg timestamp="20191111 16:46:06.940" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:46:06.940" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x39ba450 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945fb0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.940" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039D2B30&gt;)
</msg>
<msg timestamp="20191111 16:46:06.940" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x39ba930 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945cb0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.940" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039D2810&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x39ba930 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945cb0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.941" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x39ba930 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945cb0 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.941" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039D2A50&gt;)
&lt;suds.resolver.Frame object at 0x039D2A50&gt;</msg>
<msg timestamp="20191111 16:46:06.941" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:46:06.941" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x39ba930 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945cb0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.941" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039D2A50&gt;)
</msg>
<msg timestamp="20191111 16:46:06.941" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x39ba430 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945c50 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.942" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x039D20D0&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x39ba430 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945c50 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.942" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x39ba430 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945c50 /&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.942" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x039D2950&gt;)
&lt;suds.resolver.Frame object at 0x039D2950&gt;</msg>
<msg timestamp="20191111 16:46:06.942" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191111 16:46:06.942" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x39ba430 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3945c50 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191111 16:46:06.942" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x039D2950&gt;)
</msg>
<msg timestamp="20191111 16:46:06.943" level="DEBUG">message for 'SetPrintMode' created: 8 (ms)</msg>
<msg timestamp="20191111 16:46:06.943" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x03945650&gt;</msg>
<msg timestamp="20191111 16:46:06.943" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191111 16:46:06.943" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191111164535870727&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;1&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;60&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;10&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191111 16:46:06.993" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Mon, 11 Nov 2019 08:46:07 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191111 16:46:06.993" level="DEBUG">waited 50 (ms) on server reply</msg>
<msg timestamp="20191111 16:46:06.993" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191111 16:46:06.993" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191111 16:46:06.993" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x39ba7d0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191111 16:46:06.994" level="DEBUG">Element:0x39ba3f0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x39d20d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba3f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.994" level="DEBUG">TypeQuery:0x39d20d0, found builtin (int)</msg>
<msg timestamp="20191111 16:46:06.994" level="DEBUG">reset</msg>
<msg timestamp="20191111 16:46:06.994" level="DEBUG">Element:0x39ba3f0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x39d21d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x39ba3f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191111 16:46:06.994" level="DEBUG">TypeQuery:0x39d21d0, found builtin (int)</msg>
<msg timestamp="20191111 16:46:06.994" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03FDCB90&gt;)
&lt;suds.resolver.Frame object at 0x03FDCB90&gt;</msg>
<msg timestamp="20191111 16:46:06.995" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03FDCB90&gt;)
</msg>
<msg timestamp="20191111 16:46:06.995" level="DEBUG">method 'SetPrintMode' invoked: 52 (ms)</msg>
<msg timestamp="20191111 16:46:06.995" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191111164535870727.
Printmode.printmode_set_by_accn: Set exam print mode to [film] successfully.</msg>
<msg timestamp="20191111 16:46:06.995" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191111 16:46:06.839" endtime="20191111 16:46:06.995"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:46:06.995" endtime="20191111 16:46:06.996"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191111 16:46:16.997" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191111 16:46:06.996" endtime="20191111 16:46:16.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Wait for the holding time of film has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:46:16.997" level="INFO">Step 4 
Description: 
1. Wait for the holding time of film has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:46:16.997" endtime="20191111 16:46:16.998"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191111 16:47:14.999" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [58] seconds to make print ready arrived.</msg>
<msg timestamp="20191111 16:47:14.999" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191111 16:46:16.998" endtime="20191111 16:47:14.999"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:47:14.999" endtime="20191111 16:47:14.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1.Print the prepared exam with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191111 16:47:15.000" level="INFO">Step 5 
Description: 
1.Print the prepared exam with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191111 16:47:15.000" endtime="20191111 16:47:15.000"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191111 16:47:15.003" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:47:15.017" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191111 16:47:15.020" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:47:15.262" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/printtask/items?Value=A20191111164535870727&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 820</msg>
<msg timestamp="20191111 16:47:15.265" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:47:15.393" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 732</msg>
<msg timestamp="20191111 16:47:15.396" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:47:15.417" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/print/2109?tid=K3_Terminal01 HTTP/1.1" 200 729</msg>
<msg timestamp="20191111 16:49:51.424" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:49:51.464" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/printtask/status/2109?tid=K3_Terminal01 HTTP/1.1" 200 734</msg>
<msg timestamp="20191111 16:49:51.465" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9897,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20252,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":1,"ReportCount":0,"PatientInfo":{"PatientId":"P20191111164535870727","PatientName":"CN20191111164535870727","PatientGender":"F","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportStatistics":[],"ExamItems":[{"AccessionNumber":"A20191111164535870727","ModalityType":"XA","ModalityName":"DCMPSTATE1","ExamName":"Exam20191111164535870727","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportInfos":null}],"ExamItemsOfReg":[]}}
Terminal.printtask_report_getinfo: No report to print. [A20191111164535870727]
Terminal.terminal_print_with_cardinfo: There are no report need to print for the patient.

Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2109","Status":-1,"TotalFilmCount":1,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9897,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20252,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 2109
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9897,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20252,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":"2109"}}}
Terminal.printtask_get_estimatetime: The estimate time is 63 of task 2109 

Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"2109","Status":4,"TotalFilmCount":1,"TotalReportCount":0,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9896,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20251,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 2109 print successfully, the task status is Printed</msg>
<msg timestamp="20191111 16:49:51.465" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191111 16:47:15.000" endtime="20191111 16:49:51.465"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:49:51.465" endtime="20191111 16:49:51.466"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:45:35.852" endtime="20191111 16:49:51.466" critical="yes"></status>
</test>
<test id="s1-t10" name="SmokeTest_010_Core_4179_05.01.01 Central Print multi patients with custom terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:49:51.467" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:49:51.467" endtime="20191111 16:49:51.467"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191111 16:49:51.468" level="INFO">${exam_count} = 5</msg>
<status status="PASS" starttime="20191111 16:49:51.468" endtime="20191111 16:49:51.468"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>Customer_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191111 16:49:51.471" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:49:51.482" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=Customer_Terminal01 HTTP/1.1" 200 621</msg>
<msg timestamp="20191111 16:49:51.483" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"Customer_Terminal01","Status":0,"Type":1,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9896,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20251,"IsPrinting":false,"TerminalId":"Customer_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191111 16:49:51.483" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191111 16:49:51.468" endtime="20191111 16:49:51.483"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191111 16:49:51.483" endtime="20191111 16:49:51.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:49:51.484" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191111 16:49:51.483" endtime="20191111 16:49:51.484"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191111 16:49:51.484" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191111 16:49:51.484" endtime="20191111 16:49:51.484"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191111 16:49:51.485" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191111 16:49:51.484" endtime="20191111 16:49:51.485"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:49:51.488" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:49:51.497" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:49:51.499" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:49:51.485401", "UpdateDT": "2019-11-11 16:49:51.485401", "PatientID": "P20191111164951485401", "AccessionNumber": "A20191111164951485401", "StudyInstanceUID": "UID20191111164951485401", "NameCN": "CN20191111164951485401", "NameEN": "EN20191111164951485401", "Gender": "M", "Birthday": "1932-12-02", "Modality": "CT", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:49:51.485401", "RegisterDT": "2019-11-11 16:49:51.485401", "ExamDT": "2019-11-11 16:49:51.485401", "ReportDT": "2019-11-11 16:49:51.485401", "SubmitDT": "2019-11-11 16:49:51.485401", "ApproveDT": "2019-11-11 16:49:51.485401", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111164951485401", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:49:51.499" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:49:51.485401", "UpdateDT": "2019-11-11 16:49:51.485401", "PatientID": "P20191111164951485401", "AccessionNumber": "A20191111164951485401", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:49:51.485" endtime="20191111 16:49:51.499"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:49:51.499" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:49:51.485401', 'UpdateDT': '2019-11-11 16:49:51.485401', 'PatientID': 'P20191111164951485401', 'AccessionNumber': 'A20191111164951485401', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:49:51.499" endtime="20191111 16:49:51.500"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:49:51.538" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:49:51.500" endtime="20191111 16:49:51.538"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:49:51.576" level="INFO">${patientID} = ['P20191111164951485401']</msg>
<status status="PASS" starttime="20191111 16:49:51.538" endtime="20191111 16:49:51.576"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191111 16:49:51.615" level="INFO">${Accessionnumber} = ['A20191111164951485401']</msg>
<status status="PASS" starttime="20191111 16:49:51.577" endtime="20191111 16:49:51.615"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:49:51.615" endtime="20191111 16:49:51.615"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:50:22.288" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191111164951485401", "AccessionNumber": "A20191111164951485401", "FilmSessionLable": "20191111164951616407", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:50:22.288" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191111164951485401", "AccessionNumber": "A20191111164951485401", "FilmSessionLable": "20191111164951616407", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:49:51.616" endtime="20191111 16:50:22.288"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:50:22.289" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191111164951485401', 'AccessionNumber': 'A20191111164951485401', 'FilmSessionLable': '20191111164951616407', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:50:22.288" endtime="20191111 16:50:22.289"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:50:22.327" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:50:22.289" endtime="20191111 16:50:22.327"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:22.327" endtime="20191111 16:50:22.328"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:50:22.332" level="INFO">PUMA_ReportLibrary.print_report_from_template: Function execute failed.
&lt;class 'SystemError'&gt;
Report.report_create_report_with_sample: Function execute failed.
&lt;class 'Exception'&gt;</msg>
<msg timestamp="20191111 16:50:22.332" level="FAIL">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</msg>
<msg timestamp="20191111 16:50:22.332" level="DEBUG">Traceback (most recent call last):
  File "D:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\Report.py", line 90, in report_create_report_with_sample
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191111 16:50:22.328" endtime="20191111 16:50:22.332"></status>
</kw>
<status status="FAIL" starttime="20191111 16:49:51.485" endtime="20191111 16:50:22.332"></status>
</kw>
<status status="FAIL" starttime="20191111 16:49:51.485" endtime="20191111 16:50:22.332"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191111 16:49:51.466" endtime="20191111 16:50:22.333" critical="yes">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</status>
</test>
<test id="s1-t11" name="SmokeTest_011_Core_4180_06.01.01 Central Print multi patients with standard terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:22.334" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:22.334" endtime="20191111 16:50:22.334"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191111 16:50:22.334" level="INFO">${exam_count} = 1</msg>
<status status="PASS" starttime="20191111 16:50:22.334" endtime="20191111 16:50:22.335"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191111 16:50:22.337" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:22.358" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191111 16:50:22.358" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9896,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20251,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191111 16:50:22.359" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191111 16:50:22.335" endtime="20191111 16:50:22.359"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:22.359" endtime="20191111 16:50:22.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:22.360" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:22.359" endtime="20191111 16:50:22.360"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191111 16:50:22.360" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191111 16:50:22.360" endtime="20191111 16:50:22.360"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191111 16:50:22.360" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191111 16:50:22.360" endtime="20191111 16:50:22.360"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191111 16:50:22.364" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:22.373" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191111 16:50:22.374" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-11 16:50:22.360766", "UpdateDT": "2019-11-11 16:50:22.360766", "PatientID": "P20191111165022360766", "AccessionNumber": "A20191111165022360766", "StudyInstanceUID": "UID20191111165022360766", "NameCN": "CN20191111165022360766", "NameEN": "EN20191111165022360766", "Gender": "F", "Birthday": "1965-11-24", "Modality": "MR", "ModalityName": "IO", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-11 16:50:22.360766", "RegisterDT": "2019-11-11 16:50:22.360766", "ExamDT": "2019-11-11 16:50:22.360766", "ReportDT": "2019-11-11 16:50:22.360766", "SubmitDT": "2019-11-11 16:50:22.360766", "ApproveDT": "2019-11-11 16:50:22.360766", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191111165022360766", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191111 16:50:22.374" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-11 16:50:22.360766", "UpdateDT": "2019-11-11 16:50:22.360766", "PatientID": "P20191111165022360766", "AccessionNumber": "A20191111165022360766", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:50:22.361" endtime="20191111 16:50:22.374"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191111 16:50:22.375" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-11 16:50:22.360766', 'UpdateDT': '2019-11-11 16:50:22.360766', 'PatientID': 'P20191111165022360766', 'AccessionNumber': 'A20191111165022360766', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191111 16:50:22.374" endtime="20191111 16:50:22.375"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191111 16:50:22.413" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191111 16:50:22.375" endtime="20191111 16:50:22.413"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191111 16:50:22.441" level="INFO">${patientID} = ['P20191111165022360766']</msg>
<status status="PASS" starttime="20191111 16:50:22.413" endtime="20191111 16:50:22.441"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191111 16:50:22.489" level="INFO">${Accessionnumber} = ['A20191111165022360766']</msg>
<status status="PASS" starttime="20191111 16:50:22.441" endtime="20191111 16:50:22.489"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:22.489" endtime="20191111 16:50:22.489"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191111 16:50:53.198" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191111165022360766", "AccessionNumber": "A20191111165022360766", "FilmSessionLable": "20191111165022490251", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191111 16:50:53.198" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191111165022360766", "AccessionNumber": "A20191111165022360766", "FilmSessionLable": "20191111165022490251", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:50:22.490" endtime="20191111 16:50:53.198"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191111 16:50:53.199" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191111165022360766', 'AccessionNumber': 'A20191111165022360766', 'FilmSessionLable': '20191111165022490251', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191111 16:50:53.198" endtime="20191111 16:50:53.199"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191111 16:50:53.237" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:50:53.199" endtime="20191111 16:50:53.237"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:53.237" endtime="20191111 16:50:53.238"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191111 16:50:53.242" level="INFO">PUMA_ReportLibrary.print_report_from_template: Function execute failed.
&lt;class 'SystemError'&gt;
Report.report_create_report_with_sample: Function execute failed.
&lt;class 'Exception'&gt;</msg>
<msg timestamp="20191111 16:50:53.242" level="FAIL">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</msg>
<msg timestamp="20191111 16:50:53.242" level="DEBUG">Traceback (most recent call last):
  File "D:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_ReportLibrary\Report.py", line 90, in report_create_report_with_sample
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191111 16:50:53.238" endtime="20191111 16:50:53.242"></status>
</kw>
<status status="FAIL" starttime="20191111 16:50:22.361" endtime="20191111 16:50:53.242"></status>
</kw>
<status status="FAIL" starttime="20191111 16:50:22.361" endtime="20191111 16:50:53.242"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191111 16:50:22.333" endtime="20191111 16:50:53.243" critical="yes">&lt;built-in function SetDefaultPrinter&gt; returned a result with an error set</status>
</test>
<test id="s1-t12" name="SmokeTest_0012_Core_4181_07.01.01 Worklist workflow fuzzy query by patientid">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:53.244" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:53.244" endtime="20191111 16:50:53.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:53.244" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191111 16:50:53.244" endtime="20191111 16:50:53.244"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191111 16:50:53.247" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.259" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:53.262" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.287" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191111 16:50:53.289" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191111 16:50:53.289" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191111 16:50:53.245" endtime="20191111 16:50:53.289"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:53.290" endtime="20191111 16:50:53.290"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By PatientID" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientID</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191111 16:50:53.294" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.300" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.303" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.311" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:53.316" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.320" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.323" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.331" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:53.336" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.340" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.343" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.351" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11467</msg>
<msg timestamp="20191111 16:50:53.356" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.361" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.363" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.371" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11699</msg>
<msg timestamp="20191111 16:50:53.376" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.380" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.383" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.391" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11728</msg>
<msg timestamp="20191111 16:50:53.396" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.400" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.403" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.411" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11507</msg>
<msg timestamp="20191111 16:50:53.416" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.420" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.423" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.431" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11462</msg>
<msg timestamp="20191111 16:50:53.436" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.440" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.443" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.453" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11594</msg>
<msg timestamp="20191111 16:50:53.458" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.463" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.465" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.474" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11832</msg>
<msg timestamp="20191111 16:50:53.479" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.483" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.486" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.497" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12241</msg>
<msg timestamp="20191111 16:50:53.502" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.506" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.509" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.518" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12244</msg>
<msg timestamp="20191111 16:50:53.523" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.527" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.530" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.540" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11658</msg>
<msg timestamp="20191111 16:50:53.544" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.549" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.552" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.561" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11549</msg>
<msg timestamp="20191111 16:50:53.566" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.570" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.573" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.584" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11597</msg>
<msg timestamp="20191111 16:50:53.589" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.593" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.596" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.607" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11309</msg>
<msg timestamp="20191111 16:50:53.612" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.617" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.619" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.630" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191111 16:50:53.635" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.640" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.642" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.653" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10980</msg>
<msg timestamp="20191111 16:50:53.657" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.662" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.664" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.675" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:53.680" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.684" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.687" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.698" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191111 16:50:53.702" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.707" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.710" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.721" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:53.726" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.730" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.733" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.745" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191111 16:50:53.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.754" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.757" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.768" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11226</msg>
<msg timestamp="20191111 16:50:53.773" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.778" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.792" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:53.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.801" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.804" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.816" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:53.821" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.826" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.841" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:53.845" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.849" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.852" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.866" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:53.871" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.875" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.878" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.904" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:53.909" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.917" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.920" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.943" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:53.948" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.953" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.956" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.969" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:53.974" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.979" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:53.982" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:53.996" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.001" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.005" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.008" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.022" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.027" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.031" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.034" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.050" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.055" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.059" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.062" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.098" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.103" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.108" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.110" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.126" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.134" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.139" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.143" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.159" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12466</msg>
<msg timestamp="20191111 16:50:54.166" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.171" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.176" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.191" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191111 16:50:54.199" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.203" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.208" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.223" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12515</msg>
<msg timestamp="20191111 16:50:54.231" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.235" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.240" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.254" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 1322</msg>
<msg timestamp="20191111 16:50:54.297" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patientID: There are [722] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientID: The query data is correct!</msg>
<msg timestamp="20191111 16:50:54.297" level="INFO">${Query_result} = True</msg>
<status status="PASS" starttime="20191111 16:50:53.290" endtime="20191111 16:50:54.298"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:54.298" endtime="20191111 16:50:54.298"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191111 16:50:54.301" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.306" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:54.309" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.310" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191111 16:50:54.317" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:54.317" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191111 16:50:54.318" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191111 16:50:54.298" endtime="20191111 16:50:54.318"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:54.318" endtime="20191111 16:50:54.318"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:50:53.243" endtime="20191111 16:50:54.318" critical="yes"></status>
</test>
<test id="s1-t13" name="SmokeTest_0013_Core_4182_07.01.02 Worklist workflow fuzzy query by accession number.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:54.320" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:54.319" endtime="20191111 16:50:54.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:54.320" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191111 16:50:54.320" endtime="20191111 16:50:54.320"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191111 16:50:54.323" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.327" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:54.329" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.349" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191111 16:50:54.350" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191111 16:50:54.350" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191111 16:50:54.320" endtime="20191111 16:50:54.350"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:54.350" endtime="20191111 16:50:54.351"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Accn" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_accn</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result_accn}</var>
</assign>
<msg timestamp="20191111 16:50:54.355" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.359" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.362" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.369" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:54.374" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.378" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.381" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.388" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:54.393" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.397" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.400" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.407" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11467</msg>
<msg timestamp="20191111 16:50:54.412" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.416" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.419" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.427" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11699</msg>
<msg timestamp="20191111 16:50:54.432" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.436" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.439" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.448" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11728</msg>
<msg timestamp="20191111 16:50:54.453" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.457" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.460" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.472" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11507</msg>
<msg timestamp="20191111 16:50:54.477" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.481" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.484" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.493" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11462</msg>
<msg timestamp="20191111 16:50:54.498" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.502" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.505" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.513" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11594</msg>
<msg timestamp="20191111 16:50:54.518" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.522" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.525" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.534" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11832</msg>
<msg timestamp="20191111 16:50:54.539" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.543" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.546" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.556" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12241</msg>
<msg timestamp="20191111 16:50:54.561" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.565" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.568" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.577" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12244</msg>
<msg timestamp="20191111 16:50:54.582" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.586" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.590" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.600" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11658</msg>
<msg timestamp="20191111 16:50:54.605" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.609" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.612" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.624" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11549</msg>
<msg timestamp="20191111 16:50:54.629" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.653" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.666" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11597</msg>
<msg timestamp="20191111 16:50:54.671" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.675" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.678" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.688" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11309</msg>
<msg timestamp="20191111 16:50:54.693" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.697" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.700" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.710" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191111 16:50:54.715" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.719" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.722" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.733" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10980</msg>
<msg timestamp="20191111 16:50:54.738" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.742" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.745" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.756" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:54.760" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.764" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.767" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.780" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191111 16:50:54.785" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.789" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.792" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.803" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:54.808" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.813" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.815" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.831" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191111 16:50:54.836" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.841" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.855" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11226</msg>
<msg timestamp="20191111 16:50:54.860" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.864" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.867" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.878" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.883" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.887" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.890" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.903" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.908" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.912" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.915" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.930" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.935" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.940" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.943" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.956" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.961" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.965" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.968" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.980" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:54.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:54.989" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:54.992" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.012" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.017" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.022" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.025" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.037" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.042" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.047" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.050" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.071" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.078" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.083" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.088" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.101" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.109" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.113" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.118" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.131" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.139" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.143" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.148" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.161" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.169" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.173" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.178" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.192" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.200" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.204" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.209" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.223" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12466</msg>
<msg timestamp="20191111 16:50:55.228" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.233" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.236" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.250" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191111 16:50:55.255" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.259" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.262" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.277" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12515</msg>
<msg timestamp="20191111 16:50:55.283" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.288" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.291" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.306" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 2427</msg>
<msg timestamp="20191111 16:50:55.337" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_accn: There are [724] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_accn: The query data is correct!</msg>
<msg timestamp="20191111 16:50:55.338" level="INFO">${Query_result_accn} = True</msg>
<status status="PASS" starttime="20191111 16:50:54.351" endtime="20191111 16:50:55.338"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result_accn}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:55.338" endtime="20191111 16:50:55.338"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191111 16:50:55.341" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.346" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:55.349" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.350" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191111 16:50:55.356" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:55.357" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191111 16:50:55.357" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191111 16:50:55.338" endtime="20191111 16:50:55.357"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:55.357" endtime="20191111 16:50:55.357"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:50:54.319" endtime="20191111 16:50:55.358" critical="yes"></status>
</test>
<test id="s1-t14" name="SmokeTest_0014_Core_4183_07.01.03 Worklist workflow fuzzy query by patient name.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:55.359" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:55.359" endtime="20191111 16:50:55.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:55.359" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191111 16:50:55.359" endtime="20191111 16:50:55.360"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191111 16:50:55.362" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.366" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:55.369" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.388" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191111 16:50:55.389" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191111 16:50:55.389" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191111 16:50:55.360" endtime="20191111 16:50:55.389"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:55.389" endtime="20191111 16:50:55.390"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patientname" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientname</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191111 16:50:55.394" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.399" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.402" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.410" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:55.414" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.418" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.421" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.430" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:55.434" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.439" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.442" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.450" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11467</msg>
<msg timestamp="20191111 16:50:55.455" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.459" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.462" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.470" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11699</msg>
<msg timestamp="20191111 16:50:55.475" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.479" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.482" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.490" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11728</msg>
<msg timestamp="20191111 16:50:55.495" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.499" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.502" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.511" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11507</msg>
<msg timestamp="20191111 16:50:55.515" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.523" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.525" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.535" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11462</msg>
<msg timestamp="20191111 16:50:55.539" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.544" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.556" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11594</msg>
<msg timestamp="20191111 16:50:55.561" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.564" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.567" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.576" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11832</msg>
<msg timestamp="20191111 16:50:55.581" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.585" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.588" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.597" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12241</msg>
<msg timestamp="20191111 16:50:55.601" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.606" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.608" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.621" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12244</msg>
<msg timestamp="20191111 16:50:55.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.630" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.633" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.642" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11658</msg>
<msg timestamp="20191111 16:50:55.647" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.652" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.654" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.664" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11549</msg>
<msg timestamp="20191111 16:50:55.669" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.673" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.676" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.685" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11597</msg>
<msg timestamp="20191111 16:50:55.690" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.694" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.697" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.707" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11309</msg>
<msg timestamp="20191111 16:50:55.711" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.715" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.718" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.728" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191111 16:50:55.733" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.738" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.740" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.751" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10980</msg>
<msg timestamp="20191111 16:50:55.756" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.760" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.763" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.773" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:55.778" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.782" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.785" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.796" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191111 16:50:55.801" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.806" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.809" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.820" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:55.825" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.829" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.832" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.844" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191111 16:50:55.848" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.852" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.855" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.880" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11226</msg>
<msg timestamp="20191111 16:50:55.885" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.890" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.893" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.905" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.909" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.914" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.917" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.936" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.941" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.946" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.949" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.968" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.973" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.978" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:55.980" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:55.994" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:55.999" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.004" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.007" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.019" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.024" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.029" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.044" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.049" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.054" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.056" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.078" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.083" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.087" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.090" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.112" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.117" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.121" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.124" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.138" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.142" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.147" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.149" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.163" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.168" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.172" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.175" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.189" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.194" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.198" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.201" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.216" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191111 16:50:56.221" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.225" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.228" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.242" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12466</msg>
<msg timestamp="20191111 16:50:56.247" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.252" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.254" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.269" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191111 16:50:56.274" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.278" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.296" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12515</msg>
<msg timestamp="20191111 16:50:56.301" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.306" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.309" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.323" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 1322</msg>
<msg timestamp="20191111 16:50:56.355" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patientname: There are [722] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientname: The query data is correct!</msg>
<msg timestamp="20191111 16:50:56.355" level="INFO">${Query_result} = True</msg>
<status status="PASS" starttime="20191111 16:50:55.390" endtime="20191111 16:50:56.355"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:56.355" endtime="20191111 16:50:56.356"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191111 16:50:56.358" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.363" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:56.366" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.367" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191111 16:50:56.373" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:56.374" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191111 16:50:56.374" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191111 16:50:56.356" endtime="20191111 16:50:56.374"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:56.374" endtime="20191111 16:50:56.375"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:50:55.358" endtime="20191111 16:50:56.375" critical="yes"></status>
</test>
<test id="s1-t15" name="SmokeTest_0015_Core_4184_07.01.04 Worklist workflow create a short cut with condition of patient type.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description: \n 1. Prepare some patients/exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:56.376" level="INFO">Step 1 
Description: 
1. Prepare some patients/exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:56.376" endtime="20191111 16:50:56.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n 1.Clear the query condition with API in worklist. \n Expected Result:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:56.377" level="INFO">Step 2 
Description:
1.Clear the query condition with API in worklist. 
Expected Result:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:56.376" endtime="20191111 16:50:56.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n 1. Use the query API to query all records of one patient type. \n Expected:\n 1. The query result should be correct. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:56.377" level="INFO">Step 3 
Description: 
1. Use the query API to query all records of one patient type. 
Expected:
1. The query result should be correct. 
</msg>
<status status="PASS" starttime="20191111 16:50:56.377" endtime="20191111 16:50:56.377"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191111 16:50:56.380" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.384" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:56.386" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.405" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191111 16:50:56.407" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191111 16:50:56.407" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191111 16:50:56.377" endtime="20191111 16:50:56.407"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:56.407" endtime="20191111 16:50:56.407"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patienttype" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patienttype</doc>
<arguments>
<arg>门诊病人,住院病人</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191111 16:50:56.412" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.416" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.419" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.426" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:56.431" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.435" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.437" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.446" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:56.450" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.454" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.457" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.464" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11467</msg>
<msg timestamp="20191111 16:50:56.468" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.472" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.475" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.482" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11699</msg>
<msg timestamp="20191111 16:50:56.487" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.491" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.494" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.501" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11728</msg>
<msg timestamp="20191111 16:50:56.506" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.510" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.513" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.520" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11507</msg>
<msg timestamp="20191111 16:50:56.525" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.529" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.532" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.540" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11462</msg>
<msg timestamp="20191111 16:50:56.545" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.549" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.552" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.559" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11594</msg>
<msg timestamp="20191111 16:50:56.564" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.568" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.571" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.579" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11832</msg>
<msg timestamp="20191111 16:50:56.584" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.588" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.590" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.598" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12241</msg>
<msg timestamp="20191111 16:50:56.603" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.607" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.610" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.618" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12244</msg>
<msg timestamp="20191111 16:50:56.623" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.627" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.629" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.638" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11658</msg>
<msg timestamp="20191111 16:50:56.643" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.647" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.650" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.659" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11549</msg>
<msg timestamp="20191111 16:50:56.663" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.668" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.670" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.679" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11597</msg>
<msg timestamp="20191111 16:50:56.684" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.688" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.690" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.699" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11309</msg>
<msg timestamp="20191111 16:50:56.704" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.708" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.711" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.720" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191111 16:50:56.725" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.729" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.732" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.741" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10980</msg>
<msg timestamp="20191111 16:50:56.746" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.750" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.753" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.768" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:56.773" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.777" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.780" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.790" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10401</msg>
<msg timestamp="20191111 16:50:56.795" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.799" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191111 16:50:56.802" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.811" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 5873</msg>
<msg timestamp="20191111 16:50:56.837" level="INFO">2,1
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patienttype: There are [371] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patienttype: The query data is correct!</msg>
<msg timestamp="20191111 16:50:56.838" level="INFO">${Query_result} = {"Result": true, "worklist_data": [{"accessionNumber": "A20191111165022360766", "patientID": "P20191111165022360766", "patientName": "CN20191111165022360766", "studyDate": "2019-11-11", "studyTime": "...</msg>
<status status="PASS" starttime="20191111 16:50:56.408" endtime="20191111 16:50:56.838"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Query_result}</arg>
</arguments>
<assign>
<var>${Json_result}</var>
</assign>
<msg timestamp="20191111 16:50:56.857" level="INFO">${Json_result} = {'Result': True, 'worklist_data': [{'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '...</msg>
<status status="PASS" starttime="20191111 16:50:56.839" endtime="20191111 16:50:56.857"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Json_result}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<msg timestamp="20191111 16:50:56.895" level="INFO">${Result} = [True]</msg>
<status status="PASS" starttime="20191111 16:50:56.857" endtime="20191111 16:50:56.895"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:56.895" endtime="20191111 16:50:56.895"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Json_result}</arg>
<arg>worklist_data</arg>
</arguments>
<assign>
<var>${query_data}</var>
</assign>
<msg timestamp="20191111 16:50:56.938" level="INFO">${query_data} = [[{'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '16:50:51', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191111 16:50:56.896" endtime="20191111 16:50:56.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${query_data}</arg>
</arguments>
<msg timestamp="20191111 16:50:56.945" level="INFO">[[{'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '16:50:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111165022360766', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164951485401', 'patientID': 'P20191111164951485401', 'patientName': 'CN20191111164951485401', 'studyDate': '2019-11-11', 'studyTime': '16:50:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164951485401', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164535870727', 'patientID': 'P20191111164535870727', 'patientName': 'CN20191111164535870727', 'studyDate': '2019-11-11', 'studyTime': '16:46:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111164535870727', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 16:47:48.947', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164505001006', 'patientID': 'P20191111164505001006', 'patientName': 'CN20191111164505001006', 'studyDate': '2019-11-11', 'studyTime': '16:45:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164505001006', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164403184752', 'patientID': 'P20191111164403184752', 'patientName': 'CN20191111164403184752', 'studyDate': '2019-11-11', 'studyTime': '16:44:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164403184752', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164340907857', 'patientID': 'P20191111164340907857', 'patientName': 'CN20191111164340907857', 'studyDate': '2019-11-11', 'studyTime': '16:43:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164329587752', 'patientID': 'P20191111164329587752', 'patientName': 'CN20191111164329587752', 'studyDate': '2019-11-11', 'studyTime': '16:43:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164258683681', 'patientID': 'P20191111164258683681', 'patientName': 'CN20191111164258683681', 'studyDate': '2019-11-11', 'studyTime': '16:43:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164258683681', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111162011870011', 'patientID': 'P20191111162011870011', 'patientName': 'CN20191111162011870011', 'studyDate': '2019-11-11', 'studyTime': '16:20:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111162011870011', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161940860846', 'patientID': 'P20191111161940860846', 'patientName': 'CN20191111161940860846', 'studyDate': '2019-11-11', 'studyTime': '16:20:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161940860846', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161526578985', 'patientID': 'P20191111161526578985', 'patientName': 'CN20191111161526578985', 'studyDate': '2019-11-11', 'studyTime': '16:15:54', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111161526578985', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 16:17:34.907', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161455526836', 'patientID': 'P20191111161455526836', 'patientName': 'CN20191111161455526836', 'studyDate': '2019-11-11', 'studyTime': '16:15:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161455526836', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161353918507', 'patientID': 'P20191111161353918507', 'patientName': 'CN20191111161353918507', 'studyDate': '2019-11-11', 'studyTime': '16:14:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161353918507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161332498704', 'patientID': 'P20191111161332498704', 'patientName': 'CN20191111161332498704', 'studyDate': '2019-11-11', 'studyTime': '16:13:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161321535907', 'patientID': 'P20191111161321535907', 'patientName': 'CN20191111161321535907', 'studyDate': '2019-11-11', 'studyTime': '16:13:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161250668805', 'patientID': 'P20191111161250668805', 'patientName': 'CN20191111161250668805', 'studyDate': '2019-11-11', 'studyTime': '16:13:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161250668805', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155831628627', 'patientID': 'P20191111155831628627', 'patientName': 'CN20191111155831628627', 'studyDate': '2019-11-11', 'studyTime': '15:58:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155831628627', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155800753262', 'patientID': 'P20191111155800753262', 'patientName': 'CN20191111155800753262', 'studyDate': '2019-11-11', 'studyTime': '15:58:29', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155800753262', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155345318692', 'patientID': 'P20191111155345318692', 'patientName': 'CN20191111155345318692', 'studyDate': '2019-11-11', 'studyTime': '15:54:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111155345318692', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 15:55:55.160', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155314420138', 'patientID': 'P20191111155314420138', 'patientName': 'CN20191111155314420138', 'studyDate': '2019-11-11', 'studyTime': '15:53:44', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155314420138', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155212688556', 'patientID': 'P20191111155212688556', 'patientName': 'CN20191111155212688556', 'studyDate': '2019-11-11', 'studyTime': '15:52:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155212688556', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155150232788', 'patientID': 'P20191111155150232788', 'patientName': 'CN20191111155150232788', 'studyDate': '2019-11-11', 'studyTime': '15:51:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155139339544', 'patientID': 'P20191111155139339544', 'patientName': 'CN20191111155139339544', 'studyDate': '2019-11-11', 'studyTime': '15:51:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155108288987', 'patientID': 'P20191111155108288987', 'patientName': 'CN20191111155108288987', 'studyDate': '2019-11-11', 'studyTime': '15:51:38', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155108288987', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111150130053540', 'patientID': 'P20191111150130053540', 'patientName': 'CN20191111150130053540', 'studyDate': '2019-11-11', 'studyTime': '15:01:58', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111150130053540', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111150059148040', 'patientID': 'P20191111150059148040', 'patientName': 'CN20191111150059148040', 'studyDate': '2019-11-11', 'studyTime': '15:01:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111150059148040', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145642315193', 'patientID': 'P20191111145642315193', 'patientName': 'CN20191111145642315193', 'studyDate': '2019-11-11', 'studyTime': '14:57:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111145642315193', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 14:58:50.070', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145611449038', 'patientID': 'P20191111145611449038', 'patientName': 'CN20191111145611449038', 'studyDate': '2019-11-11', 'studyTime': '14:56:38', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111145611449038', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145509356238', 'patientID': 'P20191111145509356238', 'patientName': 'CN20191111145509356238', 'studyDate': '2019-11-11', 'studyTime': '14:55:38', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111145509356238', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145446788653', 'patientID': 'P20191111145446788653', 'patientName': 'CN20191111145446788653', 'studyDate': '2019-11-11', 'studyTime': '14:54:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145435425900', 'patientID': 'P20191111145435425900', 'patientName': 'CN20191111145435425900', 'studyDate': '2019-11-11', 'studyTime': '14:54:42', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135537690576', 'patientID': 'P20191111135537690576', 'patientName': 'CN20191111135537690576', 'studyDate': '2019-11-11', 'studyTime': '13:56:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135537690576', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 14:01:04.950', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 14:01:04.957', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135456471774', 'patientID': 'P20191111135456471774', 'patientName': 'CN20191111135456471774', 'studyDate': '2019-11-11', 'studyTime': '13:55:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135456471774', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 14:00:09.763', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 14:00:09.773', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135405377956', 'patientID': 'P20191111135405377956', 'patientName': 'CN20191111135405377956', 'studyDate': '2019-11-11', 'studyTime': '13:54:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135405377956', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:59:13.257', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:59:13.270', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135324424780', 'patientID': 'P20191111135324424780', 'patientName': 'CN20191111135324424780', 'studyDate': '2019-11-11', 'studyTime': '13:53:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135324424780', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:58:16.660', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:58:16.670', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135243252852', 'patientID': 'P20191111135243252852', 'patientName': 'CN20191111135243252852', 'studyDate': '2019-11-11', 'studyTime': '13:53:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135243252852', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:57:21.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:57:21.133', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111134827408773', 'patientID': 'P20191111134827408773', 'patientName': 'CN20191111134827408773', 'studyDate': '2019-11-11', 'studyTime': '13:48:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111134827408773', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:50:37.627', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111134322918680', 'patientID': 'P20191111134322918680', 'patientName': 'CN20191111134322918680', 'studyDate': '2019-11-11', 'studyTime': '13:43:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111134322918680', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:47:15.923', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:47:15.257', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133714688104', 'patientID': 'P20191111133714688104', 'patientName': 'CN20191111133714688104', 'studyDate': '2019-11-11', 'studyTime': '13:37:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111133714688104', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:41:48.043', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:41:47.967', 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133355062299', 'patientID': 'P20191111133355062299', 'patientName': 'CN20191111133355062299', 'studyDate': '2019-11-11', 'studyTime': '13:34:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133343765411', 'patientID': 'P20191111133343765411', 'patientName': 'CN20191111133343765411', 'studyDate': '2019-11-11', 'studyTime': '13:33:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133332531022', 'patientID': 'P20191111133332531022', 'patientName': 'CN20191111133332531022', 'studyDate': '2019-11-11', 'studyTime': '13:33:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133301124731', 'patientID': 'P20191111133301124731', 'patientName': 'CN20191111133301124731', 'studyDate': '2019-11-11', 'studyTime': '13:33:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111133301124731', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108170204031743', 'patientID': 'P20191108170204031743', 'patientName': 'CN20191108170204031743', 'studyDate': '2019-11-08', 'studyTime': '17:02:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108170204031743', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:03:54.917', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:03:54.923', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165631796727', 'patientID': 'P20191108165631796727', 'patientName': 'CN20191108165631796727', 'studyDate': '2019-11-08', 'studyTime': '16:57:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165631796727', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:02:05.080', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:02:05.097', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165550827924', 'patientID': 'P20191108165550827924', 'patientName': 'CN20191108165550827924', 'studyDate': '2019-11-08', 'studyTime': '16:56:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165550827924', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:01:08.703', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:01:08.713', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165458890358', 'patientID': 'P20191108165458890358', 'patientName': 'CN20191108165458890358', 'studyDate': '2019-11-08', 'studyTime': '16:55:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165458890358', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:00:12.140', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:00:12.153', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165417952800', 'patientID': 'P20191108165417952800', 'patientName': 'CN20191108165417952800', 'studyDate': '2019-11-08', 'studyTime': '16:54:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165417952800', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:59:15.320', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:59:15.333', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165336937127', 'patientID': 'P20191108165336937127', 'patientName': 'CN20191108165336937127', 'studyDate': '2019-11-08', 'studyTime': '16:54:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165336937127', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:58:18.767', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:58:18.777', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108164913360857', 'patientID': 'P20191108164913360857', 'patientName': 'CN20191108164913360857', 'studyDate': '2019-11-08', 'studyTime': '16:49:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191108164913360857', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:51:33.890', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108164417798850', 'patientID': 'P20191108164417798850', 'patientName': 'CN20191108164417798850', 'studyDate': '2019-11-08', 'studyTime': '16:44:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108164417798850', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:48:05.140', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:48:04.840', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163756942589', 'patientID': 'P20191108163756942589', 'patientName': 'CN20191108163756942589', 'studyDate': '2019-11-08', 'studyTime': '16:38:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108163756942589', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:42:48.147', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:42:47.260', 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163435636168', 'patientID': 'P20191108163435636168', 'patientName': 'CN20191108163435636168', 'studyDate': '2019-11-08', 'studyTime': '16:34:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163423914977', 'patientID': 'P20191108163423914977', 'patientName': 'CN20191108163423914977', 'studyDate': '2019-11-08', 'studyTime': '16:34:34', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163412382192', 'patientID': 'P20191108163412382192', 'patientName': 'CN20191108163412382192', 'studyDate': '2019-11-08', 'studyTime': '16:34:22', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163341382648', 'patientID': 'P20191108163341382648', 'patientName': 'CN20191108163341382648', 'studyDate': '2019-11-08', 'studyTime': '16:34:15', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108163341382648', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101162351787504', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:25:38.260', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:25:38.270', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161809146440', 'patientID': 'P20191101161809146440', 'patientName': 'CN20191101161809146440', 'studyDate': '2019-11-01', 'studyTime': '16:18:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161809146440', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:23:45.817', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:23:45.823', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161715740121', 'patientID': 'P20191101161715740121', 'patientName': 'CN20191101161715740121', 'studyDate': '2019-11-01', 'studyTime': '16:17:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161715740121', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:22:50.123', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:22:50.130', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161634755694', 'patientID': 'P20191101161634755694', 'patientName': 'CN20191101161634755694', 'studyDate': '2019-11-01', 'studyTime': '16:17:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161634755694', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:21:53.630', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:21:53.637', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161543849379', 'patientID': 'P20191101161543849379', 'patientName': 'CN20191101161543849379', 'studyDate': '2019-11-01', 'studyTime': '16:16:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161543849379', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:20:57.937', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:20:57.947', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161500755574', 'patientID': 'P20191101161500755574', 'patientName': 'CN20191101161500755574', 'studyDate': '2019-11-01', 'studyTime': '16:15:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161500755574', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:20:01.727', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:20:01.737', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161042708365', 'patientID': 'P20191101161042708365', 'patientName': 'CN20191101161042708365', 'studyDate': '2019-11-01', 'studyTime': '16:11:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191101161042708365', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:12:55.700', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101160542779017', 'patientID': 'P20191101160542779017', 'patientName': 'CN20191101160542779017', 'studyDate': '2019-11-01', 'studyTime': '16:06:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101160542779017', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:09:30.573', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:09:29.540', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155924028532', 'patientID': 'P20191101155924028532', 'patientName': 'CN20191101155924028532', 'studyDate': '2019-11-01', 'studyTime': '15:59:54', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101155924028532', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:04:08.743', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:04:07.570', 'reportCount': 2, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155604153275', 'patientID': 'P20191101155604153275', 'patientName': 'CN20191101155604153275', 'studyDate': '2019-11-01', 'studyTime': '15:56:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155552668885', 'patientID': 'P20191101155552668885', 'patientName': 'CN20191101155552668885', 'studyDate': '2019-11-01', 'studyTime': '15:55:58', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155541309493', 'patientID': 'P20191101155541309493', 'patientName': 'CN20191101155541309493', 'studyDate': '2019-11-01', 'studyTime': '15:55:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155510090705', 'patientID': 'P20191101155510090705', 'patientName': 'CN20191101155510090705', 'studyDate': '2019-11-01', 'studyTime': '15:55:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101155510090705', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101101132925282', 'patientID': 'P20191101101132925282', 'patientName': 'CN20191101101132925282', 'studyDate': '2019-11-01', 'studyTime': '10:12:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101101132925282', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:13:09.157', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:13:09.180', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100547732952', 'patientID': 'P20191101100547732952', 'patientName': 'CN20191101100547732952', 'studyDate': '2019-11-01', 'studyTime': '10:06:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100547732952', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:11:26.807', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:11:26.817', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100456811010', 'patientID': 'P20191101100456811010', 'patientName': 'CN20191101100456811010', 'studyDate': '2019-11-01', 'studyTime': '10:05:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100456811010', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:10:31.350', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:10:31.357', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100405592195', 'patientID': 'P20191101100405592195', 'patientName': 'CN20191101100405592195', 'studyDate': '2019-11-01', 'studyTime': '10:04:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100405592195', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:09:34.097', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:09:34.130', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100324404642', 'patientID': 'P20191101100324404642', 'patientName': 'CN20191101100324404642', 'studyDate': '2019-11-01', 'studyTime': '10:03:53', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100324404642', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:08:38.637', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:08:38.843', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100243482717', 'patientID': 'P20191101100243482717', 'patientName': 'CN20191101100243482717', 'studyDate': '2019-11-01', 'studyTime': '10:03:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100243482717', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:07:43.227', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:07:43.233', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101095827863760', 'patientID': 'P20191101095827863760', 'patientName': 'CN20191101095827863760', 'studyDate': '2019-11-01', 'studyTime': '09:58:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191101095827863760', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:00:38.963', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101095326957122', 'patientID': 'P20191101095326957122', 'patientName': 'CN20191101095326957122', 'studyDate': '2019-11-01', 'studyTime': '09:54:02', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101095326957122', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 09:57:15.943', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 09:57:14.720', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094701269124', 'patientID': 'P20191101094701269124', 'patientName': 'CN20191101094701269124', 'studyDate': '2019-11-01', 'studyTime': '09:47:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101094701269124', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 09:51:52.390', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 09:51:51.797', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094341081377', 'patientID': 'P20191101094341081377', 'patientName': 'CN20191101094341081377', 'studyDate': '2019-11-01', 'studyTime': '09:43:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094329971981', 'patientID': 'P20191101094329971981', 'patientName': 'CN20191101094329971981', 'studyDate': '2019-11-01', 'studyTime': '09:43:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094318471965', 'patientID': 'P20191101094318471965', 'patientName': 'CN20191101094318471965', 'studyDate': '2019-11-01', 'studyTime': '09:43:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094237346913', 'patientID': 'P20191101094237346913', 'patientName': 'CN20191101094237346913', 'studyDate': '2019-11-01', 'studyTime': '09:43:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101094237346913', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024172144656599', 'patientID': 'P20191024172144656599', 'patientName': 'CN20191024172144656599', 'studyDate': '2019-10-24', 'studyTime': '17:22:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024172144656599', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:23:31.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:23:31.107', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171610593661', 'patientID': 'P20191024171610593661', 'patientName': 'CN20191024171610593661', 'studyDate': '2019-10-24', 'studyTime': '17:16:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171610593661', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:21:38.280', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:21:38.290', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171519687345', 'patientID': 'P20191024171519687345', 'patientName': 'CN20191024171519687345', 'studyDate': '2019-10-24', 'studyTime': '17:15:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171519687345', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:20:41.837', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:20:41.847', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171438736216', 'patientID': 'P20191024171438736216', 'patientName': 'CN20191024171438736216', 'studyDate': '2019-10-24', 'studyTime': '17:15:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171438736216', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:19:45.543', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:19:45.550', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171347751775', 'patientID': 'P20191024171347751775', 'patientName': 'CN20191024171347751775', 'studyDate': '2019-10-24', 'studyTime': '17:14:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171347751775', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:18:49.167', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:18:49.177', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171306861098', 'patientID': 'P20191024171306861098', 'patientName': 'CN20191024171306861098', 'studyDate': '2019-10-24', 'studyTime': '17:13:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171306861098', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:17:53.500', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:17:53.507', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024170847688889', 'patientID': 'P20191024170847688889', 'patientName': 'CN20191024170847688889', 'studyDate': '2019-10-24', 'studyTime': '17:09:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191024170847688889', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:11:00.000', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024170342016621', 'patientID': 'P20191024170342016621', 'patientName': 'CN20191024170342016621', 'studyDate': '2019-10-24', 'studyTime': '17:04:15', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024170342016621', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:07:35.490', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:07:34.537', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165726234887', 'patientID': 'P20191024165726234887', 'patientName': 'CN20191024165726234887', 'studyDate': '2019-10-24', 'studyTime': '16:57:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024165726234887', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:02:07.097', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:02:06.750', 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165406484631', 'patientID': 'P20191024165406484631', 'patientName': 'CN20191024165406484631', 'studyDate': '2019-10-24', 'studyTime': '16:54:20', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165355140866', 'patientID': 'P20191024165355140866', 'patientName': 'CN20191024165355140866', 'studyDate': '2019-10-24', 'studyTime': '16:54:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165343703351', 'patientID': 'P20191024165343703351', 'patientName': 'CN20191024165343703351', 'studyDate': '2019-10-24', 'studyTime': '16:53:49', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165302640798', 'patientID': 'P20191024165302640798', 'patientName': 'CN20191024165302640798', 'studyDate': '2019-10-24', 'studyTime': '16:53:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024165302640798', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024164430818581', 'patientID': 'P20191024164430818581', 'patientName': 'CN20191024164430818581', 'studyDate': '2019-10-24', 'studyTime': '16:44:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023165935810848', 'patientID': 'P20191023165935810848', 'patientName': 'CN20191023165935810848', 'studyDate': '2019-10-23', 'studyTime': '17:00:09', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023165935810848', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023165732701317', 'patientID': 'P20191023165732701317', 'patientName': 'CN20191023165732701317', 'studyDate': '2019-10-23', 'studyTime': '16:57:44', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023164026767938', 'patientID': 'P20191023164026767938', 'patientName': 'CN20191023164026767938', 'studyDate': '2019-10-23', 'studyTime': '16:41:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023164026767938', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:42:45.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023162507805563', 'patientID': 'P20191023162507805563', 'patientName': 'CN20191023162507805563', 'studyDate': '2019-10-23', 'studyTime': '16:25:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023162507805563', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:38:06.153', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023160147681617', 'patientID': 'P20191023160147681617', 'patientName': 'CN20191023160147681617', 'studyDate': '2019-10-23', 'studyTime': '16:02:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023160147681617', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:03:33.437', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:03:33.560', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155609399931', 'patientID': 'P20191023155609399931', 'patientName': 'CN20191023155609399931', 'studyDate': '2019-10-23', 'studyTime': '15:56:43', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155609399931', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:01:40.700', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:01:40.790', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155526821751', 'patientID': 'P20191023155526821751', 'patientName': 'CN20191023155526821751', 'studyDate': '2019-10-23', 'studyTime': '15:55:59', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155526821751', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:00:44.040', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:00:44.050', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155435696686', 'patientID': 'P20191023155435696686', 'patientName': 'CN20191023155435696686', 'studyDate': '2019-10-23', 'studyTime': '15:55:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155435696686', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:59:48.637', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:59:48.647', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155344462247', 'patientID': 'P20191023155344462247', 'patientName': 'CN20191023155344462247', 'studyDate': '2019-10-23', 'studyTime': '15:54:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155344462247', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:58:52.220', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:58:52.237', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155303384068', 'patientID': 'P20191023155303384068', 'patientName': 'CN20191023155303384068', 'studyDate': '2019-10-23', 'studyTime': '15:53:33', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155303384068', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:57:56.883', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:57:56.890', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155122184304', 'patientID': 'P20191023155122184304', 'patientName': 'CN20191023155122184304', 'studyDate': '2019-10-23', 'studyTime': '15:51:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023155122184304', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023154632418307', 'patientID': 'P20191023154632418307', 'patientName': 'CN20191023154632418307', 'studyDate': '2019-10-23', 'studyTime': '15:47:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023154632418307', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:50:09.850', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:50:08.907', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023154012990789', 'patientID': 'P20191023154012990789', 'patientName': 'CN20191023154012990789', 'studyDate': '2019-10-23', 'studyTime': '15:40:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023154012990789', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:44:57.887', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:44:57.277', 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023153653928031', 'patientID': 'P20191023153653928031', 'patientName': 'CN20191023153653928031', 'studyDate': '2019-10-23', 'studyTime': '15:37:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023153419874119', 'patientID': 'P20191023153419874119', 'patientName': 'CN20191023153419874119', 'studyDate': '2019-10-23', 'studyTime': '15:34:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150553473922', 'patientID': 'P20191023150553473922', 'patientName': 'CN20191023150553473922', 'studyDate': '2019-10-23', 'studyTime': '15:06:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150553473922', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150522380128', 'patientID': 'P20191023150522380128', 'patientName': 'CN20191023150522380128', 'studyDate': '2019-10-23', 'studyTime': '15:05:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150522380128', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150338036244', 'patientID': 'P20191023150338036244', 'patientName': 'CN20191023150338036244', 'studyDate': '2019-10-23', 'studyTime': '15:04:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023150338036244', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150307098708', 'patientID': 'P20191023150307098708', 'patientName': 'CN20191023150307098708', 'studyDate': '2019-10-23', 'studyTime': '15:03:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150307098708', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150145301725', 'patientID': 'P20191023150145301725', 'patientName': 'CN20191023150145301725', 'studyDate': '2019-10-23', 'studyTime': '15:02:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150145301725', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150123004822', 'patientID': 'P20191023150123004822', 'patientName': 'CN20191023150123004822', 'studyDate': '2019-10-23', 'studyTime': '15:01:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150111801682', 'patientID': 'P20191023150111801682', 'patientName': 'CN20191023150111801682', 'studyDate': '2019-10-23', 'studyTime': '15:01:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150030754754', 'patientID': 'P20191023150030754754', 'patientName': 'CN20191023150030754754', 'studyDate': '2019-10-23', 'studyTime': '15:01:02', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150030754754', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191021153247939219', 'patientID': 'P20191021153247939219', 'patientName': 'CN20191021153247939219', 'studyDate': '2019-10-21', 'studyTime': '15:32:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191021153206930748', 'patientID': 'P20191021153206930748', 'patientName': 'CN20191021153206930748', 'studyDate': '2019-10-21', 'studyTime': '15:32:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191021153206930748', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018104829102614', 'patientID': 'P20191018104829102614', 'patientName': 'CN20191018104829102614', 'studyDate': '2019-10-18', 'studyTime': '10:48:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191018104829102614', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:50:38.317', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018104329137638', 'patientID': 'P20191018104329137638', 'patientName': 'CN20191018104329137638', 'studyDate': '2019-10-18', 'studyTime': '10:44:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018104329137638', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:47:16.810', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-18 10:47:15.797', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103711671274', 'patientID': 'P20191018103711671274', 'patientName': 'CN20191018103711671274', 'studyDate': '2019-10-18', 'studyTime': '10:37:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018103711671274', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:41:54.423', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-18 10:41:53.813', 'reportCount': 2, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103351875966', 'patientID': 'P20191018103351875966', 'patientName': 'CN20191018103351875966', 'studyDate': '2019-10-18', 'studyTime': '10:34:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103340850340', 'patientID': 'P20191018103340850340', 'patientName': 'CN20191018103340850340', 'studyDate': '2019-10-18', 'studyTime': '10:33:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103329642708', 'patientID': 'P20191018103329642708', 'patientName': 'CN20191018103329642708', 'studyDate': '2019-10-18', 'studyTime': '10:33:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103258486946', 'patientID': 'P20191018103258486946', 'patientName': 'CN20191018103258486946', 'studyDate': '2019-10-18', 'studyTime': '10:33:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018103258486946', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017165327956325', 'patientID': 'P20191017165327956325', 'patientName': 'CN20191017165327956325', 'studyDate': '2019-10-17', 'studyTime': '16:54:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017165327956325', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:55:14.050', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:55:14.073', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164755455888', 'patientID': 'P20191017164755455888', 'patientName': 'CN20191017164755455888', 'studyDate': '2019-10-17', 'studyTime': '16:48:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164755455888', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:53:25.553', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:53:25.563', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164704518326', 'patientID': 'P20191017164704518326', 'patientName': 'CN20191017164704518326', 'studyDate': '2019-10-17', 'studyTime': '16:47:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164704518326', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:52:30.103', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:52:30.110', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164613565136', 'patientID': 'P20191017164613565136', 'patientName': 'CN20191017164613565136', 'studyDate': '2019-10-17', 'studyTime': '16:46:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164613565136', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:51:34.720', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:51:34.727', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164522596318', 'patientID': 'P20191017164522596318', 'patientName': 'CN20191017164522596318', 'studyDate': '2019-10-17', 'studyTime': '16:45:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164522596318', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:50:38.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:50:38.217', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164441455642', 'patientID': 'P20191017164441455642', 'patientName': 'CN20191017164441455642', 'studyDate': '2019-10-17', 'studyTime': '16:45:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164441455642', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:49:41.830', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:49:41.843', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164017795155', 'patientID': 'P20191017164017795155', 'patientName': 'CN20191017164017795155', 'studyDate': '2019-10-17', 'studyTime': '16:40:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191017164017795155', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:42:35.797', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017163516966647', 'patientID': 'P20191017163516966647', 'patientName': 'CN20191017163516966647', 'studyDate': '2019-10-17', 'studyTime': '16:35:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017163516966647', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:39:05.253', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:39:04.503', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162849957949', 'patientID': 'P20191017162849957949', 'patientName': 'CN20191017162849957949', 'studyDate': '2019-10-17', 'studyTime': '16:29:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017162849957949', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:33:42.290', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:33:41.683', 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162531070638', 'patientID': 'P20191017162531070638', 'patientName': 'CN20191017162531070638', 'studyDate': '2019-10-17', 'studyTime': '16:25:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162519904097', 'patientID': 'P20191017162519904097', 'patientName': 'CN20191017162519904097', 'studyDate': '2019-10-17', 'studyTime': '16:25:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162508601233', 'patientID': 'P20191017162508601233', 'patientName': 'CN20191017162508601233', 'studyDate': '2019-10-17', 'studyTime': '16:25:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162426999885', 'patientID': 'P20191017162426999885', 'patientName': 'CN20191017162426999885', 'studyDate': '2019-10-17', 'studyTime': '16:25:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017162426999885', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162154398019', 'patientID': 'P20191017162154398019', 'patientName': 'CN20191017162154398019', 'studyDate': '2019-10-17', 'studyTime': '16:22:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162059641921', 'patientID': 'P20191017162059641921', 'patientName': 'CN20191017162059641921', 'studyDate': '2019-10-17', 'studyTime': '16:21:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017161940386436', 'patientID': 'P20191017161940386436', 'patientName': 'CN20191017161940386436', 'studyDate': '2019-10-17', 'studyTime': '16:19:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017102445600845', 'patientID': 'P20191017102445600845', 'patientName': 'CN20191017102445600845', 'studyDate': '2019-10-17', 'studyTime': '10:25:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017102445600845', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:26:32.633', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:26:32.643', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100910542843', 'patientID': 'P20191017100910542843', 'patientName': 'CN20191017100910542843', 'studyDate': '2019-10-17', 'studyTime': '10:09:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100910542843', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:14:31.523', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:14:31.530', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100829445486', 'patientID': 'P20191017100829445486', 'patientName': 'CN20191017100829445486', 'studyDate': '2019-10-17', 'studyTime': '10:08:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100829445486', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:13:34.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:13:34.963', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100748536624', 'patientID': 'P20191017100748536624', 'patientName': 'CN20191017100748536624', 'studyDate': '2019-10-17', 'studyTime': '10:08:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100748536624', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:12:38.447', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:12:38.453', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100707360294', 'patientID': 'P20191017100707360294', 'patientName': 'CN20191017100707360294', 'studyDate': '2019-10-17', 'studyTime': '10:07:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100707360294', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:11:43.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:11:43.137', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100616376425', 'patientID': 'P20191017100616376425', 'patientName': 'CN20191017100616376425', 'studyDate': '2019-10-17', 'studyTime': '10:06:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100616376425', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:10:47.683', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:10:47.690', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100302602000', 'patientID': 'P20191017100302602000', 'patientName': 'CN20191017100302602000', 'studyDate': '2019-10-17', 'studyTime': '10:03:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100302602000', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:04:38.400', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:04:38.410', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095853570431', 'patientID': 'P20191017095853570431', 'patientName': 'CN20191017095853570431', 'studyDate': '2019-10-17', 'studyTime': '09:59:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095853570431', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:00:39.953', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:00:39.980', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095407847062', 'patientID': 'P20191017095407847062', 'patientName': 'CN20191017095407847062', 'studyDate': '2019-10-17', 'studyTime': '09:54:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095407847062', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 09:55:44.310', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 09:55:44.327', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095113777898', 'patientID': 'P20191017095113777898', 'patientName': 'CN20191017095113777898', 'studyDate': '2019-10-17', 'studyTime': '09:51:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095113777898', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 09:53:00.580', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 09:53:00.587', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017094020804467', 'patientID': 'P20191017094020804467', 'patientName': 'CN20191017094020804467', 'studyDate': '2019-10-17', 'studyTime': '09:40:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017094020804467', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017093701763631', 'patientID': 'P20191017093701763631', 'patientName': 'CN20191017093701763631', 'studyDate': '2019-10-17', 'studyTime': '09:37:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017093701763631', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016143409908620', 'patientID': 'P20191016143409908620', 'patientName': 'CN20191016143409908620', 'studyDate': '2019-10-16', 'studyTime': '14:34:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016143409908620', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:35:46.750', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:35:46.760', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016141455027361', 'patientID': 'P20191016141455027361', 'patientName': 'CN20191016141455027361', 'studyDate': '2019-10-16', 'studyTime': '14:15:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016141455027361', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:16:32.063', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:16:32.080', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016141002180666', 'patientID': 'P20191016141002180666', 'patientName': 'CN20191016141002180666', 'studyDate': '2019-10-16', 'studyTime': '14:10:29', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016141002180666', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:11:38.430', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:11:38.440', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016140735633606', 'patientID': 'P20191016140735633606', 'patientName': 'CN20191016140735633606', 'studyDate': '2019-10-16', 'studyTime': '14:08:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016140735633606', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:09:11.753', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:09:11.780', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016135937736399', 'patientID': 'P20191016135937736399', 'patientName': 'CN20191016135937736399', 'studyDate': '2019-10-16', 'studyTime': '14:00:09', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016135937736399', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:01:24.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:01:24.607', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016135533358820', 'patientID': 'P20191016135533358820', 'patientName': 'CN20191016135533358820', 'studyDate': '2019-10-16', 'studyTime': '13:56:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016135533358820', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 13:57:16.713', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 13:57:16.757', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171955400770', 'patientID': 'P20191014171955400770', 'patientName': 'CN20191014171955400770', 'studyDate': '2019-10-14', 'studyTime': '17:20:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171955400770', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:25:26.770', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:25:26.780', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171904385073', 'patientID': 'P20191014171904385073', 'patientName': 'CN20191014171904385073', 'studyDate': '2019-10-14', 'studyTime': '17:19:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171904385073', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:24:30.693', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:24:30.700', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171823431894', 'patientID': 'P20191014171823431894', 'patientName': 'CN20191014171823431894', 'studyDate': '2019-10-14', 'studyTime': '17:18:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171823431894', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:23:34.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:23:34.120', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171742009966', 'patientID': 'P20191014171742009966', 'patientName': 'CN20191014171742009966', 'studyDate': '2019-10-14', 'studyTime': '17:18:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171742009966', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:22:38.740', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:22:38.750', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171651103652', 'patientID': 'P20191014171651103652', 'patientName': 'CN20191014171651103652', 'studyDate': '2019-10-14', 'studyTime': '17:17:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171651103652', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:21:42.160', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:21:42.173', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014164754520904', 'patientID': 'P20191014164754520904', 'patientName': 'CN20191014164754520904', 'studyDate': '2019-10-14', 'studyTime': '16:48:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014164754520904', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:50:37.140', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:50:37.147', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014164713239610', 'patientID': 'P20191014164713239610', 'patientName': 'CN20191014164713239610', 'studyDate': '2019-10-14', 'studyTime': '16:47:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014164713239610', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:49:40.713', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:49:40.720', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163853901111', 'patientID': 'P20191014163853901111', 'patientName': 'CN20191014163853901111', 'studyDate': '2019-10-14', 'studyTime': '16:39:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163853901111', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:41:26.883', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:41:26.907', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163810932310', 'patientID': 'P20191014163810932310', 'patientName': 'CN20191014163810932310', 'studyDate': '2019-10-14', 'studyTime': '16:38:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163810932310', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:40:30.473', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:40:30.480', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163403478863', 'patientID': 'P20191014163403478863', 'patientName': 'CN20191014163403478863', 'studyDate': '2019-10-14', 'studyTime': '16:34:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163403478863', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:36:36.533', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:36:36.543', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163322103810', 'patientID': 'P20191014163322103810', 'patientName': 'CN20191014163322103810', 'studyDate': '2019-10-14', 'studyTime': '16:33:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163322103810', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:35:40.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:35:40.123', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014162906056606', 'patientID': 'P20191014162906056606', 'patientName': 'CN20191014162906056606', 'studyDate': '2019-10-14', 'studyTime': '16:29:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014162906056606', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:31:39.117', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:31:39.123', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014162815103418', 'patientID': 'P20191014162815103418', 'patientName': 'CN20191014162815103418', 'studyDate': '2019-10-14', 'studyTime': '16:28:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014162815103418', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:30:42.663', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:30:42.673', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160847178045', 'patientID': 'P20191014160847178045', 'patientName': 'CN20191014160847178045', 'studyDate': '2019-10-14', 'studyTime': '16:09:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160847178045', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:11:22.113', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:11:22.123', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160806264874', 'patientID': 'P20191014160806264874', 'patientName': 'CN20191014160806264874', 'studyDate': '2019-10-14', 'studyTime': '16:08:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160806264874', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:10:25.097', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:10:25.113', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160333295772', 'patientID': 'P20191014160333295772', 'patientName': 'CN20191014160333295772', 'studyDate': '2019-10-14', 'studyTime': '16:04:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160333295772', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:06:16.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:06:16.113', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160252358221', 'patientID': 'P20191014160252358221', 'patientName': 'CN20191014160252358221', 'studyDate': '2019-10-14', 'studyTime': '16:03:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160252358221', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:05:19.063', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:05:19.087', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014155755708988', 'patientID': 'P20191014155755708988', 'patientName': 'CN20191014155755708988', 'studyDate': '2019-10-14', 'studyTime': '15:58:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014155755708988', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:00:28.523', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:00:28.530', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014155703974544', 'patientID': 'P20191014155703974544', 'patientName': 'CN20191014155703974544', 'studyDate': '2019-10-14', 'studyTime': '15:57:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014155703974544', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:59:32.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:59:32.103', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153601784817', 'patientID': 'P20191014153601784817', 'patientName': 'CN20191014153601784817', 'studyDate': '2019-10-14', 'studyTime': '15:36:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153601784817', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:41:28.643', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:41:28.650', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153520737890', 'patientID': 'P20191014153520737890', 'patientName': 'CN20191014153520737890', 'studyDate': '2019-10-14', 'studyTime': '15:35:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153520737890', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:40:33.177', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:40:33.200', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153438003460', 'patientID': 'P20191014153438003460', 'patientName': 'CN20191014153438003460', 'studyDate': '2019-10-14', 'studyTime': '15:35:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153438003460', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:39:36.610', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:39:36.623', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153346940893', 'patientID': 'P20191014153346940893', 'patientName': 'CN20191014153346940893', 'studyDate': '2019-10-14', 'studyTime': '15:34:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153346940893', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:38:41.130', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:38:41.140', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153304518966', 'patientID': 'P20191014153304518966', 'patientName': 'CN20191014153304518966', 'studyDate': '2019-10-14', 'studyTime': '15:33:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153304518966', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:37:45.643', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:37:45.653', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011134029101725', 'patientID': 'P20191011134029101725', 'patientName': 'CN20191011134029101725', 'studyDate': '2019-10-11', 'studyTime': '13:41:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011134029101725', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:46:07.067', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:46:07.077', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133938195410', 'patientID': 'P20191011133938195410', 'patientName': 'CN20191011133938195410', 'studyDate': '2019-10-11', 'studyTime': '13:40:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133938195410', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:45:11.783', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:45:11.790', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133857257857', 'patientID': 'P20191011133857257857', 'patientName': 'CN20191011133857257857', 'studyDate': '2019-10-11', 'studyTime': '13:39:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133857257857', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:44:15.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:44:15.097', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133816351554', 'patientID': 'P20191011133816351554', 'patientName': 'CN20191011133816351554', 'studyDate': '2019-10-11', 'studyTime': '13:38:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133816351554', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:43:18.123', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:43:18.130', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133734632751', 'patientID': 'P20191011133734632751', 'patientName': 'CN20191011133734632751', 'studyDate': '2019-10-11', 'studyTime': '13:38:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133734632751', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:42:22.697', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:42:22.703', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160251795173', 'patientID': 'P20191010160251795173', 'patientName': 'CN20191010160251795173', 'studyDate': '2019-10-10', 'studyTime': '16:03:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160251795173', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:08:14.330', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:08:14.347', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160210739577', 'patientID': 'P20191010160210739577', 'patientName': 'CN20191010160210739577', 'studyDate': '2019-10-10', 'studyTime': '16:02:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160210739577', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:07:17.920', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:07:18.003', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160129822084', 'patientID': 'P20191010160129822084', 'patientName': 'CN20191010160129822084', 'studyDate': '2019-10-10', 'studyTime': '16:01:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160129822084', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:06:21.527', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:06:21.533', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160048292734', 'patientID': 'P20191010160048292734', 'patientName': 'CN20191010160048292734', 'studyDate': '2019-10-10', 'studyTime': '16:01:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160048292734', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:05:25.110', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:05:25.117', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010155956714566', 'patientID': 'P20191010155956714566', 'patientName': 'CN20191010155956714566', 'studyDate': '2019-10-10', 'studyTime': '16:00:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010155956714566', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:04:28.707', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:04:28.717', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134406669827', 'patientID': 'P20191010134406669827', 'patientName': 'CN20191010134406669827', 'studyDate': '2019-10-10', 'studyTime': '13:44:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134406669827', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:49:37.297', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:49:37.303', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134315763508', 'patientID': 'P20191010134315763508', 'patientName': 'CN20191010134315763508', 'studyDate': '2019-10-10', 'studyTime': '13:43:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134315763508', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:48:42.120', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:48:42.127', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134234794706', 'patientID': 'P20191010134234794706', 'patientName': 'CN20191010134234794706', 'studyDate': '2019-10-10', 'studyTime': '13:43:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134234794706', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:47:45.777', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:47:45.783', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134151753476', 'patientID': 'P20191010134151753476', 'patientName': 'CN20191010134151753476', 'studyDate': '2019-10-10', 'studyTime': '13:42:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134151753476', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:46:49.283', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:46:49.307', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134108359021', 'patientID': 'P20191010134108359021', 'patientName': 'CN20191010134108359021', 'studyDate': '2019-10-10', 'studyTime': '13:41:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134108359021', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:45:52.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:45:52.850', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010133853865953', 'patientID': 'P20191010133853865953', 'patientName': 'CN20191010133853865953', 'studyDate': '2019-10-10', 'studyTime': '13:39:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010133853865953', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:40:40.157', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:40:40.163', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112307017746', 'patientID': 'P20191010112307017746', 'patientName': 'CN20191010112307017746', 'studyDate': '2019-10-10', 'studyTime': '11:23:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112307017746', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 11:24:42.577', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 11:24:42.583', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112141970762', 'patientID': 'P20191010112141970762', 'patientName': 'CN20191010112141970762', 'studyDate': '2019-10-10', 'studyTime': '11:22:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112141970762', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112025423789', 'patientID': 'P20191010112025423789', 'patientName': 'CN20191010112025423789', 'studyDate': '2019-10-10', 'studyTime': '11:20:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112025423789', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010111821970507', 'patientID': 'P20191010111821970507', 'patientName': 'CN20191010111821970507', 'studyDate': '2019-10-10', 'studyTime': '11:18:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010111821970507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010111516832642', 'patientID': 'P20191010111516832642', 'patientName': 'CN20191010111516832642', 'studyDate': '2019-10-10', 'studyTime': '11:15:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010111516832642', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110602441302', 'patientID': 'P20191010110602441302', 'patientName': 'CN20191010110602441302', 'studyDate': '2019-10-10', 'studyTime': '11:06:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110602441302', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110521503752', 'patientID': 'P20191010110521503752', 'patientName': 'CN20191010110521503752', 'studyDate': '2019-10-10', 'studyTime': '11:05:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110521503752', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110440581826', 'patientID': 'P20191010110440581826', 'patientName': 'CN20191010110440581826', 'studyDate': '2019-10-10', 'studyTime': '11:05:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110440581826', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110349644258', 'patientID': 'P20191010110349644258', 'patientName': 'CN20191010110349644258', 'studyDate': '2019-10-10', 'studyTime': '11:04:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110349644258', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110306347327', 'patientID': 'P20191010110306347327', 'patientName': 'CN20191010110306347327', 'studyDate': '2019-10-10', 'studyTime': '11:03:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110306347327', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110120019073', 'patientID': 'P20191010110120019073', 'patientName': 'CN20191010110120019073', 'studyDate': '2019-10-10', 'studyTime': '11:01:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110120019073', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110006456471', 'patientID': 'P20191010110006456471', 'patientName': 'CN20191010110006456471', 'studyDate': '2019-10-10', 'studyTime': '11:00:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110006456471', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104807720577', 'patientID': 'P20191010104807720577', 'patientName': 'CN20191010104807720577', 'studyDate': '2019-10-10', 'studyTime': '10:48:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104807720577', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:53:27.833', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:53:27.840', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104724214839', 'patientID': 'P20191010104724214839', 'patientName': 'CN20191010104724214839', 'studyDate': '2019-10-10', 'studyTime': '10:47:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104724214839', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:52:31.333', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:52:31.343', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104642893018', 'patientID': 'P20191010104642893018', 'patientName': 'CN20191010104642893018', 'studyDate': '2019-10-10', 'studyTime': '10:47:11', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104642893018', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:51:36.073', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:51:36.080', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104551982177', 'patientID': 'P20191010104551982177', 'patientName': 'CN20191010104551982177', 'studyDate': '2019-10-10', 'studyTime': '10:46:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104551982177', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:50:40.730', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:50:40.740', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104511031472', 'patientID': 'P20191010104511031472', 'patientName': 'CN20191010104511031472', 'studyDate': '2019-10-10', 'studyTime': '10:45:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104511031472', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:49:44.143', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:49:44.153', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104129793670', 'patientID': 'P20191010104129793670', 'patientName': 'CN20191010104129793670', 'studyDate': '2019-10-10', 'studyTime': '10:42:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104129793670', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:47:01.347', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:47:01.357', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104038887163', 'patientID': 'P20191010104038887163', 'patientName': 'CN20191010104038887163', 'studyDate': '2019-10-10', 'studyTime': '10:41:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104038887163', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:46:04.287', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:46:04.297', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103957896841', 'patientID': 'P20191010103957896841', 'patientName': 'CN20191010103957896841', 'studyDate': '2019-10-10', 'studyTime': '10:40:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103957896841', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:45:07.777', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:45:07.787', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103917012245', 'patientID': 'P20191010103917012245', 'patientName': 'CN20191010103917012245', 'studyDate': '2019-10-10', 'studyTime': '10:39:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103917012245', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:44:11.377', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:44:11.383', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103836096929', 'patientID': 'P20191010103836096929', 'patientName': 'CN20191010103836096929', 'studyDate': '2019-10-10', 'studyTime': '10:39:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103836096929', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:43:15.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:43:15.863', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103549734117', 'patientID': 'P20191010103549734117', 'patientName': 'CN20191010103549734117', 'studyDate': '2019-10-10', 'studyTime': '10:36:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103549734117', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103458796550', 'patientID': 'P20191010103458796550', 'patientName': 'CN20191010103458796550', 'studyDate': '2019-10-10', 'studyTime': '10:35:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103458796550', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103417890245', 'patientID': 'P20191010103417890245', 'patientName': 'CN20191010103417890245', 'studyDate': '2019-10-10', 'studyTime': '10:34:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103417890245', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103337001091', 'patientID': 'P20191010103337001091', 'patientName': 'CN20191010103337001091', 'studyDate': '2019-10-10', 'studyTime': '10:34:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103337001091', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103253826489', 'patientID': 'P20191010103253826489', 'patientName': 'CN20191010103253826489', 'studyDate': '2019-10-10', 'studyTime': '10:33:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103253826489', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102237134937', 'patientID': 'P20191010102237134937', 'patientName': 'CN20191010102237134937', 'studyDate': '2019-10-10', 'studyTime': '10:23:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102237134937', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102146025736', 'patientID': 'P20191010102146025736', 'patientName': 'CN20191010102146025736', 'studyDate': '2019-10-10', 'studyTime': '10:22:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102146025736', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102104459380', 'patientID': 'P20191010102104459380', 'patientName': 'CN20191010102104459380', 'studyDate': '2019-10-10', 'studyTime': '10:21:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102104459380', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102021344566', 'patientID': 'P20191010102021344566', 'patientName': 'CN20191010102021344566', 'studyDate': '2019-10-10', 'studyTime': '10:20:49', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102021344566', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010101929449627', 'patientID': 'P20191010101929449627', 'patientName': 'CN20191010101929449627', 'studyDate': '2019-10-10', 'studyTime': '10:20:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010101929449627', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105501006700', 'patientID': 'P20191009105501006700', 'patientName': 'CN20191009105501006700', 'studyDate': '2019-10-09', 'studyTime': '10:55:33', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105501006700', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-10-09 22:04:06.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-10-09 22:04:06.100', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105419881609', 'patientID': 'P20191009105419881609', 'patientName': 'CN20191009105419881609', 'studyDate': '2019-10-09', 'studyTime': '10:54:48', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105419881609', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-10-09 22:05:02.540', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-10-09 22:05:02.560', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105338959681', 'patientID': 'P20191009105338959681', 'patientName': 'CN20191009105338959681', 'studyDate': '2019-10-09', 'studyTime': '10:54:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105338959681', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105256256500', 'patientID': 'P20191009105256256500', 'patientName': 'CN20191009105256256500', 'studyDate': '2019-10-09', 'studyTime': '10:53:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105256256500', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105215071835', 'patientID': 'P20191009105215071835', 'patientName': 'CN20191009105215071835', 'studyDate': '2019-10-09', 'studyTime': '10:52:43', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105215071835', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102342161377', 'patientID': 'P20191009102342161377', 'patientName': 'CN20191009102342161377', 'studyDate': '2019-10-09', 'studyTime': '10:24:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102342161377', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:51:31.633', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:51:31.650', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102251101515', 'patientID': 'P20191009102251101515', 'patientName': 'CN20191009102251101515', 'studyDate': '2019-10-09', 'studyTime': '10:23:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102251101515', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:52:28.093', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:52:28.100', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102209898137', 'patientID': 'P20191009102209898137', 'patientName': 'CN20191009102209898137', 'studyDate': '2019-10-09', 'studyTime': '10:22:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102209898137', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:53:23.553', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:53:23.560', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102128913709', 'patientID': 'P20191009102128913709', 'patientName': 'CN20191009102128913709', 'studyDate': '2019-10-09', 'studyTime': '10:21:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102128913709', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:54:19.070', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:54:19.080', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102047694908', 'patientID': 'P20191009102047694908', 'patientName': 'CN20191009102047694908', 'studyDate': '2019-10-09', 'studyTime': '10:21:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102047694908', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:55:14.503', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:55:14.513', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009101320760227', 'patientID': 'P20191009101320760227', 'patientName': 'CN20191009101320760227', 'studyDate': '2019-10-09', 'studyTime': '10:13:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009101320760227', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 5, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 5, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927164000570746', 'patientID': 'P20190927164000570746', 'patientName': 'CN20190927164000570746', 'studyDate': '2019-09-27', 'studyTime': '16:40:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927164000570746', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 17:10:17.513', 'filmDeleteStatus': 0, 'imageCount': 5, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 17:10:17.540', 'reportCount': 5, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163417835013', 'patientID': 'P20190927163417835013', 'patientName': 'CN20190927163417835013', 'studyDate': '2019-09-27', 'studyTime': '16:34:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163417835013', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163336901631', 'patientID': 'P20190927163336901631', 'patientName': 'CN20190927163336901631', 'studyDate': '2019-09-27', 'studyTime': '16:34:07', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163336901631', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163245690885', 'patientID': 'P20190927163245690885', 'patientName': 'CN20190927163245690885', 'studyDate': '2019-09-27', 'studyTime': '16:33:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163245690885', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927161636047375', 'patientID': 'P20190927161636047375', 'patientName': 'CN20190927161636047375', 'studyDate': '2019-09-27', 'studyTime': '16:17:07', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927161636047375', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105826242723', 'patientID': 'P20190927105826242723', 'patientName': 'CN20190927105826242723', 'studyDate': '2019-09-27', 'studyTime': '10:58:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190927105826242723', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 11:10:39.767', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105526022866', 'patientID': 'P20190927105526022866', 'patientName': 'CN20190927105526022866', 'studyDate': '2019-09-27', 'studyTime': '10:55:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927105526022866', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 13:59:33.563', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105024617800', 'patientID': 'P20190927105024617800', 'patientName': 'CN20190927105024617800', 'studyDate': '2019-09-27', 'studyTime': '10:50:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927105024617800', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 14:00:31.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 14:00:31.630', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104417974277', 'patientID': 'P20190927104417974277', 'patientName': 'CN20190927104417974277', 'studyDate': '2019-09-27', 'studyTime': '10:44:46', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927104417974277', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 10:48:50.233', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 10:48:49.417', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104058380319', 'patientID': 'P20190927104058380319', 'patientName': 'CN20190927104058380319', 'studyDate': '2019-09-27', 'studyTime': '10:41:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104047302129', 'patientID': 'P20190927104047302129', 'patientName': 'CN20190927104047302129', 'studyDate': '2019-09-27', 'studyTime': '10:40:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104036177118', 'patientID': 'P20190927104036177118', 'patientName': 'CN20190927104036177118', 'studyDate': '2019-09-27', 'studyTime': '10:40:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927103954817684', 'patientID': 'P20190927103954817684', 'patientName': 'CN20190927103954817684', 'studyDate': '2019-09-27', 'studyTime': '10:40:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927103954817684', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927100029339182', 'patientID': 'P20190927100029339182', 'patientName': 'CN20190927100029339182', 'studyDate': '2019-09-27', 'studyTime': '10:01:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190927100029339182', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 10:02:42.463', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927095545981047', 'patientID': 'P20190927095545981047', 'patientName': 'CN20190927095545981047', 'studyDate': '2019-09-27', 'studyTime': '09:56:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927095545981047', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:59:17.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:59:16.160', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927094614330297', 'patientID': 'P20190927094614330297', 'patientName': 'CN20190927094614330297', 'studyDate': '2019-09-27', 'studyTime': '09:46:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927094614330297', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:49:46.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:49:45.417', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927094001810321', 'patientID': 'P20190927094001810321', 'patientName': 'CN20190927094001810321', 'studyDate': '2019-09-27', 'studyTime': '09:40:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927094001810321', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:43:33.247', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:43:32.873', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927093019331369', 'patientID': 'P20190927093019331369', 'patientName': 'CN20190927093019331369', 'studyDate': '2019-09-27', 'studyTime': '09:30:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927093019331369', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927091913211536', 'patientID': 'P20190927091913211536', 'patientName': 'CN20190927091913211536', 'studyDate': '2019-09-27', 'studyTime': '09:19:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927091913211536', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927091554875257', 'patientID': 'P20190927091554875257', 'patientName': 'CN20190927091554875257', 'studyDate': '2019-09-27', 'studyTime': '09:16:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927091554875257', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927090901982897', 'patientID': 'P20190927090901982897', 'patientName': 'CN20190927090901982897', 'studyDate': '2019-09-27', 'studyTime': '09:09:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927090901982897', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926200306711632', 'patientID': 'P20190926200306711632', 'patientName': 'CN20190926200306711632', 'studyDate': '2019-09-26', 'studyTime': '20:03:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926200306711632', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 21:40:02.300', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926200116351634', 'patientID': 'P20190926200116351634', 'patientName': 'CN20190926200116351634', 'studyDate': '2019-09-26', 'studyTime': '20:01:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926200116351634', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926195833054191', 'patientID': 'P20190926195833054191', 'patientName': 'CN20190926195833054191', 'studyDate': '2019-09-26', 'studyTime': '19:59:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926195833054191', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926194344857588', 'patientID': 'P20190926194344857588', 'patientName': 'CN20190926194344857588', 'studyDate': '2019-09-26', 'studyTime': '19:44:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926194344857588', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 20:39:26.507', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926194144529307', 'patientID': 'P20190926194144529307', 'patientName': 'CN20190926194144529307', 'studyDate': '2019-09-26', 'studyTime': '19:42:16', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926194144529307', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193620732015', 'patientID': 'P20190926193620732015', 'patientName': 'CN20190926193620732015', 'studyDate': '2019-09-26', 'studyTime': '19:36:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926193620732015', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193513966305', 'patientID': 'P20190926193513966305', 'patientName': 'CN20190926193513966305', 'studyDate': '2019-09-26', 'studyTime': '19:35:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193502575669', 'patientID': 'P20190926193502575669', 'patientName': 'CN20190926193502575669', 'studyDate': '2019-09-26', 'studyTime': '19:35:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193451419400', 'patientID': 'P20190926193451419400', 'patientName': 'CN20190926193451419400', 'studyDate': '2019-09-26', 'studyTime': '19:34:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193419341232', 'patientID': 'P20190926193419341232', 'patientName': 'CN20190926193419341232', 'studyDate': '2019-09-26', 'studyTime': '19:34:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926193419341232', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190804570999', 'patientID': 'P20190926190804570999', 'patientName': 'CN20190926190804570999', 'studyDate': '2019-09-26', 'studyTime': '19:08:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926190804570999', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 19:10:11.917', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190406106216', 'patientID': 'P20190926190406106216', 'patientName': 'CN20190926190406106216', 'studyDate': '2019-09-26', 'studyTime': '19:04:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926190406106216', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 19:06:13.930', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190259103869', 'patientID': 'P20190926190259103869', 'patientName': 'CN20190926190259103869', 'studyDate': '2019-09-26', 'studyTime': '19:03:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926190259103869', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190130538136', 'patientID': 'P20190926190130538136', 'patientName': 'CN20190926190130538136', 'studyDate': '2019-09-26', 'studyTime': '19:02:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926190130538136', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926185749581646', 'patientID': 'P20190926185749581646', 'patientName': 'CN20190926185749581646', 'studyDate': '2019-09-26', 'studyTime': '18:58:20', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926185749581646', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926184922019125', 'patientID': 'P20190926184922019125', 'patientName': 'CN20190926184922019125', 'studyDate': '2019-09-26', 'studyTime': '18:49:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926184922019125', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 18:51:37.443', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926181253683850', 'patientID': 'P20190926181253683850', 'patientName': 'CN20190926181253683850', 'studyDate': '2019-09-26', 'studyTime': '18:13:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926181253683850', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 18:15:04.660', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926180655059231', 'patientID': 'P20190926180655059231', 'patientName': 'CN20190926180655059231', 'studyDate': '2019-09-26', 'studyTime': '18:07:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926180655059231', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926180317252946', 'patientID': 'P20190926180317252946', 'patientName': 'CN20190926180317252946', 'studyDate': '2019-09-26', 'studyTime': '18:03:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926180317252946', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926175113276968', 'patientID': 'P20190926175113276968', 'patientName': 'CN20190926175113276968', 'studyDate': '2019-09-26', 'studyTime': '17:51:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926175113276968', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926174443673001', 'patientID': 'P20190926174443673001', 'patientName': 'CN20190926174443673001', 'studyDate': '2019-09-26', 'studyTime': '17:45:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926174443673001', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926172734307873', 'patientID': 'P20190926172734307873', 'patientName': 'CN20190926172734307873', 'studyDate': '2019-09-26', 'studyTime': '17:28:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926172734307873', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 17:30:26.560', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 17:30:25.987', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926170023027884', 'patientID': 'P20190926170023027884', 'patientName': 'CN20190926170023027884', 'studyDate': '2019-09-26', 'studyTime': '17:00:54', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926170023027884', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 17:04:42.847', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 17:04:42.170', 'reportCount': 2, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926165127567516', 'patientID': 'P20190926165127567516', 'patientName': 'CN20190926165127567516', 'studyDate': '2019-09-26', 'studyTime': '16:51:59', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926165127567516', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 16:55:42.000', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 16:55:41.443', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926162829948320', 'patientID': 'P20190926162829948320', 'patientName': 'CN20190926162829948320', 'studyDate': '2019-09-26', 'studyTime': '16:28:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926162829948320', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 16:32:36.220', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 16:32:35.173', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926162407328680', 'patientID': 'P20190926162407328680', 'patientName': 'CN20190926162407328680', 'studyDate': '2019-09-26', 'studyTime': '16:24:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926162407328680', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161836085793', 'patientID': 'P20190926161836085793', 'patientName': 'CN20190926161836085793', 'studyDate': '2019-09-26', 'studyTime': '16:19:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161836085793', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161457711201', 'patientID': 'P20190926161457711201', 'patientName': 'CN20190926161457711201', 'studyDate': '2019-09-26', 'studyTime': '16:15:29', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161457711201', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161103583182', 'patientID': 'P20190926161103583182', 'patientName': 'CN20190926161103583182', 'studyDate': '2019-09-26', 'studyTime': '16:11:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161103583182', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926160457817657', 'patientID': 'P20190926160457817657', 'patientName': 'CN20190926160457817657', 'studyDate': '2019-09-26', 'studyTime': '16:05:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926160457817657', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926155434884612', 'patientID': 'P20190926155434884612', 'patientName': 'CN20190926155434884612', 'studyDate': '2019-09-26', 'studyTime': '15:55:03', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926155434884612', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926154948662730', 'patientID': 'P20190926154948662730', 'patientName': 'CN20190926154948662730', 'studyDate': '2019-09-26', 'studyTime': '15:50:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926154948662730', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926152214771679', 'patientID': 'P20190926152214771679', 'patientName': 'CN20190926152214771679', 'studyDate': '2019-09-26', 'studyTime': '15:22:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926152214771679', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926152151141858', 'patientID': 'P20190926152151141858', 'patientName': 'CN20190926152151141858', 'studyDate': '2019-09-26', 'studyTime': '15:21:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926151527430059', 'patientID': 'P20190926151527430059', 'patientName': 'CN20190926151527430059', 'studyDate': '2019-09-26', 'studyTime': '15:15:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925151339559062', 'patientID': 'P20190925151339559062', 'patientName': 'CN20190925151339559062', 'studyDate': '2019-09-25', 'studyTime': '15:14:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925151339559062', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925151112100099', 'patientID': 'P20190925151112100099', 'patientName': 'CN20190925151112100099', 'studyDate': '2019-09-25', 'studyTime': '15:11:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': 'Exam20190925151112100099', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925150604547069', 'patientID': 'P20190925150604547069', 'patientName': 'CN20190925150604547069', 'studyDate': '2019-09-25', 'studyTime': '15:06:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': 'Exam20190925150604547069', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925144432852059', 'patientID': 'P20190925144432852059', 'patientName': 'CN20190925144432852059', 'studyDate': '2019-09-25', 'studyTime': '14:45:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925144432852059', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925143718731410', 'patientID': 'P20190925143718731410', 'patientName': 'CN20190925143718731410', 'studyDate': '2019-09-25', 'studyTime': '14:37:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925143718731410', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925143345549503', 'patientID': 'P20190925143345549503', 'patientName': 'CN20190925143345549503', 'studyDate': '2019-09-25', 'studyTime': '14:34:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925143345549503', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925142250517879', 'patientID': 'P20190925142250517879', 'patientName': 'CN20190925142250517879', 'studyDate': '2019-09-25', 'studyTime': '14:23:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925142250517879', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925141608606774', 'patientID': 'P20190925141608606774', 'patientName': 'CN20190925141608606774', 'studyDate': '2019-09-25', 'studyTime': '14:16:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925141608606774', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924140239208696', 'patientID': 'P20190924140239208696', 'patientName': 'CN20190924140239208696', 'studyDate': '2019-09-24', 'studyTime': '14:03:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924140239208696', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 3, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924134211922347', 'patientID': 'P20190924134211922347', 'patientName': 'CN20190924134211922347', 'studyDate': '2019-09-24', 'studyTime': '13:42:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924134211922347', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924134005185090', 'patientID': 'P20190924134005185090', 'patientName': 'CN20190924134005185090', 'studyDate': '2019-09-24', 'studyTime': '13:40:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924134005185090', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924133636470877', 'patientID': 'P20190924133636470877', 'patientName': 'CN20190924133636470877', 'studyDate': '2019-09-24', 'studyTime': '13:37:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924133636470877', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920151641764670', 'patientID': 'P20190920151641764670', 'patientName': 'CN20190920151641764670', 'studyDate': '2019-09-20', 'studyTime': '15:16:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101314045529', 'patientID': 'P20190920101314045529', 'patientName': 'CN20190920101314045529', 'studyDate': '2019-09-20', 'studyTime': '10:13:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101302844554', 'patientID': 'P20190920101302844554', 'patientName': 'CN20190920101302844554', 'studyDate': '2019-09-20', 'studyTime': '10:13:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101251464315', 'patientID': 'P20190920101251464315', 'patientName': 'CN20190920101251464315', 'studyDate': '2019-09-20', 'studyTime': '10:12:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101220423507', 'patientID': 'P20190920101220423507', 'patientName': 'CN20190920101220423507', 'studyDate': '2019-09-20', 'studyTime': '10:12:49', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190920101220423507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906212504320861', 'patientID': 'P20190906212504320861', 'patientName': 'CN20190906212504320861', 'studyDate': '2019-09-06', 'studyTime': '21:25:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906212222660430', 'patientID': 'P20190906212222660430', 'patientName': 'CN20190906212222660430', 'studyDate': '2019-09-06', 'studyTime': '21:22:30', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906211930483389', 'patientID': 'P20190906211930483389', 'patientName': 'CN20190906211930483389', 'studyDate': '2019-09-06', 'studyTime': '21:19:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906204051801198', 'patientID': 'P20190906204051801198', 'patientName': 'CN20190906204051801198', 'studyDate': '2019-09-06', 'studyTime': '20:40:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906203853570302', 'patientID': 'P20190906203853570302', 'patientName': 'CN20190906203853570302', 'studyDate': '2019-09-06', 'studyTime': '20:39:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906202539364997', 'patientID': 'P20190906202539364997', 'patientName': 'CN20190906202539364997', 'studyDate': '2019-09-06', 'studyTime': '20:25:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906202218239273', 'patientID': 'P20190906202218239273', 'patientName': 'CN20190906202218239273', 'studyDate': '2019-09-06', 'studyTime': '20:22:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905223436021463', 'patientID': 'P20190905223436021463', 'patientName': 'CN20190905223436021463', 'studyDate': '2019-09-05', 'studyTime': '22:34:41', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905212205513802', 'patientID': 'P20190905212205513802', 'patientName': 'CN20190905212205513802', 'studyDate': '2019-09-05', 'studyTime': '21:22:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905212111738668', 'patientID': 'P20190905212111738668', 'patientName': 'CN20190905212111738668', 'studyDate': '2019-09-05', 'studyTime': '21:21:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905211755776242', 'patientID': 'P20190905211755776242', 'patientName': 'CN20190905211755776242', 'studyDate': '2019-09-05', 'studyTime': '21:18:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905211349106859', 'patientID': 'P20190905211349106859', 'patientName': 'CN20190905211349106859', 'studyDate': '2019-09-05', 'studyTime': '21:13:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903172505152418', 'patientID': 'P20190903172505152418', 'patientName': 'CN20190903172505152418', 'studyDate': '2019-09-03', 'studyTime': '17:25:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903170227056234', 'patientID': 'P20190903170227056234', 'patientName': 'CN20190903170227056234', 'studyDate': '2019-09-03', 'studyTime': '17:02:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903170051099638', 'patientID': 'P20190903170051099638', 'patientName': 'CN20190903170051099638', 'studyDate': '2019-09-03', 'studyTime': '17:00:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165955457397', 'patientID': 'P20190903165955457397', 'patientName': 'CN20190903165955457397', 'studyDate': '2019-09-03', 'studyTime': '17:00:01', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165901885271', 'patientID': 'P20190903165901885271', 'patientName': 'CN20190903165901885271', 'studyDate': '2019-09-03', 'studyTime': '16:59:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165542153628', 'patientID': 'P20190903165542153628', 'patientName': 'CN20190903165542153628', 'studyDate': '2019-09-03', 'studyTime': '16:55:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165418596754', 'patientID': 'P20190903165418596754', 'patientName': 'CN20190903165418596754', 'studyDate': '2019-09-03', 'studyTime': '16:54:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903164954783371', 'patientID': 'P20190903164954783371', 'patientName': 'CN20190903164954783371', 'studyDate': '2019-09-03', 'studyTime': '16:50:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903164800887729', 'patientID': 'P20190903164800887729', 'patientName': 'CN20190903164800887729', 'studyDate': '2019-09-03', 'studyTime': '16:48:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153259666283', 'patientID': 'P20190903153259666283', 'patientName': 'CN20190903153259666283', 'studyDate': '2019-09-03', 'studyTime': '15:33:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153139846628', 'patientID': 'P20190903153139846628', 'patientName': 'CN20190903153139846628', 'studyDate': '2019-09-03', 'studyTime': '15:31:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153001170875', 'patientID': 'P20190903153001170875', 'patientName': 'CN20190903153001170875', 'studyDate': '2019-09-03', 'studyTime': '15:30:11', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152902688466', 'patientID': 'P20190903152902688466', 'patientName': 'CN20190903152902688466', 'studyDate': '2019-09-03', 'studyTime': '15:29:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152102563471', 'patientID': 'P20190903152102563471', 'patientName': 'CN20190903152102563471', 'studyDate': '2019-09-03', 'studyTime': '15:21:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152025122287', 'patientID': 'P20190903152025122287', 'patientName': 'CN20190903152025122287', 'studyDate': '2019-09-03', 'studyTime': '15:20:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151513291106', 'patientID': 'P20190903151513291106', 'patientName': 'CN20190903151513291106', 'studyDate': '2019-09-03', 'studyTime': '15:15:23', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151421178072', 'patientID': 'P20190903151421178072', 'patientName': 'CN20190903151421178072', 'studyDate': '2019-09-03', 'studyTime': '15:14:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151230111593', 'patientID': 'P20190903151230111593', 'patientName': 'CN20190903151230111593', 'studyDate': '2019-09-03', 'studyTime': '15:12:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104428938966', 'patientID': 'P20190903104428938966', 'patientName': 'CN20190903104428938966', 'studyDate': '2019-09-03', 'studyTime': '10:44:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104253914424', 'patientID': 'P20190903104253914424', 'patientName': 'CN20190903104253914424', 'studyDate': '2019-09-03', 'studyTime': '10:43:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104133545742', 'patientID': 'P20190903104133545742', 'patientName': 'CN20190903104133545742', 'studyDate': '2019-09-03', 'studyTime': '10:41:43', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903103922870119', 'patientID': 'P20190903103922870119', 'patientName': 'CN20190903103922870119', 'studyDate': '2019-09-03', 'studyTime': '10:39:33', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903102755578047', 'patientID': 'P20190903102755578047', 'patientName': 'CN20190903102755578047', 'studyDate': '2019-09-03', 'studyTime': '10:27:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903102136190927', 'patientID': 'P20190903102136190927', 'patientName': 'CN20190903102136190927', 'studyDate': '2019-09-03', 'studyTime': '10:21:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903101857687685', 'patientID': 'P20190903101857687685', 'patientName': 'CN20190903101857687685', 'studyDate': '2019-09-03', 'studyTime': '10:18:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': '0016818', 'patientID': '8017446', 'patientName': 'Meng_Cui_Ping', 'studyDate': '2019-02-25', 'studyTime': '13:32:56', 'patientSex': '男', 'patientType': '1', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'ralfacc001', 'patientID': 'ralf001', 'patientName': 'ralf001new', 'studyDate': '2019-01-25', 'studyTime': '15:05:51', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'ImageSuite179', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'Az004', 'patientID': 'PID004', 'patientName': '赵六', 'studyDate': '2019-01-25', 'studyTime': '14:16:06', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'E003', 'patientID': 'PID003', 'patientName': '王五', 'studyDate': '2019-01-25', 'studyTime': '13:56:55', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'E001', 'patientID': 'PID001', 'patientName': '张三', 'studyDate': '2019-01-18', 'studyTime': '15:47:11', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'KMKJD', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT015', 'patientID': 'PT015', 'patientName': '周伯通', 'studyDate': '2019-01-15', 'studyTime': '13:07:32', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-15 13:33:07.023', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-15 13:33:05.123', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT014', 'patientID': 'PT014', 'patientName': '段玉', 'studyDate': '2019-01-04', 'studyTime': '10:46:01', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-15 09:47:23.803', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-15 13:28:47.160', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT013', 'patientID': 'PT013', 'patientName': '穆念慈', 'studyDate': '2019-01-03', 'studyTime': '10:06:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-03 11:21:21.317', 'filmDeleteStatus': 0, 'imageCount': 8, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-03 11:21:21.040', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT012', 'patientID': 'PT012', 'patientName': '杨康', 'studyDate': '2019-01-03', 'studyTime': '09:55:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-03 10:58:34.843', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-03 10:58:31.770', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT011', 'patientID': 'PT011', 'patientName': '郭靖', 'studyDate': '2018-12-14', 'studyTime': '17:08:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-12-24 14:15:09.657', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-24 14:15:06.917', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT009', 'patientID': 'PT009', 'patientName': '黑熊精', 'studyDate': '2018-11-20', 'studyTime': '09:21:42', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-11-20 11:02:20.957', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-11-21 14:11:08.760', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT005', 'patientID': 'PT005', 'patientName': '沙和尚', 'studyDate': '2018-11-15', 'studyTime': '10:06:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-12-14 16:00:12.993', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-14 15:59:57.837', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT004', 'patientID': 'PT004', 'patientName': '白龙马', 'studyDate': '2018-11-15', 'studyTime': '10:02:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-11-16 12:21:33.033', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-11-16 12:24:24.733', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'asdfasdf', 'patientID': 'M0001', 'patientName': 'test1', 'studyDate': '2018-10-30', 'studyTime': '13:55:36', 'patientSex': '男', 'patientType': '1', 'holdFlag': 1, 'printMode': 4, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 4, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT002', 'patientID': 'PT002', 'patientName': '唐僧', 'studyDate': '2018-08-09', 'studyTime': '16:24:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 3, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-08-09 16:28:51.707', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': '', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT001', 'patientID': 'PT001', 'patientName': '孙悟空', 'studyDate': '2018-08-09', 'studyTime': '14:17:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 0, 'printMode': 3, 'examName': None, 'bodayPart': '', 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-11 13:35:59.797', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-10 16:36:03.217', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}]]</msg>
<status status="PASS" starttime="20191111 16:50:56.938" endtime="20191111 16:50:56.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Use API to add a shortcut with name like 'patienttype'. \n Expected: \n 1. The shortcut should add and save successfully. \n</arg>
</arguments>
<msg timestamp="20191111 16:50:56.948" level="INFO">Step 4 
Description: 
1. Use API to add a shortcut with name like 'patienttype'. 
Expected: 
1. The shortcut should add and save successfully. 
</msg>
<status status="PASS" starttime="20191111 16:50:56.948" endtime="20191111 16:50:56.948"></status>
</kw>
<kw name="Platform Worklist Shotcut Save" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_shotcut_save</doc>
<arguments>
<arg>ralf</arg>
<arg>isFuzzy_bool=True</arg>
<arg>patientType=门诊病人,住院病人</arg>
<arg>UserName=admin</arg>
</arguments>
<assign>
<var>${Save_shortCut_result}</var>
</assign>
<msg timestamp="20191111 16:50:56.954" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:56.987" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/deleteShortcut HTTP/1.1" 200 33</msg>
<msg timestamp="20191111 16:50:56.990" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.020" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/saveShortcut HTTP/1.1" 200 33</msg>
<msg timestamp="20191111 16:50:57.021" level="INFO">Platform.Platform_worklist_shotcut_save: The shortcut exist, delete as your selected.
Platform.Platform_worklist_shotcut_del_by_name: The shortcut of user is deleted successfully. [ralf, admin], message is [{"isSuccess":true,"message":null}]</msg>
<msg timestamp="20191111 16:50:57.021" level="INFO">${Save_shortCut_result} = {'Result': True, 'shortCutname': 'ralf'}</msg>
<status status="PASS" starttime="20191111 16:50:56.948" endtime="20191111 16:50:57.021"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Save_shortCut_result}[Result] == True</arg>
<arg>The shorcut save successuflly</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:57.021" endtime="20191111 16:50:57.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description：\n 1. Use API to simulate the operations as click the shortcut to query data. \n Expected:\n 1. The data should same with step2.</arg>
</arguments>
<msg timestamp="20191111 16:50:57.022" level="INFO">Step 5 
Description：
1. Use API to simulate the operations as click the shortcut to query data. 
Expected:
1. The data should same with step2.</msg>
<status status="PASS" starttime="20191111 16:50:57.022" endtime="20191111 16:50:57.022"></status>
</kw>
<kw name="Platform Worklist Shotcut Query By Name" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_shotcut_query_by_name</doc>
<arguments>
<arg>admin</arg>
<arg>ralf</arg>
</arguments>
<assign>
<var>${Shortcut_Query_String}</var>
</assign>
<msg timestamp="20191111 16:50:57.026" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.034" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:57.037" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.045" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191111 16:50:57.048" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.056" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11467</msg>
<msg timestamp="20191111 16:50:57.059" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.076" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11699</msg>
<msg timestamp="20191111 16:50:57.079" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.088" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11728</msg>
<msg timestamp="20191111 16:50:57.091" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.100" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11507</msg>
<msg timestamp="20191111 16:50:57.103" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.111" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11462</msg>
<msg timestamp="20191111 16:50:57.114" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.123" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11594</msg>
<msg timestamp="20191111 16:50:57.126" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.134" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11832</msg>
<msg timestamp="20191111 16:50:57.137" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.147" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12241</msg>
<msg timestamp="20191111 16:50:57.150" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.158" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12244</msg>
<msg timestamp="20191111 16:50:57.162" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.171" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11658</msg>
<msg timestamp="20191111 16:50:57.174" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.183" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11549</msg>
<msg timestamp="20191111 16:50:57.186" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.195" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11597</msg>
<msg timestamp="20191111 16:50:57.198" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.207" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11309</msg>
<msg timestamp="20191111 16:50:57.210" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.218" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191111 16:50:57.221" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.230" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10980</msg>
<msg timestamp="20191111 16:50:57.233" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.242" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191111 16:50:57.245" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.254" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10401</msg>
<msg timestamp="20191111 16:50:57.257" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.266" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 5873</msg>
<msg timestamp="20191111 16:50:57.276" level="INFO">${Shortcut_Query_String} = {"Result": true, "Data": [{"accessionNumber": "A20191111165022360766", "patientID": "P20191111165022360766", "patientName": "CN20191111165022360766", "studyDate": "2019-11-11", "studyTime": "16:50:51"...</msg>
<status status="PASS" starttime="20191111 16:50:57.022" endtime="20191111 16:50:57.276"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Shortcut_Query_String}</arg>
</arguments>
<assign>
<var>${ShortCut_Query_Json}</var>
</assign>
<msg timestamp="20191111 16:50:57.285" level="INFO">${ShortCut_Query_Json} = {'Result': True, 'Data': [{'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '16:50:51'...</msg>
<status status="PASS" starttime="20191111 16:50:57.276" endtime="20191111 16:50:57.285"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${ShortCut_Query_Json}</arg>
<arg>Data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20191111 16:50:57.330" level="INFO">${data} = [[{'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '16:50:51', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191111 16:50:57.285" endtime="20191111 16:50:57.331"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${query_data}</arg>
</arguments>
<assign>
<var>${query_data}</var>
</assign>
<msg timestamp="20191111 16:50:57.331" level="DEBUG">Argument types are:
&lt;class 'list'&gt;</msg>
<msg timestamp="20191111 16:50:57.337" level="INFO">${query_data} = [[{'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '16:50:51', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191111 16:50:57.331" endtime="20191111 16:50:57.337"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20191111 16:50:57.337" level="DEBUG">Argument types are:
&lt;class 'list'&gt;</msg>
<msg timestamp="20191111 16:50:57.344" level="INFO">${data} = [[{'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '16:50:51', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191111 16:50:57.337" endtime="20191111 16:50:57.344"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${query_data}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20191111 16:50:57.345" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191111 16:50:57.344" endtime="20191111 16:50:57.348"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191111 16:50:57.352" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.359" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:57.361" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191111 16:50:57.363" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191111 16:50:57.370" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191111 16:50:57.371" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191111 16:50:57.371" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191111 16:50:57.348" endtime="20191111 16:50:57.371"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191111 16:50:57.371" endtime="20191111 16:50:57.371"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191111 16:50:56.375" endtime="20191111 16:50:57.372" critical="yes"></status>
</test>
<status status="FAIL" starttime="20191111 16:42:16.616" endtime="20191111 16:50:57.374"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="6">Critical Tests</stat>
<stat pass="9" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="9" fail="6">Smoke</stat>
</tag>
<suite>
<stat pass="9" fail="6" id="s1" name="SmokeTest">SmokeTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
