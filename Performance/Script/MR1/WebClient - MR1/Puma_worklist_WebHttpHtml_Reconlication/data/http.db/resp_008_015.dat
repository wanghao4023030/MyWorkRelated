commonModule.directive('focusMe', ['$timeout', '$parse', function ($timeout, $parse) {
    return {
        link: function (scope, element, attrs) {
            var timeout = +attrs.timeout || 0;
            var model = $parse(attrs.focusMe);
            scope.$watch(model, function (value) {
                if (value === true) {
                    $timeout(function () {
                        element[0].focus();
                    }, timeout);
                }
            });
            element.bind('blur', function (event) {
                scope.$apply(function () {
                    model.assign(scope, false);
                    if (attrs.focusLost) {
                        scope.$eval(attrs.focusLost);
                    }
                });
            });
        }
    };
}]);

/*
focus on element when event is triggered.
usage:
<textarea focus-on="eventName"></textarea>
*/
commonModule.directive('focusOn', ['$timeout', function ($timeout) {
    'use strict';
    return function (scope, elem, attr) {
        scope.$on(attr.focusOn, function () {
            $timeout(function () {
                elem[0].focus();
            }, 500);
        });
    };
}]);