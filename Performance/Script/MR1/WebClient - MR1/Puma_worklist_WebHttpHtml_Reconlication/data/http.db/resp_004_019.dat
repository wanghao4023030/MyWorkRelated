// this service is called to remember user's credentials
//this service to add/remove cookie
logon.factory('rememberMe', function () {
    'use strict';

    function fetchValue(name) {
        var cookieVal = document.cookie.split("; ");
        for (var i = 0; i < cookieVal.length; i++) {
            // a name/value pair (a crumb) is separated by an equal sign
            //var crumbs = cookieVal[i].split("=");
            var equalIndex = cookieVal[i].indexOf('='); //The indexOf() method returns the position of the first occurrence of a specified value in a string.
            var crumbs;
            crumbs[0] = cookieVal[i].substr(0, equalIndex);
            crumbs[1] = cookieVal[i].substr(equalIndex + 1);
            if (name === crumbs[0]) {
                var value = '';
                try {
                    value = angular.fromJson(crumbs[1]);
                } catch (e) {
                    value = unescape(crumbs[1]);
                }
                return value;
            }
        }
        // a cookie with the requested name does not exist
        return null;
    }

    return function (name, values) {
        if (arguments.length === 1) return fetchValue(name);
        var cookie = name + '=';
        if (typeof values === 'object') {
            var expires = '';
            cookie += (typeof values.value === 'object') ? angular.toJson(values.value) + ';' : values.value + ';';
            if (values.expires) {
                var date = new Date();
                date.setTime(date.getTime() + (values.expires * 24 * 60 * 60 * 1000));
                expires = date.toGMTString();
            }
            cookie += (!values.session) ? 'expires=' + expires + ';' : '';
            cookie += (values.path) ? 'path=' + values.path + ';' : '';
            cookie += (values.secure) ? 'secure;' : '';
        } else {
            cookie += values + ';';
        }
        document.cookie = cookie;
    }

});