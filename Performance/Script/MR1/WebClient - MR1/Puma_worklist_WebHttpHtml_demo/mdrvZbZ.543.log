Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \t\t\t} else {\n
Action.c(1502): web_reg_save_param started  	[MsgId: MMSG-26355]
Action.c(5):     \t\t\t\t$(element).removeClass(errorClass).addClass(validClass);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     \t\t}\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \t},\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \n
Action.c(5):     \t// http://docs.jquery.com/Plugins/Validation/Validator/setDefaults\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     \tsetDefaults: function( settings ) {\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \t\t$.extend( $.validator.defaults, settings );\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \t},\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     \n
Action.c(5):     Content-Length: 1810\r\n
Action.c(5):     \tmessages: {\n
Action.c(5):     \r\n
Action.c(1502): Registering web_reg_save_param was successful  	[MsgId: MMSG-26390]
Action.c(5):     \t\trequired: "This field is required.",\n
Action.c(5):     \t\tremote: "Please fix this field.",\n
Action.c(5):     \t\temail: "Please enter a valid email address.",\n
Action.c(1507): Notify: Transaction "SetPrintMode" started.	[MsgId: MMSG-16999]
Action.c(5):     \t\turl: "Please enter a valid URL.",\n
Action.c(5):     \t\tdate: "Please enter a valid date.",\n
Action.c(5):     \t\tdateISO: "Please enter a valid date (ISO).",\n
Action.c(1509): web_custom_request("SetHoldingTime") started  	[MsgId: MMSG-26355]
Action.c(5):     \t\tnumber: "Please enter a valid number.",\n
Action.c(5): t=213900ms: 1810-byte response body for "http://10.184.129.208/Platform/app/common/behaviors/drag-sortable.js" (RelFrameId=, Internal ID=288)
Action.c(5):     \t\tdigits: "Please enter only digits.",\n
Action.c(5):     \t\tcreditcard: "Please enter a valid credit card number.",\n
Action.c(5):     ï»\xBF//angular.directive("my:sortable", function (expression, compiledElement) {\r\n
Action.c(5):     \t\tequalTo: "Please enter the same value again.",\n
Action.c(5):     //    // add my:sortable-index to children so we know the index in the model\r\n
Action.c(5):     \t\tmaxlength: $.validator.format("Please enter no more than {0} characters."),\n
Action.c(5):     //    compiledElement.children().attr("my:sortable-index", "{{$index}}");\r\n
Action.c(5):     \r\n
Action.c(5):     \t\tminlength: $.validator.format("Please enter at least {0} characters."),\n
Action.c(5):     //    return function (linkElement) {\r\n
Action.c(5):     \t\trangelength: $.validator.format("Please enter a value between {0} and {1} characters l
Action.c(5):     //        var scope = this;\r\n
Action.c(5):     ong."),\n
Action.c(5):     \r\n
Action.c(5):     \t\trange: $.validator.format("Please enter a value between {0} and {1}."),\n
Action.c(5):     //        linkElement.sortable({\r\n
Action.c(5):     \t\tmax: $.validator.format("Please enter a value less than or equal to {0}."),\n
Action.c(5):     //            placeholder: "placeholder",\r\n
Action.c(5):     \t\tmin: $.validator.format("Please enter a value greater than or equal to {0}.")\n
Action.c(5):     //            opacity: 0.8,\r\n
Action.c(5):     \t},\n
Action.c(5):     //            axis: "y",\r\n
Action.c(5):     \n
Action.c(5):     //            update: function (event, ui) {\r\n
Action.c(5):     \tautoCreateRanges: false,\n
Action.c(5):     //                // get model\r\n
Action.c(5):     \n
Action.c(5):     //                var model = scope.$apply(expression);\r\n
Action.c(5):     \tprototype: {\n
Action.c(5):     //                // remember its length\r\n
Action.c(5):     \n
Action.c(5):     //                var modelLength = model.length;\r\n
Action.c(5):     \t\tinit: function() {\n
Action.c(5):     //                // rember html nodes\r\n
Action.c(5):     \t\t\tthis.labelContainer = $(this.settings.errorLabelContainer);\n
Action.c(5):     //                var items = [];\r\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tthis.errorContext = this.labelContainer.length && this.labelContainer || $(this.curr
Action.c(5):     //                // loop through items in new order\r\n
Action.c(5):     entForm);\n
Action.c(5):     //                linkElement.children().each(function (index) {\r\n
Action.c(5):     \t\t\tthis.containers = $(this.settings.errorContainer).add( this.settings.errorLabelConta
Action.c(5):     //                    var item = $(this);\r\n
Action.c(5):     iner );\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tthis.submitted = {};\n
Action.c(5):     //                    // get old item index\r\n
Action.c(5):     \t\t\tthis.valueCache = {};\n
Action.c(5):     //                    var oldIndex = parseInt(item.attr("my:sortable-index"), 10);\r\n
Action.c(5):     \t\t\tthis.pendingRequest = 0;\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tthis.pending = {};\n
Action.c(5):     //                    // add item to the end of model\r\n
Action.c(5):     \t\t\tthis.invalid = {};\n
Action.c(5):     //                    model.push(model[oldIndex]);\r\n
Action.c(5):     \t\t\tthis.reset();\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):     //                    if (item.attr("my:sortable-index")) {\r\n
Action.c(5):     \t\t\tvar groups = (this.groups = {});\n
Action.c(5):     //                        // items in original order to restore dom\r\n
Action.c(5):     \t\t\t$.each(this.settings.groups, function( key, value ) {\n
Action.c(5):     //                        items[oldIndex] = item;\r\n
Action.c(5):     \t\t\t\tif ( typeof value === "string" ) {\n
Action.c(5):     //                        // and remove item from dom\r\n
Action.c(5):     \t\t\t\t\tvalue = value.split(/\\s/);\n
Action.c(5):     //                        item.detach();\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     //                    }\r\n
Action.c(5):     \t\t\t\t$.each(value, function( index, name ) {\n
Action.c(5):     //                });\r\n
Action.c(5):     \t\t\t\t\tgroups[name] = key;\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     //                model.splice(0, modelLength);\r\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tvar rules = this.settings.rules;\n
Action.c(5):     //                // restore original dom order, so angular does not get confused\r\n
Action.c(5):     \t\t\t$.each(rules, function( key, value ) {\n
Action.c(5):     //                linkElement.append.apply(linkElement, items);\r\n
Action.c(5):     \t\t\t\trules[key] = $.validator.normalizeRule(value);\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t});\n
Action.c(5):     //                // notify angular of the change\r\n
Action.c(5):     \n
Action.c(5):     //                scope.$digest();\r\n
Action.c(5):     \t\t\tfunction delegate(event) {\n
Action.c(5):     //            }\r\n
Action.c(5):     \t\t\t\tvar validator = $.data(this[0].form, "validator"),\n
Action.c(5):     //        });\r\n
Action.c(5):     \t\t\t\t\teventType = "on" + event.type.replace(/^validate/, "");\n
Action.c(5):     //    };\r\n
Action.c(5):     \t\t\t\tif ( validator.settings[eventType] ) {\n
Action.c(5):     //});
Action.c(5):     \t\t\t\t\tvalidator.settings[eventType].call(validator, this[0], event);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t$(this.currentForm)\n
Action.c(5):     \t\t\t\t.validateDelegate(":text, [type='password'], [type='file'], select, textarea, " +\n
Action.c(5): t=213901ms: 307-byte response headers for "http://10.184.129.208/Platform/app/common/behaviors/checklist-model.js" (RelFrameId=, Internal ID=287)
Action.c(5):     \t\t\t\t\t"[type='number'], [type='search'] ,[type='tel'], [type='url'], " +\n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \t\t\t\t\t"[type='email'], [type='datetime'], [type='date'], [type='month'], " +\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     \t\t\t\t\t"[type='week'], [type='time'], [type='datetime-local'], " +\n
Action.c(5):     Content-Encoding: gzip\r\n
Action.c(5):     \t\t\t\t\t"[type='range'], [type='color'] ",\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \t\t\t\t\t"focusin focusout keyup", delegate)\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \t\t\t\t.validateDelegate("[type='radio'], [type='checkbox'], select, option", "click", de
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     legate);\n
Action.c(5):     Vary: Accept-Encoding\r\n
Action.c(5):     \n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \t\t\tif ( this.settings.invalidHandler ) {\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \t\t\t\t$(this.currentForm).bind("invalid-form.validate", this.settings.invalidHandler);\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):     Content-Length: 1473\r\n
Action.c(5):     \t\t},\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Validator/form\n
Action.c(5):     \t\tform: function() {\n
Action.c(5):     \t\t\tthis.checkForm();\n
Action.c(5): t=213901ms: 1473-byte ENCODED response body received for "http://10.184.129.208/Platform/app/common/behaviors/checklist-model.js" (RelFrameId=, Internal ID=287)
Action.c(5):     \t\t\t$.extend(this.submitted, this.errorMap);\n
Action.c(5):     \t\t\tthis.invalid = $.extend({}, this.errorMap);\n
Action.c(5):     \t\t\tif ( !this.valid() ) {\n
Action.c(5):     \t\t\t\t$(this.currentForm).triggerHandler("invalid-form", [this]);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tthis.showErrors();\n
Action.c(5): t=213901ms: 5129-byte DECODED response body for "http://10.184.129.208/Platform/app/common/behaviors/checklist-model.js" (RelFrameId=, Internal ID=287)
Action.c(5):     \t\t\treturn this.valid();\n
Action.c(5):     ï»\xBF/**\r\n
Action.c(5):     \t\t},\n
Action.c(5):      * Checklist-model\r\n
Action.c(5):     \n
Action.c(5):      * AngularJS directive for list of checkboxes\r\n
Action.c(5):     \t\tcheckForm: function() {\n
Action.c(5):      * https://github.com/vitalets/checklist-model\r\n
Action.c(5):     \t\t\tthis.prepareForm();\n
Action.c(5):      * License: MIT http://opensource.org/licenses/MIT\r\n
Action.c(5):     \t\t\tfor ( var i = 0, elements = (this.currentElements = this.elements()); elements[i]; i
Action.c(5):      */\r\n
Action.c(5):     ++ ) {\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\tthis.check( elements[i] );\n
Action.c(5):     commonModule.directive('checklistModel', ['$parse', '$compile', function ($parse, $compile
Action.c(5):     \t\t\t}\n
Action.c(5):     ) {\r\n
Action.c(5):     \t\t\treturn this.valid();\n
Action.c(5):         // contains\r\n
Action.c(5):     \t\t},\n
Action.c(5):         function contains(arr, item, comparator) {\r\n
Action.c(5):     \n
Action.c(5):             if (angular.isArray(arr)) {\r\n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Valida
Action.c(5):                 for (var i = arr.length; i--;) {\r\n
Action.c(5):                     if (comparator(arr[i], item)) {\r\n
Action.c(5):                         return true;\r\n
Action.c(5):                     }\r\n
Action.c(5):                 }\r\n
Action.c(5):             }\r\n
Action.c(5):             return false;\r\n
Action.c(5):         }\r\n
Action.c(5): t=213902ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery.validate.js" (RelFrameId=, Internal ID=256)
Action.c(5):     \r\n
Action.c(5):     tor/element\n
Action.c(5):         // add\r\n
Action.c(5):     \t\telement: function( element ) {\n
Action.c(5):         function add(arr, item, comparator) {\r\n
Action.c(5):     \t\t\telement = this.validationTargetFor( this.clean( element ) );\n
Action.c(5):             arr = angular.isArray(arr) ? arr : [];\r\n
Action.c(5):     \t\t\tthis.lastElement = element;\n
Action.c(5):             if (!contains(arr, item, comparator)) {\r\n
Action.c(5):     \t\t\tthis.prepareElement( element );\n
Action.c(5):                 arr.push(item);\r\n
Action.c(5):     \t\t\tthis.currentElements = $(element);\n
Action.c(5):             }\r\n
Action.c(5):     \t\t\tvar result = this.check( element ) !== false;\n
Action.c(5):             return arr;\r\n
Action.c(5):     \t\t\tif ( result ) {\n
Action.c(5):         }\r\n
Action.c(5):     \t\t\t\tdelete this.invalid[element.name];\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):         // remove\r\n
Action.c(5):     \t\t\t\tthis.invalid[element.name] = true;\n
Action.c(5):         function remove(arr, item, comparator) {\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):             if (angular.isArray(arr)) {\r\n
Action.c(5):     \t\t\tif ( !this.numberOfInvalids() ) {\n
Action.c(5):                 for (var i = arr.length; i--;) {\r\n
Action.c(5):     \t\t\t\t// Hide error containers on last error\n
Action.c(5):                     if (comparator(arr[i], item)) {\r\n
Action.c(5):     \t\t\t\tthis.toHide = this.toHide.add( this.containers );\n
Action.c(5):                         arr.splice(i, 1);\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):                         break;\r\n
Action.c(5):     \t\t\tthis.showErrors();\n
Action.c(5):                     }\r\n
Action.c(5):     \t\t\treturn result;\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t},\n
Action.c(5):             }\r\n
Action.c(5):     \n
Action.c(5):             return arr;\r\n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Validator/showErrors\n
Action.c(5):         }\r\n
Action.c(5):     \t\tshowErrors: function( errors ) {\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tif ( errors ) {\n
Action.c(5):         // http://stackoverflow.com/a/19228302/1458162\r\n
Action.c(5):     \t\t\t\t// add items to error list and map\n
Action.c(5):         function postLinkFn(scope, elem, attrs) {\r\n
Action.c(5):     \t\t\t\t$.extend( this.errorMap, errors );\n
Action.c(5):             // exclude recursion, but still keep the model\r\n
Action.c(5):     \t\t\t\tthis.errorList = [];\n
Action.c(5):             var checklistModel = attrs.checklistModel;\r\n
Action.c(5):     \t\t\t\tfor ( var name in errors ) {\n
Action.c(5):             attrs.$set("checklistModel", null);\r\n
Action.c(5):     \t\t\t\t\tthis.errorList.push({\n
Action.c(5):             // compile with `ng-model` pointing to `checked`\r\n
Action.c(5):     \t\t\t\t\t\tmessage: errors[name],\n
Action.c(5):             $compile(elem)(scope);\r\n
Action.c(5):     \t\t\t\t\t\telement: this.findByName(name)[0]\n
Action.c(5):             attrs.$set("checklistModel", checklistModel);\r\n
Action.c(5):     \t\t\t\t\t});\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):             // getter / setter for original model\r\n
Action.c(5):     \t\t\t\t// remove items from success list\n
Action.c(5):             var getter = $parse(checklistModel);\r\n
Action.c(5):     \t\t\t\tthis.successList = $.grep( this.successList, function( element ) {\n
Action.c(5):             var setter = getter.assign;\r\n
Action.c(5):     \t\t\t\t\treturn !(element.name in errors);\n
Action.c(5):             var checklistChange = $parse(attrs.checklistChange);\r\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):             var checklistBeforeChange = $parse(attrs.checklistBeforeChange);\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tif ( this.settings.showErrors ) {\n
Action.c(5):             // value added to list\r\n
Action.c(5):     \t\t\t\tthis.settings.showErrors.call( this, this.errorMap, this.errorList );\n
Action.c(5):             var value = attrs.checklistValue ? $parse(attrs.checklistValue)(scope.$parent) : a
Action.c(5):     \t\t\t} else {\n
Action.c(5):     ttrs.value;\r\n
Action.c(5):     \t\t\t\tthis.defaultShowErrors();\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \r\n
Action.c(5):     \t\t},\n
Action.c(5):             var comparator = angular.equals;\r\n
Action.c(5):     \n
Action.c(5):     \r\n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Validator/resetForm\n
Action.c(5):             if (attrs.hasOwnProperty('checklistComparator')) {\r\n
Action.c(5):     \t\tresetForm: function() {\n
Action.c(5):                 if (attrs.checklistComparator[0] == '.') {\r\n
Action.c(5):     \t\t\tif ( $.fn.resetForm ) {\n
Action.c(5):                     var comparatorExpression = attrs.checklistComparator.substring(1);\r\n
Action.c(5):     \t\t\t\t$(this.currentForm).resetForm();\n
Action.c(5):                     comparator = function (a, b) {\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):                         return a[comparatorExpression] === b[comparatorExpression];\r\n
Action.c(5):     \t\t\tthis.submitted = {};\n
Action.c(5):                     };\r\n
Action.c(5):     \t\t\tthis.lastElement = null;\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tthis.prepareForm();\n
Action.c(5):                 } else {\r\n
Action.c(5):     \t\t\tthis.hideErrors();\n
Action.c(5):                     comparator = $parse(attrs.checklistComparator)(scope.$parent);\r\n
Action.c(5):     \t\t\tthis.elements().removeClass( this.settings.errorClass ).removeData( "previousValue" 
Action.c(5):                 }\r\n
Action.c(5):     );\n
Action.c(5):             }\r\n
Action.c(5):     \t\t},\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):             // watch UI checked change\r\n
Action.c(5):     \t\tnumberOfInvalids: function() {\n
Action.c(5):             scope.$watch(attrs.ngModel, function (newValue, oldValue) {\r\n
Action.c(5):     \t\t\treturn this.objectLength(this.invalid);\n
Action.c(5):                 if (newValue === oldValue) {\r\n
Action.c(5):     \t\t},\n
Action.c(5):                     return;\r\n
Action.c(5):     \n
Action.c(5):                 }\r\n
Action.c(5):     \t\tobjectLength: function( obj ) {\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tvar count = 0;\n
Action.c(5):                 if (checklistBeforeChange && (checklistBeforeChange(scope) === false)) {\r\n
Action.c(5):     \t\t\tfor ( var i in obj ) {\n
Action.c(5):                     scope[attrs.ngModel] = contains(getter(scope.$parent), value, comparator);
Action.c(5):     \t\t\t\tcount++;\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t}\n
Action.c(5):                     return;\r\n
Action.c(5):     \t\t\treturn count;\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t},\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):                 setValueInChecklistModel(value, newValue);\r\n
Action.c(5):     \t\thideErrors: function() {\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tthis.addWrapper( this.toHide ).hide();\n
Action.c(5):                 if (checklistChange) {\r\n
Action.c(5):     \t\t},\n
Action.c(5):                     checklistChange(scope);\r\n
Action.c(5):     \n
Action.c(5):                 }\r\n
Action.c(5):     \t\tvalid: function() {\n
Action.c(5):             });\r\n
Action.c(5):     \t\t\treturn this.size() === 0;\n
Action.c(5):     \r\n
Action.c(5):     \t\t},\n
Action.c(5):             function setValueInChecklistModel(value, checked) {\r\n
Action.c(5):     \n
Action.c(5):                 var current = getter(scope.$parent);\r\n
Action.c(5):     \t\tsize: function() {\n
Action.c(5):                 if (angular.isFunction(setter)) {\r\n
Action.c(5):     \t\t\treturn this.errorList.length;\n
Action.c(5):                     if (checked === true) {\r\n
Action.c(5):     \t\t},\n
Action.c(5):                         setter(scope.$parent, add(current, value, comparator));\r\n
Action.c(5):     \n
Action.c(5):                     } else {\r\n
Action.c(5):     \t\tfocusInvalid: function() {\n
Action.c(5):                         setter(scope.$parent, remove(current, value, comparator));\r\n
Action.c(5):     \t\t\tif ( this.settings.focusInvalid ) {\n
Action.c(5):                     }\r\n
Action.c(5):     \t\t\t\ttry {\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t\t\t\t$(this.findLastActive() || this.errorList.length && this.errorList[0].element ||
Action.c(5):     \r\n
Action.c(5):      [])\n
Action.c(5):             }\r\n
Action.c(5):     \t\t\t\t\t.filter(":visible")\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\t\t.focus()\n
Action.c(5):             // declare one function to be used for both $watch functions\r\n
Action.c(5):     \t\t\t\t\t// manually trigger focusin event; without it, focusin handler isn't called, fin
Action.c(5):             function setChecked(newArr, oldArr) {\r\n
Action.c(5):     dLastActive won't have anything to find\n
Action.c(5):                 if (checklistBeforeChange && (checklistBeforeChange(scope) === false)) {\r\n
Action.c(5):     \t\t\t\t\t.trigger("focusin");\n
Action.c(5):                     setValueInChecklistModel(value, scope[attrs.ngModel]);\r\n
Action.c(5):     \t\t\t\t} catch(e) {\n
Action.c(5):                     return;\r\n
Action.c(5):     \t\t\t\t\t// ignore IE throwing errors when focusing hidden elements\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):                 scope[attrs.ngModel] = contains(newArr, value, comparator);\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):             }\r\n
Action.c(5):     \t\t},\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):             // watch original model change\r\n
Action.c(5):     \t\tfindLastActive: function() {\n
Action.c(5):             // use the faster $watchCollection method if it's available\r\n
Action.c(5):     \t\t\tvar lastActive = this.lastActive;\n
Action.c(5):             if (angular.isFunction(scope.$parent.$watchCollection)) {\r\n
Action.c(5):     \t\t\treturn lastActive && $.grep(this.errorList, function( n ) {\n
Action.c(5):                 scope.$parent.$watchCollection(checklistModel, setChecked);\r\n
Action.c(5):     \t\t\t\treturn n.element.name === lastActive.name;\n
Action.c(5):             } else {\r\n
Action.c(5):     \t\t\t}).length === 1 && lastActive;\n
Action.c(5):                 scope.$parent.$watch(checklistModel, setChecked, true);\r\n
Action.c(5):     \t\t},\n
Action.c(5):             }\r\n
Action.c(5):     \n
Action.c(5):         }\r\n
Action.c(5):     \t\telements: function() {\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tvar validator = this,\n
Action.c(5):         return {\r\n
Action.c(5):     \t\t\t\trulesCache = {};\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):     \n
Action.c(5):             priority: 1000,\r\n
Action.c(5):     \t\t\t// select all valid inputs inside the form (no submit or reset buttons)\n
Action.c(5):             terminal: true,\r\n
Action.c(5):     \t\t\treturn $(this.currentForm)\n
Action.c(5):             scope: true,\r\n
Action.c(5):     \t\t\t.find("input, select, textarea")\n
Action.c(5):             compile: function (tElement, tAttrs) {\r\n
Action.c(5):     \t\t\t.not(":submit, :reset, :image, [disabled]")\n
Action.c(5):                 if ((tElement[0].tagName !== 'INPUT' || tAttrs.type !== 'checkbox') && (tEleme
Action.c(5):     \t\t\t.not( this.settings.ignore )\n
Action.c(5):     nt[0].tagName !== 'MD-CHECKBOX') && (!tAttrs.btnCheckbox)) {\r\n
Action.c(5):     \t\t\t.filter(function() {\n
Action.c(5):                     throw 'checklist-model should be applied to `input[type="checkbox"]` or `m
Action.c(5):     \t\t\t\tif ( !this.name && validator.settings.debug && window.console ) {\n
Action.c(5):     d-checkbox`.';\r\n
Action.c(5):     \t\t\t\t\tconsole.error( "%o has no name assigned", this);\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):                 if (!tAttrs.checklistValue && !tAttrs.value) {\r\n
Action.c(5):     \t\t\t\t// select only the first element for each name, and only those with rules specifie
Action.c(5):                     throw 'You should provide `value` or `checklist-value`.';\r\n
Action.c(5):     d\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t\t\tif ( this.name in rulesCache || !validator.objectLength($(this).rules()) ) {\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\t\treturn false;\n
Action.c(5):                 // by default ngModel is 'checked', so we set it if not specified\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):                 if (!tAttrs.ngModel) {\r\n
Action.c(5):     \n
Action.c(5):                     // local scope var storing individual checkbox model\r\n
Action.c(5):     \t\t\t\trulesCache[this.name] = true;\n
Action.c(5):                     tAttrs.$set("ngModel", "checked");\r\n
Action.c(5):     \t\t\t\treturn true;\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \r\n
Action.c(5):     \t\t},\n
Action.c(5):                 return postLinkFn;\r\n
Action.c(5):     \n
Action.c(5):             }\r\n
Action.c(5):     \t\tclean: function( selector ) {\n
Action.c(5):         };\r\n
Action.c(5):     \t\t\treturn $(selector)[0];\n
Action.c(5):     }]);
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\terrors: function() {\n
Action.c(5):     \t\t\tvar errorClass = this.settings.errorClass.replace(" ", ".");\n
Action.c(5): t=213903ms: 259-byte response headers for "http://10.184.129.208/Platform/app/common/behaviors/dropdownMenu-changeTitle.js" (RelFrameId=, Internal ID=289)
Action.c(5):     \t\t\treturn $(this.settings.errorElement + "." + errorClass, this.errorContext);\n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \t\t},\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     \n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \t\treset: function() {\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \t\t\tthis.successList = [];\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     \t\t\tthis.errorList = [];\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \t\t\tthis.errorMap = {};\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \t\t\tthis.toShow = $([]);\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     \t\t\tthis.toHide = $([]);\n
Action.c(5):     Content-Length: 674\r\n
Action.c(5):     \t\t\tthis.currentElements = $([]);\n
Action.c(5):     \r\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tprepareForm: function() {\n
Action.c(5): t=213903ms: 674-byte response body for "http://10.184.129.208/Platform/app/common/behaviors/dropdownMenu-changeTitle.js" (RelFrameId=, Internal ID=289)
Action.c(5):     \t\t\tthis.reset();\n
Action.c(5):     ï»¿commonModule.directive('dropdownmenuChangeTitle', function () {\r\n
Action.c(5):     \t\t\tthis.toHide = this.errors().add( this.containers );\n
Action.c(5):         return {\r\n
Action.c(5):     \t\t},\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):     \n
Action.c(5):             controllerAs: 'dropdownmenuChangeTitleCtrl',\r\n
Action.c(5):     \t\tprepareElement: function( element ) {\n
Action.c(5):             controller: ['$scope', function ($scope) {\r\n
Action.c(5):     \t\t\tthis.reset();\n
Action.c(5):                 this.setTitle = function (title) {\r\n
Action.c(5):     \t\t\tthis.toHide = this.errorsFor(element);\n
Action.c(5):                     $scope.dropdownTitle = title;\r\n
Action.c(5):     \t\t},\n
Action.c(5):                 }\r\n
Action.c(5):     \n
Action.c(5):             }]\r\n
Action.c(5):     \t\telementValue: function( element ) {\n
Action.c(5):         }\r\n
Action.c(5):     \t\t\tvar type = $(element).attr("type"),\n
Action.c(5):     });\r\n
Action.c(5):     \t\t\t\tval = $(element).val();\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):     commonModule.directive('dropdownitem', function () {\r\n
Action.c(5):     \t\t\tif ( type === "radio" || type === "checkbox" ) {\n
Action.c(5):         return {\r\n
Action.c(5):     \t\t\t\treturn $("input[name='" + $(element).attr("name") + "']:checked").val();\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):             require: '^dropdownmenuChangeTitle',\r\n
Action.c(5):     \n
Action.c(5):             link: function (scope, element, attr, ctrl) {\r\n
Action.c(5):     \t\t\tif ( typeof val === "string" ) {\n
Action.c(5):                 element.on('click', function () {\r\n
Action.c(5):     \t\t\t\treturn val.replace(/\\r/g, "");\n
Action.c(5):                     ctrl.setTitle(element.text());\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):                 });\r\n
Action.c(5):     \t\t\treturn val;\n
Action.c(5):             }\r\n
Action.c(5):     \t\t},\n
Action.c(5):         }\r\n
Action.c(5):     \n
Action.c(5):     });
Action.c(5):     \t\tcheck: function( element ) {\n
Action.c(5):     \t\t\telement = this.validationTargetFor( this.clean( element ) );\n
Action.c(5): t=213903ms: 259-byte response headers for "http://10.184.129.208/Platform/app/common/behaviors/focus.js" (RelFrameId=, Internal ID=290)
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \t\t\tvar rules = $(element).rules();\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     \t\t\tvar dependencyMismatch = false;\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \t\t\tvar val = this.elementValue(element);\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     \t\t\tvar result;\n
Action.c(5):     Content-Length: 927\r\n
Action.c(5):     \n
Action.c(5):     \r\n
Action.c(5):     \t\t\tfor (var method in rules ) {\n
Action.c(5):     \t\t\t\tvar rule = { method: method, parameters: rules[method] };\n
Action.c(5):     \t\t\t\ttry {\n
Action.c(5):     \n
Action.c(5): t=213904ms: 927-byte response body for "http://10.184.129.208/Platform/app/common/behaviors/focus.js" (RelFrameId=, Internal ID=290)
Action.c(5):     \t\t\t\t\tresult = $.validator.methods[method].call( this, val, element, rule.parameters )
Action.c(5):     ï»¿commonModule.directive('focusMe', ['$timeout', '$parse', function ($timeout, $parse) {\r
Action.c(5):     ;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         return {\r\n
Action.c(5):     \t\t\t\t\t// if a method indicates that the field is optional and therefore valid,\n
Action.c(5):             link: function (scope, element, attrs) {\r\n
Action.c(5):     \t\t\t\t\t// don't mark it as valid when there are no other rules\n
Action.c(5):                 var timeout = +attrs.timeout || 0;\r\n
Action.c(5):     \t\t\t\t\tif ( result === "dependency-mismatch" ) {\n
Action.c(5):                 var model = $parse(attrs.focusMe);\r\n
Action.c(5):     \t\t\t\t\t\tdependencyMismatch = true;\n
Action.c(5):                 scope.$watch(model, function (value) {\r\n
Action.c(5):     \t\t\t\t\t\tcontinue;\n
Action.c(5):                     if (value === true) {\r\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):                         $timeout(function () {\r\n
Action.c(5):     \t\t\t\t\tdependencyMismatch = false;\n
Action.c(5):                             element[0].focus();\r\n
Action.c(5):     \n
Action.c(5):                         }, timeout);\r\n
Action.c(5):     \t\t\t\t\tif ( result === "pending" ) {\n
Action.c(5):                     }\r\n
Action.c(5):     \t\t\t\t\t\tthis.toHide = this.toHide.not( this.errorsFor(element) );\n
Action.c(5):                 });\r\n
Action.c(5):     \t\t\t\t\t\treturn;\n
Action.c(5):             }\r\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):         };\r\n
Action.c(5):     \n
Action.c(5):     }]);\r\n
Action.c(5):     \t\t\t\t\tif ( !result ) {\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\t\t\tthis.formatAndAdd( element, rule );\n
Action.c(5):     /*\r\n
Action.c(5):     \t\t\t\t\t\treturn false;\n
Action.c(5):     focus on element when event is triggered.\r\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     usage:\r\n
Action.c(5):     \t\t\t\t} catch(e) {\n
Action.c(5):     <textarea focus-on="eventName"></textarea>\r\n
Action.c(5):     \t\t\t\t\tif ( this.settings.debug && window.console ) {\n
Action.c(5):     */\r\n
Action.c(5):     \t\t\t\t\t\tconsole.log( "Exception occurred when checking element " + element.id + ", che
Action.c(5):     commonModule.directive('focusOn', ['$timeout', function ($timeout) {\r\n
Action.c(5):     ck the '" + rule.method + "' method.", e );\n
Action.c(5):         'use strict';\r\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):         return function (scope, elem, attr) {\r\n
Action.c(5):     \t\t\t\t\tthrow e;\n
Action.c(5):             scope.$on(attr.focusOn, function () {\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):                 $timeout(function () {\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):                     elem[0].focus();\r\n
Action.c(5):     \t\t\tif ( dependencyMismatch ) {\n
Action.c(5):                 }, 500);\r\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):             });\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):         };\r\n
Action.c(5):     \t\t\tif ( this.objectLength(rules) ) {\n
Action.c(5):     }]);
Action.c(5):     \t\t\t\tthis.successList.push(element);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn true;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// return the custom message for the given element and validation method\n
Action.c(5):     \t\t// specified in the element's HTML5 data attribute\n
Action.c(5):     \t\tcustomDataMessage: function( element, method ) {\n
Action.c(5):     \t\t\treturn $(element).data("msg-" + method.toLowerCase()) || (element.attributes && $(el
Action.c(5):     ement).attr("data-msg-" + method.toLowerCase()));\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// return the custom message for the given element name and validation method\n
Action.c(5):     \t\tcustomMessage: function( name, method ) {\n
Action.c(5):     \t\t\tvar m = this.settings.messages[name];\n
Action.c(5):     \t\t\treturn m && (m.constructor === String ? m : m[method]);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// return the first defined argument, allowing empty strings\n
Action.c(5):     \t\tfindDefined: function() {\n
Action.c(5):     \t\t\tfor(var i = 0; i < arguments.length; i++) {\n
Action.c(5):     \t\t\t\tif ( arguments[i] !== undefined ) {\n
Action.c(5):     \t\t\t\t\treturn arguments[i];\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn undefined;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tdefaultMessage: function( element, method ) {\n
Action.c(5):     \t\t\treturn this.findDefined(\n
Action.c(5):     \t\t\t\tthis.customMessage( element.name, method ),\n
Action.c(5):     \t\t\t\tthis.customDataMessage( element, method ),\n
Action.c(5):     \t\t\t\t// title is never undefined, so handle empty string as undefined\n
Action.c(5):     \t\t\t\t!this.settings.ignoreTitle && element.title || undefined,\n
Action.c(5):     \t\t\t\t$.validator.messages[method],\n
Action.c(5):     \t\t\t\t"<strong>Warning: No message defined for " + element.name + "</strong>"\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tformatAndAdd: function( element, rule ) {\n
Action.c(5):     \t\t\tvar message = this.defaultMessage( element, rule.method ),\n
Action.c(5):     \t\t\t\ttheregex = /\\$?\\{(\\d+)\\}/g;\n
Action.c(5):     \t\t\tif ( typeof message === "function" ) {\n
Action.c(5):     \t\t\t\tmessage = message.call(this, rule.parameters, element);\n
Action.c(5):     \t\t\t} else if (theregex.test(message)) {\n
Action.c(5):     \t\t\t\tmessage = $.validator.format(message.replace(theregex, "{$1}"), rule.parameters);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tthis.errorList.push({\n
Action.c(5):     \t\t\t\tmessage: message,\n
Action.c(5):     \t\t\t\telement: element\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \n
Action.c(5):     \t\t\tthis.errorMap[element.name] = message;\n
Action.c(5):     \t\t\tthis.submitted[element.name] = message;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\taddWrapper: function( toToggle ) {\n
Action.c(5):     \t\t\tif ( this.settings.wrapper ) {\n
Action.c(5):     \t\t\t\ttoToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn toToggle;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tdefaultShowErrors: function() {\n
Action.c(5):     \t\t\tvar i, elements;\n
Action.c(5):     \t\t\tfor ( i = 0; this.errorList[i]; i++ ) {\n
Action.c(5):     \t\t\t\tvar error = this.errorList[i];\n
Action.c(5):     \t\t\t\tif ( this.settings.highlight ) {\n
Action.c(5):     \t\t\t\t\tthis.settings.highlight.call( this, error.element, this.settings.errorClass, thi
Action.c(5):     s.settings.validClass );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tthis.showLabel( error.element, error.message );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( this.errorList.length ) {\n
Action.c(5):     \t\t\t\tthis.toShow = this.toShow.add( this.containers );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( this.settings.success ) {\n
Action.c(5):     \t\t\t\tfor ( i = 0; this.successList[i]; i++ ) {\n
Action.c(5):     \t\t\t\t\tthis.showLabel( this.successList[i] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( this.settings.unhighlight ) {\n
Action.c(5):     \t\t\t\tfor ( i = 0, elements = this.validElements(); elements[i]; i++ ) {\n
Action.c(5):     \t\t\t\t\tthis.settings.unhighlight.call( this, elements[i], this.settings.errorClass, thi
Action.c(5):     s.settings.validClass );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tthis.toHide = this.toHide.not( this.toShow );\n
Action.c(5):     \t\t\tthis.hideErrors();\n
Action.c(5):     \t\t\tthis.addWrapper( this.toShow ).show();\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tvalidElements: function() {\n
Action.c(5):     \t\t\treturn this.currentElements.not(this.invalidElements());\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tinvalidElements: function() {\n
Action.c(5):     \t\t\treturn $(this.errorList).map(function() {\n
Action.c(5):     \t\t\t\treturn this.element;\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tshowLabel: function( element, message ) {\n
Action.c(5):     \t\t\tvar label = this.errorsFor( element );\n
Action.c(5):     \t\t\tif ( label.length ) {\n
Action.c(5):     \t\t\t\t// refresh error/success class\n
Action.c(5):     \t\t\t\tlabel.removeClass( this.settings.validClass ).addClass( this.settings.errorClass )
Action.c(5):     ;\n
Action.c(5):     \t\t\t\t// replace message on existing label\n
Action.c(5):     \t\t\t\tlabel.html(message);\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\t// create label\n
Action.c(5):     \t\t\t\tlabel = $("<" + this.settings.errorElement + ">")\n
Action.c(5):     \t\t\t\t\t.attr("for", this.idOrName(element))\n
Action.c(5):     \t\t\t\t\t.addClass(this.settings.errorClass)\n
Action.c(5):     \t\t\t\t\t.html(message || "");\n
Action.c(5):     \t\t\t\tif ( this.settings.wrapper ) {\n
Action.c(5):     \t\t\t\t\t// make sure the element is visible, even in IE\n
Action.c(5):     \t\t\t\t\t// actually showing the wrapped element is handled elsewhere\n
Action.c(5):     \t\t\t\t\tlabel = label.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tif ( !this.labelContainer.append(label).length ) {\n
Action.c(5):     \t\t\t\t\tif ( this.settings.errorPlacement ) {\n
Action.c(5):     \t\t\t\t\t\tthis.settings.errorPlacement(label, $(element) );\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\tlabel.insertAfter(element);\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( !message && this.settings.success ) {\n
Action.c(5):     \t\t\t\tlabel.text("");\n
Action.c(5):     \t\t\t\tif ( typeof this.settings.success === "string" ) {\n
Action.c(5):     \t\t\t\t\tlabel.addClass( this.settings.success );\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tthis.settings.success( label, element );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tthis.toShow = this.toShow.add(label);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\terrorsFor: function( element ) {\n
Action.c(5):     \t\t\tvar name = this.idOrName(element);\n
Action.c(5):     \t\t\treturn this.errors().filter(function() {\n
Action.c(5):     \t\t\t\treturn $(this).attr("for") === name;\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tidOrName: function( element ) {\n
Action.c(5):     \t\t\treturn this.groups[element.name] || (this.checkable(element) ? element.name : elemen
Action.c(5):     t.id || element.name);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tvalidationTargetFor: function( element ) {\n
Action.c(5):     \t\t\t// if radio/checkbox, validate first element in group instead\n
Action.c(5):     \t\t\tif ( this.checkable(element) ) {\n
Action.c(5):     \t\t\t\telement = this.findByName( element.name ).not(this.settings.ignore)[0];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn element;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tcheckable: function( element ) {\n
Action.c(5):     \t\t\treturn (/radio|checkbox/i).test(element.type);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tfindByName: function( name ) {\n
Action.c(5):     \t\t\treturn $(this.currentForm).find("[name='" + name + "']");\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tgetLength: function( value, element ) {\n
Action.c(5):     \t\t\tswitch( element.nodeName.toLowerCase() ) {\n
Action.c(5):     \t\t\tcase "select":\n
Action.c(5):     \t\t\t\treturn $("option:selected", element).length;\n
Action.c(5):     \t\t\tcase "input":\n
Action.c(5):     \t\t\t\tif ( this.checkable( element) ) {\n
Action.c(5):     \t\t\t\t\treturn this.findByName(element.name).filter(":checked").length;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn value.length;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tdepend: function( param, element ) {\n
Action.c(5):     \t\t\treturn this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, elemen
Action.c(5):     t) : true;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tdependTypes: {\n
Action.c(5):     \t\t\t"boolean": function( param, element ) {\n
Action.c(5):     \t\t\t\treturn param;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t"string": function( param, element ) {\n
Action.c(5):     \t\t\t\treturn !!$(param, element.form).length;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t"function": function( param, element ) {\n
Action.c(5):     \t\t\t\treturn param(element);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\toptional: function( element ) {\n
Action.c(5):     \t\t\tvar val = this.elementValue(element);\n
Action.c(5):     \t\t\treturn !$.validator.methods.required.call(this, val, element) && "dependency-mismatc
Action.c(5):     h";\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tstartRequest: function( element ) {\n
Action.c(5):     \t\t\tif ( !this.pending[element.name] ) {\n
Action.c(5):     \t\t\t\tthis.pendingRequest++;\n
Action.c(5):     \t\t\t\tthis.pending[element.name] = true;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tstopRequest: function( element, valid ) {\n
Action.c(5):     \t\t\tthis.pendingRequest--;\n
Action.c(5):     \t\t\t// sometimes synchronization fails, make sure pendingRequest is never < 0\n
Action.c(5):     \t\t\tif ( this.pendingRequest < 0 ) {\n
Action.c(5):     \t\t\t\tthis.pendingRequest = 0;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tdelete this.pending[element.name];\n
Action.c(5):     \t\t\tif ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {\n
Action.c(5):     \t\t\t\t$(this.currentForm).submit();\n
Action.c(5):     \t\t\t\tthis.formSubmitted = false;\n
Action.c(5):     \t\t\t} else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {\n
Action.c(5):     \t\t\t\t$(this.currentForm).triggerHandler("invalid-form", [this
Action.c(5): t=213906ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery.validate.js" (RelFrameId=, Internal ID=256)
Action.c(5):     ]);\n
Action.c(5):     \t\t\t\tthis.formSubmitted = false;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tpreviousValue: function( element ) {\n
Action.c(5):     \t\t\treturn $.data(element, "previousValue") || $.data(element, "previousValue", {\n
Action.c(5):     \t\t\t\told: null,\n
Action.c(5):     \t\t\t\tvalid: true,\n
Action.c(5):     \t\t\t\tmessage: this.defaultMessage( element, "remote" )\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tclassRuleSettings: {\n
Action.c(5):     \t\trequired: {required: true},\n
Action.c(5):     \t\temail: {email: true},\n
Action.c(5):     \t\turl: {url: true},\n
Action.c(5):     \t\tdate: {date: true},\n
Action.c(5):     \t\tdateISO: {dateISO: true},\n
Action.c(5):     \t\tnumber: {number: true},\n
Action.c(5):     \t\tdigits: {digits: true},\n
Action.c(5):     \t\tcreditcard: {creditcard: true}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \taddClassRules: function( className, rules ) {\n
Action.c(5):     \t\tif ( className.constructor === String ) {\n
Action.c(5):     \t\t\tthis.classRuleSettings[className] = rules;\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t$.extend(this.classRuleSettings, className);\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tclassRules: function( element ) {\n
Action.c(5):     \t\tvar rules = {};\n
Action.c(5):     \t\tvar classes = $(element).attr("class");\n
Action.c(5):     \t\tif ( classes ) {\n
Action.c(5):     \t\t\t$.each(classes.split(" "), function() {\n
Action.c(5):     \t\t\t\tif ( this in $.validator.classRuleSettings ) {\n
Action.c(5):     \t\t\t\t\t$.extend(rules, $.validator.classRuleSettings[this]);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn rules;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tattributeRules: function( element ) {\n
Action.c(5):     \t\tvar rules = {};\n
Action.c(5):     \t\tvar $element = $(element);\n
Action.c(5):     \t\tvar type = $element[0].getAttribute("type");\n
Action.c(5):     \n
Action.c(5):     \t\tfor (var method in $.validator.methods) {\n
Action.c(5):     \t\t\tvar value;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// support for <input required> in both html5 and older browsers\n
Action.c(5):     \t\t\tif ( method === "required" ) {\n
Action.c(5):     \t\t\t\tvalue = $element.get(0).getAttribute(method);\n
Action.c(5):     \t\t\t\t// Some browsers return an empty string for the required attribute\n
Action.c(5):     \t\t\t\t// and non-HTML5 browsers might have required="" markup\n
Action.c(5):     \t\t\t\tif ( value === "" ) {\n
Action.c(5):     \t\t\t\t\tvalue = true;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t// force non-HTML5 browsers to return bool\n
Action.c(5):     \t\t\t\tvalue = !!value;\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tvalue = $element.attr(method);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// convert the value to a number for number inputs, and for text for backwards compa
Action.c(5):     bility\n
Action.c(5):     \t\t\t// allows type="date" and others to be compared as strings\n
Action.c(5):     \t\t\tif ( /min|max/.test( method ) && ( type === null || /number|range|text/.test( type )
Action.c(5):      ) ) {\n
Action.c(5):     \t\t\t\tvalue = Number(value);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( value ) {\n
Action.c(5):     \t\t\t\trules[method] = value;\n
Action.c(5):     \t\t\t} else if ( type === method && type !== 'range' ) {\n
Action.c(5):     \t\t\t\t// exception: the jquery validate 'range' method\n
Action.c(5):     \t\t\t\t// does not test for the html5 'range' type\n
Action.c(5):     \t\t\t\trules[method] = true;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// maxlength may be returned as -1, 2147483647 (IE) and 524288 (safari) for text input
Action.c(5):     s\n
Action.c(5):     \t\tif ( rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength) ) {\n
Action.c(5):     \t\t\tdelete rules.maxlength;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn rules;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tdataRules: function( element ) {\n
Action.c(5):     \t\tvar method, value,\n
Action.c(5):     \t\t\trules = {}, $element = $(element);\n
Action.c(5):     \t\tfor (method in $.validator.methods) {\n
Action.c(5):     \t\t\tvalue = $element.data("rule-" + method.toLowerCase());\n
Action.c(5):     \t\t\tif ( value !== undefined ) {\n
Action.c(5):     \t\t\t\trules[method] = value;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn rules;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tstaticRules: function( element ) {\n
Action.c(5):     \t\tvar rules = {};\n
Action.c(5):     \t\tvar validator = $.data(element.form, "validator");\n
Action.c(5):     \t\tif ( validator.settings.rules ) {\n
Action.c(5):     \t\t\trules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn rules;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tnormalizeRules: function( rules, element ) {\n
Action.c(5):     \t\t// handle dependency check\n
Action.c(5):     \t\t$.each(rules, function( prop, val ) {\n
Action.c(5):     \t\t\t// ignore rule when param is explicitly false, eg. required:false\n
Action.c(5):     \t\t\tif ( val === false ) {\n
Action.c(5):     \t\t\t\tdelete rules[prop];\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( val.param || val.depends ) {\n
Action.c(5):     \t\t\t\tvar keepRule = true;\n
Action.c(5):     \t\t\t\tswitch (typeof val.depends) {\n
Action.c(5):     \t\t\t\tcase "string":\n
Action.c(5):     \t\t\t\t\tkeepRule = !!$(val.depends, element.form).length;\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\tcase "function":\n
Action.c(5):     \t\t\t\t\tkeepRule = val.depends.call(element, element);\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tif ( keepRule ) {\n
Action.c(5):     \t\t\t\t\trules[prop] = val.param !== undefined ? val.param : true;\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tdelete rules[prop];\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\t// evaluate parameters\n
Action.c(5):     \t\t$.each(rules, function( rule, parameter ) {\n
Action.c(5):     \t\t\trules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\t// clean number parameters\n
Action.c(5):     \t\t$.each(['minlength', 'maxlength'], function() {\n
Action.c(5):     \t\t\tif ( rules[this] ) {\n
Action.c(5):     \t\t\t\trules[this] = Number(rules[this]);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t\t$.each(['rangelength', 'range'], function() {\n
Action.c(5):     \t\t\tvar parts;\n
Action.c(5):     \t\t\tif ( rules[this] ) {\n
Action.c(5):     \t\t\t\tif ( $.isArray(rules[this]) ) {\n
Action.c(5):     \t\t\t\t\trules[this] = [Number(rules[this][0]), Number(rules[this][1])];\n
Action.c(5):     \t\t\t\t} else if ( typeof rules[this] === "string" ) {\n
Action.c(5):     \t\t\t\t\tparts = rules[this].split(/[\\s,]+/);\n
Action.c(5):     \t\t\t\t\trules[this] = [Number(parts[0]), Number(parts[1])];\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\tif ( $.validator.autoCreateRanges ) {\n
Action.c(5):     \t\t\t// auto-create ranges\n
Action.c(5):     \t\t\tif ( rules.min && rules.max ) {\n
Action.c(5):     \t\t\t\trules.range = [rules.min, rules.max];\n
Action.c(5):     \t\t\t\tdelete rules.min;\n
Action.c(5):     \t\t\t\tdelete rules.max;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( rules.minlength && rules.maxlength ) {\n
Action.c(5):     \t\t\t\trules.rangelength = [rules.minlength, rules.maxlength];\n
Action.c(5):     \t\t\t\tdelete rules.minlength;\n
Action.c(5):     \t\t\t\tdelete rules.maxlength;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn rules;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Converts a simple string to a {string: true} rule, e.g., "required" to {required:true
Action.c(5):     }\n
Action.c(5):     \tnormalizeRule: function( data ) {\n
Action.c(5):     \t\tif ( typeof data === "string" ) {\n
Action.c(5):     \t\t\tvar transformed = {};\n
Action.c(5):     \t\t\t$.each(data.split(/\\s/), function() {\n
Action.c(5):     \t\t\t\ttransformed[this] = true;\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t\tdata = transformed;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn data;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// http://docs.jquery.com/Plugins/Validation/Validator/addMethod\n
Action.c(5):     \taddMethod: function( name, method, message ) {\n
Action.c(5):     \t\t$.validator.methods[name] = method;\n
Action.c(5):     \t\t$.validator.messages[name] = message !== undefined ? message : $.validator.messages[na
Action.c(5):     me];\n
Action.c(5):     \t\tif ( method.length < 3 ) {\n
Action.c(5):     \t\t\t$.validator.addClassRules(name, $.validator.normalizeRule(name));\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tmethods: {\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/required\n
Action.c(5):     \t\trequired: function( value, element, param ) {\n
Action.c(5):     \t\t\t// check if dependency is met\n
Action.c(5):     \t\t\tif ( !this.depend(param, element) ) {\n
Action.c(5):     \t\t\t\treturn "dependency-mismatch";\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( element.nodeName.toLowerCase() === "select" ) {\n
Action.c(5):     \t\t\t\t// could be an array for select-multiple or a string, both are fine this way\n
Action.c(5):     \t\t\t\tvar val = $(element).val();\n
Action.c(5):     \t\t\t\treturn val && val.length > 0;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( this.checkable(element) ) {\n
Action.c(5):     \t\t\t\treturn this.getLength(value, element) > 0;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn $.trim(value).length > 0;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/email\n
Action.c(5):     \t\temail: function( value, element ) {\n
Action.c(5):     \t\t\t// contributed by Scott Gonzalez: http://projects.scottsplayground.com/email_address
Action.c(5):     _validation/\n
Action.c(5):     \t\t\treturn this.optional(element) || /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~
Action.c(5):     ]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\
Action.c(5):     ?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09
Action.c(5):     )*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x
Action.c(5):     5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b
Action.c(5):     \\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x
Action.c(5):     0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\
Action.c(5):     uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[
Action.c(5):     \\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF
Action.c(5):     \\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[
Action.c(5):     \\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF90
Action.c(5):     0-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i.te
Action.c(5):     st(value);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/url\n
Action.c(5):     \t\turl: function( value, element ) {\n
Action.c(5):     \t\t\t// contributed by Scott Gonzalez: http://projects.scottsplayground.com/iri/\n
Action.c(5):     \t\t\treturn this.optional(element) || /^(https?|s?ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u
Action.c(5):     00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?
Action.c(5):     (((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\
Action.c(5):     d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]
Action.c(5):     |\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-
Action.c(5):     \\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFE
Action.c(5):     F])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\u
Action.c(5):     D7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFE
Action.c(5):     F])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\
Action.c(5):     uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\
Action.c(5):     uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a
Action.c(5):     -z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\
Action.c(5):     (\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF
Action.c(5):     0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#(((
Action.c(5):     [a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&
Action.c(5):     '\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/date\n
Action.c(5):     \t\tdate: function( value, element ) {\n
Action.c(5):     \t\t\treturn this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/dateISO\n
Action.c(5):     \t\tdateISO: function( value, element ) {\n
Action.c(5):     \t\t\treturn this.optional(element) || /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/.test(val
Action.c(5):     ue);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/number\n
Action.c(5):     \t\tnumber: function( value, element ) {\n
Action.c(5):     \t\t\treturn this.optional(element) || /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.te
Action.c(5):     st(value);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/digits\n
Action.c(5):     \t\tdigits: function( value, element ) {\n
Action.c(5):     \t\t\treturn this.optional(element) || /^\\d+$/.test(value);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/creditcard\n
Action.c(5):     \t\t// based on http://en.wikipedia.org/wiki/Luhn\n
Action.c(5):     \t\tcreditcard: function( value, element ) {\n
Action.c(5):     \t\t\tif ( this.optional(element) ) {\n
Action.c(5):     \t\t\t\treturn "dependency-mismatch";\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t// accept only spaces, digits and dashes\n
Action.c(5):     \t\t\tif ( /[^0-9 \\-]+/.test(value) ) {\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tvar nCheck = 0,\n
Action.c(5):     \t\t\t\tnDigit = 0,\n
Action.c(5):     \t\t\t\tbEven = false;\n
Action.c(5):     \n
Action.c(5):     \t\t\tvalue = value.replace(/\\D/g, "");\n
Action.c(5):     \n
Action.c(5):     \t\t\tfor (var n = value.length - 1; n >= 0; n--) {\n
Action.c(5):     \t\t\t\tvar cDigit = value.charAt(n);\n
Action.c(5):     \t\t\t\tnDigit = parseInt(cDigit, 10);\n
Action.c(5):     \t\t\t\tif ( bEven ) {\n
Action.c(5):     \t\t\t\t\tif ( (nDigit *= 2) > 9 ) {\n
Action.c(5):     \t\t\t\t\t\tnDigit -= 9;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tnCheck += nDigit;\n
Action.c(5):     \t\t\t\tbEven = !bEven;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn (nCheck % 10) === 0;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/minlength\n
Action.c(5):     \t\tminlength: function( value, element, param ) {\n
Action.c(5):     \t\t\tvar length = $.isArray( value ) ? value.length : this.getLength($.trim(value), eleme
Action.c(5):     nt);\n
Action.c(5):     \t\t\treturn this.optional(element) || length >= param;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/maxlength\n
Action.c(5):     \t\tmaxlength: function( value, element, param ) {\n
Action.c(5):     \t\t\tvar length = $.isArray( value ) ? value.length : this.getLength($.trim(value), eleme
Action.c(5):     nt);\n
Action.c(5):     \t\t\treturn this.optional(element) || length <= param;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/rangelength\n
Action.c(5):     \t\trangelength: function( value, element, param ) {\n
Action.c(5):     \t\t\tvar length = $.isArray( value ) ? value.length : this.getLength($.trim(value), eleme
Action.c(5):     nt);\n
Action.c(5):     \t\t\treturn this.optional(element) || ( length >= param[0] && length <= param[1] );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/min\n
Action.c(5):     \t\tmin: function( value, element, param ) {\n
Action.c(5):     \t\t\treturn this.optional(element) || value >= param;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/max\n
Action.c(5):     \t\tmax: function( value, element, param ) {\n
Action.c(5):     \t\t\treturn this.optional(element) || value <= param;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/range\n
Action.c(5):     \t\trange: function( value, element, param ) {\n
Action.c(5):     \t\t\treturn this.optional(element) || ( value >= param[0] && value <= param[1] );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/equalTo\n
Action.c(5):     \t\tequalTo: function( value, element, param ) {\n
Action.c(5):     \t\t\t// bind to the blur event of the target in order to revalidate whenever the target f
Action.c(5):     ield is updated\n
Action.c(5):     \t\t\t// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead\n
Action.c(5):     \t\t\tvar target = $(param);\n
Action.c(5):     \t\t\tif ( this.settings.onfocusout ) {\n
Action.c(5):     \t\t\t\ttarget.unbind(".validate-equalTo").bind("blur.validate-equalTo", function() {\n
Action.c(5):     \t\t\t\t\t$(element).valid();\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn value === target.val();\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// http://docs.jquery.com/Plugins/Validation/Methods/remote\n
Action.c(5):     \t\tremote: function( value, element, param ) {\n
Action.c(5):     \t\t\tif ( this.optional(element) ) {\n
Action.c(5):     \t\t\t\treturn "dependency-mismatch";\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tvar previous = this.previousValue(element);\n
Action.c(5):     \t\t\tif (!this.settings.messages[element.name] ) {\n
Action.c(5):     \t\t\t\tthis.settings.messages[element.name] = {};\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tprevious.originalMessage = this.settings.messages[element.name].remote;\n
Action.c(5):     \t\t\tthis.settings.messages[element.name].remote = previous.message;\n
Action.c(5):     \n
Action.c(5):     \t\t\tparam = typeof par
Action.c(5): t=213910ms: 2881-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery.validate.js" (RelFrameId=, Internal ID=256)
Action.c(5):     am === "string" && {url:param} || param;\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( previous.old === value ) {\n
Action.c(5):     \t\t\t\treturn previous.valid;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tprevious.old = value;\n
Action.c(5):     \t\t\tvar validator = this;\n
Action.c(5):     \t\t\tthis.startRequest(element);\n
Action.c(5):     \t\t\tvar data = {};\n
Action.c(5):     \t\t\tdata[element.name] = value;\n
Action.c(5):     \t\t\t$.ajax($.extend(true, {\n
Action.c(5):     \t\t\t\turl: param,\n
Action.c(5):     \t\t\t\tmode: "abort",\n
Action.c(5):     \t\t\t\tport: "validate" + element.name,\n
Action.c(5):     \t\t\t\tdataType: "json",\n
Action.c(5):     \t\t\t\tdata: data,\n
Action.c(5):     \t\t\t\tsuccess: function( response ) {\n
Action.c(5):     \t\t\t\t\tvalidator.settings.messages[element.name].remote = previous.originalMessage;\n
Action.c(5):     \t\t\t\t\tvar valid = response === true || response === "true";\n
Action.c(5):     \t\t\t\t\tif ( valid ) {\n
Action.c(5):     \t\t\t\t\t\tvar submitted = validator.formSubmitted;\n
Action.c(5):     \t\t\t\t\t\tvalidator.prepareElement(element);\n
Action.c(5):     \t\t\t\t\t\tvalidator.formSubmitted = submitted;\n
Action.c(5):     \t\t\t\t\t\tvalidator.successList.push(element);\n
Action.c(5):     \t\t\t\t\t\tdelete validator.invalid[element.name];\n
Action.c(5):     \t\t\t\t\t\tvalidator.showErrors();\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\tvar errors = {};\n
Action.c(5):     \t\t\t\t\t\tvar message = response || validator.defaultMessage( element, "remote" );\n
Action.c(5):     \t\t\t\t\t\terrors[element.name] = previous.message = $.isFunction(message) ? message(valu
Action.c(5):     e) : message;\n
Action.c(5):     \t\t\t\t\t\tvalidator.invalid[element.name] = true;\n
Action.c(5):     \t\t\t\t\t\tvalidator.showErrors(errors);\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tprevious.valid = valid;\n
Action.c(5):     \t\t\t\t\tvalidator.stopRequest(element, valid);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}, param));\n
Action.c(5):     \t\t\treturn "pending";\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // deprecated, use $.validator.format instead\n
Action.c(5):     $.format = $.validator.format;\n
Action.c(5):     \n
Action.c(5):     }(jQuery));\n
Action.c(5):     \n
Action.c(5):     // ajax mode: abort\n
Action.c(5):     // usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});\n
Action.c(5):     // if mode:"abort" is used, the previous request on that port (port can be undefined) is a
Action.c(5):     borted via XMLHttpRequest.abort()\n
Action.c(5):     (function($) {\n
Action.c(5):     \tvar pendingRequests = {};\n
Action.c(5):     \t// Use a prefilter if available (1.5+)\n
Action.c(5):     \tif ( $.ajaxPrefilter ) {\n
Action.c(5):     \t\t$.ajaxPrefilter(function( settings, _, xhr ) {\n
Action.c(5):     \t\t\tvar port = settings.port;\n
Action.c(5):     \t\t\tif ( settings.mode === "abort" ) {\n
Action.c(5):     \t\t\t\tif ( pendingRequests[port] ) {\n
Action.c(5):     \t\t\t\t\tpendingRequests[port].abort();\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tpendingRequests[port] = xhr;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\t// Proxy ajax\n
Action.c(5):     \t\tvar ajax = $.ajax;\n
Action.c(5):     \t\t$.ajax = function( settings ) {\n
Action.c(5):     \t\t\tvar mode = ( "mode" in settings ? settings : $.ajaxSettings ).mode,\n
Action.c(5):     \t\t\t\tport = ( "port" in settings ? settings : $.ajaxSettings ).port;\n
Action.c(5):     \t\t\tif ( mode === "abort" ) {\n
Action.c(5):     \t\t\t\tif ( pendingRequests[port] ) {\n
Action.c(5):     \t\t\t\t\tpendingRequests[port].abort();\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tpendingRequests[port] = ajax.apply(this, arguments);\n
Action.c(5):     \t\t\t\treturn pendingRequests[port];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn ajax.apply(this, arguments);\n
Action.c(5):     \t\t};\n
Action.c(5):     \t}\n
Action.c(5):     }(jQuery));\n
Action.c(5):     \n
Action.c(5):     // provides delegate(type: String, delegate: Selector, handler: Callback) plugin for easie
Action.c(5):     r event delegation\n
Action.c(5):     // handler is only called when $(event.target).is(delegate), in the scope of the jquery-ob
Action.c(5):     ject for event.target\n
Action.c(5):     (function($) {\n
Action.c(5):     \t$.extend($.fn, {\n
Action.c(5):     \t\tvalidateDelegate: function( delegate, type, handler ) {\n
Action.c(5):     \t\t\treturn this.bind(type, function( event ) {\n
Action.c(5):     \t\t\t\tvar target = $(event.target);\n
Action.c(5):     \t\t\t\tif ( target.is(delegate) ) {\n
Action.c(5):     \t\t\t\t\treturn handler.apply(target, arguments);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \t});\n
Action.c(5):     }(jQuery));\n
Action.c(5): t=213911ms: 307-byte response headers for "http://10.184.129.208/Platform/Scripts/jquery.validate.unobtrusive.js" (RelFrameId=, Internal ID=257)
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     Content-Encoding: gzip\r\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:38 GMT\r\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     ETag: "03b18d62d6fd31:0"\r\n
Action.c(5):     Vary: Accept-Encoding\r\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     Content-Length: 4784\r\n
Action.c(5):     \r\n
Action.c(5): t=213911ms: 4784-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery.validate.unobtrusive.js" (RelFrameId=, Internal ID=257)
Action.c(5): t=213911ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery.validate.unobtrusive.js" (RelFrameId=, Internal ID=257)
Action.c(5):     /* NUGET: BEGIN LICENSE TEXT\r\n
Action.c(5):      *\r\n
Action.c(5):      * Microsoft grants you the right to use these script files for the sole\r\n
Action.c(5):      * purpose of either: (i) interacting through your browser with the Microsoft\r\n
Action.c(5):      * website or online service, subject to the applicable licensing or use\r\n
Action.c(5):      * terms; or (ii) using the files as included with a Microsoft product subject\r\n
Action.c(5):      * to that product's license terms. Microsoft reserves all other rights to the\r\n
Action.c(5):      * files not expressly granted by Microsoft, whether by implication, estoppel\r\n
Action.c(5):      * or otherwise. Insofar as a script file is dual licensed under GPL,\r\n
Action.c(5):      * Microsoft neither took the code under GPL nor distributes it thereunder but\r\n
Action.c(5):      * under the terms set out in this paragraph. All notices and licenses\r\n
Action.c(5):      * below are for informational purposes only.\r\n
Action.c(5):      *\r\n
Action.c(5):      * NUGET: END LICENSE TEXT */\r\n
Action.c(5):     /*!\r\n
Action.c(5):     ** Unobtrusive validation support library for jQuery and jQuery Validate\r\n
Action.c(5):     ** Copyright (C) Microsoft Corporation. All rights reserved.\r\n
Action.c(5):     */\r\n
Action.c(5):     \r\n
Action.c(5):     /*jslint white: true, browser: true, onevar: true, undef: true, nomen: true, eqeqeq: true,
Action.c(5):      plusplus: true, bitwise: true, regexp: true, newcap: true, immed: true, strict: false */\r
Action.c(5):     \n
Action.c(5):     /*global document: false, jQuery: false */\r\n
Action.c(5):     \r\n
Action.c(5):     (function ($) {\r\n
Action.c(5):         var $jQval = $.validator,\r\n
Action.c(5):             adapters,\r\n
Action.c(5):             data_validation = "unobtrusiveValidation";\r\n
Action.c(5):     \r\n
Action.c(5):         function setValidationValues(options, ruleName, value) {\r\n
Action.c(5):             options.rules[ruleName] = value;\r\n
Action.c(5):             if (options.message) {\r\n
Action.c(5):                 options.messages[ruleName] = options.message;\r\n
Action.c(5):             }\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function splitAndTrim(value) {\r\n
Action.c(5):             return value.replace(/^\\s+|\\s+$/g, "").split(/\\s*,\\s*/g);\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function escapeAttributeValue(value) {\r\n
Action.c(5):             // As mentioned on http://api.jquery.com/category/selectors/\r\n
Action.c(5):             return value.replace(/([!"#$%&'()*+,./:;<=>?@\\[\\\\\\]^`{|}~])/g, "\\\\$1");\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function getModelPrefix(fieldName) {\r\n
Action.c(5):             return fieldName.substr(0, fieldName.lastIndexOf(".") + 1);\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function appendModelPrefix(value, prefix) {\r\n
Action.c(5):             if (value.indexOf("*.") === 0) {\r\n
Action.c(5):                 value = value.replace("*.", prefix);\r\n
Action.c(5):             }\r\n
Action.c(5):             return value;\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function onError(error, inputElement) {  // 'this' is the form element\r\n
Action.c(5):             var container = $(this).find("[data-valmsg-for='" + escapeAttributeValue(inputElem
Action.c(5):     ent[0].name) + "']"),\r\n
Action.c(5):                 replaceAttrValue = container.attr("data-valmsg-replace"),\r\n
Action.c(5):                 replace = replaceAttrValue ? $.parseJSON(replaceAttrValue) !== false : null;\r
Action.c(5):     \n
Action.c(5):     \r\n
Action.c(5):             container.removeClass("field-validation-valid").addClass("field-validation-error")
Action.c(5):     ;\r\n
Action.c(5):             error.data("unobtrusiveContainer", container);\r\n
Action.c(5):     \r\n
Action.c(5):             if (replace) {\r\n
Action.c(5):                 container.empty();\r\n
Action.c(5):                 error.removeClass("input-validation-error").appendTo(container);\r\n
Action.c(5):             }\r\n
Action.c(5):             else {\r\n
Action.c(5):                 error.hide();\r\n
Action.c(5):             }\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function onErrors(event, validator) {  // 'this' is the form element\r\n
Action.c(5):             var container = $(this).find("[data-valmsg-summary=true]"),\r\n
Action.c(5):                 list = container.find("ul");\r\n
Action.c(5):     \r\n
Action.c(5):             if (list && list.length && validator.errorList.length) {\r\n
Action.c(5):                 list.empty();\r\n
Action.c(5):                 container.addClass("validation-summary-errors").removeClass("validation-summar
Action.c(5):     y-valid");\r\n
Action.c(5):     \r\n
Action.c(5):                 $.each(validator.errorList, function () {\r\n
Action.c(5):                     $("<li />").html(this.message).appendTo(list);\r\n
Action.c(5):                 });\r\n
Action.c(5):             }\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function onSuccess(error) {  // 'this' is the form element\r\n
Action.c(5):             var container = error.data("unobtrusiveContainer"),\r\n
Action.c(5):                 replaceAttrValue = container.attr("data-valmsg-replace"),\r\n
Action.c(5):                 replace = replaceAttrValue ? $.parseJSON(replaceAttrValue) : null;\r\n
Action.c(5):     \r\n
Action.c(5):             if (container) {\r\n
Action.c(5):                 container.addClass("field-validation-valid").removeClass("field-validation-err
Action.c(5):     or");\r\n
Action.c(5):                 error.removeData("unobtrusiveContainer");\r\n
Action.c(5):     \r\n
Action.c(5):                 if (replace) {\r\n
Action.c(5):                     container.empty();\r\n
Action.c(5):                 }\r\n
Action.c(5):             }\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function onReset(event) {  // 'this' is the form element\r\n
Action.c(5):             var $form = $(this),\r\n
Action.c(5):                 key = '__jquery_unobtrusive_validation_form_reset';\r\n
Action.c(5):             if ($form.data(key)) {\r\n
Action.c(5):                 return;\r\n
Action.c(5):             }\r\n
Action.c(5):             // Set a flag that indicates we're currently resetting the form.\r\n
Action.c(5):             $form.data(key, true);\r\n
Action.c(5):             try {\r\n
Action.c(5):                 $form.data("validator").resetForm();\r\n
Action.c(5):             } finally {\r\n
Action.c(5):                 $form.removeData(key);\r\n
Action.c(5):             }\r\n
Action.c(5):     \r\n
Action.c(5):             $form.find(".validation-summary-errors")\r\n
Action.c(5):                 .addClass("validation-summary-valid")\r\n
Action.c(5):                 .removeClass("validation-summary-errors");\r\n
Action.c(5):             $form.find(".field-validation-error")\r\n
Action.c(5):                 .addClass("field-validation-valid")\r\n
Action.c(5):                 .removeClass("field-validation-error")\r\n
Action.c(5):                 .removeData("unobtrusiveContainer")\r\n
Action.c(5):                 .find(">*")  // If we were using valmsg-replace, get the underlying error\r\n
Action.c(5):                     .removeData("unobtrusiveContainer");\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         function validationInfo(form) {\r\n
Action.c(5):             var $form = $(form),\r\n
Action.c(5):                 result = $form.data(data_validation),\r\n
Action.c(5):                 onResetProxy = $.proxy(onReset, form),\r\n
Action.c(5):                 defaultOptions = $jQval.unobtrusive.options || {},\r\n
Action.c(5):                 execInContext = function (name, args) {\r\n
Action.c(5):                     var func = defaultOptions[name];\r\n
Action.c(5):                     func && $.isFunction(func) && func.apply(form, args);\r\n
Action.c(5):                 }\r\n
Action.c(5):     \r\n
Action.c(5):             if (!result) {\r\n
Action.c(5):                 result = {\r\n
Action.c(5):                     options: {  // options structure passed to jQuery Validate's validate() me
Action.c(5):     thod\r\n
Action.c(5):                         errorClass: defaultOptions.errorClass || "input-validation-error",\r\n
Action.c(5):                         errorElement: defaultOptions.errorElement || "span",\r\n
Action.c(5):                         errorPlacement: function () {\r\n
Action.c(5):                             onError.apply(form, arguments);\r\n
Action.c(5):                             execInContext("errorPlacement", arguments);\r\n
Action.c(5):                         },\r\n
Action.c(5):                         invalidHandler: function () {\r\n
Action.c(5):                             onErrors.apply(form, arguments);\r\n
Action.c(5):                             execInContext("invalidHandler", arguments);\r\n
Action.c(5):                         },\r\n
Action.c(5):                         messages: {},\r\n
Action.c(5):                         rules: {},\r\n
Action.c(5):                         success: function () {\r\n
Action.c(5):                             onSuccess.apply(form, arguments);\r\n
Action.c(5):                             execInContext("success", arguments);\r\n
Action.c(5):                         }\r\n
Action.c(5):                     },\r\n
Action.c(5):                     attachValidation: function () {\r\n
Action.c(5):                         $form\r\n
Action.c(5):                             .off("reset." + data_validation, onResetProxy)\r\n
Action.c(5):                             .on("reset." + data_validation, onResetProxy)\r\n
Action.c(5):                             .validate(this.options);\r\n
Action.c(5):                     },\r\n
Action.c(5):                     validate: function () {  // a validation function that is called by unobtr
Action.c(5):     usive Ajax\r\n
Action.c(5):                         $form.validate();\r\n
Action.c(5):                         return $form.valid();\r\n
Action.c(5):                     }\r\n
Action.c(5):                 };\r\n
Action.c(5):                 $form.data(data_validation, result);\r\n
Action.c(5):             }\r\n
Action.c(5):     \r\n
Action.c(5):             return result;\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         $jQval.unobtrusive = {\r\n
Action.c(5):             adapters: [],\r\n
Action.c(5):     \r\n
Action.c(5):             parseElement: function (element, skipAttach) {\r\n
Action.c(5):                 /// <summary>\r\n
Action.c(5):                 /// Parses a single HTML element for unobtrusive validation attributes.\r\n
Action.c(5):                 /// </summary>\r\n
Action.c(5):                 /// <param name="element" domElement="true">The HTML element to be parsed.</pa
Action.c(5):     ram>\r\n
Action.c(5):                 /// <param name="skipAttach" type="Boolean">[Optional] true to skip attaching 
Action.c(5):     the\r\n
Action.c(5):                 /// validation to the form. If parsing just this single element, you should sp
Action.c(5):     ecify true.\r\n
Action.c(5):                 /// If parsing several elements, you should specify false, and manually attach
Action.c(5):      the validation\r\n
Action.c(5):                 /// to the form when you are finished. The default is false.</param>\r\n
Action.c(5):                 var $element = $(element),\r\n
Action.c(5):                     form = $element.parents("form")[0],\r\n
Action.c(5):                     valInfo, rules, messages;\r\n
Action.c(5):     \r\n
Action.c(5):                 if (!form) {  // Cannot do client-side validation without a form\r\n
Action.c(5):                     return;\r\n
Action.c(5):                 }\r\n
Action.c(5):     \r\n
Action.c(5):                 valInfo = validationInfo(form);\r\n
Action.c(5):                 valInfo.options.rules[element.name] = rules = {};\r\n
Action.c(5):                 valInfo.options.messages[element.name] = messages = {};\r\n
Action.c(5):     \r\n
Action.c(5):                 $.each(this.adapters, function () {\r\n
Action.c(5):                     var prefix = "data-val-" + this.name,\r\n
Action.c(5):                         message = $element.attr(prefix),\r\n
Action.c(5):                         paramValues = {};\r\n
Action.c(5):     \r\n
Action.c(5):                     if (message !== undefined) {  // Compare against undefined, because an emp
Action.c(5):     ty message is legal (and falsy)\r\n
Action.c(5):                         prefix += "-";\r\n
Action.c(5):     \r\n
Action.c(5):                         $.each(this.params, function () {\r\n
Action.c(5):                             paramValues[this] = $element.attr(prefix + this);\r\n
Action.c(5):                         });\r\n
Action.c(5):     \r\n
Action.c(5):                         this.adapt({\r\n
Action.c(5):                             element: element,\r\n
Action.c(5):                             form: form,\r\n
Action.c(5):                             message: message,\r\n
Action.c(5):                             params: paramValues,\r\n
Action.c(5):                             rules: rules,\r\n
Action.c(5):                             messages: messages\r\n
Action.c(5):                         });\r\n
Action.c(5):                     }\r\n
Action.c(5):                 });\r\n
Action.c(5):     \r\n
Action.c(5):                 $.extend(rules, { "__dummy__": true });\r\n
Action.c(5):     \r\n
Action.c(5):                 if (!skipAttach) {\r\n
Action.c(5):                     valInfo.attachValidation();\r\n
Action.c(5):                 }\r\n
Action.c(5):             },\r\n
Action.c(5):     \r\n
Action.c(5):             parse: function (selector) {\r\n
Action.c(5):                 /// <summary>\r\n
Action.c(5):                 /// Parses all the HTML elements in the specified selector. It looks for input
Action.c(5):      elements decorated\r\n
Action.c(5):                 /// with the [data-val=true] attribute value and enables validation according 
Action.c(5):     to the data-val-*\r\n
Action.c(5):                 /// attribute values.\r\n
Action.c(5):                 /// </summary>\r\n
Action.c(5):                 /// <param name="selector" type="String">Any valid jQuery selector.</param>\r\n
Action.c(5):     \r\n
Action.c(5):                 // $forms includes all forms in selector's DOM hierarchy (parent, children and
Action.c(5):      self) that have at least one\r\n
Action.c(5):                 // element with data-val=true\r\n
Action.c(5):                 var $selector = $(selector),\r\n
Action.c(5):                     $forms = $selector.parents()\r\n
Action.c(5):                                       .addBack()\r\n
Action.c(5):                                       .filter("form")\r\n
Action.c(5):                                       .add($selector.find("form"))\r\n
Action.c(5):                                       .has("[data-val=true]");\r\n
Action.c(5):     \r\n
Action.c(5):                 $selector.find("[data-val=true]").each(function () {\r\n
Action.c(5):                     $jQval.unobtrusive.parseElement(this, true);\r\n
Action.c(5):                 });\r\n
Action.c(5):     \r\n
Action.c(5):                 $forms.each(function () {\r\n
Action.c(5):                     var info = validationInfo(this);\r\n
Action.c(5):                     if (info) {\r\n
Action.c(5):                         info.attachValidation();\r\n
Action.c(5):                     }\r\n
Action.c(5):                 });\r\n
Action.c(5):             }\r\n
Action.c(5):         };\r\n
Action.c(5):     \r\n
Action.c(5):         adapters = $jQval.unobtrusive.adapters;\r\n
Action.c(5):     \r\n
Action.c(5):         adapters.add = function (adapterName, params, fn) {\r\n
Action.c(5):             /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate
Action.c(5):      validation.</summary>\r\n
Action.c(5):             /// <param name="adapterName" type="String">The name of the adapter to be added. T
Action.c(5):     his matches the name used\r\n
Action.c(5):             /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>\r
Action.c(5):     \n
Action.c(5):             /// <param name="params" type="Array" optional="true">[Optional] An array of param
Action.c(5):     eter names (strings) that will\r\n
Action.c(5):             /// be extracted from the data-val-nnnn-mmmm HTML attributes (where nnnn is the ad
Action.c(5):     apter name, and\r\n
Action.c(5):             /// mmmm is the parameter name).</param>\r\n
Action.c(5):             /// <param name="fn" type="Function">The function to call, which adapts the values
Action.c(5):      from the HTML\r\n
Action.c(5):             /// attributes into jQuery Validate rules and/or messages.</param>\r\n
Action.c(5):             /// <returns type="jQuery.validator.unobtrusive.adapters" />\r\n
Action.c(5):             if (!fn) {  // Called with no params, just a function\r\n
Action.c(5):                 fn = params;\r\n
Action.c(5):                 params = [];\r\n
Action.c(5):             }\r\n
Action.c(5):             this.push({ name: adapterName, params: params, adapt: fn });\r\n
Action.c(5):             return this;\r\n
Action.c(5):         };\r\n
Action.c(5):     \r\n
Action.c(5):         adapters.addBool = function (adapterName, ruleName) {\r\n
Action.c(5):             /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate
Action.c(5):      validation, where\r\n
Action.c(5):             /// the jQuery Validate validation rule has no parameter values.</summary>\r\n
Action.c(5):             /// <param name="adapterName" type="String">The name of the adapter to be added. T
Action.c(5):     his matches the name used\r\n
Action.c(5):             /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>\r
Action.c(5):     \n
Action.c(5):             /// <param name="ruleName" type="String" optional="true">[Optional] The name of th
Action.c(5):     e jQuery Validate rule. If not provided, the value\r\n
Action.c(5):             /// of adapterName will be used instead.</param>\r\n
Action.c(5):             /// <returns type="jQuery.validato
Action.c(5): t=213914ms: 7540-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery.validate.unobtrusive.js" (RelFrameId=, Internal ID=257)
Action.c(5):     r.unobtrusive.adapters" />\r\n
Action.c(5):             return this.add(adapterName, function (options) {\r\n
Action.c(5):                 setValidationValues(options, ruleName || adapterName, true);\r\n
Action.c(5):             });\r\n
Action.c(5):         };\r\n
Action.c(5):     \r\n
Action.c(5):         adapters.addMinMax = function (adapterName, minRuleName, maxRuleName, minMaxRuleName, 
Action.c(5):     minAttribute, maxAttribute) {\r\n
Action.c(5):             /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate
Action.c(5):      validation, where\r\n
Action.c(5):             /// the jQuery Validate validation has three potential rules (one for min-only, on
Action.c(5):     e for max-only, and\r\n
Action.c(5):             /// one for min-and-max). The HTML parameters are expected to be named -min and -m
Action.c(5):     ax.</summary>\r\n
Action.c(5):             /// <param name="adapterName" type="String">The name of the adapter to be added. T
Action.c(5):     his matches the name used\r\n
Action.c(5):             /// in the data-val-nnnn HTML attribute (where nnnn is the adapter name).</param>\r
Action.c(5):     \n
Action.c(5):             /// <param name="minRuleName" type="String">The name of the jQuery Validate rule t
Action.c(5):     o be used when you only\r\n
Action.c(5):             /// have a minimum value.</param>\r\n
Action.c(5):             /// <param name="maxRuleName" type="String">The name of the jQuery Validate rule t
Action.c(5):     o be used when you only\r\n
Action.c(5):             /// have a maximum value.</param>\r\n
Action.c(5):             /// <param name="minMaxRuleName" type="String">The name of the jQuery Validate rul
Action.c(5):     e to be used when you\r\n
Action.c(5):             /// have both a minimum and maximum value.</param>\r\n
Action.c(5):             /// <param name="minAttribute" type="String" optional="true">[Optional] The name o
Action.c(5):     f the HTML attribute that\r\n
Action.c(5):             /// contains the minimum value. The default is "min".</param>\r\n
Action.c(5):             /// <param name="maxAttribute" type="String" optional="true">[Optional] The name o
Action.c(5):     f the HTML attribute that\r\n
Action.c(5):             /// contains the maximum value. The default is "max".</param>\r\n
Action.c(5):             /// <returns type="jQuery.validator.unobtrusive.adapters" />\r\n
Action.c(5):             return this.add(adapterName, [minAttribute || "min", maxAttribute || "max"], funct
Action.c(5):     ion (options) {\r\n
Action.c(5):                 var min = options.params.min,\r\n
Action.c(5):                     max = options.params.max;\r\n
Action.c(5):     \r\n
Action.c(5):                 if (min && max) {\r\n
Action.c(5):                     setValidationValues(options, minMaxRuleName, [min, max]);\r\n
Action.c(5):                 }\r\n
Action.c(5):                 else if (min) {\r\n
Action.c(5):                     setValidationValues(options, minRuleName, min);\r\n
Action.c(5):                 }\r\n
Action.c(5):                 else if (max) {\r\n
Action.c(5):                     setValidationValues(options, maxRuleName, max);\r\n
Action.c(5):                 }\r\n
Action.c(5):             });\r\n
Action.c(5):         };\r\n
Action.c(5):     \r\n
Action.c(5):         adapters.addSingleVal = function (adapterName, attribute, ruleName) {\r\n
Action.c(5):             /// <summary>Adds a new adapter to convert unobtrusive HTML into a jQuery Validate
Action.c(5):      validation, where\r\n
Action.c(5):             /// the jQuery Validate validation rule has a single value.</summary>\r\n
Action.c(5):             /// <param name="adapterName" type="String">The name of the adapter to be added. T
Action.c(5):     his matches the name used\r\n
Action.c(5):             /// in the data-val-nnnn HTML attribute(where nnnn is the adapter name).</param>\r
Action.c(5):     \n
Action.c(5):             /// <param name="attribute" type="String">[Optional] The name of the HTML attribut
Action.c(5):     e that contains the value.\r\n
Action.c(5):             /// The default is "val".</param>\r\n
Action.c(5):             /// <param name="ruleName" type="String" optional="true">[Optional] The name of th
Action.c(5):     e jQuery Validate rule. If not provided, the value\r\n
Action.c(5):             /// of adapterName will be used instead.</param>\r\n
Action.c(5):             /// <returns type="jQuery.validator.unobtrusive.adapters" />\r\n
Action.c(5):             return this.add(adapterName, [attribute || "val"], function (options) {\r\n
Action.c(5):                 setValidationValues(options, ruleName || adapterName, options.params[attribute
Action.c(5):     ]);\r\n
Action.c(5):             });\r\n
Action.c(5):         };\r\n
Action.c(5):     \r\n
Action.c(5):         $jQval.addMethod("__dummy__", function (value, element, params) {\r\n
Action.c(5):             return true;\r\n
Action.c(5):         });\r\n
Action.c(5):     \r\n
Action.c(5):         $jQval.addMethod("regex", function (value, element, params) {\r\n
Action.c(5):             var match;\r\n
Action.c(5):             if (this.optional(element)) {\r\n
Action.c(5):                 return true;\r\n
Action.c(5):             }\r\n
Action.c(5):     \r\n
Action.c(5):             match = new RegExp(params).exec(value);\r\n
Action.c(5):             return (match && (match.index === 0) && (match[0].length === value.length));\r\n
Action.c(5):         });\r\n
Action.c(5):     \r\n
Action.c(5):         $jQval.addMethod("nonalphamin", function (value, element, nonalphamin) {\r\n
Action.c(5):             var match;\r\n
Action.c(5):             if (nonalphamin) {\r\n
Action.c(5):                 match = value.match(/\\W/g);\r\n
Action.c(5):                 match = match && match.length >= nonalphamin;\r\n
Action.c(5):             }\r\n
Action.c(5):             return match;\r\n
Action.c(5):         });\r\n
Action.c(5):     \r\n
Action.c(5):         if ($jQval.methods.extension) {\r\n
Action.c(5):             adapters.addSingleVal("accept", "mimtype");\r\n
Action.c(5):             adapters.addSingleVal("extension", "extension");\r\n
Action.c(5):         } else {\r\n
Action.c(5):             // for backward compatibility, when the 'extension' validation method does not exi
Action.c(5):     st, such as with versions\r\n
Action.c(5):             // of JQuery Validation plugin prior to 1.10, we should use the 'accept' method fo
Action.c(5):     r\r\n
Action.c(5):             // validating the extension, and ignore mime-type validations as they are not supp
Action.c(5):     orted.\r\n
Action.c(5):             adapters.addSingleVal("extension", "extension", "accept");\r\n
Action.c(5):         }\r\n
Action.c(5):     \r\n
Action.c(5):         adapters.addSingleVal("regex", "pattern");\r\n
Action.c(5):         adapters.addBool("creditcard").addBool("date").addBool("digits").addBool("email").addB
Action.c(5):     ool("number").addBool("url");\r\n
Action.c(5):         adapters.addMinMax("length", "minlength", "maxlength", "rangelength").addMinMax("range
Action.c(5):     ", "min", "max", "range");\r\n
Action.c(5):         adapters.addMinMax("minlength", "minlength").addMinMax("maxlength", "minlength", "maxl
Action.c(5):     ength");\r\n
Action.c(5):         adapters.add("equalto", ["other"], function (options) {\r\n
Action.c(5):             var prefix = getModelPrefix(options.element.name),\r\n
Action.c(5):                 other = options.params.other,\r\n
Action.c(5):                 fullOtherName = appendModelPrefix(other, prefix),\r\n
Action.c(5):                 element = $(options.form).find(":input").filter("[name='" + escapeAttributeVal
Action.c(5):     ue(fullOtherName) + "']")[0];\r\n
Action.c(5):     \r\n
Action.c(5):             setValidationValues(options, "equalTo", element);\r\n
Action.c(5):         });\r\n
Action.c(5):         adapters.add("required", function (options) {\r\n
Action.c(5):             // jQuery Validate equates "required" with "mandatory" for checkbox elements\r\n
Action.c(5):             if (options.element.tagName.toUpperCase() !== "INPUT" || options.element.type.toUp
Action.c(5):     perCase() !== "CHECKBOX") {\r\n
Action.c(5):                 setValidationValues(options, "required", true);\r\n
Action.c(5):             }\r\n
Action.c(5):         });\r\n
Action.c(5):         adapters.add("remote", ["url", "type", "additionalfields"], function (options) {\r\n
Action.c(5):             var value = {\r\n
Action.c(5):                 url: options.params.url,\r\n
Action.c(5):                 type: options.params.type || "GET",\r\n
Action.c(5):                 data: {}\r\n
Action.c(5):             },\r\n
Action.c(5):                 prefix = getModelPrefix(options.element.name);\r\n
Action.c(5):     \r\n
Action.c(5):             $.each(splitAndTrim(options.params.additionalfields || options.element.name), func
Action.c(5):     tion (i, fieldName) {\r\n
Action.c(5):                 var paramName = appendModelPrefix(fieldName, prefix);\r\n
Action.c(5):                 value.data[paramName] = function () {\r\n
Action.c(5):                     var field = $(options.form).find(":input").filter("[name='" + escapeAttrib
Action.c(5):     uteValue(paramName) + "']");\r\n
Action.c(5):                     // For checkboxes and radio buttons, only pick up values from checked fiel
Action.c(5):     ds.\r\n
Action.c(5):                     if (field.is(":checkbox")) {\r\n
Action.c(5):                         return field.filter(":checked").val() || field.filter(":hidden").val()
Action.c(5):      || '';\r\n
Action.c(5):                     }\r\n
Action.c(5):                     else if (field.is(":radio")) {\r\n
Action.c(5):                         return field.filter(":checked").val() || '';\r\n
Action.c(5):                     }\r\n
Action.c(5):                     return field.val();\r\n
Action.c(5):                 };\r\n
Action.c(5):             });\r\n
Action.c(5):     \r\n
Action.c(5):             setValidationValues(options, "remote", value);\r\n
Action.c(5):         });\r\n
Action.c(5):         adapters.add("password", ["min", "nonalphamin", "regex"], function (options) {\r\n
Action.c(5):             if (options.params.min) {\r\n
Action.c(5):                 setValidationValues(options, "minlength", options.params.min);\r\n
Action.c(5):             }\r\n
Action.c(5):             if (options.params.nonalphamin) {\r\n
Action.c(5):                 setValidationValues(options, "nonalphamin", options.params.nonalphamin);\r\n
Action.c(5):             }\r\n
Action.c(5):             if (options.params.regex) {\r\n
Action.c(5):                 setValidationValues(options, "regex", options.params.regex);\r\n
Action.c(5):             }\r\n
Action.c(5):         });\r\n
Action.c(5):     \r\n
Action.c(5):         $(function () {\r\n
Action.c(5):             $jQval.unobtrusive.parse(document);\r\n
Action.c(5):         });\r\n
Action.c(5):     }(jQuery));
Action.c(5): t=213917ms: 308-byte response headers for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     Content-Encoding: gzip\r\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:38 GMT\r\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     ETag: "03b18d62d6fd31:0"\r\n
Action.c(5):     Vary: Accept-Encoding\r\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     Content-Length: 16109\r\n
Action.c(5):     \r\n
Action.c(5): t=213917ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5): t=213917ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5):     /* NUGET: BEGIN LICENSE TEXT\n
Action.c(5):      *\n
Action.c(5):      * Microsoft grants you the right to use these script files for the sole\n
Action.c(5):      * purpose of either: (i) interacting through your browser with the Microsoft\n
Action.c(5):      * website or online service, subject to the applicable licensing or use\n
Action.c(5):      * terms; or (ii) using the files as included with a Microsoft product subject\n
Action.c(5):      * to that product's license terms. Microsoft reserves all other rights to the\n
Action.c(5):      * files not expressly granted by Microsoft, whether by implication, estoppel\n
Action.c(5):      * or otherwise. Insofar as a script file is dual licensed under GPL,\n
Action.c(5):      * Microsoft neither took the code under GPL nor distributes it thereunder but\n
Action.c(5):      * under the terms set out in this paragraph. All notices and licenses\n
Action.c(5):      * below are for informational purposes only.\n
Action.c(5):      *\n
Action.c(5):      * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton; http://www.modernizr.com/license/\n
Action.c(5):      *\n
Action.c(5):      * Includes matchMedia polyfill; Copyright (c) 2010 Filament Group, Inc; http://opensource
Action.c(5):     .org/licenses/MIT\n
Action.c(5):      *\n
Action.c(5):      * Includes material adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/mast
Action.c(5):     er/es5-shim.js; Copyright 2009-2012 by contributors; http://opensource.org/licenses/MIT\n
Action.c(5):      *\n
Action.c(5):      * Includes material from css-support; Copyright (c) 2005-2012 Diego Perini; https://githu
Action.c(5):     b.com/dperini/css-support/blob/master/LICENSE\n
Action.c(5):      *\n
Action.c(5):      * NUGET: END LICENSE TEXT */\n
Action.c(5):     \n
Action.c(5):     /*!\n
Action.c(5):      * Modernizr v2.6.2\n
Action.c(5):      * www.modernizr.com\n
Action.c(5):      *\n
Action.c(5):      * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n
Action.c(5):      * Available under the BSD and MIT licenses: www.modernizr.com/license/\n
Action.c(5):      */\n
Action.c(5):     \n
Action.c(5):     /*\n
Action.c(5):      * Modernizr tests which native CSS3 and HTML5 features are available in\n
Action.c(5):      * the current UA and makes the results available to you in two ways:\n
Action.c(5):      * as properties on a global Modernizr object, and as classes on the\n
Action.c(5):      * <html> element. This information allows you to progressively enhance\n
Action.c(5):      * your pages with a granular level of control over the experience.\n
Action.c(5):      *\n
Action.c(5):      * Modernizr has an optional (not included) conditional resource loader\n
Action.c(5):      * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n
Action.c(5):      * To get a build that includes Modernizr.load(), as well as choosing\n
Action.c(5):      * which tests to include, go to www.modernizr.com/download/\n
Action.c(5):      *\n
Action.c(5):      * Authors        Faruk Ates, Paul Irish, Alex Sexton\n
Action.c(5):      * Contributors   Ryan Seddon, Ben Alman\n
Action.c(5):      */\n
Action.c(5):     \n
Action.c(5):     window.Modernizr = (function( window, document, undefined ) {\n
Action.c(5):     \n
Action.c(5):         var version = '2.6.2',\n
Action.c(5):     \n
Action.c(5):         Modernizr = {},\n
Action.c(5):     \n
Action.c(5):         /*>>cssclasses*/\n
Action.c(5):         // option for enabling the HTML classes to be added\n
Action.c(5):         enableClasses = true,\n
Action.c(5):         /*>>cssclasses*/\n
Action.c(5):     \n
Action.c(5):         docElement = document.documentElement,\n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * Create our "modernizr" element that we do most feature tests on.\n
Action.c(5):          */\n
Action.c(5):         mod = 'modernizr',\n
Action.c(5):         modElem = document.createElement(mod),\n
Action.c(5):         mStyle = modElem.style,\n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * Create the input element for various Web Forms feature tests.\n
Action.c(5):          */\n
Action.c(5):         inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\n
Action.c(5):     \n
Action.c(5):         /*>>smile*/\n
Action.c(5):         smile = ':)',\n
Action.c(5):         /*>>smile*/\n
Action.c(5):     \n
Action.c(5):         toString = {}.toString,\n
Action.c(5):     \n
Action.c(5):         // TODO :: make the prefixes more granular\n
Action.c(5):         /*>>prefixes*/\n
Action.c(5):         // List of property values to set for css tests. See ticket #21\n
Action.c(5):         prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n
Action.c(5):         /*>>prefixes*/\n
Action.c(5):     \n
Action.c(5):         /*>>domprefixes*/\n
Action.c(5):         // Following spec is to expose vendor-specific style properties as:\n
Action.c(5):         //   elem.style.WebkitBorderRadius\n
Action.c(5):         // and the following would be incorrect:\n
Action.c(5):         //   elem.style.webkitBorderRadius\n
Action.c(5):     \n
Action.c(5):         // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n
Action.c(5):         // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n
Action.c(5):         //   erik.eae.net/archives/2008/03/10/21.48.10/\n
Action.c(5):     \n
Action.c(5):         // More here: github.com/Modernizr/Modernizr/issues/issue/21\n
Action.c(5):         omPrefixes = 'Webkit Moz O ms',\n
Action.c(5):     \n
Action.c(5):         cssomPrefixes = omPrefixes.split(' '),\n
Action.c(5):     \n
Action.c(5):         domPrefixes = omPrefixes.toLowerCase().split(' '),\n
Action.c(5):         /*>>domprefixes*/\n
Action.c(5):     \n
Action.c(5):         /*>>ns*/\n
Action.c(5):         ns = {'svg': 'http://www.w3.org/2000/svg'},\n
Action.c(5):         /*>>ns*/\n
Action.c(5):     \n
Action.c(5):         tests = {},\n
Action.c(5):         inputs = {},\n
Action.c(5):         attrs = {},\n
Action.c(5):     \n
Action.c(5):         classes = [],\n
Action.c(5):     \n
Action.c(5):         slice = classes.slice,\n
Action.c(5):     \n
Action.c(5):         featureName, // used in testing loop\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /*>>teststyles*/\n
Action.c(5):         // Inject element with style element and some CSS rules\n
Action.c(5):         injectElementWithStyles = function( rule, callback, nodes, testnames ) {\n
Action.c(5):     \n
Action.c(5):           var style, ret, node, docOverflow,\n
Action.c(5):               div = document.createElement('div'),\n
Action.c(5):               // After page load injecting a fake body doesn't work so check if body exists\n
Action.c(5):               body = document.body,\n
Action.c(5):               // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body el
Action.c(5):     ement, so we fake it.\n
Action.c(5):               fakeBody = body || document.createElement('body');\n
Action.c(5):     \n
Action.c(5):           if ( parseInt(nodes, 10) ) {\n
Action.c(5):               // In order not to give false positives we create a node for each test\n
Action.c(5):               // This also allows the method to scale for unspecified uses\n
Action.c(5):               while ( nodes-- ) {\n
Action.c(5):                   node = document.createElement('div');\n
Action.c(5):                   node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n
Action.c(5):                   div.appendChild(node);\n
Action.c(5):               }\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be
Action.c(5):      removed\n
Action.c(5):           // when injected with innerHTML. To get around this you need to prepend the 'NoScope
Action.c(5):     ' element\n
Action.c(5):           // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with
Action.c(5):      our measurements.\n
Action.c(5):           // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n
Action.c(5):           // Documents served as xml will throw if using &shy; so use xml friendly encoded ver
Action.c(5):     sion. See issue #277\n
Action.c(5):           style = ['&#173;','<style id="s', mod, '">', rule, '</style>'].join('');\n
Action.c(5):           div.id = mod;\n
Action.c(5):           // IE6 will false positive on some tests due to the style element inside the test di
Action.c(5):     v somehow interfering offsetHeight, so insert it into body or fakebody.\n
Action.c(5):           // Opera will act all quirky when injecting elements in documentElement when page is
Action.c(5):      served as xml, needs fakebody too. #270\n
Action.c(5):           (body ? div : fakeBody).innerHTML += style;\n
Action.c(5):           fakeBody.appendChild(div);\n
Action.c(5):           if ( !body ) {\n
Action.c(5):               //avoid crashing IE8, if background image is used\n
Action.c(5):               fakeBody.style.background = '';\n
Action.c(5):               //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollb
Action.c(5):     ars are visible\n
Action.c(5):               fakeBody.style.overflow = 'hidden';\n
Action.c(5):               docOverflow = docElement.style.overflow;\n
Action.c(5):               docElement.style.overflow = 'hidden';\n
Action.c(5):               docElement.appendChild(fakeBody);\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           ret = callback(div, rule);\n
Action.c(5):           // If this is done after page load we don't want to remove the body so check if body
Action.c(5):      exists\n
Action.c(5):           if ( !body ) {\n
Action.c(5):               fakeBody.parentNode.removeChild(fakeBody);\n
Action.c(5):               docElement.style.overflow = docOverflow;\n
Action.c(5):           } else {\n
Action.c(5):               div.parentNode.removeChild(div);\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           return !!ret;\n
Action.c(5):     \n
Action.c(5):         },\n
Action.c(5):         /*>>teststyles*/\n
Action.c(5):     \n
Action.c(5):         /*>>mq*/\n
Action.c(5):         // adapted from matchMedia polyfill\n
Action.c(5):         // by Scott Jehl and Paul Irish\n
Action.c(5):         // gist.github.com/786768\n
Action.c(5):         testMediaQuery = function( mq ) {\n
Action.c(5):     \n
Action.c(5):           var matchMedia = window.matchMedia || window.msMatchMedia;\n
Action.c(5):           if ( matchMedia ) {\n
Action.c(5):             return matchMedia(mq).matches;\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           var bool;\n
Action.c(5):     \n
Action.c(5):           injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }'
Action.c(5):     , function( node ) {\n
Action.c(5):             bool = (window.getComputedStyle ?\n
Action.c(5):                       getComputedStyle(node, null) :\n
Action.c(5):                       node.currentStyle)['position'] == 'absolute';\n
Action.c(5):           });\n
Action.c(5):     \n
Action.c(5):           return bool;\n
Action.c(5):     \n
Action.c(5):          },\n
Action.c(5):          /*>>mq*/\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /*>>hasevent*/\n
Action.c(5):         //\n
Action.c(5):         // isEventSupported determines if a given element supports the given event\n
Action.c(5):         // kangax.github.com/iseventsupported/\n
Action.c(5):         //\n
Action.c(5):         // The following results are known incorrects:\n
Action.c(5):         //   Modernizr.hasEvent("webkitTransitionEnd", elem) // false negative\n
Action.c(5):         //   Modernizr.hasEvent("textInput") // in Webkit. github.com/Modernizr/Modernizr/issu
Action.c(5):     es/333\n
Action.c(5):         //   ...\n
Action.c(5):         isEventSupported = (function() {\n
Action.c(5):     \n
Action.c(5):           var TAGNAMES = {\n
Action.c(5):             'select': 'input', 'change': 'input',\n
Action.c(5):             'submit': 'form', 'reset': 'form',\n
Action.c(5):             'error': 'img', 'load': 'img', 'abort': 'img'\n
Action.c(5):           };\n
Action.c(5):     \n
Action.c(5):           function isEventSupported( eventName, element ) {\n
Action.c(5):     \n
Action.c(5):             element = element || document.createElement(TAGNAMES[eventName] || 'div');\n
Action.c(5):             eventName = 'on' + eventName;\n
Action.c(5):     \n
Action.c(5):             // When using `setAttribute`, IE skips "unload", WebKit skips "unload" and "resize
Action.c(5):     ", whereas `in` "catches" those\n
Action.c(5):             var isSupported = eventName in element;\n
Action.c(5):     \n
Action.c(5):             if ( !isSupported ) {\n
Action.c(5):               // If it has no `setAttribute` (i.e. doesn't implement Node interface), try gene
Action.c(5):     ric element\n
Action.c(5):               if ( !element.setAttribute ) {\n
Action.c(5):                 element = document.createElement('div');\n
Action.c(5):               }\n
Action.c(5):               if ( element.setAttribute && element.removeAttribute ) {\n
Action.c(5):                 element.setAttribute(eventName, '');\n
Action.c(5):                 isSupported = is(element[eventName], 'function');\n
Action.c(5):     \n
Action.c(5):                 // If property was created, "remove it" (by setting value to `undefined`)\n
Action.c(5):                 if ( !is(element[eventName], 'undefined') ) {\n
Action.c(5):                   element[eventName] = undefined;\n
Action.c(5):                 }\n
Action.c(5):                 element.removeAttribute(eventName);\n
Action.c(5):               }\n
Action.c(5):             }\n
Action.c(5):     \n
Action.c(5):             element = null;\n
Action.c(5):             return isSupported;\n
Action.c(5):           }\n
Action.c(5):           return isEventSupported;\n
Action.c(5):         })(),\n
Action.c(5):         /*>>hasevent*/\n
Action.c(5):     \n
Action.c(5):         // TODO :: Add flag for hasownprop ? didn't last time\n
Action.c(5):     \n
Action.c(5):         // hasOwnProperty shim by kangax needed for Safari 2.0 support\n
Action.c(5):         _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n
Action.c(5):     \n
Action.c(5):         if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n
Action.c(5):           hasOwnProp = function (object, property) {\n
Action.c(5):             return _hasOwnProperty.call(object, property);\n
Action.c(5):           };\n
Action.c(5):         }\n
Action.c(5):         else {\n
Action.c(5):           hasOwnProp = function (object, property) { /* yes, this can give false positives/neg
Action.c(5):     atives, but most of the time we don't care about those */\n
Action.c(5):             return ((property in object) && is(object.constructor.prototype[property], 'undefi
Action.c(5):     ned'));\n
Action.c(5):           };\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js
Action.c(5):     \n
Action.c(5):         // es5.github.com/#x15.3.4.5\n
Action.c(5):     \n
Action.c(5):         if (!Function.prototype.bind) {\n
Action.c(5):           Function.prototype.bind = function bind(that) {\n
Action.c(5):     \n
Action.c(5):             var target = this;\n
Action.c(5):     \n
Action.c(5):             if (typeof target != "function") {\n
Action.c(5):                 throw new TypeError();\n
Action.c(5):             }\n
Action.c(5):     \n
Action.c(5):             var args = slice.call(arguments, 1),\n
Action.c(5):                 bound = function () {\n
Action.c(5):     \n
Action.c(5):                 if (this instanceof bound) {\n
Action.c(5):     \n
Action.c(5):                   var F = function(){};\n
Action.c(5):                   F.prototype = target.prototype;\n
Action.c(5):                   var self = new F();\n
Action.c(5):     \n
Action.c(5):                   var result = target.apply(\n
Action.c(5):                       self,\n
Action.c(5):                       args.concat(slice.call(arguments))\n
Action.c(5):                   );\n
Action.c(5):                   if (Object(result) === result) {\n
Action.c(5):                       return result;\n
Action.c(5):                   }\n
Action.c(5):                   return self;\n
Action.c(5):     \n
Action.c(5):                 } else {\n
Action.c(5):     \n
Action.c(5):                   return target.apply(\n
Action.c(5):                       that,\n
Action.c(5):                       args.concat(slice.call(arguments))\n
Action.c(5):                   );\n
Action.c(5):     \n
Action.c(5):                 }\n
Action.c(5):     \n
Action.c(5):             };\n
Action.c(5):     \n
Action.c(5):             return bound;\n
Action.c(5):           };\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * setCss applies given styles to the Modernizr DOM node.\n
Action.c(5):          */\n
Action.c(5):         function setCss( str ) {\n
Action.c(5):             mStyle.cssText = str;\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * setCssAll extrapolates all vendor-specific css strings.\n
Action.c(5):          */\n
Action.c(5):         function setCssAll( str1, str2 ) {\n
Action.c(5):             return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * is returns a boolean for if typeof obj is exactly type.\n
Action.c(5):          */\n
Action.c(5):         function is( obj, type ) {\n
Action.c(5):             return typeof obj === type;\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * contains returns a boolean for if substr is found within str.\n
Action.c(5):          */\n
Action.c(5):         function contains( str, substr ) {\n
Action.c(5):             return !!~('' + str).indexOf(substr);\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         /*>>testprop*/\n
Action.c(5):     \n
Action.c(5):         // testProps is a generic CSS / DOM property test.\n
Action.c(5):     \n
Action.c(5):         // In testing support for a given CSS property, it's legit to test:\n
Action.c(5):         //    `elem.style[styleName] !== undefined`\n
Action.c(5):         // If the property is supported it will return an empty string,\n
Action.c(5):         // if unsupported it will return undefined.\n
Action.c(5):     \n
Action.c(5):         // We'll take advantage of this quick test and skip setting a style\n
Action.c(5):         // on our modernizr element, but instead just testing undefined vs\n
Action.c(5):         // empty string.\n
Action.c(5):     \n
Action.c(5):         // Because the testing of the CSS property names (with "-", as\n
Action.c(5):         // opposed to the camelCase DOM properties) is non-portable and\n
Action.c(5):         // non-standard but works in WebKit and IE (but not Gecko or Opera),\n
Action.c(5):         // we explicitly reject properties with dashes so that authors\n
Action.c(5):         // developing in WebKit or IE first don't end 
Action.c(5): t=213921ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5):     up with\n
Action.c(5):         // browser-specific content by accident.\n
Action.c(5):     \n
Action.c(5):         function testProps( props, prefixed ) {\n
Action.c(5):             for ( var i in props ) {\n
Action.c(5):                 var prop = props[i];\n
Action.c(5):                 if ( !contains(prop, "-") && mStyle[prop] !== undefined ) {\n
Action.c(5):                     return prefixed == 'pfx' ? prop : true;\n
Action.c(5):                 }\n
Action.c(5):             }\n
Action.c(5):             return false;\n
Action.c(5):         }\n
Action.c(5):         /*>>testprop*/\n
Action.c(5):     \n
Action.c(5):         // TODO :: add testDOMProps\n
Action.c(5):         /**\n
Action.c(5):          * testDOMProps is a generic DOM property test; if a browser supports\n
Action.c(5):          *   a certain property, it won't return undefined for it.\n
Action.c(5):          */\n
Action.c(5):         function testDOMProps( props, obj, elem ) {\n
Action.c(5):             for ( var i in props ) {\n
Action.c(5):                 var item = obj[props[i]];\n
Action.c(5):                 if ( item !== undefined) {\n
Action.c(5):     \n
Action.c(5):                     // return the property name as a string\n
Action.c(5):                     if (elem === false) return props[i];\n
Action.c(5):     \n
Action.c(5):                     // let's bind a function\n
Action.c(5):                     if (is(item, 'function')){\n
Action.c(5):                       // default to autobind unless override\n
Action.c(5):                       return item.bind(elem || obj);\n
Action.c(5):                     }\n
Action.c(5):     \n
Action.c(5):                     // return the unbound function or obj or value\n
Action.c(5):                     return item;\n
Action.c(5):                 }\n
Action.c(5):             }\n
Action.c(5):             return false;\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         /*>>testallprops*/\n
Action.c(5):         /**\n
Action.c(5):          * testPropsAll tests a list of DOM properties we want to check against.\n
Action.c(5):          *   We specify literally ALL possible (known and/or likely) properties on\n
Action.c(5):          *   the element including the non-vendor prefixed one, for forward-\n
Action.c(5):          *   compatibility.\n
Action.c(5):          */\n
Action.c(5):         function testPropsAll( prop, prefixed, elem ) {\n
Action.c(5):     \n
Action.c(5):             var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n
Action.c(5):                 props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):             // did they call .prefixed('boxSizing') or are we just testing a prop?\n
Action.c(5):             if(is(prefixed, "string") || is(prefixed, "undefined")) {\n
Action.c(5):               return testProps(props, prefixed);\n
Action.c(5):     \n
Action.c(5):             // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n
Action.c(5):             } else {\n
Action.c(5):               props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n
Action.c(5):               return testDOMProps(props, prefixed, elem);\n
Action.c(5):             }\n
Action.c(5):         }\n
Action.c(5):         /*>>testallprops*/\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * Tests\n
Action.c(5):          * -----\n
Action.c(5):          */\n
Action.c(5):     \n
Action.c(5):         // The *new* flexbox\n
Action.c(5):         // dev.w3.org/csswg/css3-flexbox\n
Action.c(5):     \n
Action.c(5):         tests['flexbox'] = function() {\n
Action.c(5):           return testPropsAll('flexWrap');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // The *old* flexbox\n
Action.c(5):         // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n
Action.c(5):     \n
Action.c(5):         tests['flexboxlegacy'] = function() {\n
Action.c(5):             return testPropsAll('boxDirection');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // On the S60 and BB Storm, getContext exists, but always returns undefined\n
Action.c(5):         // so we actually have to call getContext() to verify\n
Action.c(5):         // github.com/Modernizr/Modernizr/issues/issue/97/\n
Action.c(5):     \n
Action.c(5):         tests['canvas'] = function() {\n
Action.c(5):             var elem = document.createElement('canvas');\n
Action.c(5):             return !!(elem.getContext && elem.getContext('2d'));\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         tests['canvastext'] = function() {\n
Action.c(5):             return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2
Action.c(5):     d').fillText, 'function'));\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // webk.it/70117 is tracking a legit WebGL feature detect proposal\n
Action.c(5):     \n
Action.c(5):         // We do a soft detect which may false positive in order to avoid\n
Action.c(5):         // an expensive context creation: bugzil.la/732441\n
Action.c(5):     \n
Action.c(5):         tests['webgl'] = function() {\n
Action.c(5):             return !!window.WebGLRenderingContext;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         /*\n
Action.c(5):          * The Modernizr.touch test only indicates if the browser supports\n
Action.c(5):          *    touch events, which does not necessarily reflect a touchscreen\n
Action.c(5):          *    device, as evidenced by tablets running Windows 7 or, alas,\n
Action.c(5):          *    the Palm Pre / WebOS (touch) phones.\n
Action.c(5):          *\n
Action.c(5):          * Additionally, Chrome (desktop) used to lie about its support on this,\n
Action.c(5):          *    but that has since been rectified: crbug.com/36415\n
Action.c(5):          *\n
Action.c(5):          * We also test for Firefox 4 Multitouch Support.\n
Action.c(5):          *\n
Action.c(5):          * For more info, see: modernizr.github.com/Modernizr/touch.html\n
Action.c(5):          */\n
Action.c(5):     \n
Action.c(5):         tests['touch'] = function() {\n
Action.c(5):             var bool;\n
Action.c(5):     \n
Action.c(5):             if(('ontouchstart' in window) || window.DocumentTouch && document instanceof Docum
Action.c(5):     entTouch) {\n
Action.c(5):               bool = true;\n
Action.c(5):             } else {\n
Action.c(5):               injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{
Action.c(5):     #modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\n
Action.c(5):                 bool = node.offsetTop === 9;\n
Action.c(5):               });\n
Action.c(5):             }\n
Action.c(5):     \n
Action.c(5):             return bool;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // geolocation is often considered a trivial feature detect...\n
Action.c(5):         // Turns out, it's quite tricky to get right:\n
Action.c(5):         //\n
Action.c(5):         // Using !!navigator.geolocation does two things we don't want. It:\n
Action.c(5):         //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n
Action.c(5):         //   2. Disables page caching in WebKit: webk.it/43956\n
Action.c(5):         //\n
Action.c(5):         // Meanwhile, in Firefox < 8, an about:config setting could expose\n
Action.c(5):         // a false positive that would throw an exception: bugzil.la/688158\n
Action.c(5):     \n
Action.c(5):         tests['geolocation'] = function() {\n
Action.c(5):             return 'geolocation' in navigator;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['postmessage'] = function() {\n
Action.c(5):           return !!window.postMessage;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // Chrome incognito mode used to throw an exception when using openDatabase\n
Action.c(5):         // It doesn't anymore.\n
Action.c(5):         tests['websqldatabase'] = function() {\n
Action.c(5):           return !!window.openDatabase;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // Vendors had inconsistent prefixing with the experimental Indexed DB:\n
Action.c(5):         // - Webkit's implementation is accessible through webkitIndexedDB\n
Action.c(5):         // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n
Action.c(5):         // For speed, we don't test the legacy (and beta-only) indexedDB\n
Action.c(5):         tests['indexedDB'] = function() {\n
Action.c(5):           return !!testPropsAll("indexedDB", window);\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // documentMode logic from YUI to filter out IE8 Compat Mode\n
Action.c(5):         //   which false positives.\n
Action.c(5):         tests['hashchange'] = function() {\n
Action.c(5):           return isEventSupported('hashchange', window) && (document.documentMode === undefine
Action.c(5):     d || document.documentMode > 7);\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // Per 1.6:\n
Action.c(5):         // This used to be Modernizr.historymanagement but the longer\n
Action.c(5):         // name has been deprecated in favor of a shorter and property-matching one.\n
Action.c(5):         // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n
Action.c(5):         // and in the first release thereafter disappear entirely.\n
Action.c(5):         tests['history'] = function() {\n
Action.c(5):           return !!(window.history && history.pushState);\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         tests['draganddrop'] = function() {\n
Action.c(5):             var div = document.createElement('div');\n
Action.c(5):             return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n
Action.c(5):         // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n
Action.c(5):         // FF10 still uses prefixes, so check for it until then.\n
Action.c(5):         // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n
Action.c(5):         tests['websockets'] = function() {\n
Action.c(5):             return 'WebSocket' in window || 'MozWebSocket' in window;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // css-tricks.com/rgba-browser-support/\n
Action.c(5):         tests['rgba'] = function() {\n
Action.c(5):             // Set an rgba() color and check the returned value\n
Action.c(5):     \n
Action.c(5):             setCss('background-color:rgba(150,255,150,.5)');\n
Action.c(5):     \n
Action.c(5):             return contains(mStyle.backgroundColor, 'rgba');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         tests['hsla'] = function() {\n
Action.c(5):             // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n
Action.c(5):             //   except IE9 who retains it as hsla\n
Action.c(5):     \n
Action.c(5):             setCss('background-color:hsla(120,40%,100%,.5)');\n
Action.c(5):     \n
Action.c(5):             return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor
Action.c(5):     , 'hsla');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         tests['multiplebgs'] = function() {\n
Action.c(5):             // Setting multiple images AND a color on the background shorthand property\n
Action.c(5):             //  and then querying the style.background property value for the number of\n
Action.c(5):             //  occurrences of "url(" is a reliable method for detecting ACTUAL support for th
Action.c(5):     is!\n
Action.c(5):     \n
Action.c(5):             setCss('background:url(https://),url(https://),red url(https://)');\n
Action.c(5):     \n
Action.c(5):             // If the UA supports multiple backgrounds, there should be three occurrences\n
Action.c(5):             //   of the string "url(" in the return value for elemStyle.background\n
Action.c(5):     \n
Action.c(5):             return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // this will false positive in Opera Mini\n
Action.c(5):         //   github.com/Modernizr/Modernizr/issues/396\n
Action.c(5):     \n
Action.c(5):         tests['backgroundsize'] = function() {\n
Action.c(5):             return testPropsAll('backgroundSize');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         tests['borderimage'] = function() {\n
Action.c(5):             return testPropsAll('borderImage');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // Super comprehensive table about all the unique implementations of\n
Action.c(5):         // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n
Action.c(5):     \n
Action.c(5):         tests['borderradius'] = function() {\n
Action.c(5):             return testPropsAll('borderRadius');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // WebOS unfortunately false positives on this test.\n
Action.c(5):         tests['boxshadow'] = function() {\n
Action.c(5):             return testPropsAll('boxShadow');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // FF3.0 will false positive on this test\n
Action.c(5):         tests['textshadow'] = function() {\n
Action.c(5):             return document.createElement('div').style.textShadow === '';\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['opacity'] = function() {\n
Action.c(5):             // Browsers that actually have CSS Opacity implemented have done so\n
Action.c(5):             //  according to spec, which means their return values are within the\n
Action.c(5):             //  range of [0.0,1.0] - including the leading zero.\n
Action.c(5):     \n
Action.c(5):             setCssAll('opacity:.55');\n
Action.c(5):     \n
Action.c(5):             // The non-literal . in this regex is intentional:\n
Action.c(5):             //   German Chrome returns this value as 0,55\n
Action.c(5):             // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n
Action.c(5):             return (/^0.55$/).test(mStyle.opacity);\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // Note, Android < 4 will pass this test, but can only animate\n
Action.c(5):         //   a single property at a time\n
Action.c(5):         //   daneden.me/2011/12/putting-up-with-androids-bullshit/\n
Action.c(5):         tests['cssanimations'] = function() {\n
Action.c(5):             return testPropsAll('animationName');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['csscolumns'] = function() {\n
Action.c(5):             return testPropsAll('columnCount');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['cssgradients'] = function() {\n
Action.c(5):             /**\n
Action.c(5):              * For CSS Gradients syntax, please see:\n
Action.c(5):              * webkit.org/blog/175/introducing-css-gradients/\n
Action.c(5):              * developer.mozilla.org/en/CSS/-moz-linear-gradient\n
Action.c(5):              * developer.mozilla.org/en/CSS/-moz-radial-gradient\n
Action.c(5):              * dev.w3.org/csswg/css3-images/#gradients-\n
Action.c(5):              */\n
Action.c(5):     \n
Action.c(5):             var str1 = 'background-image:',\n
Action.c(5):                 str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n
Action.c(5):                 str3 = 'linear-gradient(left top,#9f9, white);';\n
Action.c(5):     \n
Action.c(5):             setCss(\n
Action.c(5):                  // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n
Action.c(5):                   (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n
Action.c(5):                  // standard syntax             // trailing 'background-image:'\n
Action.c(5):                   prefixes.join(str3 + str1)).slice(0, -str1.length)\n
Action.c(5):             );\n
Action.c(5):     \n
Action.c(5):             return contains(mStyle.backgroundImage, 'gradient');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['cssreflections'] = function() {\n
Action.c(5):             return testPropsAll('boxReflect');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['csstransforms'] = function() {\n
Action.c(5):             return !!testPropsAll('transform');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['csstransforms3d'] = function() {\n
Action.c(5):     \n
Action.c(5):             var ret = !!testPropsAll('perspective');\n
Action.c(5):     \n
Action.c(5):             // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n
Action.c(5):             //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n
Action.c(5):             //   some conditions. As a result, Webkit typically recognizes the syntax but\n
Action.c(5):             //   will sometimes throw a false positive, thus we must do a more thorough check:
Action.c(5):     \n
Action.c(5):             if ( ret && 'webkitPerspective' in docElement.style ) {\n
Action.c(5):     \n
Action.c(5):               // Webkit allows this media query to succeed only if the feature is enabled.\n
Action.c(5):               // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n
Action.c(5):               injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr
Action.c(5):     {left:9px;position:absolute;height:3px;}}', function( node, rule ) {\n
Action.c(5):                 ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n
Action.c(5):               });\n
Action.c(5):             }\n
Action.c(5):             return ret;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['csstransitions'] = function() {\n
Action.c(5):             return testPropsAll('transition');\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /*>>fontface*/\n
Action.c(5):         // @font-face detection routine by Diego Perini\n
Action.c(5):         // javascript.nwbox.com/CSSSupport/\n
Action.c(5):     \n
Action.c(5):         // false positives:\n
Action.c(5):         //   WebOS github.com/Modernizr/Modernizr/issues/342\n
Action.c(5):         //   WP7   github.com/Modernizr/Modernizr/issues/538\n
Action.c(5):         tests['fontface'] = function() {\n
Action.c(5):             var bool;\n
Action.c(5):     \n
Action.c(5):             injectElementWithStyles('@font-face {font-family:"fo
Action.c(5): t=213924ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5):     nt";src:url("https://")}', function( node, rule ) {\n
Action.c(5):               var style = document.getElementById('smodernizr'),\n
Action.c(5):                   sheet = style.sheet || style.styleSheet,\n
Action.c(5):                   cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].c
Action.c(5):     ssText : sheet.cssText || '') : '';\n
Action.c(5):     \n
Action.c(5):               bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n
Action.c(5):             });\n
Action.c(5):     \n
Action.c(5):             return bool;\n
Action.c(5):         };\n
Action.c(5):         /*>>fontface*/\n
Action.c(5):     \n
Action.c(5):         // CSS generated content detection\n
Action.c(5):         tests['generatedcontent'] = function() {\n
Action.c(5):             var bool;\n
Action.c(5):     \n
Action.c(5):             injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:"',smile,'";v
Action.c(5):     isibility:hidden;font:3px/1 a}'].join(''), function( node ) {\n
Action.c(5):               bool = node.offsetHeight >= 3;\n
Action.c(5):             });\n
Action.c(5):     \n
Action.c(5):             return bool;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // These tests evaluate support of the video/audio elements, as well as\n
Action.c(5):         // testing what types of content they support.\n
Action.c(5):         //\n
Action.c(5):         // We're using the Boolean constructor here, so that we can extend the value\n
Action.c(5):         // e.g.  Modernizr.video     // true\n
Action.c(5):         //       Modernizr.video.ogg // 'probably'\n
Action.c(5):         //\n
Action.c(5):         // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n
Action.c(5):         //                     thx to NielsLeenheer and zcorpan\n
Action.c(5):     \n
Action.c(5):         // Note: in some older browsers, "no" was a return value instead of empty string.\n
Action.c(5):         //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n
Action.c(5):         //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n
Action.c(5):     \n
Action.c(5):         tests['video'] = function() {\n
Action.c(5):             var elem = document.createElement('video'),\n
Action.c(5):                 bool = false;\n
Action.c(5):     \n
Action.c(5):             // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224
Action.c(5):     \n
Action.c(5):             try {\n
Action.c(5):                 if ( bool = !!elem.canPlayType ) {\n
Action.c(5):                     bool      = new Boolean(bool);\n
Action.c(5):                     bool.ogg  = elem.canPlayType('video/ogg; codecs="theora"')      .replace(/
Action.c(5):     ^no$/,'');\n
Action.c(5):     \n
Action.c(5):                     // Without QuickTime, this value will be `undefined`. github.com/Modernizr
Action.c(5):     /Modernizr/issues/546\n
Action.c(5):                     bool.h264 = elem.canPlayType('video/mp4; codecs="avc1.42E01E"') .replace(/
Action.c(5):     ^no$/,'');\n
Action.c(5):     \n
Action.c(5):                     bool.webm = elem.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/
Action.c(5):     ^no$/,'');\n
Action.c(5):                 }\n
Action.c(5):     \n
Action.c(5):             } catch(e) { }\n
Action.c(5):     \n
Action.c(5):             return bool;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         tests['audio'] = function() {\n
Action.c(5):             var elem = document.createElement('audio'),\n
Action.c(5):                 bool = false;\n
Action.c(5):     \n
Action.c(5):             try {\n
Action.c(5):                 if ( bool = !!elem.canPlayType ) {\n
Action.c(5):                     bool      = new Boolean(bool);\n
Action.c(5):                     bool.ogg  = elem.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,
Action.c(5):     '');\n
Action.c(5):                     bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,
Action.c(5):     '');\n
Action.c(5):     \n
Action.c(5):                     // Mimetypes accepted:\n
Action.c(5):                     //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_vid
Action.c(5):     eo_elements\n
Action.c(5):                     //   bit.ly/iphoneoscodecs\n
Action.c(5):                     bool.wav  = elem.canPlayType('audio/wav; codecs="1"')     .replace(/^no$/,
Action.c(5):     '');\n
Action.c(5):                     bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n
Action.c(5):                                   elem.canPlayType('audio/aac;'))             .replace(/^no$/,
Action.c(5):     '');\n
Action.c(5):                 }\n
Action.c(5):             } catch(e) { }\n
Action.c(5):     \n
Action.c(5):             return bool;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // In FF4, if disabled, window.localStorage should === null.\n
Action.c(5):     \n
Action.c(5):         // Normally, we could not test that directly and need to do a\n
Action.c(5):         //   `('localStorage' in window) && ` test first because otherwise Firefox will\n
Action.c(5):         //   throw bugzil.la/365772 if cookies are disabled\n
Action.c(5):     \n
Action.c(5):         // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n
Action.c(5):         // will throw the exception:\n
Action.c(5):         //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n
Action.c(5):         // Peculiarly, getItem and removeItem calls do not throw.\n
Action.c(5):     \n
Action.c(5):         // Because we are forced to try/catch this, we'll go aggressive.\n
Action.c(5):     \n
Action.c(5):         // Just FWIW: IE8 Compat mode supports these features completely:\n
Action.c(5):         //   www.quirksmode.org/dom/html5.html\n
Action.c(5):         // But IE8 doesn't support either with local files\n
Action.c(5):     \n
Action.c(5):         tests['localstorage'] = function() {\n
Action.c(5):             try {\n
Action.c(5):                 localStorage.setItem(mod, mod);\n
Action.c(5):                 localStorage.removeItem(mod);\n
Action.c(5):                 return true;\n
Action.c(5):             } catch(e) {\n
Action.c(5):                 return false;\n
Action.c(5):             }\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         tests['sessionstorage'] = function() {\n
Action.c(5):             try {\n
Action.c(5):                 sessionStorage.setItem(mod, mod);\n
Action.c(5):                 sessionStorage.removeItem(mod);\n
Action.c(5):                 return true;\n
Action.c(5):             } catch(e) {\n
Action.c(5):                 return false;\n
Action.c(5):             }\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['webworkers'] = function() {\n
Action.c(5):             return !!window.Worker;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         tests['applicationcache'] = function() {\n
Action.c(5):             return !!window.applicationCache;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // Thanks to Erik Dahlstrom\n
Action.c(5):         tests['svg'] = function() {\n
Action.c(5):             return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').cre
Action.c(5):     ateSVGRect;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // specifically for SVG inline in HTML, not within XHTML\n
Action.c(5):         // test page: paulirish.com/demo/inline-svg\n
Action.c(5):         tests['inlinesvg'] = function() {\n
Action.c(5):           var div = document.createElement('div');\n
Action.c(5):           div.innerHTML = '<svg/>';\n
Action.c(5):           return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // SVG SMIL animation\n
Action.c(5):         tests['smil'] = function() {\n
Action.c(5):             return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.crea
Action.c(5):     teElementNS(ns.svg, 'animate')));\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         // This test is only for clip paths in SVG proper, not clip paths on HTML content\n
Action.c(5):         // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n
Action.c(5):     \n
Action.c(5):         // However read the comments to dig into applying SVG clippaths to HTML content here:\n
Action.c(5):         //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n
Action.c(5):         tests['svgclippaths'] = function() {\n
Action.c(5):             return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.cre
Action.c(5):     ateElementNS(ns.svg, 'clipPath')));\n
Action.c(5):         };\n
Action.c(5):     \n
Action.c(5):         /*>>webforms*/\n
Action.c(5):         // input features and input types go directly onto the ret object, bypassing the tests
Action.c(5):      loop.\n
Action.c(5):         // Hold this guy to execute in a moment.\n
Action.c(5):         function webforms() {\n
Action.c(5):             /*>>input*/\n
Action.c(5):             // Run through HTML5's new input attributes to see if the UA understands any.\n
Action.c(5):             // We're using f which is the <input> element created early on\n
Action.c(5):             // Mike Taylr has created a comprehensive resource for testing these attributes\n
Action.c(5):             //   when applied to all input types:\n
Action.c(5):             //   miketaylr.com/code/input-type-attr.html\n
Action.c(5):             // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.ht
Action.c(5):     ml#input-type-attr-summary\n
Action.c(5):     \n
Action.c(5):             // Only input placeholder is tested while textarea's placeholder is not.\n
Action.c(5):             // Currently Safari 4 and Opera 11 have support only for the input placeholder\n
Action.c(5):             // Both tests are available in feature-detects/forms-placeholder.js\n
Action.c(5):             Modernizr['input'] = (function( props ) {\n
Action.c(5):                 for ( var i = 0, len = props.length; i < len; i++ ) {\n
Action.c(5):                     attrs[ props[i] ] = !!(props[i] in inputElem);\n
Action.c(5):                 }\n
Action.c(5):                 if (attrs.list){\n
Action.c(5):                   // safari false positive's on datalist: webk.it/74252\n
Action.c(5):                   // see also github.com/Modernizr/Modernizr/issues/146\n
Action.c(5):                   attrs.list = !!(document.createElement('datalist') && window.HTMLDataListEle
Action.c(5):     ment);\n
Action.c(5):                 }\n
Action.c(5):                 return attrs;\n
Action.c(5):             })('autocomplete autofocus list placeholder max min multiple pattern required step
Action.c(5):     '.split(' '));\n
Action.c(5):             /*>>input*/\n
Action.c(5):     \n
Action.c(5):             /*>>inputtypes*/\n
Action.c(5):             // Run through HTML5's new input types to see if the UA understands any.\n
Action.c(5):             //   This is put behind the tests runloop because it doesn't return a\n
Action.c(5):             //   true/false like all the other tests; instead, it returns an object\n
Action.c(5):             //   containing each input type with its corresponding true/false value\n
Action.c(5):     \n
Action.c(5):             // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n
Action.c(5):             Modernizr['inputtypes'] = (function(props) {\n
Action.c(5):     \n
Action.c(5):                 for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len
Action.c(5):     ; i++ ) {\n
Action.c(5):     \n
Action.c(5):                     inputElem.setAttribute('type', inputElemType = props[i]);\n
Action.c(5):                     bool = inputElem.type !== 'text';\n
Action.c(5):     \n
Action.c(5):                     // We first check to see if the type we give it sticks..\n
Action.c(5):                     // If the type does, we feed it a textual value, which shouldn't be valid.
Action.c(5):     \n
Action.c(5):                     // If the value doesn't stick, we know there's input sanitization which in
Action.c(5):     fers a custom UI\n
Action.c(5):                     if ( bool ) {\n
Action.c(5):     \n
Action.c(5):                         inputElem.value         = smile;\n
Action.c(5):                         inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n
Action.c(5):     \n
Action.c(5):                         if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance
Action.c(5):      !== undefined ) {\n
Action.c(5):     \n
Action.c(5):                           docElement.appendChild(inputElem);\n
Action.c(5):                           defaultView = document.defaultView;\n
Action.c(5):     \n
Action.c(5):                           // Safari 2-4 allows the smiley as a value, despite making a slider\n
Action.c(5):                           bool =  defaultView.getComputedStyle &&\n
Action.c(5):                                   defaultView.getComputedStyle(inputElem, null).WebkitAppearan
Action.c(5):     ce !== 'textfield' &&\n
Action.c(5):                                   // Mobile android web browser has false positive, so must\n
Action.c(5):                                   // check the height to see if the widget is actually there.\n
Action.c(5):                                   (inputElem.offsetHeight !== 0);\n
Action.c(5):     \n
Action.c(5):                           docElement.removeChild(inputElem);\n
Action.c(5):     \n
Action.c(5):                         } else if ( /^(search|tel)$/.test(inputElemType) ){\n
Action.c(5):                           // Spec doesn't define any special parsing or detectable UI\n
Action.c(5):                           //   behaviors so we pass these through as true\n
Action.c(5):     \n
Action.c(5):                           // Interestingly, opera fails the earlier test, so it doesn't\n
Action.c(5):                           //  even make it here.\n
Action.c(5):     \n
Action.c(5):                         } else if ( /^(url|email)$/.test(inputElemType) ) {\n
Action.c(5):                           // Real url and email support comes with prebaked validation.\n
Action.c(5):                           bool = inputElem.checkValidity && inputElem.checkValidity() === fals
Action.c(5):     e;\n
Action.c(5):     \n
Action.c(5):                         } else {\n
Action.c(5):                           // If the upgraded input compontent rejects the :) text, we got a wi
Action.c(5):     nner\n
Action.c(5):                           bool = inputElem.value != smile;\n
Action.c(5):                         }\n
Action.c(5):                     }\n
Action.c(5):     \n
Action.c(5):                     inputs[ props[i] ] = !!bool;\n
Action.c(5):                 }\n
Action.c(5):                 return inputs;\n
Action.c(5):             })('search tel url email datetime date month week time datetime-local number range
Action.c(5):      color'.split(' '));\n
Action.c(5):             /*>>inputtypes*/\n
Action.c(5):         }\n
Action.c(5):         /*>>webforms*/\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // End of test definitions\n
Action.c(5):         // -----------------------\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // Run through all tests and detect their support in the current UA.\n
Action.c(5):         // todo: hypothetically we could be doing an array of tests and use a basic loop here.
Action.c(5):     \n
Action.c(5):         for ( var feature in tests ) {\n
Action.c(5):             if ( hasOwnProp(tests, feature) ) {\n
Action.c(5):                 // run the test, throw the return value into the Modernizr,\n
Action.c(5):                 //   then based on that boolean, define an appropriate className\n
Action.c(5):                 //   and push it into an array of classes we'll join later.\n
Action.c(5):                 featureName  = feature.toLowerCase();\n
Action.c(5):                 Modernizr[featureName] = tests[feature]();\n
Action.c(5):     \n
Action.c(5):                 classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n
Action.c(5):             }\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         /*>>webforms*/\n
Action.c(5):         // input tests need to run.\n
Action.c(5):         Modernizr.input || webforms();\n
Action.c(5):         /*>>webforms*/\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /**\n
Action.c(5):          * addTest allows the user to define their own feature tests\n
Action.c(5):          * the result will be added onto the Modernizr object,\n
Action.c(5):          * as well as an appropriate className set on the html element\n
Action.c(5):          *\n
Action.c(5):          * @param feature - String naming the feature\n
Action.c(5):          * @param test - Function returning true if feature is supported, false if not\n
Action.c(5):          */\n
Action.c(5):          Modernizr.addTest = function ( feature, test ) {\n
Action.c(5):            if ( typeof feature == 'object' ) {\n
Action.c(5):              for ( var key in feature ) {\n
Action.c(5):                if ( hasOwnProp( feature, key ) ) {\n
Action.c(5):                  Modernizr.addTest( key, feature[ key ] );\n
Action.c(5):                }\n
Action.c(5):              }\n
Action.c(5):            } else {\n
Action.c(5):     \n
Action.c(5):              feature = feature.toLowerCase();\n
Action.c(5):     \n
Action.c(5):              if ( Modernizr[feature] !== undefined ) {\n
Action.c(5):                // we're going to quit if you're trying to overwrite an existing test\n
Action.c(5):                // if we were to allow it, we'd do this:\n
Action.c(5):                //   var re = new RegExp("\\\\b(no-)?" + feature + "\\\\b");\n
Action.c(5):                //   docElement.className = docElement.className.replace( re, '' );\n
Action.c(5):                // but, no rly, stuff 'em.\n
Action.c(5):                return Modernizr;\n
Action.c(5):              }\n
Action.c(5):     \n
Action.c(5):              test = typeof test == 'function' ? test() : test;\n
Action.c(5):     \n
Action.c(5):              if (typeof enableC
Action.c(5): t=213927ms: 134-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5):     lasses !== "undefined" && enableClasses) {\n
Action.c(5):                docElement.className += ' ' + (test ? '' : 'no-') + feature;\n
Action.c(5):              }\n
Action.c(5):             
Action.c(5): t=213927ms: 3821-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5): t=213927ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5):      Modernizr[feature] = test;\n
Action.c(5):     \n
Action.c(5):            }\n
Action.c(5):     \n
Action.c(5):            return Modernizr; // allow chaining.\n
Action.c(5):          };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         // Reset modElem.cssText to nothing to reduce memory footprint.\n
Action.c(5):         setCss('');\n
Action.c(5):         modElem = inputElem = null;\n
Action.c(5):     \n
Action.c(5):         /*>>shiv*/\n
Action.c(5):         /*! HTML5 Shiv v3.6.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed */\n
Action.c(5):         ;(function(window, document) {\n
Action.c(5):         /*jshint evil:true */\n
Action.c(5):           /** Preset options */\n
Action.c(5):           var options = window.html5 || {};\n
Action.c(5):     \n
Action.c(5):           /** Used to skip problem elements */\n
Action.c(5):           var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n
Action.c(5):     \n
Action.c(5):           /** Not all elements can be cloned in IE **/\n
Action.c(5):           var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span
Action.c(5):     |strong|style|table|tbody|td|th|tr|ul)$/i;\n
Action.c(5):     \n
Action.c(5):           /** Detect whether the browser supports default html5 styles */\n
Action.c(5):           var supportsHtml5Styles;\n
Action.c(5):     \n
Action.c(5):           /** Name of the expando, to work with multiple documents or to re-shiv one document 
Action.c(5):     */\n
Action.c(5):           var expando = '_html5shiv';\n
Action.c(5):     \n
Action.c(5):           /** The id for the the documents expando */\n
Action.c(5):           var expanID = 0;\n
Action.c(5):     \n
Action.c(5):           /** Cached data for each document */\n
Action.c(5):           var expandoData = {};\n
Action.c(5):     \n
Action.c(5):           /** Detect whether the browser supports unknown elements */\n
Action.c(5):           var supportsUnknownElements;\n
Action.c(5):     \n
Action.c(5):           (function() {\n
Action.c(5):             try {\n
Action.c(5):                 var a = document.createElement('a');\n
Action.c(5):                 a.innerHTML = '<xyz></xyz>';\n
Action.c(5):                 //if the hidden property is implemented we can assume, that the browser suppor
Action.c(5):     ts basic HTML5 Styles\n
Action.c(5):                 supportsHtml5Styles = ('hidden' in a);\n
Action.c(5):     \n
Action.c(5):                 supportsUnknownElements = a.childNodes.length == 1 || (function() {\n
Action.c(5):                   // assign a false positive if unable to shiv\n
Action.c(5):                   (document.createElement)('a');\n
Action.c(5):                   var frag = document.createDocumentFragment();\n
Action.c(5):                   return (\n
Action.c(5):                     typeof frag.cloneNode == 'undefined' ||\n
Action.c(5):                     typeof frag.createDocumentFragment == 'undefined' ||\n
Action.c(5):                     typeof frag.createElement == 'undefined'\n
Action.c(5):                   );\n
Action.c(5):                 }());\n
Action.c(5):             } catch(e) {\n
Action.c(5):               supportsHtml5Styles = true;\n
Action.c(5):               supportsUnknownElements = true;\n
Action.c(5):             }\n
Action.c(5):     \n
Action.c(5):           }());\n
Action.c(5):     \n
Action.c(5):           /*--------------------------------------------------------------------------*/\n
Action.c(5):     \n
Action.c(5):           /**\n
Action.c(5):            * Creates a style sheet with the given CSS text and adds it to the document.\n
Action.c(5):            * @private\n
Action.c(5):            * @param {Document} ownerDocument The document.\n
Action.c(5):            * @param {String} cssText The CSS text.\n
Action.c(5):            * @returns {StyleSheet} The style element.\n
Action.c(5):            */\n
Action.c(5):           function addStyleSheet(ownerDocument, cssText) {\n
Action.c(5):             var p = ownerDocument.createElement('p'),\n
Action.c(5):                 parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.docume
Action.c(5):     ntElement;\n
Action.c(5):     \n
Action.c(5):             p.innerHTML = 'x<style>' + cssText + '</style>';\n
Action.c(5):             return parent.insertBefore(p.lastChild, parent.firstChild);\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           /**\n
Action.c(5):            * Returns the value of `html5.elements` as an array.\n
Action.c(5):            * @private\n
Action.c(5):            * @returns {Array} An array of shived element node names.\n
Action.c(5):            */\n
Action.c(5):           function getElements() {\n
Action.c(5):             var elements = html5.elements;\n
Action.c(5):             return typeof elements == 'string' ? elements.split(' ') : elements;\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):             /**\n
Action.c(5):            * Returns the data associated to the given document\n
Action.c(5):            * @private\n
Action.c(5):            * @param {Document} ownerDocument The document.\n
Action.c(5):            * @returns {Object} An object of data.\n
Action.c(5):            */\n
Action.c(5):           function getExpandoData(ownerDocument) {\n
Action.c(5):             var data = expandoData[ownerDocument[expando]];\n
Action.c(5):             if (!data) {\n
Action.c(5):                 data = {};\n
Action.c(5):                 expanID++;\n
Action.c(5):                 ownerDocument[expando] = expanID;\n
Action.c(5):                 expandoData[expanID] = data;\n
Action.c(5):             }\n
Action.c(5):             return data;\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           /**\n
Action.c(5):            * returns a shived element for the given nodeName and document\n
Action.c(5):            * @memberOf html5\n
Action.c(5):            * @param {String} nodeName name of the element\n
Action.c(5):            * @param {Document} ownerDocument The context document.\n
Action.c(5):            * @returns {Object} The shived element.\n
Action.c(5):            */\n
Action.c(5):           function createElement(nodeName, ownerDocument, data){\n
Action.c(5):             if (!ownerDocument) {\n
Action.c(5):                 ownerDocument = document;\n
Action.c(5):             }\n
Action.c(5):             if(supportsUnknownElements){\n
Action.c(5):                 return ownerDocument.createElement(nodeName);\n
Action.c(5):             }\n
Action.c(5):             if (!data) {\n
Action.c(5):                 data = getExpandoData(ownerDocument);\n
Action.c(5):             }\n
Action.c(5):             var node;\n
Action.c(5):     \n
Action.c(5):             if (data.cache[nodeName]) {\n
Action.c(5):                 node = data.cache[nodeName].cloneNode();\n
Action.c(5):             } else if (saveClones.test(nodeName)) {\n
Action.c(5):                 node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n
Action.c(5):             } else {\n
Action.c(5):                 node = data.createElem(nodeName);\n
Action.c(5):             }\n
Action.c(5):     \n
Action.c(5):             // Avoid adding some elements to fragments in IE < 9 because\n
Action.c(5):             // * Attributes like `name` or `type` cannot be set/changed once an element\n
Action.c(5):             //   is inserted into a document/fragment\n
Action.c(5):             // * Link elements with `src` attributes that are inaccessible, as with\n
Action.c(5):             //   a 403 response, will cause the tab/window to crash\n
Action.c(5):             // * Script elements appended to fragments will execute when their `src`\n
Action.c(5):             //   or `text` property is set\n
Action.c(5):             return node.canHaveChildren && !reSkip.test(nodeName) ? data.frag.appendChild(node
Action.c(5):     ) : node;\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           /**\n
Action.c(5):            * returns a shived DocumentFragment for the given document\n
Action.c(5):            * @memberOf html5\n
Action.c(5):            * @param {Document} ownerDocument The context document.\n
Action.c(5):            * @returns {Object} The shived DocumentFragment.\n
Action.c(5):            */\n
Action.c(5):           function createDocumentFragment(ownerDocument, data){\n
Action.c(5):             if (!ownerDocument) {\n
Action.c(5):                 ownerDocument = document;\n
Action.c(5):             }\n
Action.c(5):             if(supportsUnknownElements){\n
Action.c(5):                 return ownerDocument.createDocumentFragment();\n
Action.c(5):             }\n
Action.c(5):             data = data || getExpandoData(ownerDocument);\n
Action.c(5):             var clone = data.frag.cloneNode(),\n
Action.c(5):                 i = 0,\n
Action.c(5):                 elems = getElements(),\n
Action.c(5):                 l = elems.length;\n
Action.c(5):             for(;i<l;i++){\n
Action.c(5):                 clone.createElement(elems[i]);\n
Action.c(5):             }\n
Action.c(5):             return clone;\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           /**\n
Action.c(5):            * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n
Action.c(5):            * @private\n
Action.c(5):            * @param {Document|DocumentFragment} ownerDocument The document.\n
Action.c(5):            * @param {Object} data of the document.\n
Action.c(5):            */\n
Action.c(5):           function shivMethods(ownerDocument, data) {\n
Action.c(5):             if (!data.cache) {\n
Action.c(5):                 data.cache = {};\n
Action.c(5):                 data.createElem = ownerDocument.createElement;\n
Action.c(5):                 data.createFrag = ownerDocument.createDocumentFragment;\n
Action.c(5):                 data.frag = data.createFrag();\n
Action.c(5):             }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):             ownerDocument.createElement = function(nodeName) {\n
Action.c(5):               //abort shiv\n
Action.c(5):               if (!html5.shivMethods) {\n
Action.c(5):                   return data.createElem(nodeName);\n
Action.c(5):               }\n
Action.c(5):               return createElement(nodeName, ownerDocument, data);\n
Action.c(5):             };\n
Action.c(5):     \n
Action.c(5):             ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n
Action.c(5):               'var n=f.cloneNode(),c=n.createElement;' +\n
Action.c(5):               'h.shivMethods&&(' +\n
Action.c(5):                 // unroll the `createElement` calls\n
Action.c(5):                 getElements().join().replace(/\\w+/g, function(nodeName) {\n
Action.c(5):                   data.createElem(nodeName);\n
Action.c(5):                   data.frag.createElement(nodeName);\n
Action.c(5):                   return 'c("' + nodeName + '")';\n
Action.c(5):                 }) +\n
Action.c(5):               ');return n}'\n
Action.c(5):             )(html5, data.frag);\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           /*--------------------------------------------------------------------------*/\n
Action.c(5):     \n
Action.c(5):           /**\n
Action.c(5):            * Shivs the given document.\n
Action.c(5):            * @memberOf html5\n
Action.c(5):            * @param {Document} ownerDocument The document to shiv.\n
Action.c(5):            * @returns {Document} The shived document.\n
Action.c(5):            */\n
Action.c(5):           function shivDocument(ownerDocument) {\n
Action.c(5):             if (!ownerDocument) {\n
Action.c(5):                 ownerDocument = document;\n
Action.c(5):             }\n
Action.c(5):             var data = getExpandoData(ownerDocument);\n
Action.c(5):     \n
Action.c(5):             if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n
Action.c(5):               data.hasCSS = !!addStyleSheet(ownerDocument,\n
Action.c(5):                 // corrects block display not defined in IE6/7/8/9\n
Action.c(5):                 'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:bloc
Action.c(5):     k}' +\n
Action.c(5):                 // adds styling not present in IE6/7/8/9\n
Action.c(5):                 'mark{background:#FF0;color:#000}'\n
Action.c(5):               );\n
Action.c(5):             }\n
Action.c(5):             if (!supportsUnknownElements) {\n
Action.c(5):               shivMethods(ownerDocument, data);\n
Action.c(5):             }\n
Action.c(5):             return ownerDocument;\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           /*--------------------------------------------------------------------------*/\n
Action.c(5):     \n
Action.c(5):           /**\n
Action.c(5):            * The `html5` object is exposed so that more elements can be shived and\n
Action.c(5):            * existing shiving can be detected on iframes.\n
Action.c(5):            * @type Object\n
Action.c(5):            * @example\n
Action.c(5):            *\n
Action.c(5):            * // options can be changed before the script is included\n
Action.c(5):            * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n
Action.c(5):            */\n
Action.c(5):           var html5 = {\n
Action.c(5):     \n
Action.c(5):             /**\n
Action.c(5):              * An array or space separated string of node names of the elements to shiv.\n
Action.c(5):              * @memberOf html5\n
Action.c(5):              * @type Array|String\n
Action.c(5):              */\n
Action.c(5):             'elements': options.elements || 'abbr article aside audio bdi canvas data datalist
Action.c(5):      details figcaption figure footer header hgroup mark meter nav output progress section sum
Action.c(5):     mary time video',\n
Action.c(5):     \n
Action.c(5):             /**\n
Action.c(5):              * A flag to indicate that the HTML5 style sheet should be inserted.\n
Action.c(5):              * @memberOf html5\n
Action.c(5):              * @type Boolean\n
Action.c(5):              */\n
Action.c(5):             'shivCSS': (options.shivCSS !== false),\n
Action.c(5):     \n
Action.c(5):             /**\n
Action.c(5):              * Is equal to true if a browser supports creating unknown/HTML5 elements\n
Action.c(5):              * @memberOf html5\n
Action.c(5):              * @type boolean\n
Action.c(5):              */\n
Action.c(5):             'supportsUnknownElements': supportsUnknownElements,\n
Action.c(5):     \n
Action.c(5):             /**\n
Action.c(5):              * A flag to indicate that the document's `createElement` and `createDocumentFragm
Action.c(5):     ent`\n
Action.c(5):              * methods should be overwritten.\n
Action.c(5):              * @memberOf html5\n
Action.c(5):              * @type Boolean\n
Action.c(5):              */\n
Action.c(5):             'shivMethods': (options.shivMethods !== false),\n
Action.c(5):     \n
Action.c(5):             /**\n
Action.c(5):              * A string to describe the type of `html5` object ("default" or "default print").
Action.c(5):     \n
Action.c(5):              * @memberOf html5\n
Action.c(5):              * @type String\n
Action.c(5):              */\n
Action.c(5):             'type': 'default',\n
Action.c(5):     \n
Action.c(5):             // shivs the document according to the specified `html5` object options\n
Action.c(5):             'shivDocument': shivDocument,\n
Action.c(5):     \n
Action.c(5):             //creates a shived element\n
Action.c(5):             createElement: createElement,\n
Action.c(5):     \n
Action.c(5):             //creates a shived documentFragment\n
Action.c(5):             createDocumentFragment: createDocumentFragment\n
Action.c(5):           };\n
Action.c(5):     \n
Action.c(5):           /*--------------------------------------------------------------------------*/\n
Action.c(5):     \n
Action.c(5):           // expose html5\n
Action.c(5):           window.html5 = html5;\n
Action.c(5):     \n
Action.c(5):           // shiv the document\n
Action.c(5):           shivDocument(document);\n
Action.c(5):     \n
Action.c(5):         }(this, document));\n
Action.c(5):         /*>>shiv*/\n
Action.c(5):     \n
Action.c(5):         // Assign private properties to the return object with prefix\n
Action.c(5):         Modernizr._version      = version;\n
Action.c(5):     \n
Action.c(5):         // expose these for the plugin API. Look in the source for how to join() them against 
Action.c(5):     your input\n
Action.c(5):         /*>>prefixes*/\n
Action.c(5):         Modernizr._prefixes     = prefixes;\n
Action.c(5):         /*>>prefixes*/\n
Action.c(5):         /*>>domprefixes*/\n
Action.c(5):         Modernizr._domPrefixes  = domPrefixes;\n
Action.c(5):         Modernizr._cssomPrefixes  = cssomPrefixes;\n
Action.c(5):         /*>>domprefixes*/\n
Action.c(5):     \n
Action.c(5):         /*>>mq*/\n
Action.c(5):         // Modernizr.mq tests a given media query, live against the current state of the windo
Action.c(5):     w\n
Action.c(5):         // A few important notes:\n
Action.c(5):         //   * If a browser does not support media queries at all (eg. oldIE) the mq() will al
Action.c(5):     ways return false\n
Action.c(5):         //   * A max-width or orientation query will be evaluated against the current state, w
Action.c(5):     hich may change later.\n
Action.c(5):         //   * You must specify values. Eg. If you are testing support for the min-width media
Action.c(5):      query use:\n
Action.c(5):         //       Modernizr.mq('(min-width:0)')\n
Action.c(5):         // usage:\n
Action.c(5):         // Modernizr.mq('only screen and (max-width:768)')\n
Action.c(5):         Modernizr.mq            = testMediaQuery;\n
Action.c(5):         /*>>mq*/\n
Action.c(5):     \n
Action.c(5):         /*>>hasevent*/\n
Action.c(5):         // Modernizr.hasEvent() detects support for a given event, with an optional element to
Action.c(5):      test on\n
Action.c(5):         // Modernizr.hasEvent('gesturestart', elem)\n
Action.c(5):         Modernizr.hasEvent      = isEventSupported;\n
Action.c(5):         /*>>hasevent*/\n
Action.c(5):     \n
Action.c(5):         /*>>testprop*/\n
Action.c(5):         // Modernizr.testProp() investigates whether a given style property is recognized\n
Action.c(5):         // Note that the property names must be provided in the camelCase variant.\n
Action.c(5):         // Modernizr.testProp('pointerEvents')\n
Action.c(5):         Modernizr.testProp      = function(prop){\n
Action.c(5):             return testProps([prop]);\n
Action.c(5):         };\n
Action.c(5):         /*>>testprop*/\n
Action.c(5):     \n
Action.c(5):         /*>>testallprops*/\n
Action.c(5):         // Modernizr.testAllProps() investigates whether a given style property,\n
Action.c(5):         //   or any of its vendor-prefixed variants, is recognized\n
Action.c(5):         // Note that the property names must be provided in the camelCase v
Action.c(5): t=213930ms: 2172-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/modernizr-2.6.2.js" (RelFrameId=, Internal ID=258)
Action.c(5):     ariant.\n
Action.c(5):         // Modernizr.testAllProps('boxSizing')\n
Action.c(5):         Modernizr.testAllProps  = testPropsAll;\n
Action.c(5):         /*>>testallprops*/\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /*>>teststyles*/\n
Action.c(5):         // Modernizr.testStyles() allows you to add custom styles to the document and test an 
Action.c(5):     element afterwards\n
Action.c(5):         // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... 
Action.c(5):     })\n
Action.c(5):         Modernizr.testStyles    = injectElementWithStyles;\n
Action.c(5):         /*>>teststyles*/\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /*>>prefixed*/\n
Action.c(5):         // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of y
Action.c(5):     our input\n
Action.c(5):         // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n
Action.c(5):     \n
Action.c(5):         // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentat
Action.c(5):     ed style.\n
Action.c(5):         // Return values will also be the camelCase variant, if you need to translate that to 
Action.c(5):     hypenated style use:\n
Action.c(5):         //\n
Action.c(5):         //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).rep
Action.c(5):     lace(/^ms-/,'-ms-');\n
Action.c(5):     \n
Action.c(5):         // If you're trying to ascertain which transition end event to bind to, you might do s
Action.c(5):     omething like...\n
Action.c(5):         //\n
Action.c(5):         //     var transEndEventNames = {\n
Action.c(5):         //       'WebkitTransition' : 'webkitTransitionEnd',\n
Action.c(5):         //       'MozTransition'    : 'transitionend',\n
Action.c(5):         //       'OTransition'      : 'oTransitionEnd',\n
Action.c(5):         //       'msTransition'     : 'MSTransitionEnd',\n
Action.c(5):         //       'transition'       : 'transitionend'\n
Action.c(5):         //     },\n
Action.c(5):         //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n
Action.c(5):     \n
Action.c(5):         Modernizr.prefixed      = function(prop, obj, elem){\n
Action.c(5):           if(!obj) {\n
Action.c(5):             return testPropsAll(prop, 'pfx');\n
Action.c(5):           } else {\n
Action.c(5):             // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) /
Action.c(5):     / 'mozRequestAnimationFrame'\n
Action.c(5):             return testPropsAll(prop, obj, elem);\n
Action.c(5):           }\n
Action.c(5):         };\n
Action.c(5):         /*>>prefixed*/\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         /*>>cssclasses*/\n
Action.c(5):         // Remove "no-js" class from <html> element, if it exists:\n
Action.c(5):         docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n
Action.c(5):     \n
Action.c(5):                                 // Add the new classes to the <html> element.\n
Action.c(5):                                 (enableClasses ? ' js ' + classes.join(' ') : '');\n
Action.c(5):         /*>>cssclasses*/\n
Action.c(5):     \n
Action.c(5):         return Modernizr;\n
Action.c(5):     \n
Action.c(5):     })(this, this.document);\n
Action.c(5): t=213931ms: 308-byte response headers for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     Content-Encoding: gzip\r\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:32 GMT\r\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     ETag: "0b484d22d6fd31:0"\r\n
Action.c(5):     Vary: Accept-Encoding\r\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     Content-Length: 14448\r\n
Action.c(5):     \r\n
Action.c(5): t=213931ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5): t=213931ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5):     /*!\n
Action.c(5):      * Bootstrap v3.3.7 (http://getbootstrap.com)\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under the MIT license\n
Action.c(5):      */\n
Action.c(5):     \n
Action.c(5):     if (typeof jQuery === 'undefined') {\n
Action.c(5):       throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):       var version = $.fn.jquery.split(' ')[0].split('.')\n
Action.c(5):       if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version
Action.c(5):     [2] < 1) || (version[0] > 3)) {\n
Action.c(5):         throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but
Action.c(5):      lower than version 4')\n
Action.c(5):       }\n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: transition.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#transitions\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n
Action.c(5):       // ============================================================\n
Action.c(5):     \n
Action.c(5):       function transitionEnd() {\n
Action.c(5):         var el = document.createElement('bootstrap')\n
Action.c(5):     \n
Action.c(5):         var transEndEventNames = {\n
Action.c(5):           WebkitTransition : 'webkitTransitionEnd',\n
Action.c(5):           MozTransition    : 'transitionend',\n
Action.c(5):           OTransition      : 'oTransitionEnd otransitionend',\n
Action.c(5):           transition       : 'transitionend'\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         for (var name in transEndEventNames) {\n
Action.c(5):           if (el.style[name] !== undefined) {\n
Action.c(5):             return { end: transEndEventNames[name] }\n
Action.c(5):           }\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         return false // explicit for ie8 (  ._.)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       // http://blog.alexmaccaw.com/css-transitions\n
Action.c(5):       $.fn.emulateTransitionEnd = function (duration) {\n
Action.c(5):         var called = false\n
Action.c(5):         var $el = this\n
Action.c(5):         $(this).one('bsTransitionEnd', function () { called = true })\n
Action.c(5):         var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n
Action.c(5):         setTimeout(callback, duration)\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       $(function () {\n
Action.c(5):         $.support.transition = transitionEnd()\n
Action.c(5):     \n
Action.c(5):         if (!$.support.transition) return\n
Action.c(5):     \n
Action.c(5):         $.event.special.bsTransitionEnd = {\n
Action.c(5):           bindType: $.support.transition.end,\n
Action.c(5):           delegateType: $.support.transition.end,\n
Action.c(5):           handle: function (e) {\n
Action.c(5):             if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n
Action.c(5):           }\n
Action.c(5):         }\n
Action.c(5):       })\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: alert.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#alerts\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // ALERT CLASS DEFINITION\n
Action.c(5):       // ======================\n
Action.c(5):     \n
Action.c(5):       var dismiss = '[data-dismiss="alert"]'\n
Action.c(5):       var Alert   = function (el) {\n
Action.c(5):         $(el).on('click', dismiss, this.close)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Alert.VERSION = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Alert.TRANSITION_DURATION = 150\n
Action.c(5):     \n
Action.c(5):       Alert.prototype.close = function (e) {\n
Action.c(5):         var $this    = $(this)\n
Action.c(5):         var selector = $this.attr('data-target')\n
Action.c(5):     \n
Action.c(5):         if (!selector) {\n
Action.c(5):           selector = $this.attr('href')\n
Action.c(5):           selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var $parent = $(selector === '#' ? [] : selector)\n
Action.c(5):     \n
Action.c(5):         if (e) e.preventDefault()\n
Action.c(5):     \n
Action.c(5):         if (!$parent.length) {\n
Action.c(5):           $parent = $this.closest('.alert')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         $parent.trigger(e = $.Event('close.bs.alert'))\n
Action.c(5):     \n
Action.c(5):         if (e.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         $parent.removeClass('in')\n
Action.c(5):     \n
Action.c(5):         function removeElement() {\n
Action.c(5):           // detach from parent, fire event then clean up data\n
Action.c(5):           $parent.detach().trigger('closed.bs.alert').remove()\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         $.support.transition && $parent.hasClass('fade') ?\n
Action.c(5):           $parent\n
Action.c(5):             .one('bsTransitionEnd', removeElement)\n
Action.c(5):             .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n
Action.c(5):           removeElement()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // ALERT PLUGIN DEFINITION\n
Action.c(5):       // =======================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this = $(this)\n
Action.c(5):           var data  = $this.data('bs.alert')\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.alert', (data = new Alert(this)))\n
Action.c(5):           if (typeof option == 'string') data[option].call($this)\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.alert\n
Action.c(5):     \n
Action.c(5):       $.fn.alert             = Plugin\n
Action.c(5):       $.fn.alert.Constructor = Alert\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // ALERT NO CONFLICT\n
Action.c(5):       // =================\n
Action.c(5):     \n
Action.c(5):       $.fn.alert.noConflict = function () {\n
Action.c(5):         $.fn.alert = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // ALERT DATA-API\n
Action.c(5):       // ==============\n
Action.c(5):     \n
Action.c(5):       $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: button.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#buttons\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // BUTTON PUBLIC CLASS DEFINITION\n
Action.c(5):       // ==============================\n
Action.c(5):     \n
Action.c(5):       var Button = function (element, options) {\n
Action.c(5):         this.$element  = $(element)\n
Action.c(5):         this.options   = $.extend({}, Button.DEFAULTS, options)\n
Action.c(5):         this.isLoading = false\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Button.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Button.DEFAULTS = {\n
Action.c(5):         loadingText: 'loading...'\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Button.prototype.setState = function (state) {\n
Action.c(5):         var d    = 'disabled'\n
Action.c(5):         var $el  = this.$element\n
Action.c(5):         var val  = $el.is('input') ? 'val' : 'html'\n
Action.c(5):         var data = $el.data()\n
Action.c(5):     \n
Action.c(5):         state += 'Text'\n
Action.c(5):     \n
Action.c(5):         if (data.resetText == null) $el.data('resetText', $el[val]())\n
Action.c(5):     \n
Action.c(5):         // push to event loop to allow forms to submit\n
Action.c(5):         setTimeout($.proxy(function () {\n
Action.c(5):           $el[val](data[state] == null ? this.options[state] : data[state])\n
Action.c(5):     \n
Action.c(5):           if (state == 'loadingText') {\n
Action.c(5):             this.isLoading = true\n
Action.c(5):             $el.addClass(d).attr(d, d).prop(d, true)\n
Action.c(5):           } else if (this.isLoading) {\n
Action.c(5):             this.isLoading = false\n
Action.c(5):             $el.removeClass(d).removeAttr(d).prop(d, false)\n
Action.c(5):           }\n
Action.c(5):         }, this), 0)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Button.prototype.toggle = function () {\n
Action.c(5):         var changed = true\n
Action.c(5):         var $parent = this.$element.closest('[data-toggle="buttons"]')\n
Action.c(5):     \n
Action.c(5):         if ($parent.length) {\n
Action.c(5):           var $input = this.$element.find('input')\n
Action.c(5):           if ($input.prop('type') == 'radio') {\n
Action.c(5):             if ($input.prop('checked')) changed = false\n
Action.c(5):             $parent.find('.active').removeClass('active')\n
Action.c(5):             this.$element.addClass('active')\n
Action.c(5):           } else if ($input.prop('type') == 'checkbox') {\n
Action.c(5):             if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
Action.c(5):     \n
Action.c(5):             this.$element.toggleClass('active')\n
Action.c(5):           }\n
Action.c(5):           $input.prop('checked', this.$element.hasClass('active'))\n
Action.c(5):           if (changed) $input.trigger('change')\n
Action.c(5):         } else {\n
Action.c(5):           this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n
Action.c(5):           this.$element.toggleClass('active')\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // BUTTON PLUGIN DEFINITION\n
Action.c(5):       // ========================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.button')\n
Action.c(5):           var options = typeof option == 'object' && option\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.button', (data = new Button(this, options)))\n
Action.c(5):     \n
Action.c(5):           if (option == 'toggle') data.toggle()\n
Action.c(5):           else if (option) data.setState(option)\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.button\n
Action.c(5):     \n
Action.c(5):       $.fn.button             = Plugin\n
Action.c(5):       $.fn.button.Constructor = Button\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // BUTTON NO CONFLICT\n
Action.c(5):       // ==================\n
Action.c(5):     \n
Action.c(5):       $.fn.button.noConflict = function () {\n
Action.c(5):         $.fn.button = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // BUTTON DATA-API\n
Action.c(5):       // ===============\n
Action.c(5):     \n
Action.c(5):       $(document)\n
Action.c(5):         .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {\n
Action.c(5):           var $btn = $(e.target).closest('.btn')\n
Action.c(5):           Plugin.call($btn, 'toggle')\n
Action.c(5):           if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {\n
Action.c(5):             // Prevent double click on radios, and the double selections (so cancellation) on 
Action.c(5):     checkboxes\n
Action.c(5):             e.preventDefault()\n
Action.c(5):             // The target component still receive the focus\n
Action.c(5):             if ($btn.is('input,button')) $btn.trigger('focus')\n
Action.c(5):             else $btn.find('input:visible,button:visible').first().trigger('focus')\n
Action.c(5):           }\n
Action.c(5):         })\n
Action.c(5):         .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', fun
Action.c(5):     ction (e) {\n
Action.c(5):           $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n
Action.c(5):         })\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: carousel.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#carousel\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // CAROUSEL CLASS DEFINITION\n
Action.c(5):       // =========================\n
Action.c(5):     \n
Action.c(5):       var Carousel = function (element, options) {\n
Action.c(5):         this.$element    = $(element)\n
Action.c(5):         this.$indicators = this.$element.find('.carousel-indicators')\n
Action.c(5):         this.options     = options\n
Action.c(5):         this.paused      = null\n
Action.c(5):         this.sliding     = null\n
Action.c(5):         this.interval    = null\n
Action.c(5):         this.$active     = null\n
Action.c(5):         this.$items      = null\n
Action.c(5):     \n
Action.c(5):         this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown,
Action.c(5):      this))\n
Action.c(5):     \n
Action.c(5):         this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this
Action.c(5):     .$element\n
Action.c(5):           .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n
Action.c(5):           .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Carousel.TRANSITION_DURATION = 600\n
Action.c(5):     \n
Action.c(5):       Carousel.DEFAULTS = {\n
Action.c(5):         interval: 5000,\n
Action.c(5):         pause: 'hover',\n
Action.c(5):         wrap: true,\n
Action.c(5):         keyboard: true\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.keydown = function (e) {\n
Action.c(5):         if (/input|textarea/i.test(e.target.tagName)) return\n
Action.c(5):         switch (e.which) {\n
Action.c(5):           case 37: this.prev(); break\n
Action.c(5):           case 39: this.next(); break\n
Action.c(5):           default: return\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         e.preventDefault()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.cycle = function (e) {\n
Action.c(5):         e || (this.paused = false)\n
Action.c(5):     \n
Action.c(5):         this.interval && clearInterval(this.interval)\n
Action.c(5):     \n
Action.c(5):         this.options.interval\n
Action.c(5):           && !this.paused\n
Action.c(5):           && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n
Action.c(5):     \n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.getItemIndex = function (item) {\n
Action.c(5):         this.$items = item.parent().children('.item')\n
Action.c(5):         return this.$items.index(item || this.$active)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.getItemForDirection = function (direction, active) {\n
Action.c(5):         var activeIndex = this.getItemIndex(active)\n
Action.c(5):         var willWrap = (direction == 'prev' && activeIndex === 0)\n
Action.c(5):                     || (direction == 'next' && activeIndex == (this.$items.length - 1))\n
Action.c(5):         if (willWrap && !this.options.wrap) return active\n
Action.c(5):         var delta = direction == 'prev' ? -1 : 1\n
Action.c(5):         var itemIndex = (activeIndex + delta) % this.$items.length\n
Action.c(5):         return this.$items.eq(itemIndex)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.to = function (pos) {\n
Action.c(5):         var that        = this\n
Action.c(5):         var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         if (pos > (this.$items.length - 1) || pos < 0) return\n
Action.c(5):     \n
Action.c(5):         if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { tha
Action.c(5):     t.to(pos) }) // yes, "slid"\n
Action.c(5):         if (activeIndex == pos) return this.pause().cycle()\n
Action.c(5):     \n
Action.c(5):         return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.pause = function (e) {\n
Action.c(5):         e || (this.paused = true)\n
Action.c(5):     \n
Action.c(5):         if (this.$element.find('.next, .prev').length && $.support.transition) {\n
Action.c(5):           this.$element.trigger($.support.transition.end)\n
Action.c(5):           this.cycle(true)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         this.interval = clearInterval(this.interval)\n
Action.c(5):     \n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.next = function () {\n
Action.c(5):         if (this.sliding) return\n
Action.c(5):         return this.slide('next')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.prev = function () {\n
Action.c(5):         if (this.sliding) return\n
Action.c(5):         return this.slide('prev')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Carousel.prototype.slide = function (type, next) {\n
Action.c(5):         var $active   = this.$element.find('.item.active')\n
Action.c(5):         var $next     = next || this.getItemForDirection(type, $active)\n
Action.c(5):         var isCycling = this.interval\n
Action.c(5):         var direction = type == 'next' ? 'left' : 'right'\n
Action.c(5):         
Action.c(5): t=213935ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5):     var that      = this\n
Action.c(5):     \n
Action.c(5):         if ($next.hasClass('active')) return (this.sliding = false)\n
Action.c(5):     \n
Action.c(5):         var relatedTarget = $next[0]\n
Action.c(5):         var slideEvent = $.Event('slide.bs.carousel', {\n
Action.c(5):           relatedTarget: relatedTarget,\n
Action.c(5):           direction: direction\n
Action.c(5):         })\n
Action.c(5):         this.$element.trigger(slideEvent)\n
Action.c(5):         if (slideEvent.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         this.sliding = true\n
Action.c(5):     \n
Action.c(5):         isCycling && this.pause()\n
Action.c(5):     \n
Action.c(5):         if (this.$indicators.length) {\n
Action.c(5):           this.$indicators.find('.active').removeClass('active')\n
Action.c(5):           var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n
Action.c(5):           $nextIndicator && $nextIndicator.addClass('active')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction:
Action.c(5):      direction }) // yes, "slid"\n
Action.c(5):         if ($.support.transition && this.$element.hasClass('slide')) {\n
Action.c(5):           $next.addClass(type)\n
Action.c(5):           $next[0].offsetWidth // force reflow\n
Action.c(5):           $active.addClass(direction)\n
Action.c(5):           $next.addClass(direction)\n
Action.c(5):           $active\n
Action.c(5):             .one('bsTransitionEnd', function () {\n
Action.c(5):               $next.removeClass([type, direction].join(' ')).addClass('active')\n
Action.c(5):               $active.removeClass(['active', direction].join(' '))\n
Action.c(5):               that.sliding = false\n
Action.c(5):               setTimeout(function () {\n
Action.c(5):                 that.$element.trigger(slidEvent)\n
Action.c(5):               }, 0)\n
Action.c(5):             })\n
Action.c(5):             .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n
Action.c(5):         } else {\n
Action.c(5):           $active.removeClass('active')\n
Action.c(5):           $next.addClass('active')\n
Action.c(5):           this.sliding = false\n
Action.c(5):           this.$element.trigger(slidEvent)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         isCycling && this.cycle()\n
Action.c(5):     \n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // CAROUSEL PLUGIN DEFINITION\n
Action.c(5):       // ==========================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.carousel')\n
Action.c(5):           var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object
Action.c(5):     ' && option)\n
Action.c(5):           var action  = typeof option == 'string' ? option : options.slide\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n
Action.c(5):           if (typeof option == 'number') data.to(option)\n
Action.c(5):           else if (action) data[action]()\n
Action.c(5):           else if (options.interval) data.pause().cycle()\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.carousel\n
Action.c(5):     \n
Action.c(5):       $.fn.carousel             = Plugin\n
Action.c(5):       $.fn.carousel.Constructor = Carousel\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // CAROUSEL NO CONFLICT\n
Action.c(5):       // ====================\n
Action.c(5):     \n
Action.c(5):       $.fn.carousel.noConflict = function () {\n
Action.c(5):         $.fn.carousel = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // CAROUSEL DATA-API\n
Action.c(5):       // =================\n
Action.c(5):     \n
Action.c(5):       var clickHandler = function (e) {\n
Action.c(5):         var href\n
Action.c(5):         var $this   = $(this)\n
Action.c(5):         var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.repla
Action.c(5):     ce(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n
Action.c(5):         if (!$target.hasClass('carousel')) return\n
Action.c(5):         var options = $.extend({}, $target.data(), $this.data())\n
Action.c(5):         var slideIndex = $this.attr('data-slide-to')\n
Action.c(5):         if (slideIndex) options.interval = false\n
Action.c(5):     \n
Action.c(5):         Plugin.call($target, options)\n
Action.c(5):     \n
Action.c(5):         if (slideIndex) {\n
Action.c(5):           $target.data('bs.carousel').to(slideIndex)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         e.preventDefault()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       $(document)\n
Action.c(5):         .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n
Action.c(5):         .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n
Action.c(5):     \n
Action.c(5):       $(window).on('load', function () {\n
Action.c(5):         $('[data-ride="carousel"]').each(function () {\n
Action.c(5):           var $carousel = $(this)\n
Action.c(5):           Plugin.call($carousel, $carousel.data())\n
Action.c(5):         })\n
Action.c(5):       })\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: collapse.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#collapse\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     /* jshint latedef: false */\n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // COLLAPSE PUBLIC CLASS DEFINITION\n
Action.c(5):       // ================================\n
Action.c(5):     \n
Action.c(5):       var Collapse = function (element, options) {\n
Action.c(5):         this.$element      = $(element)\n
Action.c(5):         this.options       = $.extend({}, Collapse.DEFAULTS, options)\n
Action.c(5):         this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +\n
Action.c(5):                                '[data-toggle="collapse"][data-target="#' + element.id + '"]')\n
Action.c(5):         this.transitioning = null\n
Action.c(5):     \n
Action.c(5):         if (this.options.parent) {\n
Action.c(5):           this.$parent = this.getParent()\n
Action.c(5):         } else {\n
Action.c(5):           this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (this.options.toggle) this.toggle()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Collapse.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Collapse.TRANSITION_DURATION = 350\n
Action.c(5):     \n
Action.c(5):       Collapse.DEFAULTS = {\n
Action.c(5):         toggle: true\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Collapse.prototype.dimension = function () {\n
Action.c(5):         var hasWidth = this.$element.hasClass('width')\n
Action.c(5):         return hasWidth ? 'width' : 'height'\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Collapse.prototype.show = function () {\n
Action.c(5):         if (this.transitioning || this.$element.hasClass('in')) return\n
Action.c(5):     \n
Action.c(5):         var activesData\n
Action.c(5):         var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsi
Action.c(5):     ng')\n
Action.c(5):     \n
Action.c(5):         if (actives && actives.length) {\n
Action.c(5):           activesData = actives.data('bs.collapse')\n
Action.c(5):           if (activesData && activesData.transitioning) return\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var startEvent = $.Event('show.bs.collapse')\n
Action.c(5):         this.$element.trigger(startEvent)\n
Action.c(5):         if (startEvent.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         if (actives && actives.length) {\n
Action.c(5):           Plugin.call(actives, 'hide')\n
Action.c(5):           activesData || actives.data('bs.collapse', null)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var dimension = this.dimension()\n
Action.c(5):     \n
Action.c(5):         this.$element\n
Action.c(5):           .removeClass('collapse')\n
Action.c(5):           .addClass('collapsing')[dimension](0)\n
Action.c(5):           .attr('aria-expanded', true)\n
Action.c(5):     \n
Action.c(5):         this.$trigger\n
Action.c(5):           .removeClass('collapsed')\n
Action.c(5):           .attr('aria-expanded', true)\n
Action.c(5):     \n
Action.c(5):         this.transitioning = 1\n
Action.c(5):     \n
Action.c(5):         var complete = function () {\n
Action.c(5):           this.$element\n
Action.c(5):             .removeClass('collapsing')\n
Action.c(5):             .addClass('collapse in')[dimension]('')\n
Action.c(5):           this.transitioning = 0\n
Action.c(5):           this.$element\n
Action.c(5):             .trigger('shown.bs.collapse')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (!$.support.transition) return complete.call(this)\n
Action.c(5):     \n
Action.c(5):         var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n
Action.c(5):     \n
Action.c(5):         this.$element\n
Action.c(5):           .one('bsTransitionEnd', $.proxy(complete, this))\n
Action.c(5):           .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scro
Action.c(5):     llSize])\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Collapse.prototype.hide = function () {\n
Action.c(5):         if (this.transitioning || !this.$element.hasClass('in')) return\n
Action.c(5):     \n
Action.c(5):         var startEvent = $.Event('hide.bs.collapse')\n
Action.c(5):         this.$element.trigger(startEvent)\n
Action.c(5):         if (startEvent.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         var dimension = this.dimension()\n
Action.c(5):     \n
Action.c(5):         this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n
Action.c(5):     \n
Action.c(5):         this.$element\n
Action.c(5):           .addClass('collapsing')\n
Action.c(5):           .removeClass('collapse in')\n
Action.c(5):           .attr('aria-expanded', false)\n
Action.c(5):     \n
Action.c(5):         this.$trigger\n
Action.c(5):           .addClass('collapsed')\n
Action.c(5):           .attr('aria-expanded', false)\n
Action.c(5):     \n
Action.c(5):         this.transitioning = 1\n
Action.c(5):     \n
Action.c(5):         var complete = function () {\n
Action.c(5):           this.transitioning = 0\n
Action.c(5):           this.$element\n
Action.c(5):             .removeClass('collapsing')\n
Action.c(5):             .addClass('collapse')\n
Action.c(5):             .trigger('hidden.bs.collapse')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (!$.support.transition) return complete.call(this)\n
Action.c(5):     \n
Action.c(5):         this.$element\n
Action.c(5):           [dimension](0)\n
Action.c(5):           .one('bsTransitionEnd', $.proxy(complete, this))\n
Action.c(5):           .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Collapse.prototype.toggle = function () {\n
Action.c(5):         this[this.$element.hasClass('in') ? 'hide' : 'show']()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Collapse.prototype.getParent = function () {\n
Action.c(5):         return $(this.options.parent)\n
Action.c(5):           .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')\n
Action.c(5):           .each($.proxy(function (i, element) {\n
Action.c(5):             var $element = $(element)\n
Action.c(5):             this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n
Action.c(5):           }, this))\n
Action.c(5):           .end()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n
Action.c(5):         var isOpen = $element.hasClass('in')\n
Action.c(5):     \n
Action.c(5):         $element.attr('aria-expanded', isOpen)\n
Action.c(5):         $trigger\n
Action.c(5):           .toggleClass('collapsed', !isOpen)\n
Action.c(5):           .attr('aria-expanded', isOpen)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       function getTargetFromTrigger($trigger) {\n
Action.c(5):         var href\n
Action.c(5):         var target = $trigger.attr('data-target')\n
Action.c(5):           || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip fo
Action.c(5):     r ie7\n
Action.c(5):     \n
Action.c(5):         return $(target)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // COLLAPSE PLUGIN DEFINITION\n
Action.c(5):       // ==========================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.collapse')\n
Action.c(5):           var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object
Action.c(5):     ' && option)\n
Action.c(5):     \n
Action.c(5):           if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n
Action.c(5):           if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n
Action.c(5):           if (typeof option == 'string') data[option]()\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.collapse\n
Action.c(5):     \n
Action.c(5):       $.fn.collapse             = Plugin\n
Action.c(5):       $.fn.collapse.Constructor = Collapse\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // COLLAPSE NO CONFLICT\n
Action.c(5):       // ====================\n
Action.c(5):     \n
Action.c(5):       $.fn.collapse.noConflict = function () {\n
Action.c(5):         $.fn.collapse = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // COLLAPSE DATA-API\n
Action.c(5):       // =================\n
Action.c(5):     \n
Action.c(5):       $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {\n
Action.c(5):         var $this   = $(this)\n
Action.c(5):     \n
Action.c(5):         if (!$this.attr('data-target')) e.preventDefault()\n
Action.c(5):     \n
Action.c(5):         var $target = getTargetFromTrigger($this)\n
Action.c(5):         var data    = $target.data('bs.collapse')\n
Action.c(5):         var option  = data ? 'toggle' : $this.data()\n
Action.c(5):     \n
Action.c(5):         Plugin.call($target, option)\n
Action.c(5):       })\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: dropdown.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#dropdowns\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // DROPDOWN CLASS DEFINITION\n
Action.c(5):       // =========================\n
Action.c(5):     \n
Action.c(5):       var backdrop = '.dropdown-backdrop'\n
Action.c(5):       var toggle   = '[data-toggle="dropdown"]'\n
Action.c(5):       var Dropdown = function (element) {\n
Action.c(5):         $(element).on('click.bs.dropdown', this.toggle)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Dropdown.VERSION = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       function getParent($this) {\n
Action.c(5):         var selector = $this.attr('data-target')\n
Action.c(5):     \n
Action.c(5):         if (!selector) {\n
Action.c(5):           selector = $this.attr('href')\n
Action.c(5):           selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*
Action.c(5):     $)/, '') // strip for ie7\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var $parent = selector && $(selector)\n
Action.c(5):     \n
Action.c(5):         return $parent && $parent.length ? $parent : $this.parent()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       function clearMenus(e) {\n
Action.c(5):         if (e && e.which === 3) return\n
Action.c(5):         $(backdrop).remove()\n
Action.c(5):         $(toggle).each(function () {\n
Action.c(5):           var $this         = $(this)\n
Action.c(5):           var $parent       = getParent($this)\n
Action.c(5):           var relatedTarget = { relatedTarget: this }\n
Action.c(5):     \n
Action.c(5):           if (!$parent.hasClass('open')) return\n
Action.c(5):     \n
Action.c(5):           if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains
Action.c(5):     ($parent[0], e.target)) return\n
Action.c(5):     \n
Action.c(5):           $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n
Action.c(5):     \n
Action.c(5):           if (e.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):           $this.attr('aria-expanded', 'false')\n
Action.c(5):           $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Dropdown.prototype.toggle = function (e) {\n
Action.c(5):         var $this = $(this)\n
Action.c(5):     \n
Action.c(5):         if ($this.is('.disabled, :disabled')) return\n
Action.c(5):     \n
Action.c(5):         var $parent  = getParent($this)\n
Action.c(5):         var isActive = $parent.hasClass('open')\n
Action.c(5):     \n
Action.c(5):         clearMenus()\n
Action.c(5):     \n
Action.c(5):         if (!isActive) {\n
Action.c(5):           if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').le
Action.c(5):     ngth) {\n
Action.c(5):             // if mobile we use a backdrop because click events don't delegate\n
Action.c(5):             $(document.createElement('div'))\n
Action.c(5):               .addClass('dropdown-backdrop')\n
Action.c(5):               .insertAfter($(this))\n
Action.c(5):               .on('click', clearMenus)\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           var relatedTarget = { relatedTarget: this }\n
Action.c(5):           $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n
Action.c(5):     \n
Action.c(5):           if (e.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):           $this\n
Action.c(5):             .trigger('focus')\n
Action.c(5):             .attr('aria-expanded', 'true')\n
Action.c(5):     \n
Action.c(5):           $parent\n
Action.c(5):             .toggleClass('open')\n
Action.c(5):             .trigger($.Event('shown.bs.dropdown', relatedTarget))\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         return false\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Dropdown.prototype.keydown = function (e) {\n
Action.c(5):         if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):         var $this = $(this)\n
Action.c(5):     \n
Action.c(5):         e.preventDefault()\n
Action.c(5):         e.stopPropagation()\n
Action.c(5):     \n
Action.c(5):         if ($
Action.c(5): t=213939ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5):     this.is('.disabled, :disabled')) return\n
Action.c(5):     \n
Action.c(5):         var $parent  = getParent($this)\n
Action.c(5):         var isActive = $parent.hasClass('open')\n
Action.c(5):     \n
Action.c(5):         if (!isActive && e.which != 27 || isActive && e.which == 27) {\n
Action.c(5):           if (e.which == 27) $parent.find(toggle).trigger('focus')\n
Action.c(5):           return $this.trigger('click')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var desc = ' li:not(.disabled):visible a'\n
Action.c(5):         var $items = $parent.find('.dropdown-menu' + desc)\n
Action.c(5):     \n
Action.c(5):         if (!$items.length) return\n
Action.c(5):     \n
Action.c(5):         var index = $items.index(e.target)\n
Action.c(5):     \n
Action.c(5):         if (e.which == 38 && index > 0)                 index--         // up\n
Action.c(5):         if (e.which == 40 && index < $items.length - 1) index++         // down\n
Action.c(5):         if (!~index)                                    index = 0\n
Action.c(5):     \n
Action.c(5):         $items.eq(index).trigger('focus')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // DROPDOWN PLUGIN DEFINITION\n
Action.c(5):       // ==========================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this = $(this)\n
Action.c(5):           var data  = $this.data('bs.dropdown')\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n
Action.c(5):           if (typeof option == 'string') data[option].call($this)\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.dropdown\n
Action.c(5):     \n
Action.c(5):       $.fn.dropdown             = Plugin\n
Action.c(5):       $.fn.dropdown.Constructor = Dropdown\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // DROPDOWN NO CONFLICT\n
Action.c(5):       // ====================\n
Action.c(5):     \n
Action.c(5):       $.fn.dropdown.noConflict = function () {\n
Action.c(5):         $.fn.dropdown = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // APPLY TO STANDARD DROPDOWN ELEMENTS\n
Action.c(5):       // ===================================\n
Action.c(5):     \n
Action.c(5):       $(document)\n
Action.c(5):         .on('click.bs.dropdown.data-api', clearMenus)\n
Action.c(5):         .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation()
Action.c(5):      })\n
Action.c(5):         .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n
Action.c(5):         .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n
Action.c(5):         .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: modal.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#modals\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // MODAL CLASS DEFINITION\n
Action.c(5):       // ======================\n
Action.c(5):     \n
Action.c(5):       var Modal = function (element, options) {\n
Action.c(5):         this.options             = options\n
Action.c(5):         this.$body               = $(document.body)\n
Action.c(5):         this.$element            = $(element)\n
Action.c(5):         this.$dialog             = this.$element.find('.modal-dialog')\n
Action.c(5):         this.$backdrop           = null\n
Action.c(5):         this.isShown             = null\n
Action.c(5):         this.originalBodyPad     = null\n
Action.c(5):         this.scrollbarWidth      = 0\n
Action.c(5):         this.ignoreBackdropClick = false\n
Action.c(5):     \n
Action.c(5):         if (this.options.remote) {\n
Action.c(5):           this.$element\n
Action.c(5):             .find('.modal-content')\n
Action.c(5):             .load(this.options.remote, $.proxy(function () {\n
Action.c(5):               this.$element.trigger('loaded.bs.modal')\n
Action.c(5):             }, this))\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Modal.TRANSITION_DURATION = 300\n
Action.c(5):       Modal.BACKDROP_TRANSITION_DURATION = 150\n
Action.c(5):     \n
Action.c(5):       Modal.DEFAULTS = {\n
Action.c(5):         backdrop: true,\n
Action.c(5):         keyboard: true,\n
Action.c(5):         show: true\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.toggle = function (_relatedTarget) {\n
Action.c(5):         return this.isShown ? this.hide() : this.show(_relatedTarget)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.show = function (_relatedTarget) {\n
Action.c(5):         var that = this\n
Action.c(5):         var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n
Action.c(5):     \n
Action.c(5):         this.$element.trigger(e)\n
Action.c(5):     \n
Action.c(5):         if (this.isShown || e.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         this.isShown = true\n
Action.c(5):     \n
Action.c(5):         this.checkScrollbar()\n
Action.c(5):         this.setScrollbar()\n
Action.c(5):         this.$body.addClass('modal-open')\n
Action.c(5):     \n
Action.c(5):         this.escape()\n
Action.c(5):         this.resize()\n
Action.c(5):     \n
Action.c(5):         this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide
Action.c(5):     , this))\n
Action.c(5):     \n
Action.c(5):         this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n
Action.c(5):           that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n
Action.c(5):             if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n
Action.c(5):           })\n
Action.c(5):         })\n
Action.c(5):     \n
Action.c(5):         this.backdrop(function () {\n
Action.c(5):           var transition = $.support.transition && that.$element.hasClass('fade')\n
Action.c(5):     \n
Action.c(5):           if (!that.$element.parent().length) {\n
Action.c(5):             that.$element.appendTo(that.$body) // don't move modals dom position\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           that.$element\n
Action.c(5):             .show()\n
Action.c(5):             .scrollTop(0)\n
Action.c(5):     \n
Action.c(5):           that.adjustDialog()\n
Action.c(5):     \n
Action.c(5):           if (transition) {\n
Action.c(5):             that.$element[0].offsetWidth // force reflow\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           that.$element.addClass('in')\n
Action.c(5):     \n
Action.c(5):           that.enforceFocus()\n
Action.c(5):     \n
Action.c(5):           var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n
Action.c(5):     \n
Action.c(5):           transition ?\n
Action.c(5):             that.$dialog // wait for modal to slide in\n
Action.c(5):               .one('bsTransitionEnd', function () {\n
Action.c(5):                 that.$element.trigger('focus').trigger(e)\n
Action.c(5):               })\n
Action.c(5):               .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n
Action.c(5):             that.$element.trigger('focus').trigger(e)\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.hide = function (e) {\n
Action.c(5):         if (e) e.preventDefault()\n
Action.c(5):     \n
Action.c(5):         e = $.Event('hide.bs.modal')\n
Action.c(5):     \n
Action.c(5):         this.$element.trigger(e)\n
Action.c(5):     \n
Action.c(5):         if (!this.isShown || e.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         this.isShown = false\n
Action.c(5):     \n
Action.c(5):         this.escape()\n
Action.c(5):         this.resize()\n
Action.c(5):     \n
Action.c(5):         $(document).off('focusin.bs.modal')\n
Action.c(5):     \n
Action.c(5):         this.$element\n
Action.c(5):           .removeClass('in')\n
Action.c(5):           .off('click.dismiss.bs.modal')\n
Action.c(5):           .off('mouseup.dismiss.bs.modal')\n
Action.c(5):     \n
Action.c(5):         this.$dialog.off('mousedown.dismiss.bs.modal')\n
Action.c(5):     \n
Action.c(5):         $.support.transition && this.$element.hasClass('fade') ?\n
Action.c(5):           this.$element\n
Action.c(5):             .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n
Action.c(5):             .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n
Action.c(5):           this.hideModal()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.enforceFocus = function () {\n
Action.c(5):         $(document)\n
Action.c(5):           .off('focusin.bs.modal') // guard against infinite focus loop\n
Action.c(5):           .on('focusin.bs.modal', $.proxy(function (e) {\n
Action.c(5):             if (document !== e.target &&\n
Action.c(5):                 this.$element[0] !== e.target &&\n
Action.c(5):                 !this.$element.has(e.target).length) {\n
Action.c(5):               this.$element.trigger('focus')\n
Action.c(5):             }\n
Action.c(5):           }, this))\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.escape = function () {\n
Action.c(5):         if (this.isShown && this.options.keyboard) {\n
Action.c(5):           this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n
Action.c(5):             e.which == 27 && this.hide()\n
Action.c(5):           }, this))\n
Action.c(5):         } else if (!this.isShown) {\n
Action.c(5):           this.$element.off('keydown.dismiss.bs.modal')\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.resize = function () {\n
Action.c(5):         if (this.isShown) {\n
Action.c(5):           $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n
Action.c(5):         } else {\n
Action.c(5):           $(window).off('resize.bs.modal')\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.hideModal = function () {\n
Action.c(5):         var that = this\n
Action.c(5):         this.$element.hide()\n
Action.c(5):         this.backdrop(function () {\n
Action.c(5):           that.$body.removeClass('modal-open')\n
Action.c(5):           that.resetAdjustments()\n
Action.c(5):           that.resetScrollbar()\n
Action.c(5):           that.$element.trigger('hidden.bs.modal')\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.removeBackdrop = function () {\n
Action.c(5):         this.$backdrop && this.$backdrop.remove()\n
Action.c(5):         this.$backdrop = null\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.backdrop = function (callback) {\n
Action.c(5):         var that = this\n
Action.c(5):         var animate = this.$element.hasClass('fade') ? 'fade' : ''\n
Action.c(5):     \n
Action.c(5):         if (this.isShown && this.options.backdrop) {\n
Action.c(5):           var doAnimate = $.support.transition && animate\n
Action.c(5):     \n
Action.c(5):           this.$backdrop = $(document.createElement('div'))\n
Action.c(5):             .addClass('modal-backdrop ' + animate)\n
Action.c(5):             .appendTo(this.$body)\n
Action.c(5):     \n
Action.c(5):           this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n
Action.c(5):             if (this.ignoreBackdropClick) {\n
Action.c(5):               this.ignoreBackdropClick = false\n
Action.c(5):               return\n
Action.c(5):             }\n
Action.c(5):             if (e.target !== e.currentTarget) return\n
Action.c(5):             this.options.backdrop == 'static'\n
Action.c(5):               ? this.$element[0].focus()\n
Action.c(5):               : this.hide()\n
Action.c(5):           }, this))\n
Action.c(5):     \n
Action.c(5):           if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n
Action.c(5):     \n
Action.c(5):           this.$backdrop.addClass('in')\n
Action.c(5):     \n
Action.c(5):           if (!callback) return\n
Action.c(5):     \n
Action.c(5):           doAnimate ?\n
Action.c(5):             this.$backdrop\n
Action.c(5):               .one('bsTransitionEnd', callback)\n
Action.c(5):               .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n
Action.c(5):             callback()\n
Action.c(5):     \n
Action.c(5):         } else if (!this.isShown && this.$backdrop) {\n
Action.c(5):           this.$backdrop.removeClass('in')\n
Action.c(5):     \n
Action.c(5):           var callbackRemove = function () {\n
Action.c(5):             that.removeBackdrop()\n
Action.c(5):             callback && callback()\n
Action.c(5):           }\n
Action.c(5):           $.support.transition && this.$element.hasClass('fade') ?\n
Action.c(5):             this.$backdrop\n
Action.c(5):               .one('bsTransitionEnd', callbackRemove)\n
Action.c(5):               .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n
Action.c(5):             callbackRemove()\n
Action.c(5):     \n
Action.c(5):         } else if (callback) {\n
Action.c(5):           callback()\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       // these following methods are used to handle overflowing modals\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.handleUpdate = function () {\n
Action.c(5):         this.adjustDialog()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.adjustDialog = function () {\n
Action.c(5):         var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clie
Action.c(5):     ntHeight\n
Action.c(5):     \n
Action.c(5):         this.$element.css({\n
Action.c(5):           paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : 
Action.c(5):     '',\n
Action.c(5):           paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : 
Action.c(5):     ''\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.resetAdjustments = function () {\n
Action.c(5):         this.$element.css({\n
Action.c(5):           paddingLeft: '',\n
Action.c(5):           paddingRight: ''\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.checkScrollbar = function () {\n
Action.c(5):         var fullWindowWidth = window.innerWidth\n
Action.c(5):         if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n
Action.c(5):           var documentElementRect = document.documentElement.getBoundingClientRect()\n
Action.c(5):           fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n
Action.c(5):         }\n
Action.c(5):         this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n
Action.c(5):         this.scrollbarWidth = this.measureScrollbar()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.setScrollbar = function () {\n
Action.c(5):         var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n
Action.c(5):         this.originalBodyPad = document.body.style.paddingRight || ''\n
Action.c(5):         if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWi
Action.c(5):     dth)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.resetScrollbar = function () {\n
Action.c(5):         this.$body.css('padding-right', this.originalBodyPad)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Modal.prototype.measureScrollbar = function () { // thx walsh\n
Action.c(5):         var scrollDiv = document.createElement('div')\n
Action.c(5):         scrollDiv.className = 'modal-scrollbar-measure'\n
Action.c(5):         this.$body.append(scrollDiv)\n
Action.c(5):         var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n
Action.c(5):         this.$body[0].removeChild(scrollDiv)\n
Action.c(5):         return scrollbarWidth\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // MODAL PLUGIN DEFINITION\n
Action.c(5):       // =======================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option, _relatedTarget) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.modal')\n
Action.c(5):           var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' &
Action.c(5):     & option)\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n
Action.c(5):           if (typeof option == 'string') data[option](_relatedTarget)\n
Action.c(5):           else if (options.show) data.show(_relatedTarget)\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.modal\n
Action.c(5):     \n
Action.c(5):       $.fn.modal             = Plugin\n
Action.c(5):       $.fn.modal.Constructor = Modal\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // MODAL NO CONFLICT\n
Action.c(5):       // =================\n
Action.c(5):     \n
Action.c(5):       $.fn.modal.noConflict = function () {\n
Action.c(5):         $.fn.modal = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // MODAL DATA-API\n
Action.c(5):       // ==============\n
Action.c(5):     \n
Action.c(5):       $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {\n
Action.c(5):         var $this   = $(this)\n
Action.c(5):         var href    = $this.attr('href')\n
Action.c(5):         var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, 
Action.c(5):     ''))) // strip for ie7\n
Action.c(5):         var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href)
Action.c(5):      && href }, $target.data(), $this.data())\n
Action.c(5):     \n
Action.c(5):         if ($this.is('a')) e.preventDefault()\n
Action.c(5):     \n
Action.c(5):         $target.one('show.bs.modal', function (showEvent) {\n
Action.c(5):           if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal 
Action.c(5):     will actually get shown\n
Action.c(5):           $target.one('hidden.bs.modal', function () {\n
Action.c(5):             $this.is(':visible') && $this.trigger('focus')\n
Action.c(5):           })\n
Action.c(5):         })\n
Action.c(5):         Plugin.call($target, option, this)\n
Action.c(5):       })\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: tooltip.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#tooltip\n
Action.c(5):      * Inspired by the original jQuery.tipsy by Jason Frame\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function 
Action.c(5): t=213943ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5):     ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // TOOLTIP PUBLIC CLASS DEFINITION\n
Action.c(5):       // ===============================\n
Action.c(5):     \n
Action.c(5):       var Tooltip = function (element, options) {\n
Action.c(5):         this.type       = null\n
Action.c(5):         this.options    = null\n
Action.c(5):         this.enabled    = null\n
Action.c(5):         this.timeout    = null\n
Action.c(5):         this.hoverState = null\n
Action.c(5):         this.$element   = null\n
Action.c(5):         this.inState    = null\n
Action.c(5):     \n
Action.c(5):         this.init('tooltip', element, options)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Tooltip.TRANSITION_DURATION = 150\n
Action.c(5):     \n
Action.c(5):       Tooltip.DEFAULTS = {\n
Action.c(5):         animation: true,\n
Action.c(5):         placement: 'top',\n
Action.c(5):         selector: false,\n
Action.c(5):         template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div c
Action.c(5):     lass="tooltip-inner"></div></div>',\n
Action.c(5):         trigger: 'hover focus',\n
Action.c(5):         title: '',\n
Action.c(5):         delay: 0,\n
Action.c(5):         html: false,\n
Action.c(5):         container: false,\n
Action.c(5):         viewport: {\n
Action.c(5):           selector: 'body',\n
Action.c(5):           padding: 0\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.init = function (type, element, options) {\n
Action.c(5):         this.enabled   = true\n
Action.c(5):         this.type      = type\n
Action.c(5):         this.$element  = $(element)\n
Action.c(5):         this.options   = this.getOptions(options)\n
Action.c(5):         this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this
Action.c(5):     .options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.opti
Action.c(5):     ons.viewport))\n
Action.c(5):         this.inState   = { click: false, hover: false, focus: false }\n
Action.c(5):     \n
Action.c(5):         if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n
Action.c(5):           throw new Error('`selector` option must be specified when initializing ' + this.type
Action.c(5):      + ' on the window.document object!')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var triggers = this.options.trigger.split(' ')\n
Action.c(5):     \n
Action.c(5):         for (var i = triggers.length; i--;) {\n
Action.c(5):           var trigger = triggers[i]\n
Action.c(5):     \n
Action.c(5):           if (trigger == 'click') {\n
Action.c(5):             this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle,
Action.c(5):      this))\n
Action.c(5):           } else if (trigger != 'manual') {\n
Action.c(5):             var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n
Action.c(5):             var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n
Action.c(5):     \n
Action.c(5):             this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.e
Action.c(5):     nter, this))\n
Action.c(5):             this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.l
Action.c(5):     eave, this))\n
Action.c(5):           }\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         this.options.selector ?\n
Action.c(5):           (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n
Action.c(5):           this.fixTitle()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getDefaults = function () {\n
Action.c(5):         return Tooltip.DEFAULTS\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getOptions = function (options) {\n
Action.c(5):         options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n
Action.c(5):     \n
Action.c(5):         if (options.delay && typeof options.delay == 'number') {\n
Action.c(5):           options.delay = {\n
Action.c(5):             show: options.delay,\n
Action.c(5):             hide: options.delay\n
Action.c(5):           }\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         return options\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getDelegateOptions = function () {\n
Action.c(5):         var options  = {}\n
Action.c(5):         var defaults = this.getDefaults()\n
Action.c(5):     \n
Action.c(5):         this._options && $.each(this._options, function (key, value) {\n
Action.c(5):           if (defaults[key] != value) options[key] = value\n
Action.c(5):         })\n
Action.c(5):     \n
Action.c(5):         return options\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.enter = function (obj) {\n
Action.c(5):         var self = obj instanceof this.constructor ?\n
Action.c(5):           obj : $(obj.currentTarget).data('bs.' + this.type)\n
Action.c(5):     \n
Action.c(5):         if (!self) {\n
Action.c(5):           self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n
Action.c(5):           $(obj.currentTarget).data('bs.' + this.type, self)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (obj instanceof $.Event) {\n
Action.c(5):           self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (self.tip().hasClass('in') || self.hoverState == 'in') {\n
Action.c(5):           self.hoverState = 'in'\n
Action.c(5):           return\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         clearTimeout(self.timeout)\n
Action.c(5):     \n
Action.c(5):         self.hoverState = 'in'\n
Action.c(5):     \n
Action.c(5):         if (!self.options.delay || !self.options.delay.show) return self.show()\n
Action.c(5):     \n
Action.c(5):         self.timeout = setTimeout(function () {\n
Action.c(5):           if (self.hoverState == 'in') self.show()\n
Action.c(5):         }, self.options.delay.show)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.isInStateTrue = function () {\n
Action.c(5):         for (var key in this.inState) {\n
Action.c(5):           if (this.inState[key]) return true\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         return false\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.leave = function (obj) {\n
Action.c(5):         var self = obj instanceof this.constructor ?\n
Action.c(5):           obj : $(obj.currentTarget).data('bs.' + this.type)\n
Action.c(5):     \n
Action.c(5):         if (!self) {\n
Action.c(5):           self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n
Action.c(5):           $(obj.currentTarget).data('bs.' + this.type, self)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (obj instanceof $.Event) {\n
Action.c(5):           self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (self.isInStateTrue()) return\n
Action.c(5):     \n
Action.c(5):         clearTimeout(self.timeout)\n
Action.c(5):     \n
Action.c(5):         self.hoverState = 'out'\n
Action.c(5):     \n
Action.c(5):         if (!self.options.delay || !self.options.delay.hide) return self.hide()\n
Action.c(5):     \n
Action.c(5):         self.timeout = setTimeout(function () {\n
Action.c(5):           if (self.hoverState == 'out') self.hide()\n
Action.c(5):         }, self.options.delay.hide)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.show = function () {\n
Action.c(5):         var e = $.Event('show.bs.' + this.type)\n
Action.c(5):     \n
Action.c(5):         if (this.hasContent() && this.enabled) {\n
Action.c(5):           this.$element.trigger(e)\n
Action.c(5):     \n
Action.c(5):           var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element
Action.c(5):     [0])\n
Action.c(5):           if (e.isDefaultPrevented() || !inDom) return\n
Action.c(5):           var that = this\n
Action.c(5):     \n
Action.c(5):           var $tip = this.tip()\n
Action.c(5):     \n
Action.c(5):           var tipId = this.getUID(this.type)\n
Action.c(5):     \n
Action.c(5):           this.setContent()\n
Action.c(5):           $tip.attr('id', tipId)\n
Action.c(5):           this.$element.attr('aria-describedby', tipId)\n
Action.c(5):     \n
Action.c(5):           if (this.options.animation) $tip.addClass('fade')\n
Action.c(5):     \n
Action.c(5):           var placement = typeof this.options.placement == 'function' ?\n
Action.c(5):             this.options.placement.call(this, $tip[0], this.$element[0]) :\n
Action.c(5):             this.options.placement\n
Action.c(5):     \n
Action.c(5):           var autoToken = /\\s?auto?\\s?/i\n
Action.c(5):           var autoPlace = autoToken.test(placement)\n
Action.c(5):           if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n
Action.c(5):     \n
Action.c(5):           $tip\n
Action.c(5):             .detach()\n
Action.c(5):             .css({ top: 0, left: 0, display: 'block' })\n
Action.c(5):             .addClass(placement)\n
Action.c(5):             .data('bs.' + this.type, this)\n
Action.c(5):     \n
Action.c(5):           this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(th
Action.c(5):     is.$element)\n
Action.c(5):           this.$element.trigger('inserted.bs.' + this.type)\n
Action.c(5):     \n
Action.c(5):           var pos          = this.getPosition()\n
Action.c(5):           var actualWidth  = $tip[0].offsetWidth\n
Action.c(5):           var actualHeight = $tip[0].offsetHeight\n
Action.c(5):     \n
Action.c(5):           if (autoPlace) {\n
Action.c(5):             var orgPlacement = placement\n
Action.c(5):             var viewportDim = this.getPosition(this.$viewport)\n
Action.c(5):     \n
Action.c(5):             placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.botto
Action.c(5):     m ? 'top'    :\n
Action.c(5):                         placement == 'top'    && pos.top    - actualHeight < viewportDim.top  
Action.c(5):       ? 'bottom' :\n
Action.c(5):                         placement == 'right'  && pos.right  + actualWidth  > viewportDim.width
Action.c(5):       ? 'left'   :\n
Action.c(5):                         placement == 'left'   && pos.left   - actualWidth  < viewportDim.left 
Action.c(5):       ? 'right'  :\n
Action.c(5):                         placement\n
Action.c(5):     \n
Action.c(5):             $tip\n
Action.c(5):               .removeClass(orgPlacement)\n
Action.c(5):               .addClass(placement)\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualH
Action.c(5):     eight)\n
Action.c(5):     \n
Action.c(5):           this.applyPlacement(calculatedOffset, placement)\n
Action.c(5):     \n
Action.c(5):           var complete = function () {\n
Action.c(5):             var prevHoverState = that.hoverState\n
Action.c(5):             that.$element.trigger('shown.bs.' + that.type)\n
Action.c(5):             that.hoverState = null\n
Action.c(5):     \n
Action.c(5):             if (prevHoverState == 'out') that.leave(that)\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           $.support.transition && this.$tip.hasClass('fade') ?\n
Action.c(5):             $tip\n
Action.c(5):               .one('bsTransitionEnd', complete)\n
Action.c(5):               .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n
Action.c(5):             complete()\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.applyPlacement = function (offset, placement) {\n
Action.c(5):         var $tip   = this.tip()\n
Action.c(5):         var width  = $tip[0].offsetWidth\n
Action.c(5):         var height = $tip[0].offsetHeight\n
Action.c(5):     \n
Action.c(5):         // manually read margins because getBoundingClientRect includes difference\n
Action.c(5):         var marginTop = parseInt($tip.css('margin-top'), 10)\n
Action.c(5):         var marginLeft = parseInt($tip.css('margin-left'), 10)\n
Action.c(5):     \n
Action.c(5):         // we must check for NaN for ie 8/9\n
Action.c(5):         if (isNaN(marginTop))  marginTop  = 0\n
Action.c(5):         if (isNaN(marginLeft)) marginLeft = 0\n
Action.c(5):     \n
Action.c(5):         offset.top  += marginTop\n
Action.c(5):         offset.left += marginLeft\n
Action.c(5):     \n
Action.c(5):         // $.fn.offset doesn't round pixel values\n
Action.c(5):         // so we use setOffset directly with our own function B-0\n
Action.c(5):         $.offset.setOffset($tip[0], $.extend({\n
Action.c(5):           using: function (props) {\n
Action.c(5):             $tip.css({\n
Action.c(5):               top: Math.round(props.top),\n
Action.c(5):               left: Math.round(props.left)\n
Action.c(5):             })\n
Action.c(5):           }\n
Action.c(5):         }, offset), 0)\n
Action.c(5):     \n
Action.c(5):         $tip.addClass('in')\n
Action.c(5):     \n
Action.c(5):         // check to see if placing tip in new offset caused the tip to resize itself\n
Action.c(5):         var actualWidth  = $tip[0].offsetWidth\n
Action.c(5):         var actualHeight = $tip[0].offsetHeight\n
Action.c(5):     \n
Action.c(5):         if (placement == 'top' && actualHeight != height) {\n
Action.c(5):           offset.top = offset.top + height - actualHeight\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight
Action.c(5):     )\n
Action.c(5):     \n
Action.c(5):         if (delta.left) offset.left += delta.left\n
Action.c(5):         else offset.top += delta.top\n
Action.c(5):     \n
Action.c(5):         var isVertical          = /top|bottom/.test(placement)\n
Action.c(5):         var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.to
Action.c(5):     p * 2 - height + actualHeight\n
Action.c(5):         var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n
Action.c(5):     \n
Action.c(5):         $tip.offset(offset)\n
Action.c(5):         this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n
Action.c(5):         this.arrow()\n
Action.c(5):           .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n
Action.c(5):           .css(isVertical ? 'top' : 'left', '')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.setContent = function () {\n
Action.c(5):         var $tip  = this.tip()\n
Action.c(5):         var title = this.getTitle()\n
Action.c(5):     \n
Action.c(5):         $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n
Action.c(5):         $tip.removeClass('fade in top bottom left right')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.hide = function (callback) {\n
Action.c(5):         var that = this\n
Action.c(5):         var $tip = $(this.$tip)\n
Action.c(5):         var e    = $.Event('hide.bs.' + this.type)\n
Action.c(5):     \n
Action.c(5):         function complete() {\n
Action.c(5):           if (that.hoverState != 'in') $tip.detach()\n
Action.c(5):           if (that.$element) { // TODO: Check whether guarding this code with this `if` is rea
Action.c(5):     lly necessary.\n
Action.c(5):             that.$element\n
Action.c(5):               .removeAttr('aria-describedby')\n
Action.c(5):               .trigger('hidden.bs.' + that.type)\n
Action.c(5):           }\n
Action.c(5):           callback && callback()\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         this.$element.trigger(e)\n
Action.c(5):     \n
Action.c(5):         if (e.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         $tip.removeClass('in')\n
Action.c(5):     \n
Action.c(5):         $.support.transition && $tip.hasClass('fade') ?\n
Action.c(5):           $tip\n
Action.c(5):             .one('bsTransitionEnd', complete)\n
Action.c(5):             .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n
Action.c(5):           complete()\n
Action.c(5):     \n
Action.c(5):         this.hoverState = null\n
Action.c(5):     \n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.fixTitle = function () {\n
Action.c(5):         var $e = this.$element\n
Action.c(5):         if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n
Action.c(5):           $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.hasContent = function () {\n
Action.c(5):         return this.getTitle()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getPosition = function ($element) {\n
Action.c(5):         $element   = $element || this.$element\n
Action.c(5):     \n
Action.c(5):         var el     = $element[0]\n
Action.c(5):         var isBody = el.tagName == 'BODY'\n
Action.c(5):     \n
Action.c(5):         var elRect    = el.getBoundingClientRect()\n
Action.c(5):         if (elRect.width == null) {\n
Action.c(5):           // width and height are missing in IE8, so compute them manually; see https://github
Action.c(5):     .com/twbs/bootstrap/issues/14093\n
Action.c(5):           elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bo
Action.c(5):     ttom - elRect.top })\n
Action.c(5):         }\n
Action.c(5):         var isSvg = window.SVGElement && el instanceof window.SVGElement\n
Action.c(5):         // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\n
Action.c(5):         // See https://github.com/twbs/bootstrap/issues/20280\n
Action.c(5):         var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())\n
Action.c(5):         var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body
Action.c(5):     .scrollTop : $element.scrollTop() }\n
Action.c(5):         var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : nu
Action.c(5):     ll\n
Action.c(5):     \n
Action.c(5):         return $.extend({}, elRect, scroll, outerDims, elOffset)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHei
Action.c(5):     ght) {\n
Action.c(5):         return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.wid
Action.c(5):     th / 2 - actualWidth / 2 } :\n
Action.c(5):                placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.wid
Action.c(5):     th / 2 - actualWidth / 2 } :\n
Action.c(5):                placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, lef
Action.c(5):     t: pos.left - actualWidth } :\n
Action.c(5):             /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, lef
Action.c(5):     t: pos.left + pos.width }\n
Action.c(5):     \n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualW
Action.c(5): t=213947ms: 8864-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5):     idth, actualHeight) {\n
Action.c(5):         var delta = { top: 0, left: 0 }\n
Action.c(5):         if (!this.$viewport) return delta\n
Action.c(5):     \n
Action.c(5):         var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n
Action.c(5):         var viewportDimensions = this.getPosition(this.$viewport)\n
Action.c(5):     \n
Action.c(5):         if (/right|left/.test(placement)) {\n
Action.c(5):           var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n
Action.c(5):           var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actua
Action.c(5):     lHeight\n
Action.c(5):           if (topEdgeOffset < viewportDimensions.top) { // top overflow\n
Action.c(5):             delta.top = viewportDimensions.top - topEdgeOffset\n
Action.c(5):           } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { 
Action.c(5):     // bottom overflow\n
Action.c(5):             delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n
Action.c(5):           }\n
Action.c(5):         } else {\n
Action.c(5):           var leftEdgeOffset  = pos.left - viewportPadding\n
Action.c(5):           var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n
Action.c(5):           if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n
Action.c(5):             delta.left = viewportDimensions.left - leftEdgeOffset\n
Action.c(5):           } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n
Action.c(5):             delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n
Action.c(5):           }\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         return delta\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getTitle = function () {\n
Action.c(5):         var title\n
Action.c(5):         var $e = this.$element\n
Action.c(5):         var o  = this.options\n
Action.c(5):     \n
Action.c(5):         title = $e.attr('data-original-title')\n
Action.c(5):           || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n
Action.c(5):     \n
Action.c(5):         return title\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.getUID = function (prefix) {\n
Action.c(5):         do prefix += ~~(Math.random() * 1000000)\n
Action.c(5):         while (document.getElementById(prefix))\n
Action.c(5):         return prefix\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.tip = function () {\n
Action.c(5):         if (!this.$tip) {\n
Action.c(5):           this.$tip = $(this.options.template)\n
Action.c(5):           if (this.$tip.length != 1) {\n
Action.c(5):             throw new Error(this.type + ' `template` option must consist of exactly 1 top-leve
Action.c(5):     l element!')\n
Action.c(5):           }\n
Action.c(5):         }\n
Action.c(5):         return this.$tip\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.arrow = function () {\n
Action.c(5):         return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.enable = function () {\n
Action.c(5):         this.enabled = true\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.disable = function () {\n
Action.c(5):         this.enabled = false\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.toggleEnabled = function () {\n
Action.c(5):         this.enabled = !this.enabled\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.toggle = function (e) {\n
Action.c(5):         var self = this\n
Action.c(5):         if (e) {\n
Action.c(5):           self = $(e.currentTarget).data('bs.' + this.type)\n
Action.c(5):           if (!self) {\n
Action.c(5):             self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n
Action.c(5):             $(e.currentTarget).data('bs.' + this.type, self)\n
Action.c(5):           }\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (e) {\n
Action.c(5):           self.inState.click = !self.inState.click\n
Action.c(5):           if (self.isInStateTrue()) self.enter(self)\n
Action.c(5):           else self.leave(self)\n
Action.c(5):         } else {\n
Action.c(5):           self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tooltip.prototype.destroy = function () {\n
Action.c(5):         var that = this\n
Action.c(5):         clearTimeout(this.timeout)\n
Action.c(5):         this.hide(function () {\n
Action.c(5):           that.$element.off('.' + that.type).removeData('bs.' + that.type)\n
Action.c(5):           if (that.$tip) {\n
Action.c(5):             that.$tip.detach()\n
Action.c(5):           }\n
Action.c(5):           that.$tip = null\n
Action.c(5):           that.$arrow = null\n
Action.c(5):           that.$viewport = null\n
Action.c(5):           that.$element = null\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // TOOLTIP PLUGIN DEFINITION\n
Action.c(5):       // =========================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.tooltip')\n
Action.c(5):           var options = typeof option == 'object' && option\n
Action.c(5):     \n
Action.c(5):           if (!data && /destroy|hide/.test(option)) return\n
Action.c(5):           if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n
Action.c(5):           if (typeof option == 'string') data[option]()\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.tooltip\n
Action.c(5):     \n
Action.c(5):       $.fn.tooltip             = Plugin\n
Action.c(5):       $.fn.tooltip.Constructor = Tooltip\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // TOOLTIP NO CONFLICT\n
Action.c(5):       // ===================\n
Action.c(5):     \n
Action.c(5):       $.fn.tooltip.noConflict = function () {\n
Action.c(5):         $.fn.tooltip = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: popover.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#popovers\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // POPOVER PUBLIC CLASS DEFINITION\n
Action.c(5):       // ===============================\n
Action.c(5):     \n
Action.c(5):       var Popover = function (element, options) {\n
Action.c(5):         this.init('popover', element, options)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n
Action.c(5):     \n
Action.c(5):       Popover.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n
Action.c(5):         placement: 'right',\n
Action.c(5):         trigger: 'click',\n
Action.c(5):         content: '',\n
Action.c(5):         template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="pop
Action.c(5):     over-title"></h3><div class="popover-content"></div></div>'\n
Action.c(5):       })\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // NOTE: POPOVER EXTENDS tooltip.js\n
Action.c(5):       // ================================\n
Action.c(5):     \n
Action.c(5):       Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n
Action.c(5):     \n
Action.c(5):       Popover.prototype.constructor = Popover\n
Action.c(5):     \n
Action.c(5):       Popover.prototype.getDefaults = function () {\n
Action.c(5):         return Popover.DEFAULTS\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Popover.prototype.setContent = function () {\n
Action.c(5):         var $tip    = this.tip()\n
Action.c(5):         var title   = this.getTitle()\n
Action.c(5):         var content = this.getContent()\n
Action.c(5):     \n
Action.c(5):         $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n
Action.c(5):         $tip.find('.popover-content').children().detach().end()[ // we use append for html obj
Action.c(5):     ects to maintain js events\n
Action.c(5):           this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n
Action.c(5):         ](content)\n
Action.c(5):     \n
Action.c(5):         $tip.removeClass('fade top bottom left right in')\n
Action.c(5):     \n
Action.c(5):         // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n
Action.c(5):         // this manually by checking the contents.\n
Action.c(5):         if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Popover.prototype.hasContent = function () {\n
Action.c(5):         return this.getTitle() || this.getContent()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Popover.prototype.getContent = function () {\n
Action.c(5):         var $e = this.$element\n
Action.c(5):         var o  = this.options\n
Action.c(5):     \n
Action.c(5):         return $e.attr('data-content')\n
Action.c(5):           || (typeof o.content == 'function' ?\n
Action.c(5):                 o.content.call($e[0]) :\n
Action.c(5):                 o.content)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Popover.prototype.arrow = function () {\n
Action.c(5):         return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // POPOVER PLUGIN DEFINITION\n
Action.c(5):       // =========================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.popover')\n
Action.c(5):           var options = typeof option == 'object' && option\n
Action.c(5):     \n
Action.c(5):           if (!data && /destroy|hide/.test(option)) return\n
Action.c(5):           if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n
Action.c(5):           if (typeof option == 'string') data[option]()\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.popover\n
Action.c(5):     \n
Action.c(5):       $.fn.popover             = Plugin\n
Action.c(5):       $.fn.popover.Constructor = Popover\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // POPOVER NO CONFLICT\n
Action.c(5):       // ===================\n
Action.c(5):     \n
Action.c(5):       $.fn.popover.noConflict = function () {\n
Action.c(5):         $.fn.popover = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: scrollspy.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#scrollspy\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // SCROLLSPY CLASS DEFINITION\n
Action.c(5):       // ==========================\n
Action.c(5):     \n
Action.c(5):       function ScrollSpy(element, options) {\n
Action.c(5):         this.$body          = $(document.body)\n
Action.c(5):         this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n
Action.c(5):         this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n
Action.c(5):         this.selector       = (this.options.target || '') + ' .nav li > a'\n
Action.c(5):         this.offsets        = []\n
Action.c(5):         this.targets        = []\n
Action.c(5):         this.activeTarget   = null\n
Action.c(5):         this.scrollHeight   = 0\n
Action.c(5):     \n
Action.c(5):         this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n
Action.c(5):         this.refresh()\n
Action.c(5):         this.process()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       ScrollSpy.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       ScrollSpy.DEFAULTS = {\n
Action.c(5):         offset: 10\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       ScrollSpy.prototype.getScrollHeight = function () {\n
Action.c(5):         return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, doc
Action.c(5):     ument.documentElement.scrollHeight)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       ScrollSpy.prototype.refresh = function () {\n
Action.c(5):         var that          = this\n
Action.c(5):         var offsetMethod  = 'offset'\n
Action.c(5):         var offsetBase    = 0\n
Action.c(5):     \n
Action.c(5):         this.offsets      = []\n
Action.c(5):         this.targets      = []\n
Action.c(5):         this.scrollHeight = this.getScrollHeight()\n
Action.c(5):     \n
Action.c(5):         if (!$.isWindow(this.$scrollElement[0])) {\n
Action.c(5):           offsetMethod = 'position'\n
Action.c(5):           offsetBase   = this.$scrollElement.scrollTop()\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         this.$body\n
Action.c(5):           .find(this.selector)\n
Action.c(5):           .ma
Action.c(5): t=213949ms: 2160-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5): t=213949ms: 11691-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/bootstrap.js" (RelFrameId=, Internal ID=259)
Action.c(5):     p(function () {\n
Action.c(5):             var $el   = $(this)\n
Action.c(5):             var href  = $el.data('target') || $el.attr('href')\n
Action.c(5):             var $href = /^#./.test(href) && $(href)\n
Action.c(5):     \n
Action.c(5):             return ($href\n
Action.c(5):               && $href.length\n
Action.c(5):               && $href.is(':visible')\n
Action.c(5):               && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n
Action.c(5):           })\n
Action.c(5):           .sort(function (a, b) { return a[0] - b[0] })\n
Action.c(5):           .each(function () {\n
Action.c(5):             that.offsets.push(this[0])\n
Action.c(5):             that.targets.push(this[1])\n
Action.c(5):           })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       ScrollSpy.prototype.process = function () {\n
Action.c(5):         var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n
Action.c(5):         var scrollHeight = this.getScrollHeight()\n
Action.c(5):         var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n
Action.c(5):         var offsets      = this.offsets\n
Action.c(5):         var targets      = this.targets\n
Action.c(5):         var activeTarget = this.activeTarget\n
Action.c(5):         var i\n
Action.c(5):     \n
Action.c(5):         if (this.scrollHeight != scrollHeight) {\n
Action.c(5):           this.refresh()\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (scrollTop >= maxScroll) {\n
Action.c(5):           return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (activeTarget && scrollTop < offsets[0]) {\n
Action.c(5):           this.activeTarget = null\n
Action.c(5):           return this.clear()\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         for (i = offsets.length; i--;) {\n
Action.c(5):           activeTarget != targets[i]\n
Action.c(5):             && scrollTop >= offsets[i]\n
Action.c(5):             && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n
Action.c(5):             && this.activate(targets[i])\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       ScrollSpy.prototype.activate = function (target) {\n
Action.c(5):         this.activeTarget = target\n
Action.c(5):     \n
Action.c(5):         this.clear()\n
Action.c(5):     \n
Action.c(5):         var selector = this.selector +\n
Action.c(5):           '[data-target="' + target + '"],' +\n
Action.c(5):           this.selector + '[href="' + target + '"]'\n
Action.c(5):     \n
Action.c(5):         var active = $(selector)\n
Action.c(5):           .parents('li')\n
Action.c(5):           .addClass('active')\n
Action.c(5):     \n
Action.c(5):         if (active.parent('.dropdown-menu').length) {\n
Action.c(5):           active = active\n
Action.c(5):             .closest('li.dropdown')\n
Action.c(5):             .addClass('active')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         active.trigger('activate.bs.scrollspy')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       ScrollSpy.prototype.clear = function () {\n
Action.c(5):         $(this.selector)\n
Action.c(5):           .parentsUntil(this.options.target, '.active')\n
Action.c(5):           .removeClass('active')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // SCROLLSPY PLUGIN DEFINITION\n
Action.c(5):       // ===========================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.scrollspy')\n
Action.c(5):           var options = typeof option == 'object' && option\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n
Action.c(5):           if (typeof option == 'string') data[option]()\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.scrollspy\n
Action.c(5):     \n
Action.c(5):       $.fn.scrollspy             = Plugin\n
Action.c(5):       $.fn.scrollspy.Constructor = ScrollSpy\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // SCROLLSPY NO CONFLICT\n
Action.c(5):       // =====================\n
Action.c(5):     \n
Action.c(5):       $.fn.scrollspy.noConflict = function () {\n
Action.c(5):         $.fn.scrollspy = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // SCROLLSPY DATA-API\n
Action.c(5):       // ==================\n
Action.c(5):     \n
Action.c(5):       $(window).on('load.bs.scrollspy.data-api', function () {\n
Action.c(5):         $('[data-spy="scroll"]').each(function () {\n
Action.c(5):           var $spy = $(this)\n
Action.c(5):           Plugin.call($spy, $spy.data())\n
Action.c(5):         })\n
Action.c(5):       })\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: tab.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#tabs\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // TAB CLASS DEFINITION\n
Action.c(5):       // ====================\n
Action.c(5):     \n
Action.c(5):       var Tab = function (element) {\n
Action.c(5):         // jscs:disable requireDollarBeforejQueryAssignment\n
Action.c(5):         this.element = $(element)\n
Action.c(5):         // jscs:enable requireDollarBeforejQueryAssignment\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tab.VERSION = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Tab.TRANSITION_DURATION = 150\n
Action.c(5):     \n
Action.c(5):       Tab.prototype.show = function () {\n
Action.c(5):         var $this    = this.element\n
Action.c(5):         var $ul      = $this.closest('ul:not(.dropdown-menu)')\n
Action.c(5):         var selector = $this.data('target')\n
Action.c(5):     \n
Action.c(5):         if (!selector) {\n
Action.c(5):           selector = $this.attr('href')\n
Action.c(5):           selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if ($this.parent('li').hasClass('active')) return\n
Action.c(5):     \n
Action.c(5):         var $previous = $ul.find('.active:last a')\n
Action.c(5):         var hideEvent = $.Event('hide.bs.tab', {\n
Action.c(5):           relatedTarget: $this[0]\n
Action.c(5):         })\n
Action.c(5):         var showEvent = $.Event('show.bs.tab', {\n
Action.c(5):           relatedTarget: $previous[0]\n
Action.c(5):         })\n
Action.c(5):     \n
Action.c(5):         $previous.trigger(hideEvent)\n
Action.c(5):         $this.trigger(showEvent)\n
Action.c(5):     \n
Action.c(5):         if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):         var $target = $(selector)\n
Action.c(5):     \n
Action.c(5):         this.activate($this.closest('li'), $ul)\n
Action.c(5):         this.activate($target, $target.parent(), function () {\n
Action.c(5):           $previous.trigger({\n
Action.c(5):             type: 'hidden.bs.tab',\n
Action.c(5):             relatedTarget: $this[0]\n
Action.c(5):           })\n
Action.c(5):           $this.trigger({\n
Action.c(5):             type: 'shown.bs.tab',\n
Action.c(5):             relatedTarget: $previous[0]\n
Action.c(5):           })\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Tab.prototype.activate = function (element, container, callback) {\n
Action.c(5):         var $active    = container.find('> .active')\n
Action.c(5):         var transition = callback\n
Action.c(5):           && $.support.transition\n
Action.c(5):           && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length
Action.c(5):     )\n
Action.c(5):     \n
Action.c(5):         function next() {\n
Action.c(5):           $active\n
Action.c(5):             .removeClass('active')\n
Action.c(5):             .find('> .dropdown-menu > .active')\n
Action.c(5):               .removeClass('active')\n
Action.c(5):             .end()\n
Action.c(5):             .find('[data-toggle="tab"]')\n
Action.c(5):               .attr('aria-expanded', false)\n
Action.c(5):     \n
Action.c(5):           element\n
Action.c(5):             .addClass('active')\n
Action.c(5):             .find('[data-toggle="tab"]')\n
Action.c(5):               .attr('aria-expanded', true)\n
Action.c(5):     \n
Action.c(5):           if (transition) {\n
Action.c(5):             element[0].offsetWidth // reflow for transition\n
Action.c(5):             element.addClass('in')\n
Action.c(5):           } else {\n
Action.c(5):             element.removeClass('fade')\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           if (element.parent('.dropdown-menu').length) {\n
Action.c(5):             element\n
Action.c(5):               .closest('li.dropdown')\n
Action.c(5):                 .addClass('active')\n
Action.c(5):               .end()\n
Action.c(5):               .find('[data-toggle="tab"]')\n
Action.c(5):                 .attr('aria-expanded', true)\n
Action.c(5):           }\n
Action.c(5):     \n
Action.c(5):           callback && callback()\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         $active.length && transition ?\n
Action.c(5):           $active\n
Action.c(5):             .one('bsTransitionEnd', next)\n
Action.c(5):             .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n
Action.c(5):           next()\n
Action.c(5):     \n
Action.c(5):         $active.removeClass('in')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // TAB PLUGIN DEFINITION\n
Action.c(5):       // =====================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this = $(this)\n
Action.c(5):           var data  = $this.data('bs.tab')\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.tab', (data = new Tab(this)))\n
Action.c(5):           if (typeof option == 'string') data[option]()\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.tab\n
Action.c(5):     \n
Action.c(5):       $.fn.tab             = Plugin\n
Action.c(5):       $.fn.tab.Constructor = Tab\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // TAB NO CONFLICT\n
Action.c(5):       // ===============\n
Action.c(5):     \n
Action.c(5):       $.fn.tab.noConflict = function () {\n
Action.c(5):         $.fn.tab = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // TAB DATA-API\n
Action.c(5):       // ============\n
Action.c(5):     \n
Action.c(5):       var clickHandler = function (e) {\n
Action.c(5):         e.preventDefault()\n
Action.c(5):         Plugin.call($(this), 'show')\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       $(document)\n
Action.c(5):         .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)\n
Action.c(5):         .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5):     \n
Action.c(5):     /* ========================================================================\n
Action.c(5):      * Bootstrap: affix.js v3.3.7\n
Action.c(5):      * http://getbootstrap.com/javascript/#affix\n
Action.c(5):      * ========================================================================\n
Action.c(5):      * Copyright 2011-2016 Twitter, Inc.\n
Action.c(5):      * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n
Action.c(5):      * ======================================================================== */\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     +function ($) {\n
Action.c(5):       'use strict';\n
Action.c(5):     \n
Action.c(5):       // AFFIX CLASS DEFINITION\n
Action.c(5):       // ======================\n
Action.c(5):     \n
Action.c(5):       var Affix = function (element, options) {\n
Action.c(5):         this.options = $.extend({}, Affix.DEFAULTS, options)\n
Action.c(5):     \n
Action.c(5):         this.$target = $(this.options.target)\n
Action.c(5):           .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n
Action.c(5):           .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n
Action.c(5):     \n
Action.c(5):         this.$element     = $(element)\n
Action.c(5):         this.affixed      = null\n
Action.c(5):         this.unpin        = null\n
Action.c(5):         this.pinnedOffset = null\n
Action.c(5):     \n
Action.c(5):         this.checkPosition()\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Affix.VERSION  = '3.3.7'\n
Action.c(5):     \n
Action.c(5):       Affix.RESET    = 'affix affix-top affix-bottom'\n
Action.c(5):     \n
Action.c(5):       Affix.DEFAULTS = {\n
Action.c(5):         offset: 0,\n
Action.c(5):         target: window\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n
Action.c(5):         var scrollTop    = this.$target.scrollTop()\n
Action.c(5):         var position     = this.$element.offset()\n
Action.c(5):         var targetHeight = this.$target.height()\n
Action.c(5):     \n
Action.c(5):         if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' :
Action.c(5):      false\n
Action.c(5):     \n
Action.c(5):         if (this.affixed == 'bottom') {\n
Action.c(5):           if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bo
Action.c(5):     ttom'\n
Action.c(5):           return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         var initializing   = this.affixed == null\n
Action.c(5):         var colliderTop    = initializing ? scrollTop : position.top\n
Action.c(5):         var colliderHeight = initializing ? targetHeight : height\n
Action.c(5):     \n
Action.c(5):         if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n
Action.c(5):         if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBott
Action.c(5):     om)) return 'bottom'\n
Action.c(5):     \n
Action.c(5):         return false\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Affix.prototype.getPinnedOffset = function () {\n
Action.c(5):         if (this.pinnedOffset) return this.pinnedOffset\n
Action.c(5):         this.$element.removeClass(Affix.RESET).addClass('affix')\n
Action.c(5):         var scrollTop = this.$target.scrollTop()\n
Action.c(5):         var position  = this.$element.offset()\n
Action.c(5):         return (this.pinnedOffset = position.top - scrollTop)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Affix.prototype.checkPositionWithEventLoop = function () {\n
Action.c(5):         setTimeout($.proxy(this.checkPosition, this), 1)\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       Affix.prototype.checkPosition = function () {\n
Action.c(5):         if (!this.$element.is(':visible')) return\n
Action.c(5):     \n
Action.c(5):         var height       = this.$element.height()\n
Action.c(5):         var offset       = this.options.offset\n
Action.c(5):         var offsetTop    = offset.top\n
Action.c(5):         var offsetBottom = offset.bottom\n
Action.c(5):         var scrollHeight = Math.max($(document).height(), $(document.body).height())\n
Action.c(5):     \n
Action.c(5):         if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n
Action.c(5):         if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n
Action.c(5):         if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n
Action.c(5):     \n
Action.c(5):         var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n
Action.c(5):     \n
Action.c(5):         if (this.affixed != affix) {\n
Action.c(5):           if (this.unpin != null) this.$element.css('top', '')\n
Action.c(5):     \n
Action.c(5):           var affixType = 'affix' + (affix ? '-' + affix : '')\n
Action.c(5):           var e         = $.Event(affixType + '.bs.affix')\n
Action.c(5):     \n
Action.c(5):           this.$element.trigger(e)\n
Action.c(5):     \n
Action.c(5):           if (e.isDefaultPrevented()) return\n
Action.c(5):     \n
Action.c(5):           this.affixed = affix\n
Action.c(5):           this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n
Action.c(5):     \n
Action.c(5):           this.$element\n
Action.c(5):             .removeClass(Affix.RESET)\n
Action.c(5):             .addClass(affixType)\n
Action.c(5):             .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n
Action.c(5):         }\n
Action.c(5):     \n
Action.c(5):         if (affix == 'bottom') {\n
Action.c(5):           this.$element.offset({\n
Action.c(5):             top: scrollHeight - height - offsetBottom\n
Action.c(5):           })\n
Action.c(5):         }\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // AFFIX PLUGIN DEFINITION\n
Action.c(5):       // =======================\n
Action.c(5):     \n
Action.c(5):       function Plugin(option) {\n
Action.c(5):         return this.each(function () {\n
Action.c(5):           var $this   = $(this)\n
Action.c(5):           var data    = $this.data('bs.affix')\n
Action.c(5):           var options = typeof option == 'object' && option\n
Action.c(5):     \n
Action.c(5):           if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n
Action.c(5):           if (typeof option == 'string') data[option]()\n
Action.c(5):         })\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):       var old = $.fn.affix\n
Action.c(5):     \n
Action.c(5):       $.fn.affix             = Plugin\n
Action.c(5):       $.fn.affix.Constructor = Affix\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // AFFIX NO CONFLICT\n
Action.c(5):       // =================\n
Action.c(5):     \n
Action.c(5):       $.fn.affix.noConflict = function () {\n
Action.c(5):         $.fn.affix = old\n
Action.c(5):         return this\n
Action.c(5):       }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):       // AFFIX DATA-API\n
Action.c(5):       // ==============\n
Action.c(5):     \n
Action.c(5):       $(window).on('load', function () {\n
Action.c(5):         $('[data-spy="affix"]').each(function () {\n
Action.c(5):           var $spy = $(this)\n
Action.c(5):           var data = $spy.data()\n
Action.c(5):     \n
Action.c(5):           data.offset = data.offset || {}\n
Action.c(5):     \n
Action.c(5):           if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n
Action.c(5):           if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n
Action.c(5):     \n
Action.c(5):           Plugin.call($spy, data)\n
Action.c(5):         })\n
Action.c(5):       })\n
Action.c(5):     \n
Action.c(5):     }(jQuery);\n
Action.c(5): t=213953ms: 308-byte response headers for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     Content-Encoding: gzip\r\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:38 GMT\r\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     ETag: "03b18d62d6fd31:0"\r\n
Action.c(5):     Vary: Accept-Encoding\r\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     Content-Length: 83974\r\n
Action.c(5):     \r\n
Action.c(5): t=213953ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5): t=213954ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     /*!\n
Action.c(5):      * jQuery JavaScript Library v1.11.0\n
Action.c(5):      * http://jquery.com/\n
Action.c(5):      *\n
Action.c(5):      * Includes Sizzle.js\n
Action.c(5):      * http://sizzlejs.com/\n
Action.c(5):      *\n
Action.c(5):      * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n
Action.c(5):      * Released under the MIT license\n
Action.c(5):      * http://jquery.org/license\n
Action.c(5):      *\n
Action.c(5):      * Date: 2014-01-23T21:02Z\n
Action.c(5):      */\n
Action.c(5):     \n
Action.c(5):     (function( global, factory ) {\n
Action.c(5):     \n
Action.c(5):     \tif ( typeof module === "object" && typeof module.exports === "object" ) {\n
Action.c(5):     \t\t// For CommonJS and CommonJS-like environments where a proper window is present,\n
Action.c(5):     \t\t// execute the factory and get jQuery\n
Action.c(5):     \t\t// For environments that do not inherently posses a window with a document\n
Action.c(5):     \t\t// (such as Node.js), expose a jQuery-making factory as module.exports\n
Action.c(5):     \t\t// This accentuates the need for the creation of a real window\n
Action.c(5):     \t\t// e.g. var jQuery = require("jquery")(window);\n
Action.c(5):     \t\t// See ticket #14549 for more info\n
Action.c(5):     \t\tmodule.exports = global.document ?\n
Action.c(5):     \t\t\tfactory( global, true ) :\n
Action.c(5):     \t\t\tfunction( w ) {\n
Action.c(5):     \t\t\t\tif ( !w.document ) {\n
Action.c(5):     \t\t\t\t\tthrow new Error( "jQuery requires a window with a document" );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn factory( w );\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\tfactory( global );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     // Pass this if window is not defined yet\n
Action.c(5):     }(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {\n
Action.c(5):     \n
Action.c(5):     // Can't do this because several apps including ASP.NET trace\n
Action.c(5):     // the stack via arguments.caller.callee and Firefox dies if\n
Action.c(5):     // you try to trace through "use strict" call chains. (#13335)\n
Action.c(5):     // Support: Firefox 18+\n
Action.c(5):     //\n
Action.c(5):     \n
Action.c(5):     var deletedIds = [];\n
Action.c(5):     \n
Action.c(5):     var slice = deletedIds.slice;\n
Action.c(5):     \n
Action.c(5):     var concat = deletedIds.concat;\n
Action.c(5):     \n
Action.c(5):     var push = deletedIds.push;\n
Action.c(5):     \n
Action.c(5):     var indexOf = deletedIds.indexOf;\n
Action.c(5):     \n
Action.c(5):     var class2type = {};\n
Action.c(5):     \n
Action.c(5):     var toString = class2type.toString;\n
Action.c(5):     \n
Action.c(5):     var hasOwn = class2type.hasOwnProperty;\n
Action.c(5):     \n
Action.c(5):     var trim = "".trim;\n
Action.c(5):     \n
Action.c(5):     var support = {};\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var\n
Action.c(5):     \tversion = "1.11.0",\n
Action.c(5):     \n
Action.c(5):     \t// Define a local copy of jQuery\n
Action.c(5):     \tjQuery = function( selector, context ) {\n
Action.c(5):     \t\t// The jQuery object is actually just the init constructor 'enhanced'\n
Action.c(5):     \t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n
Action.c(5):     \t\treturn new jQuery.fn.init( selector, context );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)\n
Action.c(5):     \trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n
Action.c(5):     \n
Action.c(5):     \t// Matches dashed string for camelizing\n
Action.c(5):     \trmsPrefix = /^-ms-/,\n
Action.c(5):     \trdashAlpha = /-([\\da-z])/gi,\n
Action.c(5):     \n
Action.c(5):     \t// Used by jQuery.camelCase as callback to replace()\n
Action.c(5):     \tfcamelCase = function( all, letter ) {\n
Action.c(5):     \t\treturn letter.toUpperCase();\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     jQuery.fn = jQuery.prototype = {\n
Action.c(5):     \t// The current version of jQuery being used\n
Action.c(5):     \tjquery: version,\n
Action.c(5):     \n
Action.c(5):     \tconstructor: jQuery,\n
Action.c(5):     \n
Action.c(5):     \t// Start with an empty selector\n
Action.c(5):     \tselector: "",\n
Action.c(5):     \n
Action.c(5):     \t// The default length of a jQuery object is 0\n
Action.c(5):     \tlength: 0,\n
Action.c(5):     \n
Action.c(5):     \ttoArray: function() {\n
Action.c(5):     \t\treturn slice.call( this );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Get the Nth element in the matched element set OR\n
Action.c(5):     \t// Get the whole matched element set as a clean array\n
Action.c(5):     \tget: function( num ) {\n
Action.c(5):     \t\treturn num != null ?\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Return a 'clean' array\n
Action.c(5):     \t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Return just the object\n
Action.c(5):     \t\t\tslice.call( this );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Take an array of elements and push it onto the stack\n
Action.c(5):     \t// (returning the new matched element set)\n
Action.c(5):     \tpushStack: function( elems ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Build a new jQuery matched element set\n
Action.c(5):     \t\tvar ret = jQuery.merge( this.constructor(), elems );\n
Action.c(5):     \n
Action.c(5):     \t\t// Add the old object onto the stack (as a reference)\n
Action.c(5):     \t\tret.prevObject = this;\n
Action.c(5):     \t\tret.context = this.context;\n
Action.c(5):     \n
Action.c(5):     \t\t// Return the newly-formed element set\n
Action.c(5):     \t\treturn ret;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Execute a callback for every element in the matched set.\n
Action.c(5):     \t// (You can seed the arguments with an array of args, but this is\n
Action.c(5):     \t// only used internally.)\n
Action.c(5):     \teach: function( callback, args ) {\n
Action.c(5):     \t\treturn jQuery.each( this, callback, args );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tmap: function( callback ) {\n
Action.c(5):     \t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n
Action.c(5):     \t\t\treturn callback.call( elem, i, elem );\n
Action.c(5):     \t\t}));\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tslice: function() {\n
Action.c(5):     \t\treturn this.pushStack( slice.apply( this, arguments ) );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tfirst: function() {\n
Action.c(5):     \t\treturn this.eq( 0 );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tlast: function() {\n
Action.c(5):     \t\treturn this.eq( -1 );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \teq: function( i ) {\n
Action.c(5):     \t\tvar len = this.length,\n
Action.c(5):     \t\t\tj = +i + ( i < 0 ? len : 0 );\n
Action.c(5):     \t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tend: function() {\n
Action.c(5):     \t\treturn this.prevObject || this.constructor(null);\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// For internal use only.\n
Action.c(5):     \t// Behaves like an Array's method, not like a jQuery method.\n
Action.c(5):     \tpush: push,\n
Action.c(5):     \tsort: deletedIds.sort,\n
Action.c(5):     \tsplice: deletedIds.splice\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.extend = jQuery.fn.extend = function() {\n
Action.c(5):     \tvar src, copyIsArray, copy, name, options, clone,\n
Action.c(5):     \t\ttarget = arguments[0] || {},\n
Action.c(5):     \t\ti = 1,\n
Action.c(5):     \t\tlength = arguments.length,\n
Action.c(5):     \t\tdeep = false;\n
Action.c(5):     \n
Action.c(5):     \t// Handle a deep copy situation\n
Action.c(5):     \tif ( typeof target === "boolean" ) {\n
Action.c(5):     \t\tdeep = target;\n
Action.c(5):     \n
Action.c(5):     \t\t// skip the boolean and the target\n
Action.c(5):     \t\ttarget = arguments[ i ] || {};\n
Action.c(5):     \t\ti++;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Handle case when target is a string or something (possible in deep copy)\n
Action.c(5):     \tif ( typeof target !== "object" && !jQuery.isFunction(target) ) {\n
Action.c(5):     \t\ttarget = {};\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// extend jQuery itself if only one argument is passed\n
Action.c(5):     \tif ( i === length ) {\n
Action.c(5):     \t\ttarget = this;\n
Action.c(5):     \t\ti--;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tfor ( ; i < length; i++ ) {\n
Action.c(5):     \t\t// Only deal with non-null/undefined values\n
Action.c(5):     \t\tif ( (options = arguments[ i ]) != null ) {\n
Action.c(5):     \t\t\t// Extend the base object\n
Action.c(5):     \t\t\tfor ( name in options ) {\n
Action.c(5):     \t\t\t\tsrc = target[ name ];\n
Action.c(5):     \t\t\t\tcopy = options[ name ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Prevent never-ending loop\n
Action.c(5):     \t\t\t\tif ( target === copy ) {\n
Action.c(5):     \t\t\t\t\tcontinue;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Recurse if we're merging plain objects or arrays\n
Action.c(5):     \t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray
Action.c(5):     (copy)) ) ) {\n
Action.c(5):     \t\t\t\t\tif ( copyIsArray ) {\n
Action.c(5):     \t\t\t\t\t\tcopyIsArray = false;\n
Action.c(5):     \t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Never move original objects, clone them\n
Action.c(5):     \t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Don't bring in undefined values\n
Action.c(5):     \t\t\t\t} else if ( copy !== undefined ) {\n
Action.c(5):     \t\t\t\t\ttarget[ name ] = copy;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Return the modified object\n
Action.c(5):     \treturn target;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \t// Unique for each copy of jQuery on the page\n
Action.c(5):     \texpando: "jQuery" + ( version + Math.random() ).replace( /\\D/g, "" ),\n
Action.c(5):     \n
Action.c(5):     \t// Assume jQuery is ready without the ready module\n
Action.c(5):     \tisReady: true,\n
Action.c(5):     \n
Action.c(5):     \terror: function( msg ) {\n
Action.c(5):     \t\tthrow new Error( msg );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tnoop: function() {},\n
Action.c(5):     \n
Action.c(5):     \t// See test/unit/core.js for details concerning isFunction.\n
Action.c(5):     \t// Since version 1.3, DOM methods and functions like alert\n
Action.c(5):     \t// aren't supported. They return false on IE (#2968).\n
Action.c(5):     \tisFunction: function( obj ) {\n
Action.c(5):     \t\treturn jQuery.type(obj) === "function";\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tisArray: Array.isArray || function( obj ) {\n
Action.c(5):     \t\treturn jQuery.type(obj) === "array";\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tisWindow: function( obj ) {\n
Action.c(5):     \t\t/* jshint eqeqeq: false */\n
Action.c(5):     \t\treturn obj != null && obj == obj.window;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tisNumeric: function( obj ) {\n
Action.c(5):     \t\t// parseFloat NaNs numeric-cast false positives (null|true|false|"")\n
Action.c(5):     \t\t// ...but misinterprets leading-number strings, particularly hex literals ("0x...")\n
Action.c(5):     \t\t// subtraction forces infinities to NaN\n
Action.c(5):     \t\treturn obj - parseFloat( obj ) >= 0;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tisEmptyObject: function( obj ) {\n
Action.c(5):     \t\tvar name;\n
Action.c(5):     \t\tfor ( name in obj ) {\n
Action.c(5):     \t\t\treturn false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn true;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tisPlainObject: function( obj ) {\n
Action.c(5):     \t\tvar key;\n
Action.c(5):     \n
Action.c(5):     \t\t// Must be an Object.\n
Action.c(5):     \t\t// Because of IE, we also have to check the presence of the constructor property.\n
Action.c(5):     \t\t// Make sure that DOM nodes and window objects don't pass through, as well\n
Action.c(5):     \t\tif ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) )
Action.c(5):      {\n
Action.c(5):     \t\t\treturn false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\ttry {\n
Action.c(5):     \t\t\t// Not own constructor property must be Object\n
Action.c(5):     \t\t\tif ( obj.constructor &&\n
Action.c(5):     \t\t\t\t!hasOwn.call(obj, "constructor") &&\n
Action.c(5):     \t\t\t\t!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t} catch ( e ) {\n
Action.c(5):     \t\t\t// IE8,9 Will throw exceptions on certain host objects #9897\n
Action.c(5):     \t\t\treturn false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE<9\n
Action.c(5):     \t\t// Handle iteration over inherited properties before own properties.\n
Action.c(5):     \t\tif ( support.ownLast ) {\n
Action.c(5):     \t\t\tfor ( key in obj ) {\n
Action.c(5):     \t\t\t\treturn hasOwn.call( obj, key );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Own properties are enumerated firstly, so to speed up,\n
Action.c(5):     \t\t// if last one is own, then all properties are own.\n
Action.c(5):     \t\tfor ( key in obj ) {}\n
Action.c(5):     \n
Action.c(5):     \t\treturn key === undefined || hasOwn.call( obj, key );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \ttype: function( obj ) {\n
Action.c(5):     \t\tif ( obj == null ) {\n
Action.c(5):     \t\t\treturn obj + "";\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn typeof obj === "object" || typeof obj === "function" ?\n
Action.c(5):     \t\t\tclass2type[ toString.call(obj) ] || "object" :\n
Action.c(5):     \t\t\ttypeof obj;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Evaluates a script in a global context\n
Action.c(5):     \t// Workarounds based on findings by Jim Driscoll\n
Action.c(5):     \t// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-conte
Action.c(5):     xt\n
Action.c(5):     \tglobalEval: function( data ) {\n
Action.c(5):     \t\tif ( data && jQuery.trim( data ) ) {\n
Action.c(5):     \t\t\t// We use execScript on Internet Explorer\n
Action.c(5):     \t\t\t// We use an anonymous function so that context is window\n
Action.c(5):     \t\t\t// rather than jQuery in Firefox\n
Action.c(5):     \t\t\t( window.execScript || function( data ) {\n
Action.c(5):     \t\t\t\twindow[ "eval" ].call( window, data );\n
Action.c(5):     \t\t\t} )( data );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Convert dashed to camelCase; used by the css and data modules\n
Action.c(5):     \t// Microsoft forgot to hump their vendor prefix (#9572)\n
Action.c(5):     \tcamelCase: function( string ) {\n
Action.c(5):     \t\treturn string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tnodeName: function( elem, name ) {\n
Action.c(5):     \t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// args is for internal usage only\n
Action.c(5):     \teach: function( obj, callback, args ) {\n
Action.c(5):     \t\tvar value,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tlength = obj.length,\n
Action.c(5):     \t\t\tisArray = isArraylike( obj );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( args ) {\n
Action.c(5):     \t\t\tif ( isArray ) {\n
Action.c(5):     \t\t\t\tfor ( ; i < length; i++ ) {\n
Action.c(5):     \t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( value === false ) {\n
Action.c(5):     \t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tfor ( i in obj ) {\n
Action.c(5):     \t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( value === false ) {\n
Action.c(5):     \t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// A special, fast, case for the most common use of each\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tif ( isArray ) {\n
Action.c(5):     \t\t\t\tfor ( ; i < length; i++ ) {\n
Action.c(5):     \t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( value === false ) {\n
Action.c(5):     \t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tfor ( i in obj ) {\n
Action.c(5):     \t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( value === false ) {\n
Action.c(5):     \t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn obj;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Use native String.trim function wherever possible\n
Action.c(5):     \ttrim: trim && !trim.call("\\uFEFF\\xA0") ?\n
Action.c(5):     \t\tfunction( text ) {\n
Action.c(5):     \t\t\treturn text == null ?\n
Action.c(5):     \t\t\t\t"" :\n
Action.c(5):     \t\t\t\ttrim.call( text );\n
Action.c(5):     \t\t} :\n
Action.c(5):     \n
Action.c(5):     \t\t// Otherwise use our own trimming functionality\n
Action.c(5):     \t\tfunction( text ) {\n
Action.c(5):     \t\t\treturn text == null ?\n
Action.c(5):     \t\t\t\t"" :\n
Action.c(5):     \t\t\t\t( text + "" ).replace( rtrim, "" );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t// results is for internal usage only\n
Action.c(5):     \tmakeArray: function( arr, results ) {\n
Action.c(5):     \t\tvar ret = results || [];\n
Action.c(5):     \n
Action.c(5):     \t\tif ( arr != null ) {\n
Action.c(5):     \t\t\tif ( isArraylike( Object(arr) ) ) {\n
Action.c(5):     \t\t\t\tjQuery.merge( ret,\n
Action.c(5):     \t\t\t\t\ttypeof arr === "string" ?\n
Action.c(5):     \t\t\t\t\t[ arr ] : arr\n
Action.c(5):     \t\t\t\t);\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tpush.call( ret, arr );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn ret;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tinArray: function( elem, arr, i ) {\n
Action.c(5):     \t\tvar len;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( arr ) {\n
Action.c(5):     \t\t\tif ( indexOf ) {\n
Action.c(5):     \t\t\t\treturn indexOf.call( arr, elem, i );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tlen = arr.length;\n
Action.c(5):     \t\t\ti = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;\n
Action.c(5):     \n
Action.c(5):     \t\t\tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\t\t\t// Skip accessing in sparse arrays\n
Action.c(5):     \t\t\t\tif ( i in arr && arr[ i ] === elem ) {\n
Action.c(5):     \t\t\t\t\treturn i;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn -1;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tmerge: function( first, second ) {\n
Action.c(5):     \t\tvar len = +second.length,\n
Action.c(5):     \t\t\tj = 0,\n
Action.c(5):     \t\t\ti = first.length;\n
Action.c(5):     \n
Action.c(5):     \t\twhile ( j < len ) {\n
Action.c(5):     \t\t\tfirst[ i++ ] = second[ j++ ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE<9\n
Action.c(5):     \t\t// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeList
Action.c(5):     s)\n
Action.c(5):     \t\tif ( len !== len ) {\n
Action.c(5):     \t\t\twhile ( second[j] !== undefined ) {\n
Action.c(5):     \t\t\t\tfirst[ i++ ] = second[ j++ ];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tfirst.length = i;\n
Action.c(5):     \n
Action.c(5):     \t\treturn first;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tgrep: function( elems, callback, invert ) {\n
Action.c(5):     \t\tvar callbackInverse,\n
Action.c(5):     \t\t\tmatches = [],\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tlength = elems.length,\n
Action.c(5):     \t\t\tcallbackExpect = !invert;\n
Action.c(5):     \n
Action.c(5):     \t\t// Go through the array, only saving the items\n
Action.c(5):     \t\t// that pass the validator function\n
Action.c(5):     \t\tfor ( ; i < length; i++ ) {\n
Action.c(5):     \t\t\tcallbackInverse = !callback( elems[ i ], i );\n
Action.c(5):     \t\t\tif ( callbackInverse !== callbackExpect ) {\n
Action.c(5):     \t\t\t\tmatches.push( elems[ i ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn matches;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// arg is for internal usage only\n
Action.c(5):     \tmap: function( elems, callback, arg ) {\n
Action.c(5):     \t\tvar value,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tlength = elems.length,\n
Action.c(5):     \t\t\tisArray = isArraylike( elems ),\n
Action.c(5):     \t\t\tret = [];\n
Action.c(5):     \n
Action.c(5):     \t\t// Go through the array, translating each of the items to their new values\n
Action.c(5):     \t\tif ( isArray ) {\n
Action.c(5):     \t\t\tfor ( ; i < length; i++ ) {\n
Action.c(5):     \t\t\t\tvalue = callback( elems[ i ], i, arg );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( value != null ) {\n
Action.c(5):     \t\t\t\t\tret.push( value );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Go through every key on
Action.c(5): t=213958ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):      the object,\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tfor ( i in elems ) {\n
Action.c(5):     \t\t\t\tvalue = callback( elems[ i ], i, arg );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( value != null ) {\n
Action.c(5):     \t\t\t\t\tret.push( value );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Flatten any nested arrays\n
Action.c(5):     \t\treturn concat.apply( [], ret );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// A global GUID counter for objects\n
Action.c(5):     \tguid: 1,\n
Action.c(5):     \n
Action.c(5):     \t// Bind a function to a context, optionally partially applying any\n
Action.c(5):     \t// arguments.\n
Action.c(5):     \tproxy: function( fn, context ) {\n
Action.c(5):     \t\tvar args, proxy, tmp;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof context === "string" ) {\n
Action.c(5):     \t\t\ttmp = fn[ context ];\n
Action.c(5):     \t\t\tcontext = fn;\n
Action.c(5):     \t\t\tfn = tmp;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Quick check to determine if target is callable, in the spec\n
Action.c(5):     \t\t// this throws a TypeError, but we will just return undefined.\n
Action.c(5):     \t\tif ( !jQuery.isFunction( fn ) ) {\n
Action.c(5):     \t\t\treturn undefined;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Simulated bind\n
Action.c(5):     \t\targs = slice.call( arguments, 2 );\n
Action.c(5):     \t\tproxy = function() {\n
Action.c(5):     \t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t\t// Set the guid of unique handler to the same of original handler, so it can be remove
Action.c(5):     d\n
Action.c(5):     \t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n
Action.c(5):     \n
Action.c(5):     \t\treturn proxy;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tnow: function() {\n
Action.c(5):     \t\treturn +( new Date() );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// jQuery.support is not used in Core but other projects attach their\n
Action.c(5):     \t// properties to it so it needs to exist.\n
Action.c(5):     \tsupport: support\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Populate the class2type map\n
Action.c(5):     jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), fu
Action.c(5):     nction(i, name) {\n
Action.c(5):     \tclass2type[ "[object " + name + "]" ] = name.toLowerCase();\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     function isArraylike( obj ) {\n
Action.c(5):     \tvar length = obj.length,\n
Action.c(5):     \t\ttype = jQuery.type( obj );\n
Action.c(5):     \n
Action.c(5):     \tif ( type === "function" || jQuery.isWindow( obj ) ) {\n
Action.c(5):     \t\treturn false;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( obj.nodeType === 1 && length ) {\n
Action.c(5):     \t\treturn true;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn type === "array" || length === 0 ||\n
Action.c(5):     \t\ttypeof length === "number" && length > 0 && ( length - 1 ) in obj;\n
Action.c(5):     }\n
Action.c(5):     var Sizzle =\n
Action.c(5):     /*!\n
Action.c(5):      * Sizzle CSS Selector Engine v1.10.16\n
Action.c(5):      * http://sizzlejs.com/\n
Action.c(5):      *\n
Action.c(5):      * Copyright 2013 jQuery Foundation, Inc. and other contributors\n
Action.c(5):      * Released under the MIT license\n
Action.c(5):      * http://jquery.org/license\n
Action.c(5):      *\n
Action.c(5):      * Date: 2014-01-13\n
Action.c(5):      */\n
Action.c(5):     (function( window ) {\n
Action.c(5):     \n
Action.c(5):     var i,\n
Action.c(5):     \tsupport,\n
Action.c(5):     \tExpr,\n
Action.c(5):     \tgetText,\n
Action.c(5):     \tisXML,\n
Action.c(5):     \tcompile,\n
Action.c(5):     \toutermostContext,\n
Action.c(5):     \tsortInput,\n
Action.c(5):     \thasDuplicate,\n
Action.c(5):     \n
Action.c(5):     \t// Local document vars\n
Action.c(5):     \tsetDocument,\n
Action.c(5):     \tdocument,\n
Action.c(5):     \tdocElem,\n
Action.c(5):     \tdocumentIsHTML,\n
Action.c(5):     \trbuggyQSA,\n
Action.c(5):     \trbuggyMatches,\n
Action.c(5):     \tmatches,\n
Action.c(5):     \tcontains,\n
Action.c(5):     \n
Action.c(5):     \t// Instance-specific data\n
Action.c(5):     \texpando = "sizzle" + -(new Date()),\n
Action.c(5):     \tpreferredDoc = window.document,\n
Action.c(5):     \tdirruns = 0,\n
Action.c(5):     \tdone = 0,\n
Action.c(5):     \tclassCache = createCache(),\n
Action.c(5):     \ttokenCache = createCache(),\n
Action.c(5):     \tcompilerCache = createCache(),\n
Action.c(5):     \tsortOrder = function( a, b ) {\n
Action.c(5):     \t\tif ( a === b ) {\n
Action.c(5):     \t\t\thasDuplicate = true;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn 0;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// General-purpose constants\n
Action.c(5):     \tstrundefined = typeof undefined,\n
Action.c(5):     \tMAX_NEGATIVE = 1 << 31,\n
Action.c(5):     \n
Action.c(5):     \t// Instance methods\n
Action.c(5):     \thasOwn = ({}).hasOwnProperty,\n
Action.c(5):     \tarr = [],\n
Action.c(5):     \tpop = arr.pop,\n
Action.c(5):     \tpush_native = arr.push,\n
Action.c(5):     \tpush = arr.push,\n
Action.c(5):     \tslice = arr.slice,\n
Action.c(5):     \t// Use a stripped-down indexOf if we can't use a native one\n
Action.c(5):     \tindexOf = arr.indexOf || function( elem ) {\n
Action.c(5):     \t\tvar i = 0,\n
Action.c(5):     \t\t\tlen = this.length;\n
Action.c(5):     \t\tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\t\tif ( this[i] === elem ) {\n
Action.c(5):     \t\t\t\treturn i;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn -1;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tbooleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ism
Action.c(5):     ap|loop|multiple|open|readonly|required|scoped",\n
Action.c(5):     \n
Action.c(5):     \t// Regular expressions\n
Action.c(5):     \n
Action.c(5):     \t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n
Action.c(5):     \twhitespace = "[\\\\x20\\\\t\\\\r\\\\n\\\\f]",\n
Action.c(5):     \t// http://www.w3.org/TR/css3-syntax/#characters\n
Action.c(5):     \tcharacterEncoding = "(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+",\n
Action.c(5):     \n
Action.c(5):     \t// Loosely modeled on CSS identifier characters\n
Action.c(5):     \t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#att
Action.c(5):     ribute-selectors\n
Action.c(5):     \t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n
Action.c(5):     \tidentifier = characterEncoding.replace( "w", "w#" ),\n
Action.c(5):     \n
Action.c(5):     \t// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\n
Action.c(5):     \tattributes = "\\\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +\n
Action.c(5):     \t\t"*(?:([*^$|!~]?=)" + whitespace + "*(?:(['\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(" +
Action.c(5):      identifier + ")|)|)" + whitespace + "*\\\\]",\n
Action.c(5):     \n
Action.c(5):     \t// Prefer arguments quoted,\n
Action.c(5):     \t//   then not containing pseudos/brackets,\n
Action.c(5):     \t//   then attribute selectors/non-parenthetical expressions,\n
Action.c(5):     \t//   then anything else\n
Action.c(5):     \t// These preferences are here to reduce the number of selectors\n
Action.c(5):     \t//   needing tokenize in the PSEUDO preFilter\n
Action.c(5):     \tpseudos = ":(" + characterEncoding + ")(?:\\\\(((['\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\
Action.c(5):     3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|" + attributes.replace( 3, 8 ) + ")*)|.*)\\\\)|)",\n
Action.c(5):     \n
Action.c(5):     \t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters
Action.c(5):      preceding the latter\n
Action.c(5):     \trtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)" + whitespac
Action.c(5):     e + "+$", "g" ),\n
Action.c(5):     \n
Action.c(5):     \trcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),\n
Action.c(5):     \trcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace
Action.c(5):      + "*" ),\n
Action.c(5):     \n
Action.c(5):     \trattributeQuotes = new RegExp( "=" + whitespace + "*([^\\\\]'\\"]*?)" + whitespace + "*\\
Action.c(5):     \\]", "g" ),\n
Action.c(5):     \n
Action.c(5):     \trpseudo = new RegExp( pseudos ),\n
Action.c(5):     \tridentifier = new RegExp( "^" + identifier + "$" ),\n
Action.c(5):     \n
Action.c(5):     \tmatchExpr = {\n
Action.c(5):     \t\t"ID": new RegExp( "^#(" + characterEncoding + ")" ),\n
Action.c(5):     \t\t"CLASS": new RegExp( "^\\\\.(" + characterEncoding + ")" ),\n
Action.c(5):     \t\t"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),\n
Action.c(5):     \t\t"ATTR": new RegExp( "^" + attributes ),\n
Action.c(5):     \t\t"PSEUDO": new RegExp( "^" + pseudos ),\n
Action.c(5):     \t\t"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(" + whit
Action.c(5):     espace +\n
Action.c(5):     \t\t\t"*(even|odd|(([+-]|)(\\\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +\n
Action.c(5):     \t\t\t"*(\\\\d+)|))" + whitespace + "*\\\\)|)", "i" ),\n
Action.c(5):     \t\t"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),\n
Action.c(5):     \t\t// For use in libraries implementing .is()\n
Action.c(5):     \t\t// We use this for POS matching in `select`\n
Action.c(5):     \t\t"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|l
Action.c(5):     ast)(?:\\\\(" +\n
Action.c(5):     \t\t\twhitespace + "*((?:-\\\\d)?\\\\d*)" + whitespace + "*\\\\)|)(?=[^-]|$)", "i" )\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \trinputs = /^(?:input|select|textarea|button)$/i,\n
Action.c(5):     \trheader = /^h\\d$/i,\n
Action.c(5):     \n
Action.c(5):     \trnative = /^[^{]+\\{\\s*\\[native \\w/,\n
Action.c(5):     \n
Action.c(5):     \t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n
Action.c(5):     \trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n
Action.c(5):     \n
Action.c(5):     \trsibling = /[+~]/,\n
Action.c(5):     \trescape = /'|\\\\/g,\n
Action.c(5):     \n
Action.c(5):     \t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n
Action.c(5):     \trunescape = new RegExp( "\\\\\\\\([\\\\da-f]{1,6}" + whitespace + "?|(" + whitespace + "
Action.c(5):     )|.)", "ig" ),\n
Action.c(5):     \tfunescape = function( _, escaped, escapedWhitespace ) {\n
Action.c(5):     \t\tvar high = "0x" + escaped - 0x10000;\n
Action.c(5):     \t\t// NaN means non-codepoint\n
Action.c(5):     \t\t// Support: Firefox\n
Action.c(5):     \t\t// Workaround erroneous numeric interpretation of +"0x"\n
Action.c(5):     \t\treturn high !== high || escapedWhitespace ?\n
Action.c(5):     \t\t\tescaped :\n
Action.c(5):     \t\t\thigh < 0 ?\n
Action.c(5):     \t\t\t\t// BMP codepoint\n
Action.c(5):     \t\t\t\tString.fromCharCode( high + 0x10000 ) :\n
Action.c(5):     \t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n
Action.c(5):     \t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     // Optimize for push.apply( _, NodeList )\n
Action.c(5):     try {\n
Action.c(5):     \tpush.apply(\n
Action.c(5):     \t\t(arr = slice.call( preferredDoc.childNodes )),\n
Action.c(5):     \t\tpreferredDoc.childNodes\n
Action.c(5):     \t);\n
Action.c(5):     \t// Support: Android<4.0\n
Action.c(5):     \t// Detect silently failing push.apply\n
Action.c(5):     \tarr[ preferredDoc.childNodes.length ].nodeType;\n
Action.c(5):     } catch ( e ) {\n
Action.c(5):     \tpush = { apply: arr.length ?\n
Action.c(5):     \n
Action.c(5):     \t\t// Leverage slice if possible\n
Action.c(5):     \t\tfunction( target, els ) {\n
Action.c(5):     \t\t\tpush_native.apply( target, slice.call(els) );\n
Action.c(5):     \t\t} :\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE<9\n
Action.c(5):     \t\t// Otherwise append directly\n
Action.c(5):     \t\tfunction( target, els ) {\n
Action.c(5):     \t\t\tvar j = target.length,\n
Action.c(5):     \t\t\t\ti = 0;\n
Action.c(5):     \t\t\t// Can't trust NodeList.length\n
Action.c(5):     \t\t\twhile ( (target[j++] = els[i++]) ) {}\n
Action.c(5):     \t\t\ttarget.length = j - 1;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function Sizzle( selector, context, results, seed ) {\n
Action.c(5):     \tvar match, elem, m, nodeType,\n
Action.c(5):     \t\t// QSA vars\n
Action.c(5):     \t\ti, groups, old, nid, newContext, newSelector;\n
Action.c(5):     \n
Action.c(5):     \tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n
Action.c(5):     \t\tsetDocument( context );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tcontext = context || document;\n
Action.c(5):     \tresults = results || [];\n
Action.c(5):     \n
Action.c(5):     \tif ( !selector || typeof selector !== "string" ) {\n
Action.c(5):     \t\treturn results;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\n
Action.c(5):     \t\treturn [];\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( documentIsHTML && !seed ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Shortcuts\n
Action.c(5):     \t\tif ( (match = rquickExpr.exec( selector )) ) {\n
Action.c(5):     \t\t\t// Speed-up: Sizzle("#ID")\n
Action.c(5):     \t\t\tif ( (m = match[1]) ) {\n
Action.c(5):     \t\t\t\tif ( nodeType === 9 ) {\n
Action.c(5):     \t\t\t\t\telem = context.getElementById( m );\n
Action.c(5):     \t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n
Action.c(5):     \t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n
Action.c(5):     \t\t\t\t\tif ( elem && elem.parentNode ) {\n
Action.c(5):     \t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n
Action.c(5):     \t\t\t\t\t\t// by name instead of ID\n
Action.c(5):     \t\t\t\t\t\tif ( elem.id === m ) {\n
Action.c(5):     \t\t\t\t\t\t\tresults.push( elem );\n
Action.c(5):     \t\t\t\t\t\t\treturn results;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\treturn results;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t// Context is not a document\n
Action.c(5):     \t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m ))
Action.c(5):      &&\n
Action.c(5):     \t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n
Action.c(5):     \t\t\t\t\t\tresults.push( elem );\n
Action.c(5):     \t\t\t\t\t\treturn results;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Speed-up: Sizzle("TAG")\n
Action.c(5):     \t\t\t} else if ( match[2] ) {\n
Action.c(5):     \t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n
Action.c(5):     \t\t\t\treturn results;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Speed-up: Sizzle(".CLASS")\n
Action.c(5):     \t\t\t} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsB
Action.c(5):     yClassName ) {\n
Action.c(5):     \t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n
Action.c(5):     \t\t\t\treturn results;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// QSA path\n
Action.c(5):     \t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n
Action.c(5):     \t\t\tnid = old = expando;\n
Action.c(5):     \t\t\tnewContext = context;\n
Action.c(5):     \t\t\tnewSelector = nodeType === 9 && selector;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// qSA works strangely on Element-rooted queries\n
Action.c(5):     \t\t\t// We can work around this by specifying an extra ID on the root\n
Action.c(5):     \t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n
Action.c(5):     \t\t\t// IE 8 doesn't work on object elements\n
Action.c(5):     \t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {\n
Action.c(5):     \t\t\t\tgroups = tokenize( selector );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( (old = context.getAttribute("id")) ) {\n
Action.c(5):     \t\t\t\t\tnid = old.replace( rescape, "\\\\$&" );\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tcontext.setAttribute( "id", nid );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tnid = "[id='" + nid + "'] ";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\ti = groups.length;\n
Action.c(5):     \t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || con
Action.c(5):     text;\n
Action.c(5):     \t\t\t\tnewSelector = groups.join(",");\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( newSelector ) {\n
Action.c(5):     \t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\tpush.apply( results,\n
Action.c(5):     \t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n
Action.c(5):     \t\t\t\t\t);\n
Action.c(5):     \t\t\t\t\treturn results;\n
Action.c(5):     \t\t\t\t} catch(qsaError) {\n
Action.c(5):     \t\t\t\t} finally {\n
Action.c(5):     \t\t\t\t\tif ( !old ) {\n
Action.c(5):     \t\t\t\t\t\tcontext.removeAttribute("id");\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// All others\n
Action.c(5):     \treturn select( selector.replace( rtrim, "$1" ), context, results, seed );\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Create key-value caches of limited size\n
Action.c(5):      * @returns {Function(string, Object)} Returns the Object data after storing it on itself 
Action.c(5):     with\n
Action.c(5):      *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheL
Action.c(5):     ength)\n
Action.c(5):      *\tdeleting the oldest entry\n
Action.c(5):      */\n
Action.c(5):     function createCache() {\n
Action.c(5):     \tvar keys = [];\n
Action.c(5):     \n
Action.c(5):     \tfunction cache( key, value ) {\n
Action.c(5):     \t\t// Use (key + " ") to avoid collision with native prototype properties (see Issue #157
Action.c(5):     )\n
Action.c(5):     \t\tif ( keys.push( key + " " ) > Expr.cacheLength ) {\n
Action.c(5):     \t\t\t// Only keep the most recent entries\n
Action.c(5):     \t\t\tdelete cache[ keys.shift() ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn (cache[ key + " " ] = value);\n
Action.c(5):     \t}\n
Action.c(5):     \treturn cache;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Mark a function for special use by Sizzle\n
Action.c(5):      * @param {Function} fn The function to mark\n
Action.c(5):      */\n
Action.c(5):     function markFunction( fn ) {\n
Action.c(5):     \tfn[ expando ] = true;\n
Action.c(5):     \treturn fn;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Support testing using an element\n
Action.c(5):      * @param {Function} fn Passed the created div and expects a boolean result\n
Action.c(5):      */\n
Action.c(5):     function assert( fn ) {\n
Action.c(5):     \tvar div = document.createElement("div");\n
Action.c(5):     \n
Action.c(5):     \ttry {\n
Action.c(5):     \t\treturn !!fn( div );\n
Action.c(5):     \t} catch (e) {\n
Action.c(5):     \t\treturn false;\n
Action.c(5):     \t} finally {\n
Action.c(5):     \t\t// Remove from its parent by default\n
Action.c(5):     \t\tif ( div.parentNode ) {\n
Action.c(5):     \t\t\tdiv.parentNode.removeChild( div );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t// release memory in IE\n
Action.c(5):     \t\tdiv = null;\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Adds the same handler for all of the specified attrs\n
Action.c(5):      * @param {String} attrs Pipe-separated list of attributes\n
Action.c(5):      * @param {Function} handler The method that will be applied\n
Action.c(5):      */\n
Action.c(5):     function addHandle( attrs, handler ) {\n
Action.c(5):     \tvar arr = attrs.split("|"),\n
Action.c(5):     \t\ti = attrs.length;\n
Action.c(5):     \n
Action.c(5):     \twhile ( i-- ) {\n
Action.c(5):     \t\tExpr.attrHandle[ arr[i] ] = handler;\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Checks document order of two siblings\n
Action.c(5):      * @param {Element} a\n
Action.c(5):      * @param {Element} b\n
Action.c(5):      * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n
Action.c(5):      */\n
Action.c(5):     function siblingCheck( a, b ) {\n
Action.c(5):     \tvar cur = b && a,\n
Action.c(5):     \t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n
Action.c(5):     \t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n
Action.c(5):     \t\t\t( ~a.sourceIndex || MAX_NEGATIVE 
Action.c(5): t=213964ms: 11955-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     );\n
Action.c(5):     \n
Action.c(5):     \t// Use IE sourceIndex if available on both nodes\n
Action.c(5):     \tif ( diff ) {\n
Action.c(5):     \t\treturn diff;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Check if b follows a\n
Action.c(5):     \tif ( cur ) {\n
Action.c(5):     \t\twhile ( (cur = cur.nextSibling) ) {\n
Action.c(5):     \t\t\tif ( cur === b ) {\n
Action.c(5):     \t\t\t\treturn -1;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn a ? 1 : -1;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Returns a function to use in pseudos for input types\n
Action.c(5):      * @param {String} type\n
Action.c(5):      */\n
Action.c(5):     function createInputPseudo( type ) {\n
Action.c(5):     \treturn function( elem ) {\n
Action.c(5):     \t\tvar name = elem.nodeName.toLowerCase();\n
Action.c(5):     \t\treturn name === "input" && elem.type === type;\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Returns a function to use in pseudos for buttons\n
Action.c(5):      * @param {String} type\n
Action.c(5):      */\n
Action.c(5):     function createButtonPseudo( type ) {\n
Action.c(5):     \treturn function( elem ) {\n
Action.c(5):     \t\tvar name = elem.nodeName.toLowerCase();\n
Action.c(5):     \t\treturn (name === "input" || name === "button") && elem.type === type;\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Returns a function to use in pseudos for positionals\n
Action.c(5):      * @param {Function} fn\n
Action.c(5):      */\n
Action.c(5):     function createPositionalPseudo( fn ) {\n
Action.c(5):     \treturn markFunction(function( argument ) {\n
Action.c(5):     \t\targument = +argument;\n
Action.c(5):     \t\treturn markFunction(function( seed, matches ) {\n
Action.c(5):     \t\t\tvar j,\n
Action.c(5):     \t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n
Action.c(5):     \t\t\t\ti = matchIndexes.length;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Match elements found at the specified indexes\n
Action.c(5):     \t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n
Action.c(5):     \t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Checks a node for validity as a Sizzle context\n
Action.c(5):      * @param {Element|Object=} context\n
Action.c(5):      * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
Action.c(5):     \n
Action.c(5):      */\n
Action.c(5):     function testContext( context ) {\n
Action.c(5):     \treturn context && typeof context.getElementsByTagName !== strundefined && context;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Expose support vars for convenience\n
Action.c(5):     support = Sizzle.support = {};\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Detects XML nodes\n
Action.c(5):      * @param {Element|Object} elem An element or a document\n
Action.c(5):      * @returns {Boolean} True iff elem is a non-HTML XML node\n
Action.c(5):      */\n
Action.c(5):     isXML = Sizzle.isXML = function( elem ) {\n
Action.c(5):     \t// documentElement is verified for cases where it doesn't yet exist\n
Action.c(5):     \t// (such as loading iframes in IE - #4833)\n
Action.c(5):     \tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n
Action.c(5):     \treturn documentElement ? documentElement.nodeName !== "HTML" : false;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Sets document-related variables once based on the current document\n
Action.c(5):      * @param {Element|Object} [doc] An element or document object to use to set the document\n
Action.c(5):      * @returns {Object} Returns the current document\n
Action.c(5):      */\n
Action.c(5):     setDocument = Sizzle.setDocument = function( node ) {\n
Action.c(5):     \tvar hasCompare,\n
Action.c(5):     \t\tdoc = node ? node.ownerDocument || node : preferredDoc,\n
Action.c(5):     \t\tparent = doc.defaultView;\n
Action.c(5):     \n
Action.c(5):     \t// If no document and documentElement is available, return\n
Action.c(5):     \tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n
Action.c(5):     \t\treturn document;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Set our document\n
Action.c(5):     \tdocument = doc;\n
Action.c(5):     \tdocElem = doc.documentElement;\n
Action.c(5):     \n
Action.c(5):     \t// Support tests\n
Action.c(5):     \tdocumentIsHTML = !isXML( doc );\n
Action.c(5):     \n
Action.c(5):     \t// Support: IE>8\n
Action.c(5):     \t// If iframe document is assigned to "document" variable and if iframe has been reloaded
Action.c(5):     ,\n
Action.c(5):     \t// IE will throw "permission denied" error when accessing "document" variable, see jQuer
Action.c(5):     y #13936\n
Action.c(5):     \t// IE6-8 do not support the defaultView property so parent will be undefined\n
Action.c(5):     \tif ( parent && parent !== parent.top ) {\n
Action.c(5):     \t\t// IE11 does not have attachEvent, so all must suffer\n
Action.c(5):     \t\tif ( parent.addEventListener ) {\n
Action.c(5):     \t\t\tparent.addEventListener( "unload", function() {\n
Action.c(5):     \t\t\t\tsetDocument();\n
Action.c(5):     \t\t\t}, false );\n
Action.c(5):     \t\t} else if ( parent.attachEvent ) {\n
Action.c(5):     \t\t\tparent.attachEvent( "onunload", function() {\n
Action.c(5):     \t\t\t\tsetDocument();\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t/* Attributes\n
Action.c(5):     \t---------------------------------------------------------------------- */\n
Action.c(5):     \n
Action.c(5):     \t// Support: IE<8\n
Action.c(5):     \t// Verify that getAttribute really returns attributes and not properties (excepting IE8 
Action.c(5):     booleans)\n
Action.c(5):     \tsupport.attributes = assert(function( div ) {\n
Action.c(5):     \t\tdiv.className = "i";\n
Action.c(5):     \t\treturn !div.getAttribute("className");\n
Action.c(5):     \t});\n
Action.c(5):     \n
Action.c(5):     \t/* getElement(s)By*\n
Action.c(5):     \t---------------------------------------------------------------------- */\n
Action.c(5):     \n
Action.c(5):     \t// Check if getElementsByTagName("*") returns only elements\n
Action.c(5):     \tsupport.getElementsByTagName = assert(function( div ) {\n
Action.c(5):     \t\tdiv.appendChild( doc.createComment("") );\n
Action.c(5):     \t\treturn !div.getElementsByTagName("*").length;\n
Action.c(5):     \t});\n
Action.c(5):     \n
Action.c(5):     \t// Check if getElementsByClassName can be trusted\n
Action.c(5):     \tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName ) && assert(fu
Action.c(5):     nction( div ) {\n
Action.c(5):     \t\tdiv.innerHTML = "<div class='a'></div><div class='a i'></div>";\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: Safari<4\n
Action.c(5):     \t\t// Catch class over-caching\n
Action.c(5):     \t\tdiv.firstChild.className = "i";\n
Action.c(5):     \t\t// Support: Opera<10\n
Action.c(5):     \t\t// Catch gEBCN failure to find non-leading classes\n
Action.c(5):     \t\treturn div.getElementsByClassName("i").length === 2;\n
Action.c(5):     \t});\n
Action.c(5):     \n
Action.c(5):     \t// Support: IE<10\n
Action.c(5):     \t// Check if getElementById returns elements by name\n
Action.c(5):     \t// The broken getElementById methods don't pick up programatically-set names,\n
Action.c(5):     \t// so use a roundabout getElementsByName test\n
Action.c(5):     \tsupport.getById = assert(function( div ) {\n
Action.c(5):     \t\tdocElem.appendChild( div ).id = expando;\n
Action.c(5):     \t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n
Action.c(5):     \t});\n
Action.c(5):     \n
Action.c(5):     \t// ID find and filter\n
Action.c(5):     \tif ( support.getById ) {\n
Action.c(5):     \t\tExpr.find["ID"] = function( id, context ) {\n
Action.c(5):     \t\t\tif ( typeof context.getElementById !== strundefined && documentIsHTML ) {\n
Action.c(5):     \t\t\t\tvar m = context.getElementById( id );\n
Action.c(5):     \t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n
Action.c(5):     \t\t\t\t// nodes that are no longer in the document #6963\n
Action.c(5):     \t\t\t\treturn m && m.parentNode ? [m] : [];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     \t\tExpr.filter["ID"] = function( id ) {\n
Action.c(5):     \t\t\tvar attrId = id.replace( runescape, funescape );\n
Action.c(5):     \t\t\treturn function( elem ) {\n
Action.c(5):     \t\t\t\treturn elem.getAttribute("id") === attrId;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t};\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\t// Support: IE6/7\n
Action.c(5):     \t\t// getElementById is not reliable as a find shortcut\n
Action.c(5):     \t\tdelete Expr.find["ID"];\n
Action.c(5):     \n
Action.c(5):     \t\tExpr.filter["ID"] =  function( id ) {\n
Action.c(5):     \t\t\tvar attrId = id.replace( runescape, funescape );\n
Action.c(5):     \t\t\treturn function( elem ) {\n
Action.c(5):     \t\t\t\tvar node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(
Action.c(5):     "id");\n
Action.c(5):     \t\t\t\treturn node && node.value === attrId;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t};\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Tag\n
Action.c(5):     \tExpr.find["TAG"] = support.getElementsByTagName ?\n
Action.c(5):     \t\tfunction( tag, context ) {\n
Action.c(5):     \t\t\tif ( typeof context.getElementsByTagName !== strundefined ) {\n
Action.c(5):     \t\t\t\treturn context.getElementsByTagName( tag );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t} :\n
Action.c(5):     \t\tfunction( tag, context ) {\n
Action.c(5):     \t\t\tvar elem,\n
Action.c(5):     \t\t\t\ttmp = [],\n
Action.c(5):     \t\t\t\ti = 0,\n
Action.c(5):     \t\t\t\tresults = context.getElementsByTagName( tag );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Filter out possible comments\n
Action.c(5):     \t\t\tif ( tag === "*" ) {\n
Action.c(5):     \t\t\t\twhile ( (elem = results[i++]) ) {\n
Action.c(5):     \t\t\t\t\tif ( elem.nodeType === 1 ) {\n
Action.c(5):     \t\t\t\t\t\ttmp.push( elem );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn tmp;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn results;\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t// Class\n
Action.c(5):     \tExpr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {\n
Action.c(5):     \t\tif ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {\n
Action.c(5):     \t\t\treturn context.getElementsByClassName( className );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     \t/* QSA/matchesSelector\n
Action.c(5):     \t---------------------------------------------------------------------- */\n
Action.c(5):     \n
Action.c(5):     \t// QSA and matchesSelector support\n
Action.c(5):     \n
Action.c(5):     \t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n
Action.c(5):     \trbuggyMatches = [];\n
Action.c(5):     \n
Action.c(5):     \t// qSa(:focus) reports false when true (Chrome 21)\n
Action.c(5):     \t// We allow this because of a bug in IE8/9 that throws an error\n
Action.c(5):     \t// whenever `document.activeElement` is accessed on an iframe\n
Action.c(5):     \t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n
Action.c(5):     \t// See http://bugs.jquery.com/ticket/13378\n
Action.c(5):     \trbuggyQSA = [];\n
Action.c(5):     \n
Action.c(5):     \tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n
Action.c(5):     \t\t// Build QSA regex\n
Action.c(5):     \t\t// Regex strategy adopted from Diego Perini\n
Action.c(5):     \t\tassert(function( div ) {\n
Action.c(5):     \t\t\t// Select is set to empty string on purpose\n
Action.c(5):     \t\t\t// This is to test IE's treatment of not explicitly\n
Action.c(5):     \t\t\t// setting a boolean content attribute,\n
Action.c(5):     \t\t\t// since its presence should be enough\n
Action.c(5):     \t\t\t// http://bugs.jquery.com/ticket/12359\n
Action.c(5):     \t\t\tdiv.innerHTML = "<select t=''><option selected=''></option></select>";\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Support: IE8, Opera 10-12\n
Action.c(5):     \t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n
Action.c(5):     \t\t\tif ( div.querySelectorAll("[t^='']").length ) {\n
Action.c(5):     \t\t\t\trbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\\"\\")" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Support: IE8\n
Action.c(5):     \t\t\t// Boolean attributes and "value" are not treated correctly\n
Action.c(5):     \t\t\tif ( !div.querySelectorAll("[selected]").length ) {\n
Action.c(5):     \t\t\t\trbuggyQSA.push( "\\\\[" + whitespace + "*(?:value|" + booleans + ")" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Webkit/Opera - :checked should return selected option elements\n
Action.c(5):     \t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n
Action.c(5):     \t\t\t// IE8 throws error here and will not see later tests\n
Action.c(5):     \t\t\tif ( !div.querySelectorAll(":checked").length ) {\n
Action.c(5):     \t\t\t\trbuggyQSA.push(":checked");\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\tassert(function( div ) {\n
Action.c(5):     \t\t\t// Support: Windows 8 Native Apps\n
Action.c(5):     \t\t\t// The type and name attributes are restricted during .innerHTML assignment\n
Action.c(5):     \t\t\tvar input = doc.createElement("input");\n
Action.c(5):     \t\t\tinput.setAttribute( "type", "hidden" );\n
Action.c(5):     \t\t\tdiv.appendChild( input ).setAttribute( "name", "D" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Support: IE8\n
Action.c(5):     \t\t\t// Enforce case-sensitivity of name attribute\n
Action.c(5):     \t\t\tif ( div.querySelectorAll("[name=d]").length ) {\n
Action.c(5):     \t\t\t\trbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enable
Action.c(5):     d)\n
Action.c(5):     \t\t\t// IE8 throws error here and will not see later tests\n
Action.c(5):     \t\t\tif ( !div.querySelectorAll(":enabled").length ) {\n
Action.c(5):     \t\t\t\trbuggyQSA.push( ":enabled", ":disabled" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n
Action.c(5):     \t\t\tdiv.querySelectorAll("*,:x");\n
Action.c(5):     \t\t\trbuggyQSA.push(",.*:");\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector |
Action.c(5):     |\n
Action.c(5):     \t\tdocElem.mozMatchesSelector ||\n
Action.c(5):     \t\tdocElem.oMatchesSelector ||\n
Action.c(5):     \t\tdocElem.msMatchesSelector) )) ) {\n
Action.c(5):     \n
Action.c(5):     \t\tassert(function( div ) {\n
Action.c(5):     \t\t\t// Check to see if it's possible to do matchesSelector\n
Action.c(5):     \t\t\t// on a disconnected node (IE 9)\n
Action.c(5):     \t\t\tsupport.disconnectedMatch = matches.call( div, "div" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// This should fail with an exception\n
Action.c(5):     \t\t\t// Gecko does not error, returns false instead\n
Action.c(5):     \t\t\tmatches.call( div, "[s!='']:x" );\n
Action.c(5):     \t\t\trbuggyMatches.push( "!=", pseudos );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );\n
Action.c(5):     \trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );\n
Action.c(5):     \n
Action.c(5):     \t/* Contains\n
Action.c(5):     \t---------------------------------------------------------------------- */\n
Action.c(5):     \thasCompare = rnative.test( docElem.compareDocumentPosition );\n
Action.c(5):     \n
Action.c(5):     \t// Element contains another\n
Action.c(5):     \t// Purposefully does not implement inclusive descendent\n
Action.c(5):     \t// As in, an element does not contain itself\n
Action.c(5):     \tcontains = hasCompare || rnative.test( docElem.contains ) ?\n
Action.c(5):     \t\tfunction( a, b ) {\n
Action.c(5):     \t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n
Action.c(5):     \t\t\t\tbup = b && b.parentNode;\n
Action.c(5):     \t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n
Action.c(5):     \t\t\t\tadown.contains ?\n
Action.c(5):     \t\t\t\t\tadown.contains( bup ) :\n
Action.c(5):     \t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n
Action.c(5):     \t\t\t));\n
Action.c(5):     \t\t} :\n
Action.c(5):     \t\tfunction( a, b ) {\n
Action.c(5):     \t\t\tif ( b ) {\n
Action.c(5):     \t\t\t\twhile ( (b = b.parentNode) ) {\n
Action.c(5):     \t\t\t\t\tif ( b === a ) {\n
Action.c(5):     \t\t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn false;\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t/* Sorting\n
Action.c(5):     \t---------------------------------------------------------------------- */\n
Action.c(5):     \n
Action.c(5):     \t// Document order sorting\n
Action.c(5):     \tsortOrder = hasCompare ?\n
Action.c(5):     \tfunction( a, b ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Flag for duplicate removal\n
Action.c(5):     \t\tif ( a === b ) {\n
Action.c(5):     \t\t\thasDuplicate = true;\n
Action.c(5):     \t\t\treturn 0;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Sort on method existence if only one input has compareDocumentPosition\n
Action.c(5):     \t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n
Action.c(5):     \t\tif ( compare ) {\n
Action.c(5):     \t\t\treturn compare;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Calculate position if both inputs belong to the same document\n
Action.c(5):     \t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n
Action.c(5):     \t\t\ta.compareDocumentPosition( b ) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Otherwise we know they are disconnected\n
Action.c(5):     \t\t\t1;\n
Action.c(5):     \n
Action.c(5):     \t\t// Disconnected nodes\n
Action.c(5):     \t\tif ( compare & 1 ||\n
Action.c(5):     \t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Choose the first element that is related to our preferred document\n
Action.c(5):     \t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n
Action.c(5):     \t\t\t\treturn -1;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n
Action.c(5):     \t\t\t\treturn 1;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Maintain original order\n
Action.c(5):     \t\t\treturn sortInput ?\n
Action.c(5):     \t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n
Action.c(5):     \t\t\t\t0;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn compare & 4 ? -1 : 1;\n
Action.c(5):     \t} :\n
Action.c(5):     \tfunction( a, b ) {\n
Action.c(5):     \t\t// Exit early 
Action.c(5): t=213967ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5): t=213968ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     if the nodes are identical\n
Action.c(5):     \t\tif ( a === b ) {\n
Action.c(5):     \t\t\thasDuplicate = true;\n
Action.c(5):     \t\t\treturn 0;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tvar cur,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\taup = a.parentNode,\n
Action.c(5):     \t\t\tbup = b.parentNode,\n
Action.c(5):     \t\t\tap = [ a ],\n
Action.c(5):     \t\t\tbp = [ b ];\n
Action.c(5):     \n
Action.c(5):     \t\t// Parentless nodes are either documents or disconnected\n
Action.c(5):     \t\tif ( !aup || !bup ) {\n
Action.c(5):     \t\t\treturn a === doc ? -1 :\n
Action.c(5):     \t\t\t\tb === doc ? 1 :\n
Action.c(5):     \t\t\t\taup ? -1 :\n
Action.c(5):     \t\t\t\tbup ? 1 :\n
Action.c(5):     \t\t\t\tsortInput ?\n
Action.c(5):     \t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n
Action.c(5):     \t\t\t\t0;\n
Action.c(5):     \n
Action.c(5):     \t\t// If the nodes are siblings, we can do a quick check\n
Action.c(5):     \t\t} else if ( aup === bup ) {\n
Action.c(5):     \t\t\treturn siblingCheck( a, b );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Otherwise we need full lists of their ancestors for comparison\n
Action.c(5):     \t\tcur = a;\n
Action.c(5):     \t\twhile ( (cur = cur.parentNode) ) {\n
Action.c(5):     \t\t\tap.unshift( cur );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tcur = b;\n
Action.c(5):     \t\twhile ( (cur = cur.parentNode) ) {\n
Action.c(5):     \t\t\tbp.unshift( cur );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Walk down the tree looking for a discrepancy\n
Action.c(5):     \t\twhile ( ap[i] === bp[i] ) {\n
Action.c(5):     \t\t\ti++;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn i ?\n
Action.c(5):     \t\t\t// Do a sibling check if the nodes have a common ancestor\n
Action.c(5):     \t\t\tsiblingCheck( ap[i], bp[i] ) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Otherwise nodes in our document sort first\n
Action.c(5):     \t\t\tap[i] === preferredDoc ? -1 :\n
Action.c(5):     \t\t\tbp[i] === preferredDoc ? 1 :\n
Action.c(5):     \t\t\t0;\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     \treturn doc;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     Sizzle.matches = function( expr, elements ) {\n
Action.c(5):     \treturn Sizzle( expr, null, null, elements );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     Sizzle.matchesSelector = function( elem, expr ) {\n
Action.c(5):     \t// Set document vars if needed\n
Action.c(5):     \tif ( ( elem.ownerDocument || elem ) !== document ) {\n
Action.c(5):     \t\tsetDocument( elem );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Make sure that attribute selectors are quoted\n
Action.c(5):     \texpr = expr.replace( rattributeQuotes, "='$1']" );\n
Action.c(5):     \n
Action.c(5):     \tif ( support.matchesSelector && documentIsHTML &&\n
Action.c(5):     \t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n
Action.c(5):     \t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\ttry {\n
Action.c(5):     \t\t\tvar ret = matches.call( elem, expr );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n
Action.c(5):     \t\t\tif ( ret || support.disconnectedMatch ||\n
Action.c(5):     \t\t\t\t\t// As well, disconnected nodes are said to be in a document\n
Action.c(5):     \t\t\t\t\t// fragment in IE 9\n
Action.c(5):     \t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n
Action.c(5):     \t\t\t\treturn ret;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t} catch(e) {}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn Sizzle( expr, document, null, [elem] ).length > 0;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     Sizzle.contains = function( context, elem ) {\n
Action.c(5):     \t// Set document vars if needed\n
Action.c(5):     \tif ( ( context.ownerDocument || context ) !== document ) {\n
Action.c(5):     \t\tsetDocument( context );\n
Action.c(5):     \t}\n
Action.c(5):     \treturn contains( context, elem );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     Sizzle.attr = function( elem, name ) {\n
Action.c(5):     \t// Set document vars if needed\n
Action.c(5):     \tif ( ( elem.ownerDocument || elem ) !== document ) {\n
Action.c(5):     \t\tsetDocument( elem );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n
Action.c(5):     \t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n
Action.c(5):     \t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n
Action.c(5):     \t\t\tfn( elem, name, !documentIsHTML ) :\n
Action.c(5):     \t\t\tundefined;\n
Action.c(5):     \n
Action.c(5):     \treturn val !== undefined ?\n
Action.c(5):     \t\tval :\n
Action.c(5):     \t\tsupport.attributes || !documentIsHTML ?\n
Action.c(5):     \t\t\telem.getAttribute( name ) :\n
Action.c(5):     \t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n
Action.c(5):     \t\t\t\tval.value :\n
Action.c(5):     \t\t\t\tnull;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     Sizzle.error = function( msg ) {\n
Action.c(5):     \tthrow new Error( "Syntax error, unrecognized expression: " + msg );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Document sorting and removing duplicates\n
Action.c(5):      * @param {ArrayLike} results\n
Action.c(5):      */\n
Action.c(5):     Sizzle.uniqueSort = function( results ) {\n
Action.c(5):     \tvar elem,\n
Action.c(5):     \t\tduplicates = [],\n
Action.c(5):     \t\tj = 0,\n
Action.c(5):     \t\ti = 0;\n
Action.c(5):     \n
Action.c(5):     \t// Unless we *know* we can detect duplicates, assume their presence\n
Action.c(5):     \thasDuplicate = !support.detectDuplicates;\n
Action.c(5):     \tsortInput = !support.sortStable && results.slice( 0 );\n
Action.c(5):     \tresults.sort( sortOrder );\n
Action.c(5):     \n
Action.c(5):     \tif ( hasDuplicate ) {\n
Action.c(5):     \t\twhile ( (elem = results[i++]) ) {\n
Action.c(5):     \t\t\tif ( elem === results[ i ] ) {\n
Action.c(5):     \t\t\t\tj = duplicates.push( i );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\twhile ( j-- ) {\n
Action.c(5):     \t\t\tresults.splice( duplicates[ j ], 1 );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Clear input after sorting to release objects\n
Action.c(5):     \t// See https://github.com/jquery/sizzle/pull/225\n
Action.c(5):     \tsortInput = null;\n
Action.c(5):     \n
Action.c(5):     \treturn results;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Utility function for retrieving the text value of an array of DOM nodes\n
Action.c(5):      * @param {Array|Element} elem\n
Action.c(5):      */\n
Action.c(5):     getText = Sizzle.getText = function( elem ) {\n
Action.c(5):     \tvar node,\n
Action.c(5):     \t\tret = "",\n
Action.c(5):     \t\ti = 0,\n
Action.c(5):     \t\tnodeType = elem.nodeType;\n
Action.c(5):     \n
Action.c(5):     \tif ( !nodeType ) {\n
Action.c(5):     \t\t// If no nodeType, this is expected to be an array\n
Action.c(5):     \t\twhile ( (node = elem[i++]) ) {\n
Action.c(5):     \t\t\t// Do not traverse comment nodes\n
Action.c(5):     \t\t\tret += getText( node );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n
Action.c(5):     \t\t// Use textContent for elements\n
Action.c(5):     \t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n
Action.c(5):     \t\tif ( typeof elem.textContent === "string" ) {\n
Action.c(5):     \t\t\treturn elem.textContent;\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t// Traverse its children\n
Action.c(5):     \t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n
Action.c(5):     \t\t\t\tret += getText( elem );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t} else if ( nodeType === 3 || nodeType === 4 ) {\n
Action.c(5):     \t\treturn elem.nodeValue;\n
Action.c(5):     \t}\n
Action.c(5):     \t// Do not include comment or processing instruction nodes\n
Action.c(5):     \n
Action.c(5):     \treturn ret;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     Expr = Sizzle.selectors = {\n
Action.c(5):     \n
Action.c(5):     \t// Can be adjusted by the user\n
Action.c(5):     \tcacheLength: 50,\n
Action.c(5):     \n
Action.c(5):     \tcreatePseudo: markFunction,\n
Action.c(5):     \n
Action.c(5):     \tmatch: matchExpr,\n
Action.c(5):     \n
Action.c(5):     \tattrHandle: {},\n
Action.c(5):     \n
Action.c(5):     \tfind: {},\n
Action.c(5):     \n
Action.c(5):     \trelative: {\n
Action.c(5):     \t\t">": { dir: "parentNode", first: true },\n
Action.c(5):     \t\t" ": { dir: "parentNode" },\n
Action.c(5):     \t\t"+": { dir: "previousSibling", first: true },\n
Action.c(5):     \t\t"~": { dir: "previousSibling" }\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tpreFilter: {\n
Action.c(5):     \t\t"ATTR": function( match ) {\n
Action.c(5):     \t\t\tmatch[1] = match[1].replace( runescape, funescape );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Move the given value to match[3] whether quoted or unquoted\n
Action.c(5):     \t\t\tmatch[3] = ( match[4] || match[5] || "" ).replace( runescape, funescape );\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( match[2] === "~=" ) {\n
Action.c(5):     \t\t\t\tmatch[3] = " " + match[3] + " ";\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn match.slice( 0, 4 );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"CHILD": function( match ) {\n
Action.c(5):     \t\t\t/* matches from matchExpr["CHILD"]\n
Action.c(5):     \t\t\t\t1 type (only|nth|...)\n
Action.c(5):     \t\t\t\t2 what (child|of-type)\n
Action.c(5):     \t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n
Action.c(5):     \t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n
Action.c(5):     \t\t\t\t5 sign of xn-component\n
Action.c(5):     \t\t\t\t6 x of xn-component\n
Action.c(5):     \t\t\t\t7 sign of y-component\n
Action.c(5):     \t\t\t\t8 y of y-component\n
Action.c(5):     \t\t\t*/\n
Action.c(5):     \t\t\tmatch[1] = match[1].toLowerCase();\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( match[1].slice( 0, 3 ) === "nth" ) {\n
Action.c(5):     \t\t\t\t// nth-* requires argument\n
Action.c(5):     \t\t\t\tif ( !match[3] ) {\n
Action.c(5):     \t\t\t\t\tSizzle.error( match[0] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n
Action.c(5):     \t\t\t\t// remember that false/true cast respectively to 0/1\n
Action.c(5):     \t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" ||
Action.c(5):      match[3] === "odd" ) );\n
Action.c(5):     \t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// other types prohibit arguments\n
Action.c(5):     \t\t\t} else if ( match[3] ) {\n
Action.c(5):     \t\t\t\tSizzle.error( match[0] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn match;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"PSEUDO": function( match ) {\n
Action.c(5):     \t\t\tvar excess,\n
Action.c(5):     \t\t\t\tunquoted = !match[5] && match[2];\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( matchExpr["CHILD"].test( match[0] ) ) {\n
Action.c(5):     \t\t\t\treturn null;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Accept quoted arguments as-is\n
Action.c(5):     \t\t\tif ( match[3] && match[4] !== undefined ) {\n
Action.c(5):     \t\t\t\tmatch[2] = match[4];\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Strip excess characters from unquoted arguments\n
Action.c(5):     \t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n
Action.c(5):     \t\t\t\t// Get excess from tokenize (recursively)\n
Action.c(5):     \t\t\t\t(excess = tokenize( unquoted, true )) &&\n
Action.c(5):     \t\t\t\t// advance to the next closing parenthesis\n
Action.c(5):     \t\t\t\t(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// excess is a negative index\n
Action.c(5):     \t\t\t\tmatch[0] = match[0].slice( 0, excess );\n
Action.c(5):     \t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n
Action.c(5):     \t\t\treturn match.slice( 0, 3 );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tfilter: {\n
Action.c(5):     \n
Action.c(5):     \t\t"TAG": function( nodeNameSelector ) {\n
Action.c(5):     \t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n
Action.c(5):     \t\t\treturn nodeNameSelector === "*" ?\n
Action.c(5):     \t\t\t\tfunction() { return true; } :\n
Action.c(5):     \t\t\t\tfunction( elem ) {\n
Action.c(5):     \t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"CLASS": function( className ) {\n
Action.c(5):     \t\t\tvar pattern = classCache[ className + " " ];\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn pattern ||\n
Action.c(5):     \t\t\t\t(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "
Action.c(5):     |$)" )) &&\n
Action.c(5):     \t\t\t\tclassCache( className, function( elem ) {\n
Action.c(5):     \t\t\t\t\treturn pattern.test( typeof elem.className === "string" && elem.className || typ
Action.c(5):     eof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"ATTR": function( name, operator, check ) {\n
Action.c(5):     \t\t\treturn function( elem ) {\n
Action.c(5):     \t\t\t\tvar result = Sizzle.attr( elem, name );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( result == null ) {\n
Action.c(5):     \t\t\t\t\treturn operator === "!=";\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tif ( !operator ) {\n
Action.c(5):     \t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tresult += "";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn operator === "=" ? result === check :\n
Action.c(5):     \t\t\t\t\toperator === "!=" ? result !== check :\n
Action.c(5):     \t\t\t\t\toperator === "^=" ? check && result.indexOf( check ) === 0 :\n
Action.c(5):     \t\t\t\t\toperator === "*=" ? check && result.indexOf( check ) > -1 :\n
Action.c(5):     \t\t\t\t\toperator === "$=" ? check && result.slice( -check.length ) === check :\n
Action.c(5):     \t\t\t\t\toperator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :\n
Action.c(5):     \t\t\t\t\toperator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === 
Action.c(5):     check + "-" :\n
Action.c(5):     \t\t\t\t\tfalse;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"CHILD": function( type, what, argument, first, last ) {\n
Action.c(5):     \t\t\tvar simple = type.slice( 0, 3 ) !== "nth",\n
Action.c(5):     \t\t\t\tforward = type.slice( -4 ) !== "last",\n
Action.c(5):     \t\t\t\tofType = what === "of-type";\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn first === 1 && last === 0 ?\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Shortcut for :nth-*(n)\n
Action.c(5):     \t\t\t\tfunction( elem ) {\n
Action.c(5):     \t\t\t\t\treturn !!elem.parentNode;\n
Action.c(5):     \t\t\t\t} :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tfunction( elem, context, xml ) {\n
Action.c(5):     \t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n
Action.c(5):     \t\t\t\t\t\tdir = simple !== forward ? "nextSibling" : "previousSibling",\n
Action.c(5):     \t\t\t\t\t\tparent = elem.parentNode,\n
Action.c(5):     \t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n
Action.c(5):     \t\t\t\t\t\tuseCache = !xml && !ofType;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( parent ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n
Action.c(5):     \t\t\t\t\t\tif ( simple ) {\n
Action.c(5):     \t\t\t\t\t\t\twhile ( dir ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tnode = elem;\n
Action.c(5):     \t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1
Action.c(5):      ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\treturn false;\n
Action.c(5):     \t\t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n
Action.c(5):     \t\t\t\t\t\t\t\tstart = dir = type === "only" && !start && "nextSibling";\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n
Action.c(5):     \t\t\t\t\t\tif ( forward && useCache ) {\n
Action.c(5):     \t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n
Action.c(5):     \t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n
Action.c(5):     \t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n
Action.c(5):     \t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n
Action.c(5):     \t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n
Action.c(5):     \t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n
Action.c(5):     \t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n
Action.c(5):     \t\t\t\t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Use previously-cached element index if available\n
Action.c(5):     \t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ 
Action.c(5):     type ]) && cache[0] === dirruns ) {\n
Action.c(5):     \t\t\t\t\t\t\tdiff = cache[1];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n
Action.c(5):     \t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n
Action.c(5):     \t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n
Action.c(5):     \t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1
Action.c(5):      ) && ++diff ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n
Action.c(5):     \t\t\t\t\t\t\t\t\tif ( useCache ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff 
Action.c(5):     ];\n
Action.c(5):     \t\t\t\t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t\tif ( node === elem ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n
Action.c(5):     \t\t\t\t\t\tdiff -= last;\n
Action.c(5):     \t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"PSEUDO": function( pseudo, argument ) {\n
Action.c(5):     \t\t\t// pseudo-class names are case-insensitive\n
Action.c(5):     \t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n
Action.c(5):     \t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase le
Action.c(5):     tters\n
Action.c(5):     \t\t\t// Remember that setFilters inherits from pseudos\n
Action.c(5):     \t\t\tvar args,\n
Action.c(5):     \t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n
Action.c(5):     \t\t\t\t\tSizzle.error( "unsupported pseudo: " + pseudo );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// The user may use createPseudo to indicate that\n
Action.c(5):     \t\t\t// arguments are needed to create the filter function\n
Action.c(5):     \t\t\t// just as Sizzle does\n
Action.c(5):     \t\t\tif ( fn[ expando ] ) {\n
Action.c(5):     \t\t\t\treturn fn( argument );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// But maintain support for old signatures\n
Action.c(5):     \t\t\tif ( fn.length > 1 ) {\n
Action.c(5):     \t\t\t\targs = [ pseudo, pseudo, "", argument ];\n
Action.c(5):     \t\t\t\treturn Expr.setFilt
Action.c(5): t=213972ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     ers.hasOwnProperty( pseudo.toLowerCase() ) ?\n
Action.c(5):     \t\t\t\t\tmarkFunction(function( seed, matches ) {\n
Action.c(5):     \t\t\t\t\t\tvar idx,\n
Action.c(5):     \t\t\t\t\t\t\tmatched = fn( seed, argument ),\n
Action.c(5):     \t\t\t\t\t\t\ti = matched.length;\n
Action.c(5):     \t\t\t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\t\t\tidx = indexOf.call( seed, matched[i] );\n
Action.c(5):     \t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}) :\n
Action.c(5):     \t\t\t\t\tfunction( elem ) {\n
Action.c(5):     \t\t\t\t\t\treturn fn( elem, 0, args );\n
Action.c(5):     \t\t\t\t\t};\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn fn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tpseudos: {\n
Action.c(5):     \t\t// Potentially complex pseudos\n
Action.c(5):     \t\t"not": markFunction(function( selector ) {\n
Action.c(5):     \t\t\t// Trim the selector passed to compile\n
Action.c(5):     \t\t\t// to avoid treating leading and trailing\n
Action.c(5):     \t\t\t// spaces as combinators\n
Action.c(5):     \t\t\tvar input = [],\n
Action.c(5):     \t\t\t\tresults = [],\n
Action.c(5):     \t\t\t\tmatcher = compile( selector.replace( rtrim, "$1" ) );\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn matcher[ expando ] ?\n
Action.c(5):     \t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n
Action.c(5):     \t\t\t\t\tvar elem,\n
Action.c(5):     \t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n
Action.c(5):     \t\t\t\t\t\ti = seed.length;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Match elements unmatched by `matcher`\n
Action.c(5):     \t\t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n
Action.c(5):     \t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}) :\n
Action.c(5):     \t\t\t\tfunction( elem, context, xml ) {\n
Action.c(5):     \t\t\t\t\tinput[0] = elem;\n
Action.c(5):     \t\t\t\t\tmatcher( input, null, xml, results );\n
Action.c(5):     \t\t\t\t\treturn !results.pop();\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"has": markFunction(function( selector ) {\n
Action.c(5):     \t\t\treturn function( elem ) {\n
Action.c(5):     \t\t\t\treturn Sizzle( selector, elem ).length > 0;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"contains": markFunction(function( text ) {\n
Action.c(5):     \t\t\treturn function( elem ) {\n
Action.c(5):     \t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) >
Action.c(5):      -1;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t// "Whether an element is represented by a :lang() selector\n
Action.c(5):     \t\t// is based solely on the element's language value\n
Action.c(5):     \t\t// being equal to the identifier C,\n
Action.c(5):     \t\t// or beginning with the identifier C immediately followed by "-".\n
Action.c(5):     \t\t// The matching of C against the element's language value is performed case-insensitiv
Action.c(5):     ely.\n
Action.c(5):     \t\t// The identifier C does not have to be a valid language name."\n
Action.c(5):     \t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n
Action.c(5):     \t\t"lang": markFunction( function( lang ) {\n
Action.c(5):     \t\t\t// lang value must be a valid identifier\n
Action.c(5):     \t\t\tif ( !ridentifier.test(lang || "") ) {\n
Action.c(5):     \t\t\t\tSizzle.error( "unsupported lang: " + lang );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n
Action.c(5):     \t\t\treturn function( elem ) {\n
Action.c(5):     \t\t\t\tvar elemLang;\n
Action.c(5):     \t\t\t\tdo {\n
Action.c(5):     \t\t\t\t\tif ( (elemLang = documentIsHTML ?\n
Action.c(5):     \t\t\t\t\t\telem.lang :\n
Action.c(5):     \t\t\t\t\t\telem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\telemLang = elemLang.toLowerCase();\n
Action.c(5):     \t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t// Miscellaneous\n
Action.c(5):     \t\t"target": function( elem ) {\n
Action.c(5):     \t\t\tvar hash = window.location && window.location.hash;\n
Action.c(5):     \t\t\treturn hash && hash.slice( 1 ) === elem.id;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"root": function( elem ) {\n
Action.c(5):     \t\t\treturn elem === docElem;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"focus": function( elem ) {\n
Action.c(5):     \t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()
Action.c(5):     ) && !!(elem.type || elem.href || ~elem.tabIndex);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// Boolean properties\n
Action.c(5):     \t\t"enabled": function( elem ) {\n
Action.c(5):     \t\t\treturn elem.disabled === false;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"disabled": function( elem ) {\n
Action.c(5):     \t\t\treturn elem.disabled === true;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"checked": function( elem ) {\n
Action.c(5):     \t\t\t// In CSS3, :checked should return both checked and selected elements\n
Action.c(5):     \t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n
Action.c(5):     \t\t\tvar nodeName = elem.nodeName.toLowerCase();\n
Action.c(5):     \t\t\treturn (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.
Action.c(5):     selected);\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"selected": function( elem ) {\n
Action.c(5):     \t\t\t// Accessing this property makes selected-by-default\n
Action.c(5):     \t\t\t// options in Safari work properly\n
Action.c(5):     \t\t\tif ( elem.parentNode ) {\n
Action.c(5):     \t\t\t\telem.parentNode.selectedIndex;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn elem.selected === true;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// Contents\n
Action.c(5):     \t\t"empty": function( elem ) {\n
Action.c(5):     \t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n
Action.c(5):     \t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref:
Action.c(5):      5),\n
Action.c(5):     \t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n
Action.c(5):     \t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n
Action.c(5):     \t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n
Action.c(5):     \t\t\t\tif ( elem.nodeType < 6 ) {\n
Action.c(5):     \t\t\t\t\treturn false;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn true;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"parent": function( elem ) {\n
Action.c(5):     \t\t\treturn !Expr.pseudos["empty"]( elem );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// Element/input types\n
Action.c(5):     \t\t"header": function( elem ) {\n
Action.c(5):     \t\t\treturn rheader.test( elem.nodeName );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"input": function( elem ) {\n
Action.c(5):     \t\t\treturn rinputs.test( elem.nodeName );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"button": function( elem ) {\n
Action.c(5):     \t\t\tvar name = elem.nodeName.toLowerCase();\n
Action.c(5):     \t\t\treturn name === "input" && elem.type === "button" || name === "button";\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t"text": function( elem ) {\n
Action.c(5):     \t\t\tvar attr;\n
Action.c(5):     \t\t\treturn elem.nodeName.toLowerCase() === "input" &&\n
Action.c(5):     \t\t\t\telem.type === "text" &&\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Support: IE<8\n
Action.c(5):     \t\t\t\t// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"\n
Action.c(5):     \t\t\t\t( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// Position-in-collection\n
Action.c(5):     \t\t"first": createPositionalPseudo(function() {\n
Action.c(5):     \t\t\treturn [ 0 ];\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"last": createPositionalPseudo(function( matchIndexes, length ) {\n
Action.c(5):     \t\t\treturn [ length - 1 ];\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {\n
Action.c(5):     \t\t\treturn [ argument < 0 ? argument + length : argument ];\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"even": createPositionalPseudo(function( matchIndexes, length ) {\n
Action.c(5):     \t\t\tvar i = 0;\n
Action.c(5):     \t\t\tfor ( ; i < length; i += 2 ) {\n
Action.c(5):     \t\t\t\tmatchIndexes.push( i );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn matchIndexes;\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"odd": createPositionalPseudo(function( matchIndexes, length ) {\n
Action.c(5):     \t\t\tvar i = 1;\n
Action.c(5):     \t\t\tfor ( ; i < length; i += 2 ) {\n
Action.c(5):     \t\t\t\tmatchIndexes.push( i );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn matchIndexes;\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {\n
Action.c(5):     \t\t\tvar i = argument < 0 ? argument + length : argument;\n
Action.c(5):     \t\t\tfor ( ; --i >= 0; ) {\n
Action.c(5):     \t\t\t\tmatchIndexes.push( i );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn matchIndexes;\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\t"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {\n
Action.c(5):     \t\t\tvar i = argument < 0 ? argument + length : argument;\n
Action.c(5):     \t\t\tfor ( ; ++i < length; ) {\n
Action.c(5):     \t\t\t\tmatchIndexes.push( i );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn matchIndexes;\n
Action.c(5):     \t\t})\n
Action.c(5):     \t}\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     Expr.pseudos["nth"] = Expr.pseudos["eq"];\n
Action.c(5):     \n
Action.c(5):     // Add button/input type pseudos\n
Action.c(5):     for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n
Action.c(5):     \tExpr.pseudos[ i ] = createInputPseudo( i );\n
Action.c(5):     }\n
Action.c(5):     for ( i in { submit: true, reset: true } ) {\n
Action.c(5):     \tExpr.pseudos[ i ] = createButtonPseudo( i );\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Easy API for creating new setFilters\n
Action.c(5):     function setFilters() {}\n
Action.c(5):     setFilters.prototype = Expr.filters = Expr.pseudos;\n
Action.c(5):     Expr.setFilters = new setFilters();\n
Action.c(5):     \n
Action.c(5):     function tokenize( selector, parseOnly ) {\n
Action.c(5):     \tvar matched, match, tokens, type,\n
Action.c(5):     \t\tsoFar, groups, preFilters,\n
Action.c(5):     \t\tcached = tokenCache[ selector + " " ];\n
Action.c(5):     \n
Action.c(5):     \tif ( cached ) {\n
Action.c(5):     \t\treturn parseOnly ? 0 : cached.slice( 0 );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tsoFar = selector;\n
Action.c(5):     \tgroups = [];\n
Action.c(5):     \tpreFilters = Expr.preFilter;\n
Action.c(5):     \n
Action.c(5):     \twhile ( soFar ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Comma and first run\n
Action.c(5):     \t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n
Action.c(5):     \t\t\tif ( match ) {\n
Action.c(5):     \t\t\t\t// Don't consume trailing commas as valid\n
Action.c(5):     \t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tgroups.push( (tokens = []) );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tmatched = false;\n
Action.c(5):     \n
Action.c(5):     \t\t// Combinators\n
Action.c(5):     \t\tif ( (match = rcombinators.exec( soFar )) ) {\n
Action.c(5):     \t\t\tmatched = match.shift();\n
Action.c(5):     \t\t\ttokens.push({\n
Action.c(5):     \t\t\t\tvalue: matched,\n
Action.c(5):     \t\t\t\t// Cast descendant combinators to space\n
Action.c(5):     \t\t\t\ttype: match[0].replace( rtrim, " " )\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t\tsoFar = soFar.slice( matched.length );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Filters\n
Action.c(5):     \t\tfor ( type in Expr.filter ) {\n
Action.c(5):     \t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n
Action.c(5):     \t\t\t\t(match = preFilters[ type ]( match ))) ) {\n
Action.c(5):     \t\t\t\tmatched = match.shift();\n
Action.c(5):     \t\t\t\ttokens.push({\n
Action.c(5):     \t\t\t\t\tvalue: matched,\n
Action.c(5):     \t\t\t\t\ttype: type,\n
Action.c(5):     \t\t\t\t\tmatches: match\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     \t\t\t\tsoFar = soFar.slice( matched.length );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !matched ) {\n
Action.c(5):     \t\t\tbreak;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Return the length of the invalid excess\n
Action.c(5):     \t// if we're just parsing\n
Action.c(5):     \t// Otherwise, throw an error or return tokens\n
Action.c(5):     \treturn parseOnly ?\n
Action.c(5):     \t\tsoFar.length :\n
Action.c(5):     \t\tsoFar ?\n
Action.c(5):     \t\t\tSizzle.error( selector ) :\n
Action.c(5):     \t\t\t// Cache the tokens\n
Action.c(5):     \t\t\ttokenCache( selector, groups ).slice( 0 );\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function toSelector( tokens ) {\n
Action.c(5):     \tvar i = 0,\n
Action.c(5):     \t\tlen = tokens.length,\n
Action.c(5):     \t\tselector = "";\n
Action.c(5):     \tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\tselector += tokens[i].value;\n
Action.c(5):     \t}\n
Action.c(5):     \treturn selector;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function addCombinator( matcher, combinator, base ) {\n
Action.c(5):     \tvar dir = combinator.dir,\n
Action.c(5):     \t\tcheckNonElements = base && dir === "parentNode",\n
Action.c(5):     \t\tdoneName = done++;\n
Action.c(5):     \n
Action.c(5):     \treturn combinator.first ?\n
Action.c(5):     \t\t// Check against closest ancestor/preceding element\n
Action.c(5):     \t\tfunction( elem, context, xml ) {\n
Action.c(5):     \t\t\twhile ( (elem = elem[ dir ]) ) {\n
Action.c(5):     \t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n
Action.c(5):     \t\t\t\t\treturn matcher( elem, context, xml );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t} :\n
Action.c(5):     \n
Action.c(5):     \t\t// Check against all ancestor/preceding elements\n
Action.c(5):     \t\tfunction( elem, context, xml ) {\n
Action.c(5):     \t\t\tvar oldCache, outerCache,\n
Action.c(5):     \t\t\t\tnewCache = [ dirruns, doneName ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n
Action.c(5):     \t\t\tif ( xml ) {\n
Action.c(5):     \t\t\t\twhile ( (elem = elem[ dir ]) ) {\n
Action.c(5):     \t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n
Action.c(5):     \t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n
Action.c(5):     \t\t\t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\twhile ( (elem = elem[ dir ]) ) {\n
Action.c(5):     \t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n
Action.c(5):     \t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n
Action.c(5):     \t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n
Action.c(5):     \t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n
Action.c(5):     \t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n
Action.c(5):     \t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n
Action.c(5):     \t\t\t\t\t\t\touterCache[ dir ] = newCache;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n
Action.c(5):     \t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n
Action.c(5):     \t\t\t\t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function elementMatcher( matchers ) {\n
Action.c(5):     \treturn matchers.length > 1 ?\n
Action.c(5):     \t\tfunction( elem, context, xml ) {\n
Action.c(5):     \t\t\tvar i = matchers.length;\n
Action.c(5):     \t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n
Action.c(5):     \t\t\t\t\treturn false;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn true;\n
Action.c(5):     \t\t} :\n
Action.c(5):     \t\tmatchers[0];\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function condense( unmatched, map, filter, context, xml ) {\n
Action.c(5):     \tvar elem,\n
Action.c(5):     \t\tnewUnmatched = [],\n
Action.c(5):     \t\ti = 0,\n
Action.c(5):     \t\tlen = unmatched.length,\n
Action.c(5):     \t\tmapped = map != null;\n
Action.c(5):     \n
Action.c(5):     \tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\tif ( (elem = unmatched[i]) ) {\n
Action.c(5):     \t\t\tif ( !filter || filter( elem, context, xml ) ) {\n
Action.c(5):     \t\t\t\tnewUnmatched.push( elem );\n
Action.c(5):     \t\t\t\tif ( mapped ) {\n
Action.c(5):     \t\t\t\t\tmap.push( i );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn newUnmatched;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) 
Action.c(5):     {\n
Action.c(5):     \tif ( postFilter && !postFilter[ expando ] ) {\n
Action.c(5):     \t\tpostFilter = setMatcher( postFilter );\n
Action.c(5):     \t}\n
Action.c(5):     \tif ( postFinder && !postFinder[ expando ] ) {\n
Action.c(5):     \t\tpostFinder = setMatcher( postFinder, postSelector );\n
Action.c(5):     \t}\n
Action.c(5):     \treturn markFunction(function( seed, results, context, xml ) {\n
Action.c(5):     \t\tvar temp, i, elem,\n
Action.c(5):     \t\t\tpreMap = [],\n
Action.c(5):     \t\t\tpostMap = [],\n
Action.c(5):     \t\t\tpreexisting = results.length,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Get initial elements from seed or context\n
Action.c(5):     \t\t\telems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : 
Action.c(5):     context, [] ),\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization
Action.c(5):     \n
Action.c(5):     \t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n
Action.c(5):     \t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n
Action.c(5):     \t\t\t\telems,\n
Action.c(5):     \n
Action.c(5):     \t\t\tmatcherOut = matcher ?\n
Action.c(5):     \t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexistin
Action.c(5):     g results,\n
Action.c(5):     \t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// ...intermediate processing is necessary\n
Action.c(5):     \t\t\t\t\t[] :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// ...otherwise use results directly\n
Action.c(5):     \t\t\t\t\tresults :\n
Action.c(5):     \t\t\t\tmatcherIn;\n
Action.c(5):     \n
Action.c(5):     \t\t// Find primary matches\n
Action.c(5):     \t\tif ( matcher ) {\n
Action.c(5):     \t\t\tmatcher( matcherIn, matcherOut, context, xml );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Apply postFilter\n
Action.c(5):     \t\tif ( postFilter ) {\n
Action.c(5):     \t\t\ttemp = condense( matcherOut, postMap );\n
Action.c(5):     \t\t\tpostFilter( temp, [], context, xml );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Un-match failing elements by moving them back to matcherIn\n
Action.c(5):     \t\t\ti = temp.length;\n
Action.c(5):     \t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\tif ( (elem = temp[i]) ) {\n
Action.c(5):     \t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( seed ) {\n
Action.c(5):     \t\t\tif ( postFinder || preFilter ) {\n
Action.c(5):     \t\t\t\tif ( postFinder ) {\n
Action.c(5):     \t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder cont
Action.c(5):     exts\n
Action.c(5):     \t\t\t\t\ttemp = [];\n
Action.c(5):     \t\t\t\t\ti = matcherOut.length;\n
Action.c(5):     \t\t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n
Action.c(5):     \t\t\t\t\t\t\t// Restore matcherIn since elem is not y
Action.c(5): t=213976ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     et a final match\n
Action.c(5):     \t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Move matched elements from seed to results to keep them synchronized\n
Action.c(5):     \t\t\t\ti = matcherOut.length;\n
Action.c(5):     \t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\tif ( (elem = matcherOut[i]) &&\n
Action.c(5):     \t\t\t\t\t\t(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Add elements to results, through postFinder if defined\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tmatcherOut = condense(\n
Action.c(5):     \t\t\t\tmatcherOut === results ?\n
Action.c(5):     \t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n
Action.c(5):     \t\t\t\t\tmatcherOut\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \t\t\tif ( postFinder ) {\n
Action.c(5):     \t\t\t\tpostFinder( null, results, matcherOut, xml );\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tpush.apply( results, matcherOut );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function matcherFromTokens( tokens ) {\n
Action.c(5):     \tvar checkContext, matcher, j,\n
Action.c(5):     \t\tlen = tokens.length,\n
Action.c(5):     \t\tleadingRelative = Expr.relative[ tokens[0].type ],\n
Action.c(5):     \t\timplicitRelative = leadingRelative || Expr.relative[" "],\n
Action.c(5):     \t\ti = leadingRelative ? 1 : 0,\n
Action.c(5):     \n
Action.c(5):     \t\t// The foundational matcher ensures that elements are reachable from top-level context
Action.c(5):     (s)\n
Action.c(5):     \t\tmatchContext = addCombinator( function( elem ) {\n
Action.c(5):     \t\t\treturn elem === checkContext;\n
Action.c(5):     \t\t}, implicitRelative, true ),\n
Action.c(5):     \t\tmatchAnyContext = addCombinator( function( elem ) {\n
Action.c(5):     \t\t\treturn indexOf.call( checkContext, elem ) > -1;\n
Action.c(5):     \t\t}, implicitRelative, true ),\n
Action.c(5):     \t\tmatchers = [ function( elem, context, xml ) {\n
Action.c(5):     \t\t\treturn ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n
Action.c(5):     \t\t\t\t(checkContext = context).nodeType ?\n
Action.c(5):     \t\t\t\t\tmatchContext( elem, context, xml ) :\n
Action.c(5):     \t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n
Action.c(5):     \t\t} ];\n
Action.c(5):     \n
Action.c(5):     \tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n
Action.c(5):     \t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Return special upon seeing a positional matcher\n
Action.c(5):     \t\t\tif ( matcher[ expando ] ) {\n
Action.c(5):     \t\t\t\t// Find the next relative operator (if any) for proper handling\n
Action.c(5):     \t\t\t\tj = ++i;\n
Action.c(5):     \t\t\t\tfor ( ; j < len; j++ ) {\n
Action.c(5):     \t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n
Action.c(5):     \t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn setMatcher(\n
Action.c(5):     \t\t\t\t\ti > 1 && elementMatcher( matchers ),\n
Action.c(5):     \t\t\t\t\ti > 1 && toSelector(\n
Action.c(5):     \t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-
Action.c(5):     element `*`\n
Action.c(5):     \t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : 
Action.c(5):     "" })\n
Action.c(5):     \t\t\t\t\t).replace( rtrim, "$1" ),\n
Action.c(5):     \t\t\t\t\tmatcher,\n
Action.c(5):     \t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n
Action.c(5):     \t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n
Action.c(5):     \t\t\t\t\tj < len && toSelector( tokens )\n
Action.c(5):     \t\t\t\t);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tmatchers.push( matcher );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn elementMatcher( matchers );\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n
Action.c(5):     \tvar bySet = setMatchers.length > 0,\n
Action.c(5):     \t\tbyElement = elementMatchers.length > 0,\n
Action.c(5):     \t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n
Action.c(5):     \t\t\tvar elem, j, matcher,\n
Action.c(5):     \t\t\t\tmatchedCount = 0,\n
Action.c(5):     \t\t\t\ti = "0",\n
Action.c(5):     \t\t\t\tunmatched = seed && [],\n
Action.c(5):     \t\t\t\tsetMatched = [],\n
Action.c(5):     \t\t\t\tcontextBackup = outermostContext,\n
Action.c(5):     \t\t\t\t// We must always have either seed elements or outermost context\n
Action.c(5):     \t\t\t\telems = seed || byElement && Expr.find["TAG"]( "*", outermost ),\n
Action.c(5):     \t\t\t\t// Use integer dirruns iff this is the outermost matcher\n
Action.c(5):     \t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n
Action.c(5):     \t\t\t\tlen = elems.length;\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( outermost ) {\n
Action.c(5):     \t\t\t\toutermostContext = context !== document && context;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add elements passing elementMatchers directly to results\n
Action.c(5):     \t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be "00" below\n
Action.c(5):     \t\t\t// Support: IE<9, Safari\n
Action.c(5):     \t\t\t// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements b
Action.c(5):     y id\n
Action.c(5):     \t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n
Action.c(5):     \t\t\t\tif ( byElement && elem ) {\n
Action.c(5):     \t\t\t\t\tj = 0;\n
Action.c(5):     \t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n
Action.c(5):     \t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n
Action.c(5):     \t\t\t\t\t\t\tresults.push( elem );\n
Action.c(5):     \t\t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tif ( outermost ) {\n
Action.c(5):     \t\t\t\t\t\tdirruns = dirrunsUnique;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Track unmatched elements for set filters\n
Action.c(5):     \t\t\t\tif ( bySet ) {\n
Action.c(5):     \t\t\t\t\t// They will have gone through all possible matchers\n
Action.c(5):     \t\t\t\t\tif ( (elem = !matcher && elem) ) {\n
Action.c(5):     \t\t\t\t\t\tmatchedCount--;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Lengthen the array for every element, matched or not\n
Action.c(5):     \t\t\t\t\tif ( seed ) {\n
Action.c(5):     \t\t\t\t\t\tunmatched.push( elem );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Apply set filters to unmatched elements\n
Action.c(5):     \t\t\tmatchedCount += i;\n
Action.c(5):     \t\t\tif ( bySet && i !== matchedCount ) {\n
Action.c(5):     \t\t\t\tj = 0;\n
Action.c(5):     \t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n
Action.c(5):     \t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( seed ) {\n
Action.c(5):     \t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n
Action.c(5):     \t\t\t\t\tif ( matchedCount > 0 ) {\n
Action.c(5):     \t\t\t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Discard index placeholder values to get only actual matches\n
Action.c(5):     \t\t\t\t\tsetMatched = condense( setMatched );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Add matches to results\n
Action.c(5):     \t\t\t\tpush.apply( results, setMatched );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n
Action.c(5):     \t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n
Action.c(5):     \t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tSizzle.uniqueSort( results );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Override manipulation of globals by nested matchers\n
Action.c(5):     \t\t\tif ( outermost ) {\n
Action.c(5):     \t\t\t\tdirruns = dirrunsUnique;\n
Action.c(5):     \t\t\t\toutermostContext = contextBackup;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn unmatched;\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \treturn bySet ?\n
Action.c(5):     \t\tmarkFunction( superMatcher ) :\n
Action.c(5):     \t\tsuperMatcher;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\n
Action.c(5):     \tvar i,\n
Action.c(5):     \t\tsetMatchers = [],\n
Action.c(5):     \t\telementMatchers = [],\n
Action.c(5):     \t\tcached = compilerCache[ selector + " " ];\n
Action.c(5):     \n
Action.c(5):     \tif ( !cached ) {\n
Action.c(5):     \t\t// Generate a function of recursive functions that can be used to check each element\n
Action.c(5):     \t\tif ( !group ) {\n
Action.c(5):     \t\t\tgroup = tokenize( selector );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\ti = group.length;\n
Action.c(5):     \t\twhile ( i-- ) {\n
Action.c(5):     \t\t\tcached = matcherFromTokens( group[i] );\n
Action.c(5):     \t\t\tif ( cached[ expando ] ) {\n
Action.c(5):     \t\t\t\tsetMatchers.push( cached );\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\telementMatchers.push( cached );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Cache the compiled function\n
Action.c(5):     \t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatche
Action.c(5):     rs ) );\n
Action.c(5):     \t}\n
Action.c(5):     \treturn cached;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     function multipleContexts( selector, contexts, results ) {\n
Action.c(5):     \tvar i = 0,\n
Action.c(5):     \t\tlen = contexts.length;\n
Action.c(5):     \tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\tSizzle( selector, contexts[i], results );\n
Action.c(5):     \t}\n
Action.c(5):     \treturn results;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function select( selector, context, results, seed ) {\n
Action.c(5):     \tvar i, tokens, token, type, find,\n
Action.c(5):     \t\tmatch = tokenize( selector );\n
Action.c(5):     \n
Action.c(5):     \tif ( !seed ) {\n
Action.c(5):     \t\t// Try to minimize operations if there is only one group\n
Action.c(5):     \t\tif ( match.length === 1 ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Take a shortcut and set the context if the root selector is an ID\n
Action.c(5):     \t\t\ttokens = match[0] = match[0].slice( 0 );\n
Action.c(5):     \t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&\n
Action.c(5):     \t\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n
Action.c(5):     \t\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tcontext = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), conte
Action.c(5):     xt ) || [] )[0];\n
Action.c(5):     \t\t\t\tif ( !context ) {\n
Action.c(5):     \t\t\t\t\treturn results;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tselector = selector.slice( tokens.shift().value.length );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Fetch a seed set for right-to-left matching\n
Action.c(5):     \t\t\ti = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;\n
Action.c(5):     \t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\ttoken = tokens[i];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Abort if we hit a combinator\n
Action.c(5):     \t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tif ( (find = Expr.find[ type ]) ) {\n
Action.c(5):     \t\t\t\t\t// Search, expanding context for leading sibling combinators\n
Action.c(5):     \t\t\t\t\tif ( (seed = find(\n
Action.c(5):     \t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n
Action.c(5):     \t\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || contex
Action.c(5):     t\n
Action.c(5):     \t\t\t\t\t)) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n
Action.c(5):     \t\t\t\t\t\ttokens.splice( i, 1 );\n
Action.c(5):     \t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n
Action.c(5):     \t\t\t\t\t\tif ( !selector ) {\n
Action.c(5):     \t\t\t\t\t\t\tpush.apply( results, seed );\n
Action.c(5):     \t\t\t\t\t\t\treturn results;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Compile and execute a filtering function\n
Action.c(5):     \t// Provide `match` to avoid retokenization if we modified the selector above\n
Action.c(5):     \tcompile( selector, match )(\n
Action.c(5):     \t\tseed,\n
Action.c(5):     \t\tcontext,\n
Action.c(5):     \t\t!documentIsHTML,\n
Action.c(5):     \t\tresults,\n
Action.c(5):     \t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n
Action.c(5):     \t);\n
Action.c(5):     \treturn results;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // One-time assignments\n
Action.c(5):     \n
Action.c(5):     // Sort stability\n
Action.c(5):     support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;\n
Action.c(5):     \n
Action.c(5):     // Support: Chrome<14\n
Action.c(5):     // Always assume duplicates if they aren't passed to the comparison function\n
Action.c(5):     support.detectDuplicates = !!hasDuplicate;\n
Action.c(5):     \n
Action.c(5):     // Initialize against the default document\n
Action.c(5):     setDocument();\n
Action.c(5):     \n
Action.c(5):     // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n
Action.c(5):     // Detached nodes confoundingly follow *each other*\n
Action.c(5):     support.sortDetached = assert(function( div1 ) {\n
Action.c(5):     \t// Should return 1, but returns 4 (following)\n
Action.c(5):     \treturn div1.compareDocumentPosition( document.createElement("div") ) & 1;\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Support: IE<8\n
Action.c(5):     // Prevent attribute/property "interpolation"\n
Action.c(5):     // http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n
Action.c(5):     if ( !assert(function( div ) {\n
Action.c(5):     \tdiv.innerHTML = "<a href='#'></a>";\n
Action.c(5):     \treturn div.firstChild.getAttribute("href") === "#" ;\n
Action.c(5):     }) ) {\n
Action.c(5):     \taddHandle( "type|href|height|width", function( elem, name, isXML ) {\n
Action.c(5):     \t\tif ( !isXML ) {\n
Action.c(5):     \t\t\treturn elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Support: IE<9\n
Action.c(5):     // Use defaultValue in place of getAttribute("value")\n
Action.c(5):     if ( !support.attributes || !assert(function( div ) {\n
Action.c(5):     \tdiv.innerHTML = "<input/>";\n
Action.c(5):     \tdiv.firstChild.setAttribute( "value", "" );\n
Action.c(5):     \treturn div.firstChild.getAttribute( "value" ) === "";\n
Action.c(5):     }) ) {\n
Action.c(5):     \taddHandle( "value", function( elem, name, isXML ) {\n
Action.c(5):     \t\tif ( !isXML && elem.nodeName.toLowerCase() === "input" ) {\n
Action.c(5):     \t\t\treturn elem.defaultValue;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Support: IE<9\n
Action.c(5):     // Use getAttributeNode to fetch booleans when getAttribute lies\n
Action.c(5):     if ( !assert(function( div ) {\n
Action.c(5):     \treturn div.getAttribute("disabled") == null;\n
Action.c(5):     }) ) {\n
Action.c(5):     \taddHandle( booleans, function( elem, name, isXML ) {\n
Action.c(5):     \t\tvar val;\n
Action.c(5):     \t\tif ( !isXML ) {\n
Action.c(5):     \t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n
Action.c(5):     \t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n
Action.c(5):     \t\t\t\t\tval.value :\n
Action.c(5):     \t\t\t\tnull;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     return Sizzle;\n
Action.c(5):     \n
Action.c(5):     })( window );\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     jQuery.find = Sizzle;\n
Action.c(5):     jQuery.expr = Sizzle.selectors;\n
Action.c(5):     jQuery.expr[":"] = jQuery.expr.pseudos;\n
Action.c(5):     jQuery.unique = Sizzle.uniqueSort;\n
Action.c(5):     jQuery.text = Sizzle.getText;\n
Action.c(5):     jQuery.isXMLDoc = Sizzle.isXML;\n
Action.c(5):     jQuery.contains = Sizzle.contains;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rneedsContext = jQuery.expr.match.needsContext;\n
Action.c(5):     \n
Action.c(5):     var rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var risSimple = /^.[^:#\\[\\.,]*$/;\n
Action.c(5):     \n
Action.c(5):     // Implement the identical functionality for filter and not\n
Action.c(5):     function winnow( elements, qualifier, not ) {\n
Action.c(5):     \tif ( jQuery.isFunction( qualifier ) ) {\n
Action.c(5):     \t\treturn jQuery.grep( elements, function( elem, i ) {\n
Action.c(5):     \t\t\t/* jshint -W018 */\n
Action.c(5):     \t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( qualifier.nodeType ) {\n
Action.c(5):     \t\treturn jQuery.grep( elements, function( elem ) {\n
Action.c(5):     \t\t\treturn ( elem === qualifier ) !== not;\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( typeof qualifier === "string" ) {\n
Action.c(5):     \t\tif ( risSimple.test( qualifier ) ) {\n
Action.c(5):     \t\t\treturn jQuery.filter( qualifier, elements, not );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tqualifier = jQuery.filter( qualifier, elements );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn jQuery.grep( elements, function( elem ) {\n
Action.c(5):     \t\treturn ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.filter = function( expr, elems, not ) {\n
Action.c(5):     \tvar elem = elems[ 0 ];\n
Action.c(5):     \n
Action.c(5):     \tif ( not ) {\n
Action.c(5):     \t\texpr = ":not(" + expr + ")";\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn elems.length === 1 && elem.nodeType === 1 ?\n
Action.c(5):     \t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n
Action.c(5):     \t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n
Action.c(5):     \t\t\treturn elem.nodeType === 1;\n
Action.c(5):     \t\t}));\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \tfind: function( selector ) {\n
Action.c(5):     \t\tvar i,\n
Action.c(5):     \t\t\tret = [],\n
Action.c(5):     \t\t\tself = this,\n
Action.c(5):     \t\t\tlen = self.length;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof selector !== "string" ) {\n
Action.c(5):     \t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n
Action.c(5):     \t\t\t\tfor ( i = 0; i < len; i++ ) {\n
Action.c(5):     \t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n
Action.c(5):     \t\t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}) );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( i = 0; i < len; i++ ) {\n
Action.c(5):     \t\t\tjQuery.find( selector, self[ i ], ret );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n
Action.c(5):     \t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n
Action.c(5):     \t\tret.selector = this.selector ? this.selector + " " + selector
Action.c(5): t=213980ms: 7554-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):      : selector;\n
Action.c(5):     \t\treturn ret;\n
Action.c(5):     \t},\n
Action.c(5):     \tfilter: function( selector ) {\n
Action.c(5):     \t\treturn this.pushStack( winnow(this, selector || [], false) );\n
Action.c(5):     \t},\n
Action.c(5):     \tnot: function( selector ) {\n
Action.c(5):     \t\treturn this.pushStack( winnow(this, selector || [], true) );\n
Action.c(5):     \t},\n
Action.c(5):     \tis: function( selector ) {\n
Action.c(5):     \t\treturn !!winnow(\n
Action.c(5):     \t\t\tthis,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If this is a positional/relative selector, check membership in the returned set\n
Action.c(5):     \t\t\t// so $("p:first").is("p:last") won't return true for a doc with two "p".\n
Action.c(5):     \t\t\ttypeof selector === "string" && rneedsContext.test( selector ) ?\n
Action.c(5):     \t\t\t\tjQuery( selector ) :\n
Action.c(5):     \t\t\t\tselector || [],\n
Action.c(5):     \t\t\tfalse\n
Action.c(5):     \t\t).length;\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Initialize a jQuery object\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // A central reference to the root jQuery(document)\n
Action.c(5):     var rootjQuery,\n
Action.c(5):     \n
Action.c(5):     \t// Use the correct document accordingly with window argument (sandbox)\n
Action.c(5):     \tdocument = window.document,\n
Action.c(5):     \n
Action.c(5):     \t// A simple way to check for HTML strings\n
Action.c(5):     \t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n
Action.c(5):     \t// Strict HTML recognition (#11290: must start with <)\n
Action.c(5):     \trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n
Action.c(5):     \n
Action.c(5):     \tinit = jQuery.fn.init = function( selector, context ) {\n
Action.c(5):     \t\tvar match, elem;\n
Action.c(5):     \n
Action.c(5):     \t\t// HANDLE: $(""), $(null), $(undefined), $(false)\n
Action.c(5):     \t\tif ( !selector ) {\n
Action.c(5):     \t\t\treturn this;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Handle HTML strings\n
Action.c(5):     \t\tif ( typeof selector === "string" ) {\n
Action.c(5):     \t\t\tif ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" &&
Action.c(5):      selector.length >= 3 ) {\n
Action.c(5):     \t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex chec
Action.c(5):     k\n
Action.c(5):     \t\t\t\tmatch = [ null, selector, null ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tmatch = rquickExpr.exec( selector );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Match html or make sure no context is specified for #id\n
Action.c(5):     \t\t\tif ( match && (match[1] || !context) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// HANDLE: $(html) -> $(array)\n
Action.c(5):     \t\t\t\tif ( match[1] ) {\n
Action.c(5):     \t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// scripts is true for back-compat\n
Action.c(5):     \t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n
Action.c(5):     \t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n
Action.c(5):     \t\t\t\t\t\tmatch[1],\n
Action.c(5):     \t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n
Action.c(5):     \t\t\t\t\t\ttrue\n
Action.c(5):     \t\t\t\t\t) );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// HANDLE: $(html, props)\n
Action.c(5):     \t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n
Action.c(5):     \t\t\t\t\t\tfor ( match in context ) {\n
Action.c(5):     \t\t\t\t\t\t\t// Properties of context are called as methods if possible\n
Action.c(5):     \t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// ...and otherwise set as attributes\n
Action.c(5):     \t\t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// HANDLE: $(#id)\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\telem = document.getElementById( match[2] );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n
Action.c(5):     \t\t\t\t\t// nodes that are no longer in the document #6963\n
Action.c(5):     \t\t\t\t\tif ( elem && elem.parentNode ) {\n
Action.c(5):     \t\t\t\t\t\t// Handle the case where IE and Opera return items\n
Action.c(5):     \t\t\t\t\t\t// by name instead of ID\n
Action.c(5):     \t\t\t\t\t\tif ( elem.id !== match[2] ) {\n
Action.c(5):     \t\t\t\t\t\t\treturn rootjQuery.find( selector );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n
Action.c(5):     \t\t\t\t\t\tthis.length = 1;\n
Action.c(5):     \t\t\t\t\t\tthis[0] = elem;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tthis.context = document;\n
Action.c(5):     \t\t\t\t\tthis.selector = selector;\n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// HANDLE: $(expr, $(...))\n
Action.c(5):     \t\t\t} else if ( !context || context.jquery ) {\n
Action.c(5):     \t\t\t\treturn ( context || rootjQuery ).find( selector );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// HANDLE: $(expr, context)\n
Action.c(5):     \t\t\t// (which is just equivalent to: $(context).find(expr)\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\treturn this.constructor( context ).find( selector );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// HANDLE: $(DOMElement)\n
Action.c(5):     \t\t} else if ( selector.nodeType ) {\n
Action.c(5):     \t\t\tthis.context = this[0] = selector;\n
Action.c(5):     \t\t\tthis.length = 1;\n
Action.c(5):     \t\t\treturn this;\n
Action.c(5):     \n
Action.c(5):     \t\t// HANDLE: $(function)\n
Action.c(5):     \t\t// Shortcut for document ready\n
Action.c(5):     \t\t} else if ( jQuery.isFunction( selector ) ) {\n
Action.c(5):     \t\t\treturn typeof rootjQuery.ready !== "undefined" ?\n
Action.c(5):     \t\t\t\trootjQuery.ready( selector ) :\n
Action.c(5):     \t\t\t\t// Execute immediately if ready is not present\n
Action.c(5):     \t\t\t\tselector( jQuery );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( selector.selector !== undefined ) {\n
Action.c(5):     \t\t\tthis.selector = selector.selector;\n
Action.c(5):     \t\t\tthis.context = selector.context;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn jQuery.makeArray( selector, this );\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     // Give the init function the jQuery prototype for later instantiation\n
Action.c(5):     init.prototype = jQuery.fn;\n
Action.c(5):     \n
Action.c(5):     // Initialize central reference\n
Action.c(5):     rootjQuery = jQuery( document );\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n
Action.c(5):     \t// methods guaranteed to produce a unique set when starting from a unique set\n
Action.c(5):     \tguaranteedUnique = {\n
Action.c(5):     \t\tchildren: true,\n
Action.c(5):     \t\tcontents: true,\n
Action.c(5):     \t\tnext: true,\n
Action.c(5):     \t\tprev: true\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \tdir: function( elem, dir, until ) {\n
Action.c(5):     \t\tvar matched = [],\n
Action.c(5):     \t\t\tcur = elem[ dir ];\n
Action.c(5):     \n
Action.c(5):     \t\twhile ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQ
Action.c(5):     uery( cur ).is( until )) ) {\n
Action.c(5):     \t\t\tif ( cur.nodeType === 1 ) {\n
Action.c(5):     \t\t\t\tmatched.push( cur );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tcur = cur[dir];\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn matched;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tsibling: function( n, elem ) {\n
Action.c(5):     \t\tvar r = [];\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( ; n; n = n.nextSibling ) {\n
Action.c(5):     \t\t\tif ( n.nodeType === 1 && n !== elem ) {\n
Action.c(5):     \t\t\t\tr.push( n );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn r;\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \thas: function( target ) {\n
Action.c(5):     \t\tvar i,\n
Action.c(5):     \t\t\ttargets = jQuery( target, this ),\n
Action.c(5):     \t\t\tlen = targets.length;\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.filter(function() {\n
Action.c(5):     \t\t\tfor ( i = 0; i < len; i++ ) {\n
Action.c(5):     \t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n
Action.c(5):     \t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tclosest: function( selectors, context ) {\n
Action.c(5):     \t\tvar cur,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tl = this.length,\n
Action.c(5):     \t\t\tmatched = [],\n
Action.c(5):     \t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?\n
Action.c(5):     \t\t\t\tjQuery( selectors, context || this.context ) :\n
Action.c(5):     \t\t\t\t0;\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( ; i < l; i++ ) {\n
Action.c(5):     \t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n
Action.c(5):     \t\t\t\t// Always skip document fragments\n
Action.c(5):     \t\t\t\tif ( cur.nodeType < 11 && (pos ?\n
Action.c(5):     \t\t\t\t\tpos.index(cur) > -1 :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Don't pass non-elements to Sizzle\n
Action.c(5):     \t\t\t\t\tcur.nodeType === 1 &&\n
Action.c(5):     \t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tmatched.push( cur );\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Determine the position of an element within\n
Action.c(5):     \t// the matched set of elements\n
Action.c(5):     \tindex: function( elem ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// No argument, return index in parent\n
Action.c(5):     \t\tif ( !elem ) {\n
Action.c(5):     \t\t\treturn ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// index in selector\n
Action.c(5):     \t\tif ( typeof elem === "string" ) {\n
Action.c(5):     \t\t\treturn jQuery.inArray( this[0], jQuery( elem ) );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Locate the position of the desired element\n
Action.c(5):     \t\treturn jQuery.inArray(\n
Action.c(5):     \t\t\t// If it receives a jQuery object, the first element is used\n
Action.c(5):     \t\t\telem.jquery ? elem[0] : elem, this );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tadd: function( selector, context ) {\n
Action.c(5):     \t\treturn this.pushStack(\n
Action.c(5):     \t\t\tjQuery.unique(\n
Action.c(5):     \t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n
Action.c(5):     \t\t\t)\n
Action.c(5):     \t\t);\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \taddBack: function( selector ) {\n
Action.c(5):     \t\treturn this.add( selector == null ?\n
Action.c(5):     \t\t\tthis.prevObject : this.prevObject.filter(selector)\n
Action.c(5):     \t\t);\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     function sibling( cur, dir ) {\n
Action.c(5):     \tdo {\n
Action.c(5):     \t\tcur = cur[ dir ];\n
Action.c(5):     \t} while ( cur && cur.nodeType !== 1 );\n
Action.c(5):     \n
Action.c(5):     \treturn cur;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.each({\n
Action.c(5):     \tparent: function( elem ) {\n
Action.c(5):     \t\tvar parent = elem.parentNode;\n
Action.c(5):     \t\treturn parent && parent.nodeType !== 11 ? parent : null;\n
Action.c(5):     \t},\n
Action.c(5):     \tparents: function( elem ) {\n
Action.c(5):     \t\treturn jQuery.dir( elem, "parentNode" );\n
Action.c(5):     \t},\n
Action.c(5):     \tparentsUntil: function( elem, i, until ) {\n
Action.c(5):     \t\treturn jQuery.dir( elem, "parentNode", until );\n
Action.c(5):     \t},\n
Action.c(5):     \tnext: function( elem ) {\n
Action.c(5):     \t\treturn sibling( elem, "nextSibling" );\n
Action.c(5):     \t},\n
Action.c(5):     \tprev: function( elem ) {\n
Action.c(5):     \t\treturn sibling( elem, "previousSibling" );\n
Action.c(5):     \t},\n
Action.c(5):     \tnextAll: function( elem ) {\n
Action.c(5):     \t\treturn jQuery.dir( elem, "nextSibling" );\n
Action.c(5):     \t},\n
Action.c(5):     \tprevAll: function( elem ) {\n
Action.c(5):     \t\treturn jQuery.dir( elem, "previousSibling" );\n
Action.c(5):     \t},\n
Action.c(5):     \tnextUntil: function( elem, i, until ) {\n
Action.c(5):     \t\treturn jQuery.dir( elem, "nextSibling", until );\n
Action.c(5):     \t},\n
Action.c(5):     \tprev
Action.c(5): t=213983ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5): t=213983ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     Until: function( elem, i, until ) {\n
Action.c(5):     \t\treturn jQuery.dir( elem, "previousSibling", until );\n
Action.c(5):     \t},\n
Action.c(5):     \tsiblings: function( elem ) {\n
Action.c(5):     \t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n
Action.c(5):     \t},\n
Action.c(5):     \tchildren: function( elem ) {\n
Action.c(5):     \t\treturn jQuery.sibling( elem.firstChild );\n
Action.c(5):     \t},\n
Action.c(5):     \tcontents: function( elem ) {\n
Action.c(5):     \t\treturn jQuery.nodeName( elem, "iframe" ) ?\n
Action.c(5):     \t\t\telem.contentDocument || elem.contentWindow.document :\n
Action.c(5):     \t\t\tjQuery.merge( [], elem.childNodes );\n
Action.c(5):     \t}\n
Action.c(5):     }, function( name, fn ) {\n
Action.c(5):     \tjQuery.fn[ name ] = function( until, selector ) {\n
Action.c(5):     \t\tvar ret = jQuery.map( this, fn, until );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( name.slice( -5 ) !== "Until" ) {\n
Action.c(5):     \t\t\tselector = until;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( selector && typeof selector === "string" ) {\n
Action.c(5):     \t\t\tret = jQuery.filter( selector, ret );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( this.length > 1 ) {\n
Action.c(5):     \t\t\t// Remove duplicates\n
Action.c(5):     \t\t\tif ( !guaranteedUnique[ name ] ) {\n
Action.c(5):     \t\t\t\tret = jQuery.unique( ret );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Reverse order for parents* and prev-derivatives\n
Action.c(5):     \t\t\tif ( rparentsprev.test( name ) ) {\n
Action.c(5):     \t\t\t\tret = ret.reverse();\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.pushStack( ret );\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     var rnotwhite = (/\\S+/g);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // String to Object options format cache\n
Action.c(5):     var optionsCache = {};\n
Action.c(5):     \n
Action.c(5):     // Convert String-formatted options into Object-formatted ones and store in cache\n
Action.c(5):     function createOptions( options ) {\n
Action.c(5):     \tvar object = optionsCache[ options ] = {};\n
Action.c(5):     \tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n
Action.c(5):     \t\tobject[ flag ] = true;\n
Action.c(5):     \t});\n
Action.c(5):     \treturn object;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /*\n
Action.c(5):      * Create a callback list using the following parameters:\n
Action.c(5):      *\n
Action.c(5):      *\toptions: an optional list of space-separated options that will change how\n
Action.c(5):      *\t\t\tthe callback list behaves or a more traditional option object\n
Action.c(5):      *\n
Action.c(5):      * By default a callback list will act like an event callback list and can be\n
Action.c(5):      * "fired" multiple times.\n
Action.c(5):      *\n
Action.c(5):      * Possible options:\n
Action.c(5):      *\n
Action.c(5):      *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n
Action.c(5):      *\n
Action.c(5):      *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n
Action.c(5):      *\t\t\t\t\tafter the list has been fired right away with the latest "memorized"\n
Action.c(5):      *\t\t\t\t\tvalues (like a Deferred)\n
Action.c(5):      *\n
Action.c(5):      *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n
Action.c(5):      *\n
Action.c(5):      *\tstopOnFalse:\tinterrupt callings when a callback returns false\n
Action.c(5):      *\n
Action.c(5):      */\n
Action.c(5):     jQuery.Callbacks = function( options ) {\n
Action.c(5):     \n
Action.c(5):     \t// Convert options from String-formatted to Object-formatted if needed\n
Action.c(5):     \t// (we check in cache first)\n
Action.c(5):     \toptions = typeof options === "string" ?\n
Action.c(5):     \t\t( optionsCache[ options ] || createOptions( options ) ) :\n
Action.c(5):     \t\tjQuery.extend( {}, options );\n
Action.c(5):     \n
Action.c(5):     \tvar // Flag to know if list is currently firing\n
Action.c(5):     \t\tfiring,\n
Action.c(5):     \t\t// Last fire value (for non-forgettable lists)\n
Action.c(5):     \t\tmemory,\n
Action.c(5):     \t\t// Flag to know if list was already fired\n
Action.c(5):     \t\tfired,\n
Action.c(5):     \t\t// End of the loop when firing\n
Action.c(5):     \t\tfiringLength,\n
Action.c(5):     \t\t// Index of currently firing callback (modified by remove if needed)\n
Action.c(5):     \t\tfiringIndex,\n
Action.c(5):     \t\t// First callback to fire (used internally by add and fireWith)\n
Action.c(5):     \t\tfiringStart,\n
Action.c(5):     \t\t// Actual callback list\n
Action.c(5):     \t\tlist = [],\n
Action.c(5):     \t\t// Stack of fire calls for repeatable lists\n
Action.c(5):     \t\tstack = !options.once && [],\n
Action.c(5):     \t\t// Fire callbacks\n
Action.c(5):     \t\tfire = function( data ) {\n
Action.c(5):     \t\t\tmemory = options.memory && data;\n
Action.c(5):     \t\t\tfired = true;\n
Action.c(5):     \t\t\tfiringIndex = firingStart || 0;\n
Action.c(5):     \t\t\tfiringStart = 0;\n
Action.c(5):     \t\t\tfiringLength = list.length;\n
Action.c(5):     \t\t\tfiring = true;\n
Action.c(5):     \t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n
Action.c(5):     \t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOn
Action.c(5):     False ) {\n
Action.c(5):     \t\t\t\t\tmemory = false; // To prevent further calls using add\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tfiring = false;\n
Action.c(5):     \t\t\tif ( list ) {\n
Action.c(5):     \t\t\t\tif ( stack ) {\n
Action.c(5):     \t\t\t\t\tif ( stack.length ) {\n
Action.c(5):     \t\t\t\t\t\tfire( stack.shift() );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t} else if ( memory ) {\n
Action.c(5):     \t\t\t\t\tlist = [];\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tself.disable();\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t// Actual Callbacks object\n
Action.c(5):     \t\tself = {\n
Action.c(5):     \t\t\t// Add a callback or a collection of callbacks to the list\n
Action.c(5):     \t\t\tadd: function() {\n
Action.c(5):     \t\t\t\tif ( list ) {\n
Action.c(5):     \t\t\t\t\t// First, we save the current length\n
Action.c(5):     \t\t\t\t\tvar start = list.length;\n
Action.c(5):     \t\t\t\t\t(function add( args ) {\n
Action.c(5):     \t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n
Action.c(5):     \t\t\t\t\t\t\tvar type = jQuery.type( arg );\n
Action.c(5):     \t\t\t\t\t\t\tif ( type === "function" ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tlist.push( arg );\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t} else if ( arg && arg.length && type !== "string" ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t// Inspect recursively\n
Action.c(5):     \t\t\t\t\t\t\t\tadd( arg );\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t});\n
Action.c(5):     \t\t\t\t\t})( arguments );\n
Action.c(5):     \t\t\t\t\t// Do we need to add the callbacks to the\n
Action.c(5):     \t\t\t\t\t// current firing batch?\n
Action.c(5):     \t\t\t\t\tif ( firing ) {\n
Action.c(5):     \t\t\t\t\t\tfiringLength = list.length;\n
Action.c(5):     \t\t\t\t\t// With memory, if we're not firing then\n
Action.c(5):     \t\t\t\t\t// we should call right away\n
Action.c(5):     \t\t\t\t\t} else if ( memory ) {\n
Action.c(5):     \t\t\t\t\t\tfiringStart = start;\n
Action.c(5):     \t\t\t\t\t\tfire( memory );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Remove a callback from the list\n
Action.c(5):     \t\t\tremove: function() {\n
Action.c(5):     \t\t\t\tif ( list ) {\n
Action.c(5):     \t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n
Action.c(5):     \t\t\t\t\t\tvar index;\n
Action.c(5):     \t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n
Action.c(5):     \t\t\t\t\t\t\tlist.splice( index, 1 );\n
Action.c(5):     \t\t\t\t\t\t\t// Handle firing indexes\n
Action.c(5):     \t\t\t\t\t\t\tif ( firing ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tfiringLength--;\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tfiringIndex--;\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t});\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Check if a given callback is in the list.\n
Action.c(5):     \t\t\t// If no argument is given, return whether or not list has callbacks attached.\n
Action.c(5):     \t\t\thas: function( fn ) {\n
Action.c(5):     \t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Remove all callbacks from the list\n
Action.c(5):     \t\t\tempty: function() {\n
Action.c(5):     \t\t\t\tlist = [];\n
Action.c(5):     \t\t\t\tfiringLength = 0;\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Have the list do nothing anymore\n
Action.c(5):     \t\t\tdisable: function() {\n
Action.c(5):     \t\t\t\tlist = stack = memory = undefined;\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Is it disabled?\n
Action.c(5):     \t\t\tdisabled: function() {\n
Action.c(5):     \t\t\t\treturn !list;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Lock the list in its current state\n
Action.c(5):     \t\t\tlock: function() {\n
Action.c(5):     \t\t\t\tstack = undefined;\n
Action.c(5):     \t\t\t\tif ( !memory ) {\n
Action.c(5):     \t\t\t\t\tself.disable();\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Is it locked?\n
Action.c(5):     \t\t\tlocked: function() {\n
Action.c(5):     \t\t\t\treturn !stack;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Call all callbacks with the given context and arguments\n
Action.c(5):     \t\t\tfireWith: function( context, args ) {\n
Action.c(5):     \t\t\t\tif ( list && ( !fired || stack ) ) {\n
Action.c(5):     \t\t\t\t\targs = args || [];\n
Action.c(5):     \t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n
Action.c(5):     \t\t\t\t\tif ( firing ) {\n
Action.c(5):     \t\t\t\t\t\tstack.push( args );\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\tfire( args );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// Call all the callbacks with the given arguments\n
Action.c(5):     \t\t\tfire: function() {\n
Action.c(5):     \t\t\t\tself.fireWith( this, arguments );\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\t// To know if the callbacks have already been called at least once\n
Action.c(5):     \t\t\tfired: function() {\n
Action.c(5):     \t\t\t\treturn !!fired;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \treturn self;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \n
Action.c(5):     \tDeferred: function( func ) {\n
Action.c(5):     \t\tvar tuples = [\n
Action.c(5):     \t\t\t\t// action, add listener, listener list, final state\n
Action.c(5):     \t\t\t\t[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],\n
Action.c(5):     \t\t\t\t[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],\n
Action.c(5):     \t\t\t\t[ "notify", "progress", jQuery.Callbacks("memory") ]\n
Action.c(5):     \t\t\t],\n
Action.c(5):     \t\t\tstate = "pending",\n
Action.c(5):     \t\t\tpromise = {\n
Action.c(5):     \t\t\t\tstate: function() {\n
Action.c(5):     \t\t\t\t\treturn state;\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \t\t\t\talways: function() {\n
Action.c(5):     \t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n
Action.c(5):     \t\t\t\t\tvar fns = arguments;\n
Action.c(5):     \t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n
Action.c(5):     \t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n
Action.c(5):     \t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n
Action.c(5):     \t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n
Action.c(5):     \t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n
Action.c(5):     \t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\treturned.promise()\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n
Action.c(5):     \t\t\t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() :
Action.c(5):      this, fn ? [ returned ] : arguments );\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t});\n
Action.c(5):     \t\t\t\t\t\t});\n
Action.c(5):     \t\t\t\t\t\tfns = null;\n
Action.c(5):     \t\t\t\t\t}).promise();\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \t\t\t\t// Get a promise for this deferred\n
Action.c(5):     \t\t\t\t// If obj is provided, the promise aspect is added to the object\n
Action.c(5):     \t\t\t\tpromise: function( obj ) {\n
Action.c(5):     \t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\tdeferred = {};\n
Action.c(5):     \n
Action.c(5):     \t\t// Keep pipe for back-compat\n
Action.c(5):     \t\tpromise.pipe = promise.then;\n
Action.c(5):     \n
Action.c(5):     \t\t// Add list-specific methods\n
Action.c(5):     \t\tjQuery.each( tuples, function( i, tuple ) {\n
Action.c(5):     \t\t\tvar list = tuple[ 2 ],\n
Action.c(5):     \t\t\t\tstateString = tuple[ 3 ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t// promise[ done | fail | progress ] = list.add\n
Action.c(5):     \t\t\tpromise[ tuple[1] ] = list.add;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Handle state\n
Action.c(5):     \t\t\tif ( stateString ) {\n
Action.c(5):     \t\t\t\tlist.add(function() {\n
Action.c(5):     \t\t\t\t\t// state = [ resolved | rejected ]\n
Action.c(5):     \t\t\t\t\tstate = stateString;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n
Action.c(5):     \t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// deferred[ resolve | reject | notify ]\n
Action.c(5):     \t\t\tdeferred[ tuple[0] ] = function() {\n
Action.c(5):     \t\t\t\tdeferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t\tdeferred[ tuple[0] + "With" ] = list.fireWith;\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\t// Make the deferred a promise\n
Action.c(5):     \t\tpromise.promise( deferred );\n
Action.c(5):     \n
Action.c(5):     \t\t// Call given func if any\n
Action.c(5):     \t\tif ( func ) {\n
Action.c(5):     \t\t\tfunc.call( deferred, deferred );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// All done!\n
Action.c(5):     \t\treturn deferred;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Deferred helper\n
Action.c(5):     \twhen: function( subordinate /* , ..., subordinateN */ ) {\n
Action.c(5):     \t\tvar i = 0,\n
Action.c(5):     \t\t\tresolveValues = slice.call( arguments ),\n
Action.c(5):     \t\t\tlength = resolveValues.length,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// the count of uncompleted subordinates\n
Action.c(5):     \t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise 
Action.c(5):     ) ) ? length : 0,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use
Action.c(5):      that.\n
Action.c(5):     \t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Update function for both resolve and progress values\n
Action.c(5):     \t\t\tupdateFunc = function( i, contexts, values ) {\n
Action.c(5):     \t\t\t\treturn function( value ) {\n
Action.c(5):     \t\t\t\t\tcontexts[ i ] = this;\n
Action.c(5):     \t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n
Action.c(5):     \t\t\t\t\tif ( values === progressValues ) {\n
Action.c(5):     \t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t} else if ( !(--remaining) ) {\n
Action.c(5):     \t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\tprogressValues, progressContexts, resolveContexts;\n
Action.c(5):     \n
Action.c(5):     \t\t// add listeners to Deferred subordinates; treat others as resolved\n
Action.c(5):     \t\tif ( length > 1 ) {\n
Action.c(5):     \t\t\tprogressValues = new Array( length );\n
Action.c(5):     \t\t\tprogressContexts = new Array( length );\n
Action.c(5):     \t\t\tresolveContexts = new Array( length );\n
Action.c(5):     \t\t\tfor ( ; i < length; i++ ) {\n
Action.c(5):     \t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n
Action.c(5):     \t\t\t\t\tresolveValues[ i ].promise()\n
Action.c(5):     \t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n
Action.c(5):     \t\t\t\t\t\t.fail( deferred.reject )\n
Action.c(5):     \t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t--remaining;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// if we're not waiting on anything, resolve the master\n
Action.c(5):     \t\tif ( !remaining ) {\n
Action.c(5):     \t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn deferred.promise();\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // The deferred used on DOM ready\n
Action.c(5):     var readyList;\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.ready = function( fn ) {\n
Action.c(5):     \t// Add the callback\n
Action.c(5):     \tjQuery.ready.promise().done( fn );\n
Action.c(5):     \n
Action.c(5):     \treturn this;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \t// Is the DOM ready to be used? Set to true once it occurs.\n
Action.c(5):     \tisReady: false,\n
Action.c(5):     \n
Action.c(5):     \t// A counter to track how many items to wait for before\n
Action.c(5):     \t// the ready event fires. See #6781\n
Action.c(5):     \treadyWait: 1,\n
Action.c(5):     \n
Action.c(5):     \t// Hold (or release) the ready event\n
Action.c(5):     \tholdReady: function( hold ) {\n
Action.c(5):     \t\tif ( hold ) {\n
Action.c(5):     \t\t\tjQuery.readyWait++;\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tjQuery.ready( true );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Handle when the DOM is ready\n
Action.c(5):     \tready: function( wait ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Abort if there are pending holds or we're already ready\n
Action.c(5):     \t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443
Action.c(5):     ).\n
Action.c(5):     \t\tif ( !document.body ) {\n
Action.c(5):     \t\t\treturn setTimeout( jQuery.ready );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Remember that the DOM is ready\n
Action.c(5):     \t\tjQuery.isReady = true;\n
Action.c(5):     \n
Action.c(5):     \t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n
Action.c(5):     \t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// If there are functions bound, to execute\n
Action.c(5):     \t\treadyList.resolveWith( document, [ jQuery ] );\n
Action.c(5):     \n
Action.c(5):     \t\t// Trigger any bound ready events\n
Action.c(5):     \t\tif ( jQuery.fn.trigger ) {\n
Action.c(5):     \t\t\tjQuery( document ).trigger("ready").off("ready");\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Clean-up method for dom ready events\n
Action.c(5):      */\n
Action.c(5):     function detach() {\n
Action.c(5):     \tif ( document.addEventListener ) {\n
Action.c(5):     \t\tdocument.removeEventListener( "DOMContentLoaded", completed, false );\n
Action.c(5):     \t\twindow.removeEvent
Action.c(5): t=213987ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     Listener( "load", completed, false );\n
Action.c(5):     \n
Action.c(5):     \t} else {\n
Action.c(5):     \t\tdocument.detachEvent( "onreadystatechange", completed );\n
Action.c(5):     \t\twindow.detachEvent( "onload", completed );\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * The ready event handler and self cleanup method\n
Action.c(5):      */\n
Action.c(5):     function completed() {\n
Action.c(5):     \t// readyState === "complete" is good enough for us to call the dom ready in oldIE\n
Action.c(5):     \tif ( document.addEventListener || event.type === "load" || document.readyState === "comp
Action.c(5):     lete" ) {\n
Action.c(5):     \t\tdetach();\n
Action.c(5):     \t\tjQuery.ready();\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.ready.promise = function( obj ) {\n
Action.c(5):     \tif ( !readyList ) {\n
Action.c(5):     \n
Action.c(5):     \t\treadyList = jQuery.Deferred();\n
Action.c(5):     \n
Action.c(5):     \t\t// Catch cases where $(document).ready() is called after the browser event has already
Action.c(5):      occurred.\n
Action.c(5):     \t\t// we once tried to use readyState "interactive" here, but it caused issues like the o
Action.c(5):     ne\n
Action.c(5):     \t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n
Action.c(5):     \t\tif ( document.readyState === "complete" ) {\n
Action.c(5):     \t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n
Action.c(5):     \t\t\tsetTimeout( jQuery.ready );\n
Action.c(5):     \n
Action.c(5):     \t\t// Standards-based browsers support DOMContentLoaded\n
Action.c(5):     \t\t} else if ( document.addEventListener ) {\n
Action.c(5):     \t\t\t// Use the handy event callback\n
Action.c(5):     \t\t\tdocument.addEventListener( "DOMContentLoaded", completed, false );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// A fallback to window.onload, that will always work\n
Action.c(5):     \t\t\twindow.addEventListener( "load", completed, false );\n
Action.c(5):     \n
Action.c(5):     \t\t// If IE event model is used\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t// Ensure firing before onload, maybe late but safe also for iframes\n
Action.c(5):     \t\t\tdocument.attachEvent( "onreadystatechange", completed );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// A fallback to window.onload, that will always work\n
Action.c(5):     \t\t\twindow.attachEvent( "onload", completed );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If IE and not a frame\n
Action.c(5):     \t\t\t// continually check to see if the document is ready\n
Action.c(5):     \t\t\tvar top = false;\n
Action.c(5):     \n
Action.c(5):     \t\t\ttry {\n
Action.c(5):     \t\t\t\ttop = window.frameElement == null && document.documentElement;\n
Action.c(5):     \t\t\t} catch(e) {}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( top && top.doScroll ) {\n
Action.c(5):     \t\t\t\t(function doScrollCheck() {\n
Action.c(5):     \t\t\t\t\tif ( !jQuery.isReady ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\t\t\t// Use the trick by Diego Perini\n
Action.c(5):     \t\t\t\t\t\t\t// http://javascript.nwbox.com/IEContentLoaded/\n
Action.c(5):     \t\t\t\t\t\t\ttop.doScroll("left");\n
Action.c(5):     \t\t\t\t\t\t} catch(e) {\n
Action.c(5):     \t\t\t\t\t\t\treturn setTimeout( doScrollCheck, 50 );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// detach all dom ready events\n
Action.c(5):     \t\t\t\t\t\tdetach();\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// and execute any waiting functions\n
Action.c(5):     \t\t\t\t\t\tjQuery.ready();\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t})();\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \treturn readyList.promise( obj );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var strundefined = typeof undefined;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Support: IE<9\n
Action.c(5):     // Iteration over object's inherited properties before its own\n
Action.c(5):     var i;\n
Action.c(5):     for ( i in jQuery( support ) ) {\n
Action.c(5):     \tbreak;\n
Action.c(5):     }\n
Action.c(5):     support.ownLast = i !== "0";\n
Action.c(5):     \n
Action.c(5):     // Note: most support tests are defined in their respective modules.\n
Action.c(5):     // false until the test is run\n
Action.c(5):     support.inlineBlockNeedsLayout = false;\n
Action.c(5):     \n
Action.c(5):     jQuery(function() {\n
Action.c(5):     \t// We need to execute this one support test ASAP because we need to know\n
Action.c(5):     \t// if body.style.zoom needs to be set.\n
Action.c(5):     \n
Action.c(5):     \tvar container, div,\n
Action.c(5):     \t\tbody = document.getElementsByTagName("body")[0];\n
Action.c(5):     \n
Action.c(5):     \tif ( !body ) {\n
Action.c(5):     \t\t// Return for frameset docs that don't have a body\n
Action.c(5):     \t\treturn;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Setup\n
Action.c(5):     \tcontainer = document.createElement( "div" );\n
Action.c(5):     \tcontainer.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999p
Action.c(5):     x;margin-top:1px";\n
Action.c(5):     \n
Action.c(5):     \tdiv = document.createElement( "div" );\n
Action.c(5):     \tbody.appendChild( container ).appendChild( div );\n
Action.c(5):     \n
Action.c(5):     \tif ( typeof div.style.zoom !== strundefined ) {\n
Action.c(5):     \t\t// Support: IE<8\n
Action.c(5):     \t\t// Check if natively block-level elements act like inline-block\n
Action.c(5):     \t\t// elements when setting their display to 'inline' and giving\n
Action.c(5):     \t\t// them layout\n
Action.c(5):     \t\tdiv.style.cssText = "border:0;margin:0;width:1px;padding:1px;display:inline;zoom:1";\n
Action.c(5):     \n
Action.c(5):     \t\tif ( (support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 )) ) {\n
Action.c(5):     \t\t\t// Prevent IE 6 from affecting layout for positioned elements #11048\n
Action.c(5):     \t\t\t// Prevent IE from shrinking the body in IE 7 mode #12869\n
Action.c(5):     \t\t\t// Support: IE<8\n
Action.c(5):     \t\t\tbody.style.zoom = 1;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tbody.removeChild( container );\n
Action.c(5):     \n
Action.c(5):     \t// Null elements to avoid leaks in IE\n
Action.c(5):     \tcontainer = div = null;\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     (function() {\n
Action.c(5):     \tvar div = document.createElement( "div" );\n
Action.c(5):     \n
Action.c(5):     \t// Execute the test only if not already executed in another module.\n
Action.c(5):     \tif (support.deleteExpando == null) {\n
Action.c(5):     \t\t// Support: IE<9\n
Action.c(5):     \t\tsupport.deleteExpando = true;\n
Action.c(5):     \t\ttry {\n
Action.c(5):     \t\t\tdelete div.test;\n
Action.c(5):     \t\t} catch( e ) {\n
Action.c(5):     \t\t\tsupport.deleteExpando = false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Null elements to avoid leaks in IE.\n
Action.c(5):     \tdiv = null;\n
Action.c(5):     })();\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Determines whether an object can have data\n
Action.c(5):      */\n
Action.c(5):     jQuery.acceptData = function( elem ) {\n
Action.c(5):     \tvar noData = jQuery.noData[ (elem.nodeName + " ").toLowerCase() ],\n
Action.c(5):     \t\tnodeType = +elem.nodeType || 1;\n
Action.c(5):     \n
Action.c(5):     \t// Do not set data on non-element DOM nodes because it will not be cleared (#8335).\n
Action.c(5):     \treturn nodeType !== 1 && nodeType !== 9 ?\n
Action.c(5):     \t\tfalse :\n
Action.c(5):     \n
Action.c(5):     \t\t// Nodes accept data unless otherwise specified; rejection can be conditional\n
Action.c(5):     \t\t!noData || noData !== true && elem.getAttribute("classid") === noData;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n
Action.c(5):     \trmultiDash = /([A-Z])/g;\n
Action.c(5):     \n
Action.c(5):     function dataAttr( elem, key, data ) {\n
Action.c(5):     \t// If nothing was found internally, try to fetch any\n
Action.c(5):     \t// data from the HTML5 data-* attribute\n
Action.c(5):     \tif ( data === undefined && elem.nodeType === 1 ) {\n
Action.c(5):     \n
Action.c(5):     \t\tvar name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();\n
Action.c(5):     \n
Action.c(5):     \t\tdata = elem.getAttribute( name );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof data === "string" ) {\n
Action.c(5):     \t\t\ttry {\n
Action.c(5):     \t\t\t\tdata = data === "true" ? true :\n
Action.c(5):     \t\t\t\t\tdata === "false" ? false :\n
Action.c(5):     \t\t\t\t\tdata === "null" ? null :\n
Action.c(5):     \t\t\t\t\t// Only convert to a number if it doesn't change the string\n
Action.c(5):     \t\t\t\t\t+data + "" === data ? +data :\n
Action.c(5):     \t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n
Action.c(5):     \t\t\t\t\tdata;\n
Action.c(5):     \t\t\t} catch( e ) {}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Make sure we set the data so it isn't changed later\n
Action.c(5):     \t\t\tjQuery.data( elem, key, data );\n
Action.c(5):     \n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tdata = undefined;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn data;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // checks a cache object for emptiness\n
Action.c(5):     function isEmptyDataObject( obj ) {\n
Action.c(5):     \tvar name;\n
Action.c(5):     \tfor ( name in obj ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// if the public data object is empty, the private is still empty\n
Action.c(5):     \t\tif ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {\n
Action.c(5):     \t\t\tcontinue;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( name !== "toJSON" ) {\n
Action.c(5):     \t\t\treturn false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn true;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function internalData( elem, name, data, pvt /* Internal Use Only */ ) {\n
Action.c(5):     \tif ( !jQuery.acceptData( elem ) ) {\n
Action.c(5):     \t\treturn;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tvar ret, thisCache,\n
Action.c(5):     \t\tinternalKey = jQuery.expando,\n
Action.c(5):     \n
Action.c(5):     \t\t// We have to handle DOM nodes and JS objects differently because IE6-7\n
Action.c(5):     \t\t// can't GC object references properly across the DOM-JS boundary\n
Action.c(5):     \t\tisNode = elem.nodeType,\n
Action.c(5):     \n
Action.c(5):     \t\t// Only DOM nodes need the global jQuery cache; JS object data is\n
Action.c(5):     \t\t// attached directly to the object so GC can occur automatically\n
Action.c(5):     \t\tcache = isNode ? jQuery.cache : elem,\n
Action.c(5):     \n
Action.c(5):     \t\t// Only defining an ID for JS objects if its cache already exists allows\n
Action.c(5):     \t\t// the code to shortcut on the same path as a DOM node with no cache\n
Action.c(5):     \t\tid = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;\n
Action.c(5):     \n
Action.c(5):     \t// Avoid doing any more work than we need to when trying to get data on an\n
Action.c(5):     \t// object that has no data at all\n
Action.c(5):     \tif ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof na
Action.c(5):     me === "string" ) {\n
Action.c(5):     \t\treturn;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( !id ) {\n
Action.c(5):     \t\t// Only DOM nodes need a new unique ID for each element since their data\n
Action.c(5):     \t\t// ends up in the global cache\n
Action.c(5):     \t\tif ( isNode ) {\n
Action.c(5):     \t\t\tid = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tid = internalKey;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( !cache[ id ] ) {\n
Action.c(5):     \t\t// Avoid exposing jQuery metadata on plain JS objects when the object\n
Action.c(5):     \t\t// is serialized using JSON.stringify\n
Action.c(5):     \t\tcache[ id ] = isNode ? {} : { toJSON: jQuery.noop };\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// An object can be passed to jQuery.data instead of a key/value pair; this gets\n
Action.c(5):     \t// shallow copied over onto the existing cache\n
Action.c(5):     \tif ( typeof name === "object" || typeof name === "function" ) {\n
Action.c(5):     \t\tif ( pvt ) {\n
Action.c(5):     \t\t\tcache[ id ] = jQuery.extend( cache[ id ], name );\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tcache[ id ].data = jQuery.extend( cache[ id ].data, name );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tthisCache = cache[ id ];\n
Action.c(5):     \n
Action.c(5):     \t// jQuery data() is stored in a separate object inside the object's internal data\n
Action.c(5):     \t// cache in order to avoid key collisions between internal data and user-defined\n
Action.c(5):     \t// data.\n
Action.c(5):     \tif ( !pvt ) {\n
Action.c(5):     \t\tif ( !thisCache.data ) {\n
Action.c(5):     \t\t\tthisCache.data = {};\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tthisCache = thisCache.data;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( data !== undefined ) {\n
Action.c(5):     \t\tthisCache[ jQuery.camelCase( name ) ] = data;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Check for both converted-to-camel and non-converted data property names\n
Action.c(5):     \t// If a data property was specified\n
Action.c(5):     \tif ( typeof name === "string" ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// First Try to find as-is property data\n
Action.c(5):     \t\tret = thisCache[ name ];\n
Action.c(5):     \n
Action.c(5):     \t\t// Test for null|undefined property data\n
Action.c(5):     \t\tif ( ret == null ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Try to find the camelCased property\n
Action.c(5):     \t\t\tret = thisCache[ jQuery.camelCase( name ) ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\tret = thisCache;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn ret;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function internalRemoveData( elem, name, pvt ) {\n
Action.c(5):     \tif ( !jQuery.acceptData( elem ) ) {\n
Action.c(5):     \t\treturn;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tvar thisCache, i,\n
Action.c(5):     \t\tisNode = elem.nodeType,\n
Action.c(5):     \n
Action.c(5):     \t\t// See jQuery.data for more information\n
Action.c(5):     \t\tcache = isNode ? jQuery.cache : elem,\n
Action.c(5):     \t\tid = isNode ? elem[ jQuery.expando ] : jQuery.expando;\n
Action.c(5):     \n
Action.c(5):     \t// If there is already no cache entry for this object, there is no\n
Action.c(5):     \t// purpose in continuing\n
Action.c(5):     \tif ( !cache[ id ] ) {\n
Action.c(5):     \t\treturn;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( name ) {\n
Action.c(5):     \n
Action.c(5):     \t\tthisCache = pvt ? cache[ id ] : cache[ id ].data;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( thisCache ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Support array or space separated string names for data keys\n
Action.c(5):     \t\t\tif ( !jQuery.isArray( name ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// try the string as a key before any manipulation\n
Action.c(5):     \t\t\t\tif ( name in thisCache ) {\n
Action.c(5):     \t\t\t\t\tname = [ name ];\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// split the camel cased version by spaces unless a key with the spaces exists\n
Action.c(5):     \t\t\t\t\tname = jQuery.camelCase( name );\n
Action.c(5):     \t\t\t\t\tif ( name in thisCache ) {\n
Action.c(5):     \t\t\t\t\t\tname = [ name ];\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\tname = name.split(" ");\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\t// If "name" is an array of keys...\n
Action.c(5):     \t\t\t\t// When data is initially created, via ("key", "val") signature,\n
Action.c(5):     \t\t\t\t// keys will be converted to camelCase.\n
Action.c(5):     \t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n
Action.c(5):     \t\t\t\t// both plain key and camelCase key. #12786\n
Action.c(5):     \t\t\t\t// This will only penalize the array argument path.\n
Action.c(5):     \t\t\t\tname = name.concat( jQuery.map( name, jQuery.camelCase ) );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\ti = name.length;\n
Action.c(5):     \t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\tdelete thisCache[ name[i] ];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If there is no data left in the cache, we want to continue\n
Action.c(5):     \t\t\t// and let the cache object itself get destroyed\n
Action.c(5):     \t\t\tif ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// See jQuery.data for more information\n
Action.c(5):     \tif ( !pvt ) {\n
Action.c(5):     \t\tdelete cache[ id ].data;\n
Action.c(5):     \n
Action.c(5):     \t\t// Don't destroy the parent cache unless the internal data object\n
Action.c(5):     \t\t// had been the only thing left in it\n
Action.c(5):     \t\tif ( !isEmptyDataObject( cache[ id ] ) ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Destroy the cache\n
Action.c(5):     \tif ( isNode ) {\n
Action.c(5):     \t\tjQuery.cleanData( [ elem ], true );\n
Action.c(5):     \n
Action.c(5):     \t// Use delete when supported for expandos or `cache` is not a window per isWindow (#1008
Action.c(5):     0)\n
Action.c(5):     \t/* jshint eqeqeq: false */\n
Action.c(5):     \t} else if ( support.deleteExpando || cache != cache.window ) {\n
Action.c(5):     \t\t/* jshint eqeqeq: true */\n
Action.c(5):     \t\tdelete cache[ id ];\n
Action.c(5):     \n
Action.c(5):     \t// When all else fails, null\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\tcache[ id ] = null;\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \tcache: {},\n
Action.c(5):     \n
Action.c(5):     \t// The following elements (space-suffixed to avoid Object.prototype collisions)\n
Action.c(5):     \t// throw uncatchable exceptions if you attempt to set expando properties\n
Action.c(5):     \tnoData: {\n
Action.c(5):     \t\t"applet ": true,\n
Action.c(5):     \t\t"embed ": true,\n
Action.c(5):     \t\t// ...but Flash objects (which have this classid) *can* handle expandos\n
Action.c(5):     \t\t"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \thasData: function( elem ) {\n
Action.c(5):     \t\telem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];\n
Action.c(5):     \t\treturn !!elem && !isEmptyDataObject( elem );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tdata: function( elem, name, data ) {\n
Action.c(5):     \t\treturn internalData( elem, name, data );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tremoveData: function( elem, name ) {\n
Action.c(5):     \t\treturn internalRemoveData( elem, name );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// For internal use only.\n
Action.c(5):     \t_data: function( elem, name, data ) {\n
Action.c(5):     \t\treturn internalData( elem, name, data, true );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t_removeData: function( elem, name ) {\n
Action.c(5):     \t\treturn internalRemoveData( elem, name, true );\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \tdata: function( key, value ) {\n
Action.c(5):     \t\tvar i, name, data,\n
Action.c(5):     \t\t\telem = this[0],\n
Action.c(5):     \t\t\tattrs = elem && elem.attributes;\n
Action.c(5):     \n
Action.c(5):     \t\t// Special expections of .data basically thwart jQuery.access,\n
Action.c(5):     \t\t// so implement the relevant behavior ourselves\n
Action.c(5):     \n
Action.c(5):     \t\t// Gets all values\n
Action.c(5):     \t\tif ( key === undefined ) {\n
Action.c(5):     \t\t\tif ( this.length ) {\n
Action.c(5):     \t\t\t\tdata = jQuery.data( elem );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {\n
Action.c(5):     \t\t\t\t\ti = attrs.length;\n
Action.c(5):     \t\t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\t\tname = attrs[i].name;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tif ( name.indexOf("data-") === 0 ) {\n
Action.c(5):     \t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\tdataAttr( 
Action.c(5): t=213992ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     elem, name, data[ name ] );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tjQuery._data( elem, "parsedAttrs", true );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn data;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Sets multiple values\n
Action.c(5):     \t\tif ( typeof key === "object" ) {\n
Action.c(5):     \t\t\treturn this.each(function() {\n
Action.c(5):     \t\t\t\tjQuery.data( this, key );\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn arguments.length > 1 ?\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Sets one value\n
Action.c(5):     \t\t\tthis.each(function() {\n
Action.c(5):     \t\t\t\tjQuery.data( this, key, value );\n
Action.c(5):     \t\t\t}) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Gets one value\n
Action.c(5):     \t\t\t// Try to fetch any internally stored data first\n
Action.c(5):     \t\t\telem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tremoveData: function( key ) {\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\tjQuery.removeData( this, key );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \tqueue: function( elem, type, data ) {\n
Action.c(5):     \t\tvar queue;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( elem ) {\n
Action.c(5):     \t\t\ttype = ( type || "fx" ) + "queue";\n
Action.c(5):     \t\t\tqueue = jQuery._data( elem, type );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n
Action.c(5):     \t\t\tif ( data ) {\n
Action.c(5):     \t\t\t\tif ( !queue || jQuery.isArray(data) ) {\n
Action.c(5):     \t\t\t\t\tqueue = jQuery._data( elem, type, jQuery.makeArray(data) );\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tqueue.push( data );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn queue || [];\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tdequeue: function( elem, type ) {\n
Action.c(5):     \t\ttype = type || "fx";\n
Action.c(5):     \n
Action.c(5):     \t\tvar queue = jQuery.queue( elem, type ),\n
Action.c(5):     \t\t\tstartLength = queue.length,\n
Action.c(5):     \t\t\tfn = queue.shift(),\n
Action.c(5):     \t\t\thooks = jQuery._queueHooks( elem, type ),\n
Action.c(5):     \t\t\tnext = function() {\n
Action.c(5):     \t\t\t\tjQuery.dequeue( elem, type );\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \n
Action.c(5):     \t\t// If the fx queue is dequeued, always remove the progress sentinel\n
Action.c(5):     \t\tif ( fn === "inprogress" ) {\n
Action.c(5):     \t\t\tfn = queue.shift();\n
Action.c(5):     \t\t\tstartLength--;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( fn ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add a progress sentinel to prevent the fx queue from being\n
Action.c(5):     \t\t\t// automatically dequeued\n
Action.c(5):     \t\t\tif ( type === "fx" ) {\n
Action.c(5):     \t\t\t\tqueue.unshift( "inprogress" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// clear up the last queue stop function\n
Action.c(5):     \t\t\tdelete hooks.stop;\n
Action.c(5):     \t\t\tfn.call( elem, next, hooks );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !startLength && hooks ) {\n
Action.c(5):     \t\t\thooks.empty.fire();\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// not intended for public consumption - generates a queueHooks object, or returns the c
Action.c(5):     urrent one\n
Action.c(5):     \t_queueHooks: function( elem, type ) {\n
Action.c(5):     \t\tvar key = type + "queueHooks";\n
Action.c(5):     \t\treturn jQuery._data( elem, key ) || jQuery._data( elem, key, {\n
Action.c(5):     \t\t\tempty: jQuery.Callbacks("once memory").add(function() {\n
Action.c(5):     \t\t\t\tjQuery._removeData( elem, type + "queue" );\n
Action.c(5):     \t\t\t\tjQuery._removeData( elem, key );\n
Action.c(5):     \t\t\t})\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \tqueue: function( type, data ) {\n
Action.c(5):     \t\tvar setter = 2;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof type !== "string" ) {\n
Action.c(5):     \t\t\tdata = type;\n
Action.c(5):     \t\t\ttype = "fx";\n
Action.c(5):     \t\t\tsetter--;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( arguments.length < setter ) {\n
Action.c(5):     \t\t\treturn jQuery.queue( this[0], type );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn data === undefined ?\n
Action.c(5):     \t\t\tthis :\n
Action.c(5):     \t\t\tthis.each(function() {\n
Action.c(5):     \t\t\t\tvar queue = jQuery.queue( this, type, data );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// ensure a hooks for this queue\n
Action.c(5):     \t\t\t\tjQuery._queueHooks( this, type );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( type === "fx" && queue[0] !== "inprogress" ) {\n
Action.c(5):     \t\t\t\t\tjQuery.dequeue( this, type );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \tdequeue: function( type ) {\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\tjQuery.dequeue( this, type );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \tclearQueue: function( type ) {\n
Action.c(5):     \t\treturn this.queue( type || "fx", [] );\n
Action.c(5):     \t},\n
Action.c(5):     \t// Get a promise resolved when queues of a certain type\n
Action.c(5):     \t// are emptied (fx is the type by default)\n
Action.c(5):     \tpromise: function( type, obj ) {\n
Action.c(5):     \t\tvar tmp,\n
Action.c(5):     \t\t\tcount = 1,\n
Action.c(5):     \t\t\tdefer = jQuery.Deferred(),\n
Action.c(5):     \t\t\telements = this,\n
Action.c(5):     \t\t\ti = this.length,\n
Action.c(5):     \t\t\tresolve = function() {\n
Action.c(5):     \t\t\t\tif ( !( --count ) ) {\n
Action.c(5):     \t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof type !== "string" ) {\n
Action.c(5):     \t\t\tobj = type;\n
Action.c(5):     \t\t\ttype = undefined;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\ttype = type || "fx";\n
Action.c(5):     \n
Action.c(5):     \t\twhile ( i-- ) {\n
Action.c(5):     \t\t\ttmp = jQuery._data( elements[ i ], type + "queueHooks" );\n
Action.c(5):     \t\t\tif ( tmp && tmp.empty ) {\n
Action.c(5):     \t\t\t\tcount++;\n
Action.c(5):     \t\t\t\ttmp.empty.add( resolve );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tresolve();\n
Action.c(5):     \t\treturn defer.promise( obj );\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     var pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n
Action.c(5):     \n
Action.c(5):     var cssExpand = [ "Top", "Right", "Bottom", "Left" ];\n
Action.c(5):     \n
Action.c(5):     var isHidden = function( elem, el ) {\n
Action.c(5):     \t\t// isHidden might be called from jQuery#filter function;\n
Action.c(5):     \t\t// in that case, element will be second argument\n
Action.c(5):     \t\telem = el || elem;\n
Action.c(5):     \t\treturn jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocumen
Action.c(5):     t, elem );\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Multifunctional method to get and set values of a collection\n
Action.c(5):     // The value/s can optionally be executed if it's a function\n
Action.c(5):     var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
Action.c(5):     \n
Action.c(5):     \tvar i = 0,\n
Action.c(5):     \t\tlength = elems.length,\n
Action.c(5):     \t\tbulk = key == null;\n
Action.c(5):     \n
Action.c(5):     \t// Sets many values\n
Action.c(5):     \tif ( jQuery.type( key ) === "object" ) {\n
Action.c(5):     \t\tchainable = true;\n
Action.c(5):     \t\tfor ( i in key ) {\n
Action.c(5):     \t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t// Sets one value\n
Action.c(5):     \t} else if ( value !== undefined ) {\n
Action.c(5):     \t\tchainable = true;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !jQuery.isFunction( value ) ) {\n
Action.c(5):     \t\t\traw = true;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( bulk ) {\n
Action.c(5):     \t\t\t// Bulk operations run against the entire set\n
Action.c(5):     \t\t\tif ( raw ) {\n
Action.c(5):     \t\t\t\tfn.call( elems, value );\n
Action.c(5):     \t\t\t\tfn = null;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// ...except when executing function values\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tbulk = fn;\n
Action.c(5):     \t\t\t\tfn = function( elem, key, value ) {\n
Action.c(5):     \t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( fn ) {\n
Action.c(5):     \t\t\tfor ( ; i < length; i++ ) {\n
Action.c(5):     \t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn chainable ?\n
Action.c(5):     \t\telems :\n
Action.c(5):     \n
Action.c(5):     \t\t// Gets\n
Action.c(5):     \t\tbulk ?\n
Action.c(5):     \t\t\tfn.call( elems ) :\n
Action.c(5):     \t\t\tlength ? fn( elems[0], key ) : emptyGet;\n
Action.c(5):     };\n
Action.c(5):     var rcheckableType = (/^(?:checkbox|radio)$/i);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     (function() {\n
Action.c(5):     \tvar fragment = document.createDocumentFragment(),\n
Action.c(5):     \t\tdiv = document.createElement("div"),\n
Action.c(5):     \t\tinput = document.createElement("input");\n
Action.c(5):     \n
Action.c(5):     \t// Setup\n
Action.c(5):     \tdiv.setAttribute( "className", "t" );\n
Action.c(5):     \tdiv.innerHTML = "  <link/><table></table><a href='/a'>a</a>";\n
Action.c(5):     \n
Action.c(5):     \t// IE strips leading whitespace when .innerHTML is used\n
Action.c(5):     \tsupport.leadingWhitespace = div.firstChild.nodeType === 3;\n
Action.c(5):     \n
Action.c(5):     \t// Make sure that tbody elements aren't automatically inserted\n
Action.c(5):     \t// IE will insert them into empty tables\n
Action.c(5):     \tsupport.tbody = !div.getElementsByTagName( "tbody" ).length;\n
Action.c(5):     \n
Action.c(5):     \t// Make sure that link elements get serialized correctly by innerHTML\n
Action.c(5):     \t// This requires a wrapper element in IE\n
Action.c(5):     \tsupport.htmlSerialize = !!div.getElementsByTagName( "link" ).length;\n
Action.c(5):     \n
Action.c(5):     \t// Makes sure cloning an html5 element does not cause problems\n
Action.c(5):     \t// Where outerHTML is undefined, this still works\n
Action.c(5):     \tsupport.html5Clone =\n
Action.c(5):     \t\tdocument.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";\n
Action.c(5):     \n
Action.c(5):     \t// Check if a disconnected checkbox will retain its checked\n
Action.c(5):     \t// value of true after appended to the DOM (IE6/7)\n
Action.c(5):     \tinput.type = "checkbox";\n
Action.c(5):     \tinput.checked = true;\n
Action.c(5):     \tfragment.appendChild( input );\n
Action.c(5):     \tsupport.appendChecked = input.checked;\n
Action.c(5):     \n
Action.c(5):     \t// Make sure textarea (and checkbox) defaultValue is properly cloned\n
Action.c(5):     \t// Support: IE6-IE11+\n
Action.c(5):     \tdiv.innerHTML = "<textarea>x</textarea>";\n
Action.c(5):     \tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n
Action.c(5):     \n
Action.c(5):     \t// #11217 - WebKit loses check when the name is after the checked attribute\n
Action.c(5):     \tfragment.appendChild( div );\n
Action.c(5):     \tdiv.innerHTML = "<input type='radio' checked='checked' name='t'/>";\n
Action.c(5):     \n
Action.c(5):     \t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n
Action.c(5):     \t// old WebKit doesn't clone checked state correctly in fragments\n
Action.c(5):     \tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n
Action.c(5):     \n
Action.c(5):     \t// Support: IE<9\n
Action.c(5):     \t// Opera does not clone events (and typeof div.attachEvent === undefined).\n
Action.c(5):     \t// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()\n
Action.c(5):     \tsupport.noCloneEvent = true;\n
Action.c(5):     \tif ( div.attachEvent ) {\n
Action.c(5):     \t\tdiv.attachEvent( "onclick", function() {\n
Action.c(5):     \t\t\tsupport.noCloneEvent = false;\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\tdiv.cloneNode( true ).click();\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Execute the test only if not already executed in another module.\n
Action.c(5):     \tif (support.deleteExpando == null) {\n
Action.c(5):     \t\t// Support: IE<9\n
Action.c(5):     \t\tsupport.deleteExpando = true;\n
Action.c(5):     \t\ttry {\n
Action.c(5):     \t\t\tdelete div.test;\n
Action.c(5):     \t\t} catch( e ) {\n
Action.c(5):     \t\t\tsupport.deleteExpando = false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Null elements to avoid leaks in IE.\n
Action.c(5):     \tfragment = div = input = null;\n
Action.c(5):     })();\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     (function() {\n
Action.c(5):     \tvar i, eventName,\n
Action.c(5):     \t\tdiv = document.createElement( "div" );\n
Action.c(5):     \n
Action.c(5):     \t// Support: IE<9 (lack submit/change bubble), Firefox 23+ (lack focusin event)\n
Action.c(5):     \tfor ( i in { submit: true, change: true, focusin: true }) {\n
Action.c(5):     \t\teventName = "on" + i;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !(support[ i + "Bubbles" ] = eventName in window) ) {\n
Action.c(5):     \t\t\t// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)\n
Action.c(5):     \t\t\tdiv.setAttribute( eventName, "t" );\n
Action.c(5):     \t\t\tsupport[ i + "Bubbles" ] = div.attributes[ eventName ].expando === false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Null elements to avoid leaks in IE.\n
Action.c(5):     \tdiv = null;\n
Action.c(5):     })();\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rformElems = /^(?:input|select|textarea)$/i,\n
Action.c(5):     \trkeyEvent = /^key/,\n
Action.c(5):     \trmouseEvent = /^(?:mouse|contextmenu)|click/,\n
Action.c(5):     \trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n
Action.c(5):     \trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n
Action.c(5):     \n
Action.c(5):     function returnTrue() {\n
Action.c(5):     \treturn true;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function returnFalse() {\n
Action.c(5):     \treturn false;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function safeActiveElement() {\n
Action.c(5):     \ttry {\n
Action.c(5):     \t\treturn document.activeElement;\n
Action.c(5):     \t} catch ( err ) { }\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /*\n
Action.c(5):      * Helper functions for managing events -- not part of the public interface.\n
Action.c(5):      * Props to Dean Edwards' addEvent library for many of the ideas.\n
Action.c(5):      */\n
Action.c(5):     jQuery.event = {\n
Action.c(5):     \n
Action.c(5):     \tglobal: {},\n
Action.c(5):     \n
Action.c(5):     \tadd: function( elem, types, handler, data, selector ) {\n
Action.c(5):     \t\tvar tmp, events, t, handleObjIn,\n
Action.c(5):     \t\t\tspecial, eventHandle, handleObj,\n
Action.c(5):     \t\t\thandlers, type, namespaces, origType,\n
Action.c(5):     \t\t\telemData = jQuery._data( elem );\n
Action.c(5):     \n
Action.c(5):     \t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n
Action.c(5):     \t\tif ( !elemData ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Caller can pass in an object of custom data in lieu of the handler\n
Action.c(5):     \t\tif ( handler.handler ) {\n
Action.c(5):     \t\t\thandleObjIn = handler;\n
Action.c(5):     \t\t\thandler = handleObjIn.handler;\n
Action.c(5):     \t\t\tselector = handleObjIn.selector;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Make sure that the handler has a unique ID, used to find/remove it later\n
Action.c(5):     \t\tif ( !handler.guid ) {\n
Action.c(5):     \t\t\thandler.guid = jQuery.guid++;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Init the element's event structure and main handler, if this is the first\n
Action.c(5):     \t\tif ( !(events = elemData.events) ) {\n
Action.c(5):     \t\t\tevents = elemData.events = {};\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( !(eventHandle = elemData.handle) ) {\n
Action.c(5):     \t\t\teventHandle = elemData.handle = function( e ) {\n
Action.c(5):     \t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n
Action.c(5):     \t\t\t\t// when an event is called after a page has unloaded\n
Action.c(5):     \t\t\t\treturn typeof jQuery !== strundefined && (!e || jQuery.event.triggered !== e.type)
Action.c(5):      ?\n
Action.c(5):     \t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n
Action.c(5):     \t\t\t\t\tundefined;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t\t// Add elem as a property of the handle fn to prevent a memory leak with IE non-nati
Action.c(5):     ve events\n
Action.c(5):     \t\t\teventHandle.elem = elem;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Handle multiple events separated by a space\n
Action.c(5):     \t\ttypes = ( types || "" ).match( rnotwhite ) || [ "" ];\n
Action.c(5):     \t\tt = types.length;\n
Action.c(5):     \t\twhile ( t-- ) {\n
Action.c(5):     \t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n
Action.c(5):     \t\t\ttype = origType = tmp[1];\n
Action.c(5):     \t\t\tnamespaces = ( tmp[2] || "" ).split( "." ).sort();\n
Action.c(5):     \n
Action.c(5):     \t\t\t// There *must* be a type, no attaching namespace-only handlers\n
Action.c(5):     \t\t\tif ( !type ) {\n
Action.c(5):     \t\t\t\tcontinue;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If event changes its type, use the special event handlers for the changed type\n
Action.c(5):     \t\t\tspecial = jQuery.event.special[ type ] || {};\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If selector defined, determine special event api type, otherwise given type\n
Action.c(5):     \t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Update special based on newly reset type\n
Action.c(5):     \t\t\tspecial = jQuery.event.special[ type ] || {};\n
Action.c(5):     \n
Action.c(5):     \t\t\t// handleObj is passed to all event handlers\n
Action.c(5):     \t\t\thandleObj = jQuery.extend({\n
Action.c(5):     \t\t\t\ttype: type,\n
Action.c(5):     \t\t\t\torigType: origType,\n
Action.c(5):     \t\t\t\tdata: data,\n
Action.c(5):     \t\t\t\thandler: handler,\n
Action.c(5):     \t\t\t\tguid: handler.guid,\n
Action.c(5):     \t\t\t\tselector: selector,\n
Action.c(5):     \t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n
Action.c(5):     \t\t\t\tnamespace: namespaces.join(".")\n
Action.c(5):     \t\t\t}, handleObjIn );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Init the event handler queue if we're the first\n
Action.c(5):     \t\t\tif ( !(handlers = events[ type ]) ) {\n
Action.c(5):     \t\t\t\thandlers = events[ type ] = [];\n
Action.c(5):     \t\t\t\thandlers.delegateCount = 0;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Only use addEventListener/attachEvent if the special events handler returns fal
Action.c(5):     se\n
Action.c(5):     \t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) =
Action.c(5):     == false ) {\n
Action.c(5):     \t\t\t\t\t// Bind the global event handler to the element\n
Action.c(5):     \t\t\t\t\tif ( elem.addEventListener ) {\n
Action.c(5):     \t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t} else if ( elem.attachEvent ) {\n
Action.c(5):     \t\t\t\t\t\telem.attachEvent( "on" + type, eventHandle );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( special.add ) {\n
Action.c(5):     \t\t\t\tspecial.add.call( elem, handleObj );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( !handleObj.handler.guid ) {\n
Action.c(5):     \t\t\t\t\thandleObj.handler.guid = handler.guid;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add to the element's handler list, delegates in front\n
Action.c(5):     \t\t\tif ( selector ) {\n
Action.c(5):     \t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\thandlers.push( handleObj );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Keep track of which events have ever been us
Action.c(5): t=213996ms: 3421-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     ed, for event optimization\n
Action.c(5):     \t\t\tjQuery.event.global[ type ] = true;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Nullify elem to prevent memory leaks in IE\n
Action.c(5):     \t\telem = null;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Detach an event or set of events from an element\n
Action.c(5):     \tremove: function( elem, types, handler, selector, mappedTypes ) {\n
Action.c(5):     \t\tvar j, handleObj, tmp,\n
Action.c(5):     \t\t\torigCount, t, events,\n
Action.c(5):     \t\t\tspecial, handlers, type,\n
Action.c(5):     \t\t\tnamespaces, origType,\n
Action.c(5):     \t\t\telemData = jQuery.hasData( elem ) && jQuery._data( elem );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !elemData || !(events = elemData.events) ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Once for each type.namespace in types; type may be omitted\n
Action.c(5):     \t\ttypes = ( types || "" ).match( rnotwhite ) || [ "" ];\n
Action.c(5):     \t\tt = types.length;\n
Action.c(5):     \t\twhile ( t-- ) {\n
Action.c(5):     \t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n
Action.c(5):     \t\t\ttype = origType = tmp[1];\n
Action.c(5):     \t\t\tnamespaces = ( tmp[2] || "" ).split( "." ).sort();\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Unbind all events (on this namespace, if provided) for the element\n
Action.c(5):     \t\t\tif ( !type ) {\n
Action.c(5):     \t\t\t\tfor ( type in events ) {\n
Action.c(5):     \t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tcontinue;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tspecial = jQuery.event.special[ type ] || {};\n
Action.c(5):     \t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n
Action.c(5):     \t\t\thandlers = events[ type ] || [];\n
Action.c(5):     \t\t\ttmp = tmp[2] && new RegExp( "(^|\\\\.)" + namespaces.join("\\\\.(?:.*\\\\.|)") + "(\\
Action.c(5):     \\.|$)" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Remove matching events\n
Action.c(5):     \t\t\torigCount = j = handlers.length;\n
Action.c(5):     \t\t\twhile ( j-- ) {\n
Action.c(5):     \t\t\t\thandleObj = handlers[ j ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n
Action.c(5):     \t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n
Action.c(5):     \t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n
Action.c(5):     \t\t\t\t\t( !selector || selector === handleObj.selector || selector === "**" && handleObj
Action.c(5):     .selector ) ) {\n
Action.c(5):     \t\t\t\t\thandlers.splice( j, 1 );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( handleObj.selector ) {\n
Action.c(5):     \t\t\t\t\t\thandlers.delegateCount--;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tif ( special.remove ) {\n
Action.c(5):     \t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Remove generic event handler if we removed something and no more handlers exist\n
Action.c(5):     \t\t\t// (avoids potential for endless recursion during removal of special event handlers)
Action.c(5):     \n
Action.c(5):     \t\t\tif ( origCount && !handlers.length ) {\n
Action.c(5):     \t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle
Action.c(5):      ) === false ) {\n
Action.c(5):     \t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tdelete events[ type ];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Remove the expando if it's no longer used\n
Action.c(5):     \t\tif ( jQuery.isEmptyObject( events ) ) {\n
Action.c(5):     \t\t\tdelete elemData.handle;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// removeData also checks for emptiness and clears the expando if empty\n
Action.c(5):     \t\t\t// so use it instead of delete\n
Action.c(5):     \t\t\tjQuery._removeData( elem, "events" );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \ttrigger: function( event, data, elem, onlyHandlers ) {\n
Action.c(5):     \t\tvar handle, ontype, cur,\n
Action.c(5):     \t\t\tbubbleType, special, tmp, i,\n
Action.c(5):     \t\t\teventPath = [ elem || document ],\n
Action.c(5):     \t\t\ttype = hasOwn.call( event, "type" ) ? event.type : event,\n
Action.c(5):     \t\t\tnamespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];\n
Action.c(5):     \n
Action.c(5):     \t\tcur = tmp = elem = elem || document;\n
Action.c(5):     \n
Action.c(5):     \t\t// Don't do events on text and comment nodes\n
Action.c(5):     \t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n
Action.c(5):     \t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( type.indexOf(".") >= 0 ) {\n
Action.c(5):     \t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n
Action.c(5):     \t\t\tnamespaces = type.split(".");\n
Action.c(5):     \t\t\ttype = namespaces.shift();\n
Action.c(5):     \t\t\tnamespaces.sort();\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tontype = type.indexOf(":") < 0 && "on" + type;\n
Action.c(5):     \n
Action.c(5):     \t\t// Caller can pass in a
Action.c(5): t=213997ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5): t=213997ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):      jQuery.Event object, Object, or just an event type string\n
Action.c(5):     \t\tevent = event[ jQuery.expando ] ?\n
Action.c(5):     \t\t\tevent :\n
Action.c(5):     \t\t\tnew jQuery.Event( type, typeof event === "object" && event );\n
Action.c(5):     \n
Action.c(5):     \t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n
Action.c(5):     \t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n
Action.c(5):     \t\tevent.namespace = namespaces.join(".");\n
Action.c(5):     \t\tevent.namespace_re = event.namespace ?\n
Action.c(5):     \t\t\tnew RegExp( "(^|\\\\.)" + namespaces.join("\\\\.(?:.*\\\\.|)") + "(\\\\.|$)" ) :\n
Action.c(5):     \t\t\tnull;\n
Action.c(5):     \n
Action.c(5):     \t\t// Clean up the event in case it is being reused\n
Action.c(5):     \t\tevent.result = undefined;\n
Action.c(5):     \t\tif ( !event.target ) {\n
Action.c(5):     \t\t\tevent.target = elem;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Clone any incoming data and prepend the event, creating the handler arg list\n
Action.c(5):     \t\tdata = data == null ?\n
Action.c(5):     \t\t\t[ event ] :\n
Action.c(5):     \t\t\tjQuery.makeArray( data, [ event ] );\n
Action.c(5):     \n
Action.c(5):     \t\t// Allow special events to draw outside the lines\n
Action.c(5):     \t\tspecial = jQuery.event.special[ type ] || {};\n
Action.c(5):     \t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false
Action.c(5):      ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n
Action.c(5):     \t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
Action.c(5):     \n
Action.c(5):     \t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tbubbleType = special.delegateType || type;\n
Action.c(5):     \t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n
Action.c(5):     \t\t\t\tcur = cur.parentNode;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tfor ( ; cur; cur = cur.parentNode ) {\n
Action.c(5):     \t\t\t\teventPath.push( cur );\n
Action.c(5):     \t\t\t\ttmp = cur;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n
Action.c(5):     \t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n
Action.c(5):     \t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Fire handlers on the event path\n
Action.c(5):     \t\ti = 0;\n
Action.c(5):     \t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tevent.type = i > 1 ?\n
Action.c(5):     \t\t\t\tbubbleType :\n
Action.c(5):     \t\t\t\tspecial.bindType || type;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// jQuery handler\n
Action.c(5):     \t\t\thandle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur,
Action.c(5):      "handle" );\n
Action.c(5):     \t\t\tif ( handle ) {\n
Action.c(5):     \t\t\t\thandle.apply( cur, data );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Native handler\n
Action.c(5):     \t\t\thandle = ontype && cur[ ontype ];\n
Action.c(5):     \t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n
Action.c(5):     \t\t\t\tevent.result = handle.apply( cur, data );\n
Action.c(5):     \t\t\t\tif ( event.result === false ) {\n
Action.c(5):     \t\t\t\t\tevent.preventDefault();\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tevent.type = type;\n
Action.c(5):     \n
Action.c(5):     \t\t// If nobody prevented the default action, do it now\n
Action.c(5):     \t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false
Action.c(5):     ) &&\n
Action.c(5):     \t\t\t\tjQuery.acceptData( elem ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n
Action.c(5):     \t\t\t\t// Can't use an .isFunction() check here because IE6/7 fails that test.\n
Action.c(5):     \t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n
Action.c(5):     \t\t\t\tif ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n
Action.c(5):     \t\t\t\t\ttmp = elem[ ontype ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( tmp ) {\n
Action.c(5):     \t\t\t\t\t\telem[ ontype ] = null;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n
Action.c(5):     \t\t\t\t\tjQuery.event.triggered = type;\n
Action.c(5):     \t\t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\t\telem[ type ]();\n
Action.c(5):     \t\t\t\t\t} catch ( e ) {\n
Action.c(5):     \t\t\t\t\t\t// IE<9 dies on focus/blur to hidden element (#1486,#12518)\n
Action.c(5):     \t\t\t\t\t\t// only reproducible on winXP IE8 native, not IE9 in IE8 mode\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tjQuery.event.triggered = undefined;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( tmp ) {\n
Action.c(5):     \t\t\t\t\t\telem[ ontype ] = tmp;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn event.result;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tdispatch: function( event ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Make a writable jQuery.Event from the native event object\n
Action.c(5):     \t\tevent = jQuery.event.fix( event );\n
Action.c(5):     \n
Action.c(5):     \t\tvar i, ret, handleObj, matched, j,\n
Action.c(5):     \t\t\thandlerQueue = [],\n
Action.c(5):     \t\t\targs = slice.call( arguments ),\n
Action.c(5):     \t\t\thandlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],\n
Action.c(5):     \t\t\tspecial = jQuery.event.special[ event.type ] || {};\n
Action.c(5):     \n
Action.c(5):     \t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n
Action.c(5):     \t\targs[0] = event;\n
Action.c(5):     \t\tevent.delegateTarget = this;\n
Action.c(5):     \n
Action.c(5):     \t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n
Action.c(5):     \t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Determine handlers\n
Action.c(5):     \t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n
Action.c(5):     \n
Action.c(5):     \t\t// Run delegates first; they may want to stop propagation beneath us\n
Action.c(5):     \t\ti = 0;\n
Action.c(5):     \t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n
Action.c(5):     \t\t\tevent.currentTarget = matched.elem;\n
Action.c(5):     \n
Action.c(5):     \t\t\tj = 0;\n
Action.c(5):     \t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStoppe
Action.c(5):     d() ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Triggered event must either 1) have no namespace, or\n
Action.c(5):     \t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can ha
Action.c(5):     ve no namespace).\n
Action.c(5):     \t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tevent.handleObj = handleObj;\n
Action.c(5):     \t\t\t\t\tevent.data = handleObj.data;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.h
Action.c(5):     andler )\n
Action.c(5):     \t\t\t\t\t\t\t.apply( matched.elem, args );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( ret !== undefined ) {\n
Action.c(5):     \t\t\t\t\t\tif ( (event.result = ret) === false ) {\n
Action.c(5):     \t\t\t\t\t\t\tevent.preventDefault();\n
Action.c(5):     \t\t\t\t\t\t\tevent.stopPropagation();\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Call the postDispatch hook for the mapped type\n
Action.c(5):     \t\tif ( special.postDispatch ) {\n
Action.c(5):     \t\t\tspecial.postDispatch.call( this, event );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn event.result;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \thandlers: function( event, handlers ) {\n
Action.c(5):     \t\tvar sel, handleObj, matches, i,\n
Action.c(5):     \t\t\thandlerQueue = [],\n
Action.c(5):     \t\t\tdelegateCount = handlers.delegateCount,\n
Action.c(5):     \t\t\tcur = event.target;\n
Action.c(5):     \n
Action.c(5):     \t\t// Find delegate handlers\n
Action.c(5):     \t\t// Black-hole SVG <use> instance trees (#13180)\n
Action.c(5):     \t\t// Avoid non-left-click bubbling in Firefox (#3861)\n
Action.c(5):     \t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t/* jshint eqeqeq: false */\n
Action.c(5):     \t\t\tfor ( ; cur != this; cur = cur.parentNode || this ) {\n
Action.c(5):     \t\t\t\t/* jshint eqeqeq: true */\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Don't check non-elements (#13208)\n
Action.c(5):     \t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n
Action.c(5):     \t\t\t\tif ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click") ) {\n
Action.c(5):     \t\t\t\t\tmatches = [];\n
Action.c(5):     \t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n
Action.c(5):     \t\t\t\t\t\thandleObj = handlers[ i ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n
Action.c(5):     \t\t\t\t\t\tsel = handleObj.selector + " ";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n
Action.c(5):     \t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n
Action.c(5):     \t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n
Action.c(5):     \t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\tif ( matches[ sel ] ) {\n
Action.c(5):     \t\t\t\t\t\t\tmatches.push( handleObj );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tif ( matches.length ) {\n
Action.c(5):     \t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Add the remaining (directly-bound) handlers\n
Action.c(5):     \t\tif ( delegateCount < handlers.length ) {\n
Action.c(5):     \t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn handlerQueue;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tfix: function( event ) {\n
Action.c(5):     \t\tif ( event[ jQuery.expando ] ) {\n
Action.c(5):     \t\t\treturn event;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Create a writable copy of the event object and normalize some properties\n
Action.c(5):     \t\tvar i, prop, copy,\n
Action.c(5):     \t\t\ttype = event.type,\n
Action.c(5):     \t\t\toriginalEvent = event,\n
Action.c(5):     \t\t\tfixHook = this.fixHooks[ type ];\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !fixHook ) {\n
Action.c(5):     \t\t\tthis.fixHooks[ type ] = fixHook =\n
Action.c(5):     \t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n
Action.c(5):     \t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n
Action.c(5):     \t\t\t\t{};\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n
Action.c(5):     \n
Action.c(5):     \t\tevent = new jQuery.Event( originalEvent );\n
Action.c(5):     \n
Action.c(5):     \t\ti = copy.length;\n
Action.c(5):     \t\twhile ( i-- ) {\n
Action.c(5):     \t\t\tprop = copy[ i ];\n
Action.c(5):     \t\t\tevent[ prop ] = originalEvent[ prop ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE<9\n
Action.c(5):     \t\t// Fix target property (#1925)\n
Action.c(5):     \t\tif ( !event.target ) {\n
Action.c(5):     \t\t\tevent.target = originalEvent.srcElement || document;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: Chrome 23+, Safari?\n
Action.c(5):     \t\t// Target should not be a text node (#504, #13143)\n
Action.c(5):     \t\tif ( event.target.nodeType === 3 ) {\n
Action.c(5):     \t\t\tevent.target = event.target.parentNode;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE<9\n
Action.c(5):     \t\t// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)\n
Action.c(5):     \t\tevent.metaKey = !!event.metaKey;\n
Action.c(5):     \n
Action.c(5):     \t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Includes some event props shared by KeyEvent and MouseEvent\n
Action.c(5):     \tprops: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget
Action.c(5):      shiftKey target timeStamp view which".split(" "),\n
Action.c(5):     \n
Action.c(5):     \tfixHooks: {},\n
Action.c(5):     \n
Action.c(5):     \tkeyHooks: {\n
Action.c(5):     \t\tprops: "char charCode key keyCode".split(" "),\n
Action.c(5):     \t\tfilter: function( event, original ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add which for key events\n
Action.c(5):     \t\t\tif ( event.which == null ) {\n
Action.c(5):     \t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn event;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tmouseHooks: {\n
Action.c(5):     \t\tprops: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX
Action.c(5):      screenY toElement".split(" "),\n
Action.c(5):     \t\tfilter: function( event, original ) {\n
Action.c(5):     \t\t\tvar body, eventDoc, doc,\n
Action.c(5):     \t\t\t\tbutton = original.button,\n
Action.c(5):     \t\t\t\tfromElement = original.fromElement;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Calculate pageX/Y if missing and clientX/Y available\n
Action.c(5):     \t\t\tif ( event.pageX == null && original.clientX != null ) {\n
Action.c(5):     \t\t\t\teventDoc = event.target.ownerDocument || document;\n
Action.c(5):     \t\t\t\tdoc = eventDoc.documentElement;\n
Action.c(5):     \t\t\t\tbody = eventDoc.body;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLef
Action.c(5):     t || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n
Action.c(5):     \t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop
Action.c(5):       || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add relatedTarget, if necessary\n
Action.c(5):     \t\t\tif ( !event.relatedTarget && fromElement ) {\n
Action.c(5):     \t\t\t\tevent.relatedTarget = fromElement === event.target ? original.toElement : fromElem
Action.c(5):     ent;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n
Action.c(5):     \t\t\t// Note: button is not normalized, so don't use it\n
Action.c(5):     \t\t\tif ( !event.which && button !== undefined ) {\n
Action.c(5):     \t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn event;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tspecial: {\n
Action.c(5):     \t\tload: {\n
Action.c(5):     \t\t\t// Prevent triggered image.load events from bubbling to window.load\n
Action.c(5):     \t\t\tnoBubble: true\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tfocus: {\n
Action.c(5):     \t\t\t// Fire native event if possible so blur/focus sequence is correct\n
Action.c(5):     \t\t\ttrigger: function() {\n
Action.c(5):     \t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n
Action.c(5):     \t\t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\t\tthis.focus();\n
Action.c(5):     \t\t\t\t\t\treturn false;\n
Action.c(5):     \t\t\t\t\t} catch ( e ) {\n
Action.c(5):     \t\t\t\t\t\t// Support: IE<9\n
Action.c(5):     \t\t\t\t\t\t// If we error on focus to hidden element (#1486, #12518),\n
Action.c(5):     \t\t\t\t\t\t// let .trigger() run the handlers\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\tdelegateType: "focusin"\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tblur: {\n
Action.c(5):     \t\t\ttrigger: function() {\n
Action.c(5):     \t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n
Action.c(5):     \t\t\t\t\tthis.blur();\n
Action.c(5):     \t\t\t\t\treturn false;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\tdelegateType: "focusout"\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tclick: {\n
Action.c(5):     \t\t\t// For checkbox, fire native event so checked state will be right\n
Action.c(5):     \t\t\ttrigger: function() {\n
Action.c(5):     \t\t\t\tif ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) 
Action.c(5):     {\n
Action.c(5):     \t\t\t\t\tthis.click();\n
Action.c(5):     \t\t\t\t\treturn false;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\t// For cross-browser consistency, don't fire native .click() on links\n
Action.c(5):     \t\t\t_default: function( event ) {\n
Action.c(5):     \t\t\t\treturn jQuery.nodeName( event.target, "a" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tbeforeunload: {\n
Action.c(5):     \t\t\tpostDispatch: function( event ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Even when returnValue equals to undefined Firefox will still show alert\n
Action.c(5):     \t\t\t\tif ( event.result !== undefined ) {\n
Action.c(5):     \t\t\t\t\tevent.originalEvent.returnValue = event.result;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tsimulate: function( type, elem, event, bubble ) {\n
Action.c(5):     \t\t// Piggyback on a donor event to simulate a different one.\n
Action.c(5):     \t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n
Action.c(5):     \t\t// simulated event prevents default then we do the same on the donor.\n
Action.c(5):     \t\tvar e = jQuery.extend(\n
Action.c(5):     \t\t\tnew jQuery.Event(),\n
Action.c(5):     \t\t\tevent,\n
Action.c(5):     \t\t\t{\n
Action.c(5):     \t\t\t\ttype: type,\n
Action.c(5):     \t\t\t\tisSimulated: true,\n
Action.c(5):     \t\t\t\toriginalEvent: {}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t);\n
Action.c(5):     \t\tif ( bubble ) {\n
Action.c(5):     \t\t\tjQuery.event.trigger( e, null, elem );\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tjQuery.event.dispatch.call( elem, e );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( e.isDefaultPrevented() ) {\n
Action.c(5):     \t\t\tevent.preventDefault();\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.removeEvent = document.removeEventListener ?\n
Action.c(5):     \tfunction( elem, type, handle ) {\n
Action.c(5):     \t\tif ( elem.removeEventListener ) {\n
Action.c(5):     \t\t\telem.removeEventListener( type, handle, false );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t} :\n
Action.c(5):     \tfunction( elem, type, handle ) {\n
Action.c(5):     \t\tvar name = "on" + type;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( elem.detachEvent ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// #8545, #7054, preventing memory leaks for custom events in IE6-8\n
Action.c(5):     \t\t\t// detachEvent needed property on element, by name of that event, to properly expose
Action.c(5):      it to GC\n
Action.c(5):     \t\t\tif ( typeof elem[ name ] === strundefined ) {\n
Action.c(5):     \t\t\t\telem[ name ] = null;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\telem.detachEvent( name, handle );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     jQuery.Event = function( s
Action.c(5): t=214001ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     rc, props ) {\n
Action.c(5):     \t// Allow instantiation without the 'new' keyword\n
Action.c(5):     \tif ( !(this instanceof jQuery.Event) ) {\n
Action.c(5):     \t\treturn new jQuery.Event( src, props );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Event object\n
Action.c(5):     \tif ( src && src.type ) {\n
Action.c(5):     \t\tthis.originalEvent = src;\n
Action.c(5):     \t\tthis.type = src.type;\n
Action.c(5):     \n
Action.c(5):     \t\t// Events bubbling up the document may have been marked as prevented\n
Action.c(5):     \t\t// by a handler lower down the tree; reflect the correct value.\n
Action.c(5):     \t\tthis.isDefaultPrevented = src.defaultPrevented ||\n
Action.c(5):     \t\t\t\tsrc.defaultPrevented === undefined && (\n
Action.c(5):     \t\t\t\t// Support: IE < 9\n
Action.c(5):     \t\t\t\tsrc.returnValue === false ||\n
Action.c(5):     \t\t\t\t// Support: Android < 4.0\n
Action.c(5):     \t\t\t\tsrc.getPreventDefault && src.getPreventDefault() ) ?\n
Action.c(5):     \t\t\treturnTrue :\n
Action.c(5):     \t\t\treturnFalse;\n
Action.c(5):     \n
Action.c(5):     \t// Event type\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\tthis.type = src;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Put explicitly provided properties onto the event object\n
Action.c(5):     \tif ( props ) {\n
Action.c(5):     \t\tjQuery.extend( this, props );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Create a timestamp if incoming event doesn't have one\n
Action.c(5):     \tthis.timeStamp = src && src.timeStamp || jQuery.now();\n
Action.c(5):     \n
Action.c(5):     \t// Mark it as fixed\n
Action.c(5):     \tthis[ jQuery.expando ] = true;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n
Action.c(5):     // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n
Action.c(5):     jQuery.Event.prototype = {\n
Action.c(5):     \tisDefaultPrevented: returnFalse,\n
Action.c(5):     \tisPropagationStopped: returnFalse,\n
Action.c(5):     \tisImmediatePropagationStopped: returnFalse,\n
Action.c(5):     \n
Action.c(5):     \tpreventDefault: function() {\n
Action.c(5):     \t\tvar e = this.originalEvent;\n
Action.c(5):     \n
Action.c(5):     \t\tthis.isDefaultPrevented = returnTrue;\n
Action.c(5):     \t\tif ( !e ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// If preventDefault exists, run it on the original event\n
Action.c(5):     \t\tif ( e.preventDefault ) {\n
Action.c(5):     \t\t\te.preventDefault();\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE\n
Action.c(5):     \t\t// Otherwise set the returnValue property of the original event to false\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\te.returnValue = false;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \tstopPropagation: function() {\n
Action.c(5):     \t\tvar e = this.originalEvent;\n
Action.c(5):     \n
Action.c(5):     \t\tthis.isPropagationStopped = returnTrue;\n
Action.c(5):     \t\tif ( !e ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t// If stopPropagation exists, run it on the original event\n
Action.c(5):     \t\tif ( e.stopPropagation ) {\n
Action.c(5):     \t\t\te.stopPropagation();\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE\n
Action.c(5):     \t\t// Set the cancelBubble property of the original event to true\n
Action.c(5):     \t\te.cancelBubble = true;\n
Action.c(5):     \t},\n
Action.c(5):     \tstopImmediatePropagation: function() {\n
Action.c(5):     \t\tthis.isImmediatePropagationStopped = returnTrue;\n
Action.c(5):     \t\tthis.stopPropagation();\n
Action.c(5):     \t}\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     // Create mouseenter/leave events using mouseover/out and event-time checks\n
Action.c(5):     jQuery.each({\n
Action.c(5):     \tmouseenter: "mouseover",\n
Action.c(5):     \tmouseleave: "mouseout"\n
Action.c(5):     }, function( orig, fix ) {\n
Action.c(5):     \tjQuery.event.special[ orig ] = {\n
Action.c(5):     \t\tdelegateType: fix,\n
Action.c(5):     \t\tbindType: fix,\n
Action.c(5):     \n
Action.c(5):     \t\thandle: function( event ) {\n
Action.c(5):     \t\t\tvar ret,\n
Action.c(5):     \t\t\t\ttarget = this,\n
Action.c(5):     \t\t\t\trelated = event.relatedTarget,\n
Action.c(5):     \t\t\t\thandleObj = event.handleObj;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// For mousenter/leave call the handler if related is outside the target.\n
Action.c(5):     \t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n
Action.c(5):     \t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n
Action.c(5):     \t\t\t\tevent.type = handleObj.origType;\n
Action.c(5):     \t\t\t\tret = handleObj.handler.apply( this, arguments );\n
Action.c(5):     \t\t\t\tevent.type = fix;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn ret;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // IE submit delegation\n
Action.c(5):     if ( !support.submitBubbles ) {\n
Action.c(5):     \n
Action.c(5):     \tjQuery.event.special.submit = {\n
Action.c(5):     \t\tsetup: function() {\n
Action.c(5):     \t\t\t// Only need this for delegated form submit events\n
Action.c(5):     \t\t\tif ( jQuery.nodeName( this, "form" ) ) {\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Lazy-add a submit handler when a descendant form may potentially be submitted\n
Action.c(5):     \t\t\tjQuery.event.add( this, "click._submit keypress._submit", function( e ) {\n
Action.c(5):     \t\t\t\t// Node name check avoids a VML-related crash in IE (#9807)\n
Action.c(5):     \t\t\t\tvar elem = e.target,\n
Action.c(5):     \t\t\t\t\tform = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? e
Action.c(5):     lem.form : undefined;\n
Action.c(5):     \t\t\t\tif ( form && !jQuery._data( form, "submitBubbles" ) ) {\n
Action.c(5):     \t\t\t\t\tjQuery.event.add( form, "submit._submit", function( event ) {\n
Action.c(5):     \t\t\t\t\t\tevent._submit_bubble = true;\n
Action.c(5):     \t\t\t\t\t});\n
Action.c(5):     \t\t\t\t\tjQuery._data( form, "submitBubbles", true );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t\t// return undefined since we don't need an event listener\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tpostDispatch: function( event ) {\n
Action.c(5):     \t\t\t// If form was submitted by the user, bubble the event up the tree\n
Action.c(5):     \t\t\tif ( event._submit_bubble ) {\n
Action.c(5):     \t\t\t\tdelete event._submit_bubble;\n
Action.c(5):     \t\t\t\tif ( this.parentNode && !event.isTrigger ) {\n
Action.c(5):     \t\t\t\t\tjQuery.event.simulate( "submit", this.parentNode, event, true );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tteardown: function() {\n
Action.c(5):     \t\t\t// Only need this for delegated form submit events\n
Action.c(5):     \t\t\tif ( jQuery.nodeName( this, "form" ) ) {\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Remove delegated handlers; cleanData eventually reaps submit handlers attached ab
Action.c(5):     ove\n
Action.c(5):     \t\t\tjQuery.event.remove( this, "._submit" );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // IE change delegation and checkbox/radio fix\n
Action.c(5):     if ( !support.changeBubbles ) {\n
Action.c(5):     \n
Action.c(5):     \tjQuery.event.special.change = {\n
Action.c(5):     \n
Action.c(5):     \t\tsetup: function() {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( rformElems.test( this.nodeName ) ) {\n
Action.c(5):     \t\t\t\t// IE doesn't fire change on a check/radio until blur; trigger it on click\n
Action.c(5):     \t\t\t\t// after a propertychange. Eat the blur-change in special.change.handle.\n
Action.c(5):     \t\t\t\t// This still fires onchange a second time for check/radio after blur.\n
Action.c(5):     \t\t\t\tif ( this.type === "checkbox" || this.type === "radio" ) {\n
Action.c(5):     \t\t\t\t\tjQuery.event.add( this, "propertychange._change", function( event ) {\n
Action.c(5):     \t\t\t\t\t\tif ( event.originalEvent.propertyName === "checked" ) {\n
Action.c(5):     \t\t\t\t\t\t\tthis._just_changed = true;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t});\n
Action.c(5):     \t\t\t\t\tjQuery.event.add( this, "click._change", function( event ) {\n
Action.c(5):     \t\t\t\t\t\tif ( this._just_changed && !event.isTrigger ) {\n
Action.c(5):     \t\t\t\t\t\t\tthis._just_changed = false;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t// Allow triggered, simulated change events (#11500)\n
Action.c(5):     \t\t\t\t\t\tjQuery.event.simulate( "change", this, event, true );\n
Action.c(5):     \t\t\t\t\t});\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t// Delegated event; lazy-add a change handler on descendant inputs\n
Action.c(5):     \t\t\tjQuery.event.add( this, "beforeactivate._change", function( e ) {\n
Action.c(5):     \t\t\t\tvar elem = e.target;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "changeBubbles" ) ) 
Action.c(5):     {\n
Action.c(5):     \t\t\t\t\tjQuery.event.add( elem, "change._change", function( event ) {\n
Action.c(5):     \t\t\t\t\t\tif ( this.parentNode && !event.isSimulated && !event.isTrigger ) {\n
Action.c(5):     \t\t\t\t\t\t\tjQuery.event.simulate( "change", this.parentNode, event, true );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t});\n
Action.c(5):     \t\t\t\t\tjQuery._data( elem, "changeBubbles", true );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\thandle: function( event ) {\n
Action.c(5):     \t\t\tvar elem = event.target;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Swallow native change events from checkbox/radio, we already triggered them above
Action.c(5):     \n
Action.c(5):     \t\t\tif ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio"
Action.c(5):      && elem.type !== "checkbox") ) {\n
Action.c(5):     \t\t\t\treturn event.handleObj.handler.apply( this, arguments );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tteardown: function() {\n
Action.c(5):     \t\t\tjQuery.event.remove( this, "._change" );\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn !rformElems.test( this.nodeName );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Create "bubbling" focus and blur events\n
Action.c(5):     if ( !support.focusinBubbles ) {\n
Action.c(5):     \tjQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Attach a single capturing handler on the document while someone wants focusin/focus
Action.c(5):     out\n
Action.c(5):     \t\tvar handler = function( event ) {\n
Action.c(5):     \t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \n
Action.c(5):     \t\tjQuery.event.special[ fix ] = {\n
Action.c(5):     \t\t\tsetup: function() {\n
Action.c(5):     \t\t\t\tvar doc = this.ownerDocument || this,\n
Action.c(5):     \t\t\t\t\tattaches = jQuery._data( doc, fix );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( !attaches ) {\n
Action.c(5):     \t\t\t\t\tdoc.addEventListener( orig, handler, true );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tjQuery._data( doc, fix, ( attaches || 0 ) + 1 );\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\t\tteardown: function() {\n
Action.c(5):     \t\t\t\tvar doc = this.ownerDocument || this,\n
Action.c(5):     \t\t\t\t\tattaches = jQuery._data( doc, fix ) - 1;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( !attaches ) {\n
Action.c(5):     \t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n
Action.c(5):     \t\t\t\t\tjQuery._removeData( doc, fix );\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tjQuery._data( doc, fix, attaches );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \n
Action.c(5):     \ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n
Action.c(5):     \t\tvar type, origFn;\n
Action.c(5):     \n
Action.c(5):     \t\t// Types can be a map of types/handlers\n
Action.c(5):     \t\tif ( typeof types === "object" ) {\n
Action.c(5):     \t\t\t// ( types-Object, selector, data )\n
Action.c(5):     \t\t\tif ( typeof selector !== "string" ) {\n
Action.c(5):     \t\t\t\t// ( types-Object, data )\n
Action.c(5):     \t\t\t\tdata = data || selector;\n
Action.c(5):     \t\t\t\tselector = undefined;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tfor ( type in types ) {\n
Action.c(5):     \t\t\t\tthis.on( type, selector, data, types[ type ], one );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn this;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( data == null && fn == null ) {\n
Action.c(5):     \t\t\t// ( types, fn )\n
Action.c(5):     \t\t\tfn = selector;\n
Action.c(5):     \t\t\tdata = selector = undefined;\n
Action.c(5):     \t\t} else if ( fn == null ) {\n
Action.c(5):     \t\t\tif ( typeof selector === "string" ) {\n
Action.c(5):     \t\t\t\t// ( types, selector, fn )\n
Action.c(5):     \t\t\t\tfn = data;\n
Action.c(5):     \t\t\t\tdata = undefined;\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\t// ( types, data, fn )\n
Action.c(5):     \t\t\t\tfn = data;\n
Action.c(5):     \t\t\t\tdata = selector;\n
Action.c(5):     \t\t\t\tselector = undefined;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( fn === false ) {\n
Action.c(5):     \t\t\tfn = returnFalse;\n
Action.c(5):     \t\t} else if ( !fn ) {\n
Action.c(5):     \t\t\treturn this;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( one === 1 ) {\n
Action.c(5):     \t\t\torigFn = fn;\n
Action.c(5):     \t\t\tfn = function( event ) {\n
Action.c(5):     \t\t\t\t// Can use an empty set, since event contains the info\n
Action.c(5):     \t\t\t\tjQuery().off( event );\n
Action.c(5):     \t\t\t\treturn origFn.apply( this, arguments );\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t\t// Use same guid so caller can remove using origFn\n
Action.c(5):     \t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn this.each( function() {\n
Action.c(5):     \t\t\tjQuery.event.add( this, types, fn, data, selector );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \tone: function( types, selector, data, fn ) {\n
Action.c(5):     \t\treturn this.on( types, selector, data, fn, 1 );\n
Action.c(5):     \t},\n
Action.c(5):     \toff: function( types, selector, fn ) {\n
Action.c(5):     \t\tvar handleObj, type;\n
Action.c(5):     \t\tif ( types && types.preventDefault && types.handleObj ) {\n
Action.c(5):     \t\t\t// ( event )  dispatched jQuery.Event\n
Action.c(5):     \t\t\thandleObj = types.handleObj;\n
Action.c(5):     \t\t\tjQuery( types.delegateTarget ).off(\n
Action.c(5):     \t\t\t\thandleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.o
Action.c(5):     rigType,\n
Action.c(5):     \t\t\t\thandleObj.selector,\n
Action.c(5):     \t\t\t\thandleObj.handler\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \t\t\treturn this;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( typeof types === "object" ) {\n
Action.c(5):     \t\t\t// ( types-object [, selector] )\n
Action.c(5):     \t\t\tfor ( type in types ) {\n
Action.c(5):     \t\t\t\tthis.off( type, selector, types[ type ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn this;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( selector === false || typeof selector === "function" ) {\n
Action.c(5):     \t\t\t// ( types [, fn] )\n
Action.c(5):     \t\t\tfn = selector;\n
Action.c(5):     \t\t\tselector = undefined;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( fn === false ) {\n
Action.c(5):     \t\t\tfn = returnFalse;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\tjQuery.event.remove( this, types, fn, selector );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \ttrigger: function( type, data ) {\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\tjQuery.event.trigger( type, data, this );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \ttriggerHandler: function( type, data ) {\n
Action.c(5):     \t\tvar elem = this[0];\n
Action.c(5):     \t\tif ( elem ) {\n
Action.c(5):     \t\t\treturn jQuery.event.trigger( type, data, elem, true );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     function createSafeFragment( document ) {\n
Action.c(5):     \tvar list = nodeNames.split( "|" ),\n
Action.c(5):     \t\tsafeFrag = document.createDocumentFragment();\n
Action.c(5):     \n
Action.c(5):     \tif ( safeFrag.createElement ) {\n
Action.c(5):     \t\twhile ( list.length ) {\n
Action.c(5):     \t\t\tsafeFrag.createElement(\n
Action.c(5):     \t\t\t\tlist.pop()\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \treturn safeFrag;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figu
Action.c(5):     re|footer|" +\n
Action.c(5):     \t\t"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",\n
Action.c(5):     \trinlinejQuery = / jQuery\\d+="(?:null|\\d+)"/g,\n
Action.c(5):     \trnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\\\s/>]", "i"),\n
Action.c(5):     \trleadingWhitespace = /^\\s+/,\n
Action.c(5):     \trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,
Action.c(5):     \n
Action.c(5):     \trtagName = /<([\\w:]+)/,\n
Action.c(5):     \trtbody = /<tbody/i,\n
Action.c(5):     \trhtml = /<|&#?\\w+;/,\n
Action.c(5):     \trnoInnerhtml = /<(?:script|style|link)/i,\n
Action.c(5):     \t// checked="checked" or checked\n
Action.c(5):     \trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n
Action.c(5):     \trscriptType = /^$|\\/(?:java|ecma)script/i,\n
Action.c(5):     \trscriptTypeMasked = /^true\\/(.*)/,\n
Action.c(5):     \trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n
Action.c(5):     \n
Action.c(5):     \t// We have to close these tags to support XHTML (#13200)\n
Action.c(5):     \twrapMap = {\n
Action.c(5):     \t\toption: [ 1, "<select multiple='multiple'>", "</select>" ],\n
Action.c(5):     \t\tlegend: [ 1, "<fieldset>", "</fieldset>" ],\n
Action.c(5):     \t\tarea: [ 1, "<map>", "</map>" ],\n
Action.c(5):     \t\tparam: [ 1, "<object>", "</object>" ],\n
Action.c(5):     \t\tthead: [ 1, "<table>", "</table>" ],\n
Action.c(5):     \t\ttr: [ 2, "<table><tbody>", "</tbody></table>" ],\n
Action.c(5):     \t\tcol: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],\n
Action.c(5):     \t\ttd: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],\n
Action.c(5):     \n
Action.c(5):     \t\t// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,\n
Action.c(5):     \t\t// unless wrapped in a div with non-breaking characters in front of it.\n
Action.c(5):     \t\t_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>"  ]\n
Action.c(5):     \t},\n
Action.c(5):     \tsafeFragment = createSafeFragment( document ),\n
Action.c(5):     \tfragmentDiv = safeFragment.appendChild( document.createElement("div") );\n
Action.c(5):     \n
Action.c(5):     wrapMap.optgroup = wrapMap.option;\n
Action.c(5):     wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n
Action.c(5):     wrapMap.th = wrapMap.td;\n
Action.c(5):     \n
Action.c(5):     function getAll( context, tag ) {\n
Action.c(5):     \tvar elems, elem,\n
Action.c(5):     \t\ti = 0,\n
Action.c(5):     \t\tfound = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTa
Action.c(5):     gName( tag || "*" ) :\n
Action.c(5):     \t\t\ttypeof context.querySelectorAll !== strundefined ? context.querySelectorAll( tag || 
Action.c(5):     "*" ) :\n
Action.c(5):     \t\t\tundefined;\n
Action.c(5):     \n
Action.c(5):     \tif ( !found ) {\n
Action.c(5):     \t\tfor ( found = [], elems = context.childNodes || context; (elem = elems[i]) !=
Action.c(5): t=214005ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):      null; i++ ) {\n
Action.c(5):     \t\t\tif ( !tag || jQuery.nodeName( elem, tag ) ) {\n
Action.c(5):     \t\t\t\tfound.push( elem );\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tjQuery.merge( found, getAll( elem, tag ) );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n
Action.c(5):     \t\tjQuery.merge( [ context ], found ) :\n
Action.c(5):     \t\tfound;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Used in buildFragment, fixes the defaultChecked property\n
Action.c(5):     function fixDefaultChecked( elem ) {\n
Action.c(5):     \tif ( rcheckableType.test( elem.type ) ) {\n
Action.c(5):     \t\telem.defaultChecked = elem.checked;\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Support: IE<8\n
Action.c(5):     // Manipulating tables requires a tbody\n
Action.c(5):     function manipulationTarget( elem, content ) {\n
Action.c(5):     \treturn jQuery.nodeName( elem, "table" ) &&\n
Action.c(5):     \t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?\n
Action.c(5):     \n
Action.c(5):     \t\telem.getElementsByTagName("tbody")[0] ||\n
Action.c(5):     \t\t\telem.appendChild( elem.ownerDocument.createElement("tbody") ) :\n
Action.c(5):     \t\telem;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Replace/restore the type attribute of script elements for safe DOM manipulation\n
Action.c(5):     function disableScript( elem ) {\n
Action.c(5):     \telem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;\n
Action.c(5):     \treturn elem;\n
Action.c(5):     }\n
Action.c(5):     function restoreScript( elem ) {\n
Action.c(5):     \tvar match = rscriptTypeMasked.exec( elem.type );\n
Action.c(5):     \tif ( match ) {\n
Action.c(5):     \t\telem.type = match[1];\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\telem.removeAttribute("type");\n
Action.c(5):     \t}\n
Action.c(5):     \treturn elem;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Mark scripts as having already been evaluated\n
Action.c(5):     function setGlobalEval( elems, refElements ) {\n
Action.c(5):     \tvar elem,\n
Action.c(5):     \t\ti = 0;\n
Action.c(5):     \tfor ( ; (elem = elems[i]) != null; i++ ) {\n
Action.c(5):     \t\tjQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globa
Action.c(5):     lEval" ) );\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function cloneCopyEvent( src, dest ) {\n
Action.c(5):     \n
Action.c(5):     \tif ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {\n
Action.c(5):     \t\treturn;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tvar type, i, l,\n
Action.c(5):     \t\toldData = jQuery._data( src ),\n
Action.c(5):     \t\tcurData = jQuery._data( dest, oldData ),\n
Action.c(5):     \t\tevents = oldData.events;\n
Action.c(5):     \n
Action.c(5):     \tif ( events ) {\n
Action.c(5):     \t\tdelete curData.handle;\n
Action.c(5):     \t\tcurData.events = {};\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( type in events ) {\n
Action.c(5):     \t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n
Action.c(5):     \t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// make the cloned public data object a copy from the original\n
Action.c(5):     \tif ( curData.data ) {\n
Action.c(5):     \t\tcurData.data = jQuery.extend( {}, curData.data );\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function fixCloneNodeIssues( src, dest ) {\n
Action.c(5):     \tvar nodeName, e, data;\n
Action.c(5):     \n
Action.c(5):     \t// We do not need to do anything for non-Elements\n
Action.c(5):     \tif ( dest.nodeType !== 1 ) {\n
Action.c(5):     \t\treturn;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tnodeName = dest.nodeName.toLowerCase();\n
Action.c(5):     \n
Action.c(5):     \t// IE6-8 copies events bound via attachEvent when using cloneNode.\n
Action.c(5):     \tif ( !support.noCloneEvent && dest[ jQuery.expando ] ) {\n
Action.c(5):     \t\tdata = jQuery._data( dest );\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( e in data.events ) {\n
Action.c(5):     \t\t\tjQuery.removeEvent( dest, e, data.handle );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Event data gets referenced instead of copied if the expando gets copied too\n
Action.c(5):     \t\tdest.removeAttribute( jQuery.expando );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// IE blanks contents when cloning scripts, and tries to evaluate newly-set text\n
Action.c(5):     \tif ( nodeName === "script" && dest.text !== src.text ) {\n
Action.c(5):     \t\tdisableScript( dest ).text = src.text;\n
Action.c(5):     \t\trestoreScript( dest );\n
Action.c(5):     \n
Action.c(5):     \t// IE6-10 improperly clones children of object elements using classid.\n
Action.c(5):     \t// IE10 throws NoModificationAllowedError if parent is null, #12132.\n
Action.c(5):     \t} else if ( nodeName === "object" ) {\n
Action.c(5):     \t\tif ( dest.parentNode ) {\n
Action.c(5):     \t\t\tdest.outerHTML = src.outerHTML;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// This path appears unavoidable for IE9. When cloning an object\n
Action.c(5):     \t\t// element in IE9, the outerHTML strategy above is not sufficient.\n
Action.c(5):     \t\t// If the src has innerHTML and the destination does not,\n
Action.c(5):     \t\t// copy the src.innerHTML into the dest.innerHTML. #10324\n
Action.c(5):     \t\tif ( support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {\n
Action.c(5):     \t\t\tdest.innerHTML = src.innerHTML;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {\n
Action.c(5):     \t\t// IE6-8 fails to persist the checked state of a cloned checkbox\n
Action.c(5):     \t\t// or radio button. Worse, IE6-7 fail to give the cloned element\n
Action.c(5):     \t\t// a checked appearance if the defaultChecked value isn't also set\n
Action.c(5):     \n
Action.c(5):     \t\tdest.defaultChecked = dest.checked = src.checked;\n
Action.c(5):     \n
Action.c(5):     \t\t// IE6-7 get confused and end up setting the value of a cloned\n
Action.c(5):     \t\t// checkbox/radio button to an empty string instead of "on"\n
Action.c(5):     \t\tif ( dest.value !== src.value ) {\n
Action.c(5):     \t\t\tdest.value = src.value;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t// IE6-8 fails to return the selected option to the default selected\n
Action.c(5):     \t// state when cloning options\n
Action.c(5):     \t} else if ( nodeName === "option" ) {\n
Action.c(5):     \t\tdest.defaultSelected = dest.selected = src.defaultSelected;\n
Action.c(5):     \n
Action.c(5):     \t// IE6-8 fails to set the defaultValue to the correct value when\n
Action.c(5):     \t// cloning other types of input fields\n
Action.c(5):     \t} else if ( nodeName === "input" || nodeName === "textarea" ) {\n
Action.c(5):     \t\tdest.defaultValue = src.defaultValue;\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n
Action.c(5):     \t\tvar destElements, node, clone, i, srcElements,\n
Action.c(5):     \t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nod
Action.c(5):     eName + ">" ) ) {\n
Action.c(5):     \t\t\tclone = elem.cloneNode( true );\n
Action.c(5):     \n
Action.c(5):     \t\t// IE<=8 does not properly clone detached, unknown element nodes\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tfragmentDiv.innerHTML = elem.outerHTML;\n
Action.c(5):     \t\t\tfragmentDiv.removeChild( clone = fragmentDiv.firstChild );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( (!support.noCloneEvent || !support.noCloneChecked) &&\n
Action.c(5):     \t\t\t\t(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle
Action.c(5):     /2\n
Action.c(5):     \t\t\tdestElements = getAll( clone );\n
Action.c(5):     \t\t\tsrcElements = getAll( elem );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Fix all IE cloning issues\n
Action.c(5):     \t\t\tfor ( i = 0; (node = srcElements[i]) != null; ++i ) {\n
Action.c(5):     \t\t\t\t// Ensure that the destination node is not null; Fixes #9587\n
Action.c(5):     \t\t\t\tif ( destElements[i] ) {\n
Action.c(5):     \t\t\t\t\tfixCloneNodeIssues( node, destElements[i] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Copy the events from the original to the clone\n
Action.c(5):     \t\tif ( dataAndEvents ) {\n
Action.c(5):     \t\t\tif ( deepDataAndEvents ) {\n
Action.c(5):     \t\t\t\tsrcElements = srcElements || getAll( elem );\n
Action.c(5):     \t\t\t\tdestElements = destElements || getAll( clone );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tfor ( i = 0; (node = srcElements[i]) != null; i++ ) {\n
Action.c(5):     \t\t\t\t\tcloneCopyEvent( node, destElements[i] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tcloneCopyEvent( elem, clone );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Preserve script evaluation history\n
Action.c(5):     \t\tdestElements = getAll( clone, "script" );\n
Action.c(5):     \t\tif ( destElements.length > 0 ) {\n
Action.c(5):     \t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, "script" ) );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tdestElements = srcElements = node = null;\n
Action.c(5):     \n
Action.c(5):     \t\t// Return the cloned set\n
Action.c(5):     \t\treturn clone;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tbuildFragment: function( elems, context, scripts, selection ) {\n
Action.c(5):     \t\tvar j, elem, contains,\n
Action.c(5):     \t\t\ttmp, tag, tbody, wrap,\n
Action.c(5):     \t\t\tl = elems.length,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Ensure a safe fragment\n
Action.c(5):     \t\t\tsafe = createSafeFragment( context ),\n
Action.c(5):     \n
Action.c(5):     \t\t\tnodes = [],\n
Action.c(5):     \t\t\ti = 0;\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( ; i < l; i++ ) {\n
Action.c(5):     \t\t\telem = elems[ i ];\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( elem || elem === 0 ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Add nodes directly\n
Action.c(5):     \t\t\t\tif ( jQuery.type( elem ) === "object" ) {\n
Action.c(5):     \t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Convert non-html into a text node\n
Action.c(5):     \t\t\t\t} else if ( !rhtml.test( elem ) ) {\n
Action.c(5):     \t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Convert html into DOM nodes\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\ttmp = tmp || safe.appendChild( context.createElement("div") );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Deserialize a standard representation\n
Action.c(5):     \t\t\t\t\ttag = (rtagName.exec( elem ) || [ "", "" ])[ 1 ].toLowerCase();\n
Action.c(5):     \t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\ttmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[2];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Descend through wrappers to the right content\n
Action.c(5):     \t\t\t\t\tj = wrap[0];\n
Action.c(5):     \t\t\t\t\twhile ( j-- ) {\n
Action.c(5):     \t\t\t\t\t\ttmp = tmp.lastChild;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Manually add leading whitespace removed by IE\n
Action.c(5):     \t\t\t\t\tif ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {\n
Action.c(5):     \t\t\t\t\t\tnodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n
Action.c(5):     \t\t\t\t\tif ( !support.tbody ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n
Action.c(5):     \t\t\t\t\t\telem = tag === "table" && !rtbody.test( elem ) ?\n
Action.c(5):     \t\t\t\t\t\t\ttmp.firstChild :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// String was a bare <thead> or <tfoot>\n
Action.c(5):     \t\t\t\t\t\t\twrap[1] === "<table>" && !rtbody.test( elem ) ?\n
Action.c(5):     \t\t\t\t\t\t\t\ttmp :\n
Action.c(5):     \t\t\t\t\t\t\t\t0;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tj = elem && elem.childNodes.length;\n
Action.c(5):     \t\t\t\t\t\twhile ( j-- ) {\n
Action.c(5):     \t\t\t\t\t\t\tif ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) && !tbody.chil
Action.c(5):     dNodes.length ) {\n
Action.c(5):     \t\t\t\t\t\t\t\telem.removeChild( tbody );\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Fix #12392 for WebKit and IE > 9\n
Action.c(5):     \t\t\t\t\ttmp.textContent = "";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Fix #12392 for oldIE\n
Action.c(5):     \t\t\t\t\twhile ( tmp.firstChild ) {\n
Action.c(5):     \t\t\t\t\t\ttmp.removeChild( tmp.firstChild );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Remember the top-level container for proper cleanup\n
Action.c(5):     \t\t\t\t\ttmp = safe.lastChild;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Fix #11356: Clear elements from fragment\n
Action.c(5):     \t\tif ( tmp ) {\n
Action.c(5):     \t\t\tsafe.removeChild( tmp );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Reset defaultChecked for any radios and checkboxes\n
Action.c(5):     \t\t// about to be appended to the DOM in IE 6/7 (#8060)\n
Action.c(5):     \t\tif ( !support.appendChecked ) {\n
Action.c(5):     \t\t\tjQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\ti = 0;\n
Action.c(5):     \t\twhile ( (elem = nodes[ i++ ]) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// #4087 - If origin and destination elements are the same, and this is\n
Action.c(5):     \t\t\t// that element, do not do anything\n
Action.c(5):     \t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n
Action.c(5):     \t\t\t\tcontinue;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Append to fragment\n
Action.c(5):     \t\t\ttmp = getAll( safe.appendChild( elem ), "script" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Preserve script evaluation history\n
Action.c(5):     \t\t\tif ( contains ) {\n
Action.c(5):     \t\t\t\tsetGlobalEval( tmp );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Capture executables\n
Action.c(5):     \t\t\tif ( scripts ) {\n
Action.c(5):     \t\t\t\tj = 0;\n
Action.c(5):     \t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n
Action.c(5):     \t\t\t\t\tif ( rscriptType.test( elem.type || "" ) ) {\n
Action.c(5):     \t\t\t\t\t\tscripts.push( elem );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\ttmp = null;\n
Action.c(5):     \n
Action.c(5):     \t\treturn safe;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tcleanData: function( elems, /* internal */ acceptData ) {\n
Action.c(5):     \t\tvar elem, type, id, data,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tinternalKey = jQuery.expando,\n
Action.c(5):     \t\t\tcache = jQuery.cache,\n
Action.c(5):     \t\t\tdeleteExpando = support.deleteExpando,\n
Action.c(5):     \t\t\tspecial = jQuery.event.special;\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n
Action.c(5):     \t\t\tif ( acceptData || jQuery.acceptData( elem ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tid = elem[ internalKey ];\n
Action.c(5):     \t\t\t\tdata = id && cache[ id ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( data ) {\n
Action.c(5):     \t\t\t\t\tif ( data.events ) {\n
Action.c(5):     \t\t\t\t\t\tfor ( type in data.events ) {\n
Action.c(5):     \t\t\t\t\t\t\tif ( special[ type ] ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n
Action.c(5):     \t\t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Remove cache only if it was not already removed by jQuery.event.remove\n
Action.c(5):     \t\t\t\t\tif ( cache[ id ] ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tdelete cache[ id ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// IE does not allow us to delete expando properties from nodes,\n
Action.c(5):     \t\t\t\t\t\t// nor does it have a removeAttribute function on Document nodes;\n
Action.c(5):     \t\t\t\t\t\t// we must handle all of these cases\n
Action.c(5):     \t\t\t\t\t\tif ( deleteExpando ) {\n
Action.c(5):     \t\t\t\t\t\t\tdelete elem[ internalKey ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t} else if ( typeof elem.removeAttribute !== strundefined ) {\n
Action.c(5):     \t\t\t\t\t\t\telem.removeAttribute( internalKey );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\telem[ internalKey ] = null;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tdeletedIds.push( id );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \ttext: function( value ) {\n
Action.c(5):     \t\treturn access( this, function( value ) {\n
Action.c(5):     \t\t\treturn value === undefined ?\n
Action.c(5):     \t\t\t\tjQuery.text( this ) :\n
Action.c(5):     \t\t\t\tthis.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNo
Action.c(5):     de( value ) );\n
Action.c(5):     \t\t}, null, value, arguments.length );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tappend: function() {\n
Action.c(5):     \t\treturn this.domManip( arguments, function( elem ) {\n
Action.c(5):     \t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n
Action.c(5):     \t\t\t\tvar target = manipulationTarget( this, elem );\n
Action.c(5):     \t\t\t\ttarget.appendChild( elem );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tprepend: function() {\n
Action.c(5):     \t\treturn this.domManip( arguments, function( elem ) {\n
Action.c(5):     \t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n
Action.c(5):     \t\t\t\tvar target = manipulationTarget( this, elem );\n
Action.c(5):     \t\t\t\ttarget.insertBefore( elem, target.firstChild );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tbefore: function() {\n
Action.c(5):     \t\treturn this.domManip( arguments, function( elem ) {\n
Action.c(5):     \t\t\tif ( this.parentNode ) {\n
Action.c(5):     \t\t\t\tthis.parentNode.insertBefore( elem, this );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tafter: function() {\n
Action.c(5):     \t\treturn this.domManip( arguments, function( elem ) {\n
Action.c(5):     \t\t\tif ( this.parentNode ) {\n
Action.c(5):     \t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tremove: function( selector, keepData /* Internal Use Only */ ) {\n
Action.c(5):     \t\tvar elem,\n
Action.c(5):     \t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n
Action.c(5):     \t\t\ti = 0;\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( !keepData && elem.nodeType === 1 ) {\n
Action.c(5):     \t\t\t\tjQuery.cleanData( getAll( elem ) );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( elem.parentNode ) {\n
Action.c(5):     \t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n
Action.c(5):     \t\t\t\t\tsetGlobalEval( getAll( elem, 
Action.c(5): t=214010ms: 6372-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     "script" ) );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\telem.parentNode.removeChild( elem );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tempty: function() {\n
Action.c(5):     \t\tvar elem,\n
Action.c(5):     \t\t\ti = 0;\n
Action.c(5):     \n
Action.c(5):     \t\tfor ( ; (elem = this[i]) != null; i++ ) {\n
Action.c(5):     \t\t\t// Remove element nodes and prevent memory leaks\n
Action.c(5):     \t\t\tif ( elem.nodeType === 1 ) {\n
Action.c(5):     \t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Remove any remaining nodes\n
Action.c(5):     \t\t\twhile ( elem.firstChild ) {\n
Action.c(5):     \t\t\t\telem.removeChild( elem.firstChild );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If this is a select, ensure that it displays empty (#12336)\n
Action.c(5):     \t\t\t// Support: IE<9\n
Action.c(5):     \t\t\tif ( elem.options && jQuery.nodeName( elem, "select" ) ) {\n
Action.c(5):     \t\t\t\telem.options.length = 0;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tclone: function( dataAndEvents, deepDataAndEvents ) {\n
Action.c(5):     \t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n
Action.c(5):     \t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.map(function() {\n
Action.c(5):     \t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \thtml: function( value ) {\n
Action.c(5):     \t\treturn access( this, function( value ) {\n
Action.c(5):     \t\t\tvar elem = this[ 0 ] || {},\n
Action.c(5):     \t\t\t\ti = 0,\n
Action.c(5):     \t\t\t\tl = this.length;\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( value === undefined ) {\n
Action.c(5):     \t\t\t\treturn elem.nodeType === 1 ?\n
Action.c(5):     \t\t\t\t\telem.innerHTML.replace( rinlinejQuery, "" ) :\n
Action.c(5):     \t\t\t\t\tundefined;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// See if we can take a shortcut and just use innerHTML\n
Action.c(5):     \t\t\tif ( typeof value === "string" && !rnoInnerhtml.test( value ) &&\n
Action.c(5):     \t\t\t\t( support.htmlSerialize || !rnoshimcache.test( value )  ) &&\n
Action.c(5):     \t\t\t\t( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&\n
Action.c(5):     \t\t\t\t!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tvalue = value.replace( rxhtmlTag, "<$1></$2>" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\tfor (; i < l; i++ ) {\n
Action.c(5):     \t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n
Action.c(5):     \t\t\t\t\t\telem = this[i] || {};\n
Action.c(5):     \t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n
Action.c(5):     \t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n
Action.c(5):     \t\t\t\t\t\t\telem.innerHTML = value;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\telem = 0;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// If using innerHTML throws an exception, use the fallback method\n
Action.c(5):     \t\t\t\t} catch(e) {}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( elem ) {\n
Action.c(5):     \t\t\t\tthis.empty().append( value );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}, null, value, arguments.length );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \treplaceWith: function() {\n
Action.c(5):     \t\tvar arg = arguments[ 0 ];\n
Action.c(5):     \n
Action.c(5):     \t\t// Make the changes, replacing each context element with the new content\n
Action.c(5):     \t\tthis.domManip( arguments, function( elem ) {\n
Action.c(5):     \t\t\targ = this.parentNode;\n
Action.c(5):     \n
Action.c(5):     \t\t\tjQuery.cleanData( getAll( this ) );\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( arg ) {\n
Action.c(5):     \t\t\t\targ.replaceChild( elem, this );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\t// Force removal if there was no new content (e.g., from empty arguments)\n
Action.c(5):     \t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tdetach: function( selector ) {\n
Action.c(5):     \t\treturn this.remove( selector, true );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tdomManip: function( args, callback ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Flatten any nested arrays\n
Action.c(5):     \t\targs = concat.apply( [], args );\n
Action.c(5):     \n
Action.c(5):     \t\tvar first, node, hasScripts,\n
Action.c(5):     \t\t\tscripts, doc, fragment,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tl = this.length,\n
Action.c(5):     \t\t\tset = this,\n
Action.c(5):     \t\t\tiNoClone = l - 1,\n
Action.c(5):     \t\t\tvalue = args[0],\n
Action.c(5):     \t\t\tisFunction = jQuery.isFunction( value );\n
Action.c(5):     \n
Action.c(5):     \t\t// We can't cloneNode fragments that contain checked, in WebKit\n
Action.c(5):     \t\tif ( isFunction ||\n
Action.c(5):     \t\t\t\t( l > 1 && typeof value === "string" &&\n
Action.c(5):     \t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n
Action.c(5):     \t\t\treturn this.each(function( index ) {\n
Action.c(5):     \t\t\t\tvar self = set.eq( index );\n
Action.c(5):     \t\t\t\tif ( isFunction ) {\n
Action.c(5):     \t\t\t\t\targs[0] = value.call( this, index, self.html() );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tself.domManip( args, callback );\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( l ) {\n
Action.c(5):     \t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n
Action.c(5):     \t\t\tfirst = fragment.firstChild;\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( fragment.childNodes.length === 1 ) {\n
Action.c(5):     \t\t\t\tfragment = first;\n
Action.c(5): t=214012ms: 260-byte response headers for "http://10.184.129.208/Platform/app/common/behaviors/img-thumb.js" (RelFrameId=, Internal ID=291)
Action.c(5):     \t\t\t}\n
Action.c(135): t=214012ms: 279-byte response headers for "http://10.184.129.208/Platform//account/login" (RelFrameId=1, Internal ID=327)
Action.c(5):     \n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \t\t\tif ( first ) {\n
Action.c(135):     HTTP/1.1 302 Found\r\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     \t\t\t\tscripts = jQuery.map( getAll( fragment, "script" ), disableScript );\n
Action.c(135):     Cache-Control: private\r\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \t\t\t\thasScripts = scripts.length;\n
Action.c(135):     Content-Type: text/html; charset=utf-8\r\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \n
Action.c(135):     Location: /Platform/workarea\r\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     \t\t\t\t// Use the original fragment for the last item instead of the first because it can
Action.c(135):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):      end up\n
Action.c(135):     X-AspNetMvc-Version: 5.2\r\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \t\t\t\t// being emptied incorrectly in certain situations (#8070).\n
Action.c(135):     X-AspNet-Version: 4.0.30319\r\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:09 GMT\r\n
Action.c(5):     \t\t\t\tfor ( ; i < l; i++ ) {\n
Action.c(135):     X-Powered-By: ASP.NET\r\n
Action.c(5):     Content-Length: 1673\r\n
Action.c(5):     \t\t\t\t\tnode = fragment;\n
Action.c(135):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(135):     Content-Length: 135\r\n
Action.c(5):     \t\t\t\t\tif ( i !== iNoClone ) {\n
Action.c(135):     \r\n
Action.c(5):     \t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n
Action.c(5):     \t\t\t\t\t\tif ( hasScripts ) {\n
Action.c(5):     \t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, "script" ) );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(135): t=214012ms: 135-byte response body for "http://10.184.129.208/Platform//account/login" (RelFrameId=1, Internal ID=327)
Action.c(5):     \t\t\t\t\t}\n
Action.c(135):     <html><head><title>Object moved</title></head><body>\r\n
Action.c(5):     \n
Action.c(5): t=214012ms: 1673-byte response body for "http://10.184.129.208/Platform/app/common/behaviors/img-thumb.js" (RelFrameId=, Internal ID=291)
Action.c(135):     <h2>Object moved to <a href="/Platform/workarea">here</a>.</h2>\r\n
Action.c(5):     \t\t\t\t\tcallback.call( this[i], node, i );\n
Action.c(135):     </body></html>\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     ï»\xBF\r\n
Action.c(5):     \n
Action.c(5):     commonModule.directive('imgThumb', ['$window', function ($window) {\r\n
Action.c(5):     \t\t\t\tif ( hasScripts ) {\n
Action.c(135): Redirecting "http://10.184.129.208/Platform//account/login" (redirection depth is 0)  	[MsgId: MMSG-26694]
Action.c(5):         var helper = {\r\n
Action.c(5):     \t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n
Action.c(5):             support: !!($window.FileReader && $window.CanvasRenderingContext2D),\r\n
Action.c(5):     \n
Action.c(135): To location "http://10.184.129.208/Platform/workarea"  	[MsgId: MMSG-26693]
Action.c(5):             isFile: function (item) {\r\n
Action.c(5):     \t\t\t\t\t// Reenable scripts\n
Action.c(5):                 return angular.isObject(item) && item instanceof $window.File;\r\n
Action.c(5):     \t\t\t\t\tjQuery.map( scripts, restoreScript );\n
Action.c(5):             },\r\n
Action.c(5):     \n
Action.c(5):             isImage: function (file) {\r\n
Action.c(5):     \t\t\t\t\t// Evaluate executable scripts on first document insertion\n
Action.c(5):                 var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';\r\n
Action.c(5):     \t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n
Action.c(5):                 return '|jpg|png|jpeg|bmp|gif|'.indexOf(type) !== -1;\r\n
Action.c(5):     \t\t\t\t\t\tnode = scripts[ i ];\n
Action.c(5):             }\r\n
Action.c(5):     \t\t\t\t\t\tif ( rscriptType.test( node.type || "" ) &&\n
Action.c(5):         };\r\n
Action.c(5):     \t\t\t\t\t\t\t!jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node ) ) {\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):         return {\r\n
Action.c(5):     \t\t\t\t\t\t\tif ( node.src ) {\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):     \t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n
Action.c(5):             template: '<canvas/>',\r\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n
Action.c(5):             link: function (scope, element, attributes) {\r\n
Action.c(5):     \t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n
Action.c(5):                 if (!helper.support)\r\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t} else {\n
Action.c(5):                     return;\r\n
Action.c(5):     \t\t\t\t\t\t\t\tjQuery.globalEval( ( node.text || node.textContent || node.innerHTML || ""
Action.c(5):      ).replace( rcleanScript, "" ) );\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):                 var params = scope.$eval(attributes.imgThumb);\r\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):                 if (!helper.isFile(params.file))\r\n
Action.c(5):     \t\t\t\t// Fix #11809: Avoid leaking memory\n
Action.c(5):     \t\t\t\tfragment = first = null;\n
Action.c(5):                     return;\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):                 if (!helper.isImage(params.file))\r\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):                     return;\r\n
Action.c(5):     \t\treturn this;\n
Action.c(5):     \r\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):                 var canvas = element.find('canvas');\r\n
Action.c(5):     \n
Action.c(5):                 var reader = new FileReader();\r\n
Action.c(5):     jQuery.each({\n
Action.c(5):     \r\n
Action.c(5):     \tappendTo: "append",\n
Action.c(5):                 reader.onload = onLoadFile;\r\n
Action.c(5):     \tprependTo: "prepend",\n
Action.c(5):                 reader.readAsDataURL(params.file);\r\n
Action.c(5):     \tinsertBefore: "before",\n
Action.c(5):     \r\n
Action.c(5):     \tinsertAfter: "after",\n
Action.c(5):                 function onLoadFile(event) {\r\n
Action.c(5):     \treplaceAll: "replaceWith"\n
Action.c(5):                     var img = new Image();\r\n
Action.c(5):     }, function( name, original ) {\n
Action.c(5):                     img.onload = onLoadImage;\r\n
Action.c(5):     \tjQuery.fn[ name ] = function( selector ) {\n
Action.c(5):                     img.src = event.target.result;\r\n
Action.c(5):     \t\tvar elems,\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \r\n
Action.c(5):     \t\t\tret = [],\n
Action.c(5):                 function onLoadImage() {\r\n
Action.c(5):     \t\t\tinsert = jQuery( selector ),\n
Action.c(5):                     var width = params.width || this.width / this.height * params.height;\r\n
Action.c(5):     \t\t\tlast = insert.length - 1;\n
Action.c(5):                     var height = params.height || this.height / this.width * params.width;\r\n
Action.c(5):     \n
Action.c(5):                     canvas.attr({ width: width, height: height });\r\n
Action.c(5):     \t\tfor ( ; i <= last; i++ ) {\n
Action.c(5):                     canvas[0].getContext('2d').drawImage(this, 0, 0, width, height);\r\n
Action.c(5):     \t\t\telems = i === last ? this : this.clone(true);\n
Action.c(5):                 }\r\n
Action.c(5):     \t\t\tjQuery( insert[i] )[ original ]( elems );\n
Action.c(5):             }\r\n
Action.c(5):     \n
Action.c(5):         };\r\n
Action.c(5):     \t\t\t// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()\n
Action.c(5):     }]);\r\n
Action.c(5):     \t\t\tpush.apply( ret, elems.get() );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.pushStack( ret );\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5): t=214013ms: 259-byte response headers for "http://10.184.129.208/Platform/app/common/behaviors/vt-enter.js" (RelFrameId=, Internal ID=294)
Action.c(5):     var iframe,\n
Action.c(5):     \telemdisplay = {};\n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     /**\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):      * Retrieve the actual display of a element\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):      * @param {String} name nodeName of the element\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):      * @param {Object} doc Document object\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):      */\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     // Called only from within defaultDisplay\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:09 GMT\r\n
Action.c(5):     function actualDisplay( name, doc ) {\n
Action.c(5):     Content-Length: 682\r\n
Action.c(5):     \tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n
Action.c(5):     \r\n
Action.c(5):     \n
Action.c(5):     \t\t// getDefaultComputedStyle might be reliably used only on attached element\n
Action.c(5):     \t\tdisplay = window.getDefaultComputedStyle ?\n
Action.c(5): t=214013ms: 682-byte response body for "http://10.184.129.208/Platform/app/common/behaviors/vt-enter.js" (RelFrameId=, Internal ID=294)
Action.c(5):     \n
Action.c(5):     \t\t\t// Use of this method is a temporary fix (more like optmization) until something bet
Action.c(5):     ï»¿commonModule.directive('vtEnter', ['$parse', function ($parse) {\r\n
Action.c(5):     ter comes along,\n
Action.c(5):         return {\r\n
Action.c(5):     \t\t\t// since it was removed from specification and supported only in FF\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):     \t\t\twindow.getDefaultComputedStyle( elem[ 0 ] ).display : jQuery.css( elem[ 0 ], "displa
Action.c(5):             compile: function (element, attr) {\r\n
Action.c(5):     y" );\n
Action.c(5):                 var fn = $parse(attr.vtEnter, null, true);\r\n
Action.c(5):     \n
Action.c(5):                 return function (scope, element) {\r\n
Action.c(5):     \t// We don't have any data stored on the element,\n
Action.c(1509): t=214013ms: 259-byte response headers for "http://10.184.129.208/webapi/api/worklist/UpdateStatusByAccessionNumber" (RelFrameId=1, Internal ID=247)
Action.c(5):                     element.on("keydown keypress", function (event) {\r\n
Action.c(5):     \t// so use "detach"
Action.c(5):                         if (event.which === 13) {\r\n
Action.c(1509):     HTTP/1.1 200 OK\r\n
Action.c(5):                             // This will pass event where the expression used $event\r\n
Action.c(1509):     Cache-Control: no-cache\r\n
Action.c(5):                             fn(scope, { $event: event });\r\n
Action.c(1509):     Pragma: no-cache\r\n
Action.c(5): t=214013ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):                             scope.$apply();\r\n
Action.c(1509):     Content-Type: application/json; charset=utf-8\r\n
Action.c(5):                             event.preventDefault();\r\n
Action.c(1509):     Expires: -1\r\n
Action.c(5):                         }\r\n
Action.c(1509):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):                     });\r\n
Action.c(1509):     X-AspNet-Version: 4.0.30319\r\n
Action.c(5):                 };\r\n
Action.c(1509):     X-Powered-By: ASP.NET\r\n
Action.c(5):             }\r\n
Action.c(1509):     Date: Mon, 11 Dec 2017 03:06:09 GMT\r\n
Action.c(5):         };\r\n
Action.c(1509):     Content-Length: 546\r\n
Action.c(5): t=214013ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     }]);\r\n
Action.c(1509):     \r\n
Action.c(5):      method as fast way to get rid of the element\n
Action.c(5):     \telem.detach();\n
Action.c(5):     \n
Action.c(5):     \treturn display;\n
Action.c(1509): t=214013ms: 546-byte response body for "http://10.184.129.208/webapi/api/worklist/UpdateStatusByAccessionNumber" (RelFrameId=1, Internal ID=247)
Action.c(5): t=214013ms: 307-byte response headers for "http://10.184.129.208/Platform/app/common/controls/drag-sortable/Sortable.js" (RelFrameId=, Internal ID=295)
Action.c(5):     }\n
Action.c(1509):     {"isSucceed":true,"workItem":{"patientName":"CN20171211105227677","accessionNumber":"A2017
Action.c(5):     \n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(1509):     1211105227677","patientID":"P20171211105227677","studyDate":"2017-12-11","studyTime":"10:4
Action.c(5):     /**\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(1509):     7:17","patientSex":"ç\xB7","patientType":"3","holdFlag":1,"printMode":2,"examName":null,"
Action.c(5):      * Try to determine the default display value of an element\n
Action.c(5):     Content-Encoding: gzip\r\n
Action.c(1509):     bodayPart":null,"filmPrintStatus":-1,"filmPrintTime":null,"filmDeleteStatus":0,"imageCount
Action.c(5):      * @param {String} nodeName\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):      */\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(1509):     ":0,"reportStatus":2,"reportPrintStatus":2,"reportPrintTime":null,"reportCount":1,"modalit
Action.c(5):     function defaultDisplay( nodeName ) {\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(1509):     y":"RF","deleteStatus":0,"completeStatus":null,"reportInfos":null,"filmInfos":null},"messa
Action.c(5):     \tvar doc = document,\n
Action.c(5):     Vary: Accept-Encoding\r\n
Action.c(1509):     ge":null}
Action.c(5):     \t\tdisplay = elemdisplay[ nodeName ];\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \tif ( !display ) {\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:09 GMT\r\n
Action.c(1509): HTML parsing not performed for Content-Type "application/json" ("ParseHtmlContentType" Run-Time Setting is "TEXT"). URL="http://10.184.129.208/webapi/api/worklist/UpdateStatusByAccessionNumber"  	[MsgId: MMSG-26548]
Action.c(5):     \t\tdisplay = actualDisplay( nodeName, doc );\n
Action.c(5):     Content-Length: 9813\r\n
Action.c(5):     \n
Action.c(5):     \r\n
Action.c(5):     \t\t// If the simple way fails, read from inside an iframe\n
Action.c(5):     \t\tif ( display === "none" || !display ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Use the already-created iframe if possible\n
Action.c(5): t=214013ms: 9813-byte ENCODED response body received for "http://10.184.129.208/Platform/app/common/controls/drag-sortable/Sortable.js" (RelFrameId=, Internal ID=295)
Action.c(5):     \t\t\tiframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appe
Action.c(1509): web_custom_request("SetHoldingTime") was successful, 546 body bytes, 259 header bytes  	[MsgId: MMSG-26386]
Action.c(5):     ndTo( doc.documentElement );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n
Action.c(5):     \t\t\tdoc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;\n
Action.c(1519): Notify: Transaction "SetPrintMode" ended with a "Pass" status (Duration: 0.1128 Wasted Time: 0.0000).	[MsgId: MMSG-16871]
Action.c(5):     \n
Action.c(5):     \t\t\t// Support: IE\n
Action.c(5):     \t\t\tdoc.write();\n
The result is:  true	[MsgId: MMSG-17999]
Action.c(5):     \t\t\tdoc.close();\n
Action.c(5): t=214013ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/app/common/controls/drag-sortable/Sortable.js" (RelFrameId=, Internal ID=295)
Action.c(5):     \n
Action.c(5):     /*\n
Action.c(1528): lr_think_time: 5.00 seconds.	[MsgId: MMSG-15948]
Action.c(5):     \t\t\tdisplay = actualDisplay( nodeName, doc );\n
Action.c(5):      * Sortable\n
Action.c(5):     \t\t\tiframe.detach();\n
Action.c(5):      * @author\tRubaXa   <trash@rubaxa.org>\n
Action.c(5):     \t\t}\n
Action.c(5):      * @license MIT\n
Action.c(5):     \n
Action.c(5):      */\n
Action.c(5):     \t\t// Store the correct default display\n
Action.c(5):     \n
Action.c(5):     \t\telemdisplay[ nodeName ] = display;\n
Action.c(5):     (function sortableModule(factory) {\n
Action.c(5):     \t}\n
Action.c(5):     \t"use strict";\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \treturn display;\n
Action.c(5):     \tif (typeof define === "function" && define.amd) {\n
Action.c(5):     }\n
Action.c(5):     \t\tdefine(factory);\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \telse if (typeof module != "undefined" && typeof module.exports != "undefined") {\n
Action.c(5):     (function() {\n
Action.c(5):     \t\tmodule.exports = factory();\n
Action.c(5):     \tvar a, shrinkWrapBlocksVal,\n
Action.c(5):     \t}\n
Action.c(5):     \t\tdiv = document.createElement( "div" ),\n
Action.c(5):     \telse {\n
Action.c(5):     \t\tdivReset =\n
Action.c(5):     \t\t/* jshint sub:true */\n
Action.c(5):     \t\t\t"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;"
Action.c(5):     \t\twindow["Sortable"] = factory();\n
Action.c(5):      +\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t"display:block;padding:0;margin:0;border:0";\n
Action.c(5):     })(function sortableFactory() {\n
Action.c(5):     \n
Action.c(5):     \t"use strict";\n
Action.c(5):     \t// Setup\n
Action.c(5):     \n
Action.c(5):     \tdiv.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";\n
Action.c(5):     \tif (typeof window == "undefined" || !window.document) {\n
Action.c(5):     \ta = div.getElementsByTagName( "a" )[ 0 ];\n
Action.c(5):     \t\treturn function sortableError() {\n
Action.c(5):     \n
Action.c(5):     \t\t\tthrow new Error("Sortable.js requires a window with a document");\n
Action.c(5):     \ta.style.cssText = "float:left;opacity:.5";\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \t// Make sure that element opacity exists\n
Action.c(5):     \n
Action.c(5):     \t// (IE uses filter instead)\n
Action.c(5):     \tvar dragEl,\n
Action.c(5):     \t// Use a regex to work around a WebKit issue. See #5145\n
Action.c(5):     \t\tparentEl,\n
Action.c(5):     \tsupport.opacity = /^0.5/.test( a.style.opacity );\n
Action.c(5):     \t\tghostEl,\n
Action.c(5):     \n
Action.c(5):     \t\tcloneEl,\n
Action.c(5):     \t// Verify style float existence\n
Action.c(5):     \t\trootEl,\n
Action.c(5):     \t// (IE uses styleFloat instead of cssFloat)\n
Action.c(5):     \t\tnextEl,\n
Action.c(5):     \tsupport.cssFloat = !!a.style.cssFloat;\n
Action.c(5):     \t\tlastDownEl,\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tdiv.style.backgroundClip = "content-box";\n
Action.c(5):     \t\tscrollEl,\n
Action.c(5):     \tdiv.cloneNode( true ).style.backgroundClip = "";\n
Action.c(5):     \t\tscrollParentEl,\n
Action.c(5):     \tsupport.clearCloneStyle = div.style.backgroundClip === "content-box";\n
Action.c(5):     \t\tscrollCustomFn,\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t// Null elements to avoid leaks in IE.\n
Action.c(5):     \t\tlastEl,\n
Action.c(5):     \ta = div = null;\n
Action.c(5):     \t\tlastCSS,\n
Action.c(5):     \n
Action.c(5):     \t\tlastParentCSS,\n
Action.c(5):     \tsupport.shrinkWrapBlocks = function() {\n
Action.c(5):     \n
Action.c(5):     \t\tvar body, container, div, containerStyles;\n
Action.c(5):     \t\toldIndex,\n
Action.c(5):     \n
Action.c(5):     \t\tnewIndex,\n
Action.c(5):     \t\tif ( shrinkWrapBlocksVal == null ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tbody = document.getElementsByTagName( "body" )[ 0 ];\n
Action.c(5):     \t\tactiveGroup,\n
Action.c(5):     \t\t\tif ( !body ) {\n
Action.c(5):     \t\tputSortable,\n
Action.c(5):     \t\t\t\t// Test fired too early or in an unsupported environment, exit.\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\tautoScroll = {},\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\ttapEvt,\n
Action.c(5):     \t\t\tcontainerStyles = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px";\n
Action.c(5):     \t\ttouchEvt,\n
Action.c(5):     \t\t\tcontainer = document.createElement( "div" );\n
Action.c(5):     \n
Action.c(5):     \t\t\tdiv = document.createElement( "div" );\n
Action.c(5):     \t\tmoved,\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tbody.appendChild( container ).appendChild( div );\n
Action.c(5):     \t\t/** @const */\n
Action.c(5):     \n
Action.c(5):     \t\tR_SPACE = /\\s+/g,\n
Action.c(5):     \t\t\t// Will be changed later if needed.\n
Action.c(5):     \t\tR_FLOAT = /left|right|inline/,\n
Action.c(5):     \t\t\tshrinkWrapBlocksVal = false;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\texpando = 'Sortable' + (new Date).getTime(),\n
Action.c(5):     \t\t\tif ( typeof div.style.zoom !== strundefined ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Support: IE6\n
Action.c(5):     \t\twin = window,\n
Action.c(5):     \t\t\t\t// Check if elements with layout shrink-wrap their children\n
Action.c(5):     \t\tdocument = win.document,\n
Action.c(5):     \t\t\t\tdiv.style.cssText = divReset + ";width:1px;padding:1px;zoom:1";\n
Action.c(5):     \t\tparseInt = win.parseInt,\n
Action.c(5):     \t\t\t\tdiv.innerHTML = "<div></div>";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tdiv.firstChild.style.width = "5px";\n
Action.c(5):     \t\t$ = win.jQuery || win.Zepto,\n
Action.c(5):     \t\t\t\tshrinkWrapBlocksVal = div.offsetWidth !== 3;\n
Action.c(5):     \t\tPolymer = win.Polymer,\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tcaptureMode = false,\n
Action.c(5):     \t\t\tbody.removeChild( container );\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tsupportDraggable = !!('draggable' in document.createElement('div')),\n
Action.c(5):     \t\t\t// Null elements to avoid leaks in IE.\n
Action.c(5):     \t\tsupportCssPointerEvents = (function (el) {\n
Action.c(5):     \t\t\tbody = container = div = null;\n
Action.c(5):     \t\t\t// false when IE11\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\tif (!!navigator.userAgent.match(/Trident.*rv[ :]?11\\./)) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\treturn shrinkWrapBlocksVal;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\tel = document.createElement('x');\n
Action.c(5):     \n
Action.c(5):     \t\t\tel.style.cssText = 'pointer-events:auto';\n
Action.c(5):     })();\n
Action.c(5):     var rmargin = (/^margin/);\n
Action.c(5):     \t\t\treturn el.style.pointerEvents === 'auto';\n
Action.c(5):     \n
Action.c(5):     \t\t})(),\n
Action.c(5):     var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t_silent = false,\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tabs = Math.abs,\n
Action.c(5):     var getStyles, curCSS,\n
Action.c(5):     \t\tmin = Math.min,\n
Action.c(5):     \trposition = /^(top|right|bottom|left)$/;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tsavedInputChecked = [],\n
Action.c(5):     if ( window.getComputedStyle ) {\n
Action.c(5):     \t\ttouchDragOverListeners = [],\n
Action.c(5):     \tgetStyles = function( elem ) {\n
Action.c(5):     \n
Action.c(5):     \t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n
Action.c(5):     \t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/r
Action.c(5):     \t};\n
Action.c(5):     ootEl) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n
Action.c(5):     \tcurCSS = function( elem, name, computed ) {\n
Action.c(5):     \t\t\tif (rootEl && options.scroll) {\n
Action.c(5):     \t\tvar width, minWidth, maxWidth, ret,\n
Action.c(5):     \t\t\t\tvar _this = rootEl[expando],\n
Action.c(5):     \t\t\tstyle = elem.style;\n
Action.c(5):     \t\t\t\t\tel,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\trect,\n
Action.c(5):     \t\tcomputed = computed || getStyles( elem );\n
Action.c(5):     \t\t\t\t\tsens = options.scrollSensitivity,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tspeed = options.scrollSpeed,\n
Action.c(5):     \t\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n
Action.c(5):     \n
Action.c(5):     \t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n
Action.c(5):     \t\t\t\t\tx = evt.clientX,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\ty = evt.clientY,\n
Action.c(5):     \t\tif ( computed ) {\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\twinWidth = window.innerWidth,\n
Action.c(5):     \t\t\tif ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n
Action.c(5):     \t\t\t\t\twinHeight = window.innerHeight,\n
Action.c(5):     \t\t\t\tret = jQuery.style( elem, name );\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\tvx,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tvy,\n
Action.c(5):     \t\t\t// A tribute to the "awesome hack by Dean Edwards"\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for marg
Action.c(5):     \t\t\t\t\tscrollOffsetX,\n
Action.c(5):     in-right\n
Action.c(5):     \t\t\t\t\tscrollOffsetY\n
Action.c(5):     \t\t\t// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width 
Action.c(5):     \t\t\t\t;\n
Action.c(5):     seems to be reliably pixels\n
Action.c(5):     \n
Action.c(5):     \t\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-val
Action.c(5):     \t\t\t\t// Delect scrollEl\n
Action.c(5):     ues\n
Action.c(5):     \t\t\t\tif (scrollParentEl !== rootEl) {\n
Action.c(5):     \t\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n
Action.c(5):     \t\t\t\t\tscrollEl = options.scroll;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tscrollParentEl = rootEl;\n
Action.c(5):     \t\t\t\t// Remember the original values\n
Action.c(5):     \t\t\t\t\tscrollCustomFn = options.scrollFn;\n
Action.c(5):     \t\t\t\twidth = style.width;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tminWidth = style.minWidth;\n
Action.c(5):     \t\t\t\t\tif (scrollEl === true) {\n
Action.c(5):     \t\t\t\tmaxWidth = style.maxWidth;\n
Action.c(5):     \t\t\t\t\t\tscrollEl = rootEl;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Put in the new values to get a computed value out\n
Action.c(5):     \t\t\t\t\t\tdo {\n
Action.c(5):     \t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n
Action.c(5):     \t\t\t\t\t\t\tif ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\n
Action.c(5):     \t\t\t\tret = computed.width;\n
Action.c(5):     \t\t\t\t\t\t\t\t(scrollEl.offsetHeight < scrollEl.scrollHeight)\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t) {\n
Action.c(5):     \t\t\t\t// Revert the changed values\n
Action.c(5):     \t\t\t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\tstyle.width = width;\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\tstyle.minWidth = minWidth;\n
Action.c(5):     \t\t\t\t\t\t\t/* jshint boss:true */\n
Action.c(5):     \t\t\t\tstyle.maxWidth = maxWidth;\n
Action.c(5):     \t\t\t\t\t\t} while (scrollEl = scrollEl.parentNode);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t// Support: IE\n
Action.c(5):     \t\t\t\tif (scrollEl) {\n
Action.c(5):     \t\t// IE returns zIndex value as an integer.\n
Action.c(5):     \t\t\t\t\tel = scrollEl;\n
Action.c(5):     \t\treturn ret === undefined ?\n
Action.c(5):     \t\t\t\t\trect = scrollEl.getBoundingClientRect();\n
Action.c(5):     \t\t\tret :\n
Action.c(5):     \t\t\t\t\tvx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\n
Action.c(5):     \t\t\tret + "";\n
Action.c(5):     \t\t\t\t\tvy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     } else if ( document.documentElement.currentStyle ) {\n
Action.c(5):     \n
Action.c(5):     \tgetStyles = function( elem ) {\n
Action.c(5):     \n
Action.c(5):     \t\treturn elem.currentStyle;\n
Action.c(5):     \t\t\t\tif (!(vx || vy)) {\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\t\t\tvx = (winWidth - x <= sens) - (x <= sens);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tvy = (winHeight - y <= sens) - (y <= sens);\n
Action.c(5):     \tcurCSS = function( elem, name, computed ) {\n
Action.c(5):     \n
Action.c(5):     \t\tvar left, rs, rsLeft, ret,\n
Action.c(5):     \t\t\t\t\t/* jshint expr:true */\n
Action.c(5):     \t\t\tstyle = elem.style;\n
Action.c(5):     \t\t\t\t\t(vx || vy) && (el = win);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\tcomputed = computed || getStyles( elem );\n
Action.c(5):     \n
Action.c(5):     \t\tret = computed ? computed[ name ] : undefined;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\n
Action.c(5):     \t\t// Avoid setting ret to empty string here\n
Action.c(5):     \t\t\t\t\tautoScroll.el = el;\n
Action.c(5):     \t\t// so we don't default to auto\n
Action.c(5):     \t\t\t\t\tautoScroll.vx = vx;\n
Action.c(5):     \t\tif ( ret == null && style && style[ name ] ) {\n
Action.c(5):     \t\t\t\t\tautoScroll.vy = vy;\n
Action.c(5):     \t\t\tret = style[ name ];\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\tclearInterval(autoScroll.pid);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t// From the awesome hack by Dean Edwards\n
Action.c(5):     \t\t\t\t\tif (el) {\n
Action.c(5):     \t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n
Action.c(5):     \t\t\t\t\t\tautoScroll.pid = setInterval(function () {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\tscrollOffsetY = vy ? vy * speed : 0;\n
Action.c(5):     \t\t// If we're not dealing with a regular pixel number\n
Action.c(5):     \t\t\t\t\t\t\tscrollOffsetX = vx ? vx * speed : 0;\n
Action.c(5):     \t\t// but a number that has a weird ending, we need to convert it to pixels\n
Action.c(5):     \n
Action.c(5):     \t\t// but not position css attributes, as those are proportional to the parent element in
Action.c(5):     \t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n
Action.c(5):     stead\n
Action.c(5):     \t\t\t\t\t\t\t\treturn scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);\n
Action.c(5):     \t\t// and we can't measure the parent instead because it might trigger a "stacking dolls"
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):      problem\n
Action.c(5):     \n
Action.c(5):     \t\tif ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {\n
Action.c(5):     \t\t\t\t\t\t\tif (el === win) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\twin.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffs
Action.c(5):     \t\t\t// Remember the original values\n
Action.c(5):     etY);\n
Action.c(5):     \t\t\tleft = style.left;\n
Action.c(5):     \t\t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\trs = elem.runtimeStyle;\n
Action.c(5):     \t\t\t\t\t\t\t\tel.scrollTop += scrollOffsetY;\n
Action.c(5):     \t\t\trsLeft = rs && rs.left;\n
Action.c(5):     \t\t\t\t\t\t\t\tel.scrollLeft += scrollOffsetX;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t// Put in the new values to get a computed value out\n
Action.c(5):     \t\t\t\t\t\t}, 24);\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}, 30),\n
Action.c(5):     \n
Action.c(5):     \t\t_prepareGroup = function (options) {\n
Action.c(5):     \t\t\tfunction toFn(value, pull) {\n
Action.c(5):     \t\t\tif ( rsLeft ) {\n
Action.c(5):     \t\t\t\tif (value === void 0 || value === true) {\n
Action.c(5):     \t\t\t\trs.left = elem.currentStyle.left;\n
Action.c(5):     \t\t\t\t\tvalue = group.name;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\tstyle.left = name === "fontSize" ? "1em" : ret;\n
Action.c(5):     \n
Action.c(5):     \t\t\tret = style.pixelLeft + "px";\n
Action.c(5):     \t\t\t\tif (typeof value === 'function') {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\treturn value;\n
Action.c(5):     \t\t\t// Revert the changed values\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\tstyle.left = left;\n
Action.c(5):     \t\t\t\t\treturn function (to, from) {\n
Action.c(5):     \t\t\tif ( rsLeft ) {\n
Action.c(5):     \t\t\t\t\t\tvar fromGroup = from.options.group.name;\n
Action.c(5):     \t\t\t\trs.left = rsLeft;\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\t\treturn pull\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\t\t\t? value\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t: value && (value.join\n
Action.c(5):     \t\t// Support: IE\n
Action.c(5):     \t\t\t\t\t\t\t\t? value.indexOf(fromGroup) > -1\n
Action.c(5):     \t\t// IE returns zIndex value as an integer.\n
Action.c(5):     \t\t\t\t\t\t\t\t: (fromGroup == value)\n
Action.c(5):     \t\treturn ret === undefined ?\n
Action.c(5):     \t\t\t\t\t\t\t);\n
Action.c(5):     \t\t\tret :\n
Action.c(5):     \t\t\t\t\t};\n
Action.c(5):     \t\t\tret + "" || "auto";\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tvar group = {};\n
Action.c(5):     \n
Action.c(5):     \t\t\tvar originalGroup = options.group;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n
Action.c(5):     function addGetHookIf( conditionFn, hookFn ) {\n
Action.c(5):     \t\t\t\toriginalGroup = {name: originalGroup};\n
Action.c(5):     \t// Define the hook, we'll check on the first run if it's really needed.\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \treturn {\n
Action.c(5):     \n
Action.c(5):     \t\tget: function() {\n
Action.c(5):     \t\t\tgroup.name = originalGroup.name;\n
Action.c(5):     \t\t\tvar condition = conditionFn();\n
Action.c(5):     \t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n
Action.c(5):     \n
Action.c(5):     \t\t\tgroup.checkPut = toFn(originalGroup.put);\n
Action.c(5):     \t\t\tif ( condition == null ) {\n
Action.c(5):     \t\t\tgroup.revertClone = originalGroup.revertClone;\n
Action.c(5):     \t\t\t\t// The test was not ready at this point; screw the hook this time\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// but check again when needed next time.\n
Action.c(5):     \t\t\toptions.group = group;\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( condition ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Hook not needed (or it's not possible to use it due to missing dependency),\n
Action.c(5):     \t/**\n
Action.c(5):     \t\t\t\t// remove it.\n
Action.c(5):     \t * @class  Sortable\n
Action.c(5):     \t\t\t\t// Since there are no other hooks for marginRight, remove the whole object.\n
Action.c(5):     \t * @param  {HTMLElement}  el\n
Action.c(5):     \t\t\t\tdelete this.get;\n
Action.c(5):     \t * @param  {Object}       [options]\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t */\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \tfunction Sortable(el, options) {\n
Action.c(5):     \n
Action.c(5):     \t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n
Action.c(5):     \t\t\t// Hook needed; redefine it so that the support test is not executed again.\n
Action.c(5):     \t\t\tthrow 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\treturn (this.get = hookFn).apply( this, arguments );\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tthis.el = el; // root element\n
Action.c(5):     \t};\n
Action.c(5):     \t\tthis.options = options = _extend({}, options);\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t// Export instance\n
Action.c(5):     (function() {\n
Action.c(5):     \t\tel[expando] = this;\n
Action.c(5):     \tvar a, reliableHiddenOffsetsVal, boxSizingVal, boxSizingReliableVal,\n
Action.c(5):     \n
Action.c(5):     \t\tpixelPositionVal, reliableMarginRightVal,\n
Action.c(5):     \t\t// Default options\n
Action.c(5):     \t\tdiv = document.createElement( "div" ),\n
Action.c(5):     \t\tvar defaults = {\n
Action.c(5):     \t\tcontainerStyles = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px",\n
Action.c(5):     \t\t\tgroup: Math.random(),\n
Action.c(5):     \t\tdivReset =\n
Action.c(5):     \t\t\tsort: true,\n
Action.c(5):     \t\t\t"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;"
Action.c(5):     \t\t\tdisabled: false,\n
Action.c(5):      +\n
Action.c(5):     \t\t\tstore: null,\n
Action.c(5):     \t\t\t"display:block;padding:0;margin:0;border:0";\n
Action.c(5):     \t\t\thandle: null,\n
Action.c(5):     \n
Action.c(5):     \t\t\tscroll: true,\n
Action.c(5):     \t// Setup\n
Action.c(5):     \t\t\tscrollSensitivity: 30,\n
Action.c(5):     \tdiv.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";\n
Action.c(5):     \t\t\tscrollSpeed: 10,\n
Action.c(5):     \ta = div.getElementsByTagName( "a" )[ 0 ];\n
Action.c(5):     \t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\n
Action.c(5):     \n
Action.c(5):     \t\t\tghostClass: 'sortable-ghost',\n
Action.c(5):     \ta.style.cssText = "float:left;opacity:.5";\n
Action.c(5):     \t\t\tchosenClass: 'sortable-chosen',\n
Action.c(5):     \n
Action.c(5):     \t\t\tdragClass: 'sortable-drag',\n
Action.c(5):     \t// Make sure that element opacity exists\n
Action.c(5):     \t\t\tignore: 'a, img',\n
Action.c(5):     \t// (IE uses filter instead)\n
Action.c(5):     \t\t\tfilter: null,\n
Action.c(5):     \t// Use a regex to work around a WebKit issue. See #5145\n
Action.c(5):     \t\t\tpreventOnFilter: true,\n
Action.c(5):     \tsupport.opacity = /^0.5/.test( a.style.opacity );\n
Action.c(5):     \t\t\tanimation: 0,\n
Action.c(5):     \n
Action.c(5):     \t\t\tsetData: function (dataTransfer, dragEl) {\n
Action.c(5):     \t// Verify style float existence\n
Action.c(5):     \t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n
Action.c(5):     \t// (IE uses styleFloat instead of cssFloat)\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \tsupport.cssFloat = !!a.style.cssFloat;\n
Action.c(5):     \t\t\tdropBubble: false,\n
Action.c(5):     \n
Action.c(5):     \t\t\tdragoverBubble: false,\n
Action.c(5):     \tdiv.style.backgroundClip = "content-box";\n
Action.c(5):     \t\t\tdataIdAttr: 'data-id',\n
Action.c(5):     \tdiv.cloneNode( true ).style.backgroundClip = "";\n
Action.c(5):     \t\t\tdelay: 0,\n
Action.c(5):     \tsupport.clearCloneStyle = div.style.backgroundClip === "content-box";\n
Action.c(5):     \t\t\tforceFallback: false,\n
Action.c(5):     \n
Action.c(5):     \t\t\tfallbackClass: 'sortable-fallback',\n
Action.c(5):     \t// Null elements to avoid leaks in IE.\n
Action.c(5):     \t\t\tfallbackOnBody: false,\n
Action.c(5):     \ta = div = null;\n
Action.c(5):     \t\t\tfallbackTolerance: 0,\n
Action.c(5):     \n
Action.c(5):     \t\t\tfallbackOffset: {x: 0, y: 0}\n
Action.c(5):     \tjQuery.extend(support, {\n
Action.c(5):     \t\t};\n
Action.c(5):     \t\treliableHiddenOffsets: function() {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( reliableHiddenOffsetsVal != null ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn reliableHiddenOffsetsVal;\n
Action.c(5):     \t\t// Set default options\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\tfor (var name in defaults) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t!(name in options) && (options[name] = defaults[name]);\n
Action.c(5):     \t\t\tvar container, tds, isSupported,\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tdiv = document.createElement( "div" ),\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tbody = document.getElementsByTagName( "body" )[ 0 ];\n
Action.c(5):     \t\t_prepareGroup(options);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( !body ) {\n
Action.c(5):     \t\t// Bind all private methods\n
Action.c(5):     \t\t\t\t// Return for frameset docs that don't have a body\n
Action.c(5):     \t\tfor (var fn in this) {\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tthis[fn] = this[fn].bind(this);\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t// Setup\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\tdiv.setAttribute( "className", "t" );\n
Action.c(5):     \n
Action.c(5):     \t\t\tdiv.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"
Action.c(5):     \t\t// Setup drag mode\n
Action.c(5):     ;\n
Action.c(5):     \t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tcontainer = document.createElement( "div" );\n
Action.c(5):     \t\t// Bind events\n
Action.c(5):     \t\t\tcontainer.style.cssText = containerStyles;\n
Action.c(5):     \t\t_on(el, 'mousedown', this._onTapStart);\n
Action.c(5):     \n
Action.c(5):     \t\t_on(el, 'touchstart', this._onTapStart);\n
Action.c(5):     \t\t\tbody.appendChild( container ).appendChild( div );\n
Action.c(5):     \t\t_on(el, 'pointerdown', this._onTapStart);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t// Support: IE8\n
Action.c(5):     \t\tif (this.nativeDraggable) {\n
Action.c(5):     \t\t\t// Check if table cells still have offsetWidth/Height when they are set\n
Action.c(5):     \t\t\t_on(el, 'dragover', this);\n
Action.c(5):     \t\t\t// to display:none and there are still other visible table cells in a\n
Action.c(5):     \t\t\t_on(el, 'dragenter', this);\n
Action.c(5):     \t\t\t// table row; if so, offsetWidth/Height are not reliable for use when\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t// determining if an element has been hidden directly using\n
Action.c(5):     \n
Action.c(5):     \t\t\t// display:none (it is still safe to use offsets if a parent element is\n
Action.c(5):     \t\ttouchDragOverListeners.push(this._onDragOver);\n
Action.c(5):     \t\t\t// hidden; don safety goggles and see bug #4512 for more information).\n
Action.c(5):     \n
Action.c(5):     \t\t\tdiv.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";\n
Action.c(5):     \t\t// Restore sorting\n
Action.c(5):     \t\t\ttds = div.getElementsByTagName( "td" );\n
Action.c(5):     \t\toptions.store && this.sort(options.store.get(this));\n
Action.c(5):     \t\t\ttds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tisSupported = ( tds[ 0 ].offsetHeight === 0 );\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\ttds[ 0 ].style.display = "";\n
Action.c(5):     \tSortable.prototype = /** @lends Sortable.prototype */ {\n
Action.c(5):     \t\t\ttds[ 1 ].style.display = "none";\n
Action.c(5):     \t\tconstructor: Sortable,\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t// Support: IE8\n
Action.c(5):     \t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n
Action.c(5):     \t\t\t// Check if empty table cells still have offsetWidth/Height\n
Action.c(5):     \t\t\tvar _this = this,\n
Action.c(5):     \t\t\treliableHiddenOffsetsVal = isSupported && ( tds[ 0 ].offsetHeight === 0 );\n
Action.c(5):     \t\t\t\tel = this.el,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\toptions = this.options,\n
Action.c(5):     \t\t\tbody.removeChild( container );\n
Action.c(5):     \t\t\t\tpreventOnFilter = options.preventOnFilter,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\ttype = evt.type,\n
Action.c(5):     \t\t\t// Null elements to avoid leaks in IE.\n
Action.c(5):     \t\t\t\ttouch = evt.touches && evt.touches[0],\n
Action.c(5):     \t\t\tdiv = body = null;\n
Action.c(5):     \t\t\t\ttarget = (touch || evt).target,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\toriginalTarget = evt.target.shadowRoot && evt.path[0] || target,\n
Action.c(5):     \t\t\treturn reliableHiddenOffsetsVal;\n
Action.c(5):     \t\t\t\tfilter = options.filter,\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t\tstartIndex;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tboxSizing: function() {\n
Action.c(5):     \t\t\t_saveInputCheckedState(el);\n
Action.c(5):     \t\t\tif ( boxSizingVal == null ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tcomputeStyleTests();\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldi
Action.c(5):     \t\t\treturn boxSizingVal;\n
Action.c(5):     ndex always wrong when set option.group.\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\tif (dragEl) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\tboxSizingReliable: function() {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( boxSizingReliableVal == null ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tcomputeStyleTests();\n
Action.c(5):     \t\t\tif (type === 'mousedown' && evt.button !== 0 || options.disabled) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\treturn; // only left button or enabled\n
Action.c(5):     \t\t\treturn boxSizingReliableVal;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tpixelPosition: function() {\n
Action.c(5):     \t\t\ttarget = _closest(target, options.draggable, el);\n
Action.c(5):     \t\t\tif ( pixelPositionVal == null ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tcomputeStyleTests();\n
Action.c(5):     \t\t\tif (!target) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\treturn pixelPositionVal;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif (lastDownEl === target) {\n
Action.c(5):     \t\treliableMarginRight: function() {\n
Action.c(5):     \t\t\t\t// Ignoring duplicate `down`\n
Action.c(5):     \t\t\tvar body, container, div, marginDiv;\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t// Use window.getComputedStyle because jsdom on node.js will break without it.\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( reliableMarginRightVal == null && window.getComputedStyle ) {\n
Action.c(5):     \t\t\t// Get the index of the dragged element within its parent\n
Action.c(5):     \t\t\tstartIndex = _index(target, options.draggable);\n
Action.c(5):     \t\t\t\tbody = document.getElementsByTagName( "body" )[ 0 ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( !body ) {\n
Action.c(5):     \t\t\t// Check filter\n
Action.c(5):     \t\t\t\t\t// Test fired too early or in an unsupported environment, exit.\n
Action.c(5):     \t\t\tif (typeof filter === 'function') {\n
Action.c(5):     \t\t\t\t\treturn;\n
Action.c(5):     \t\t\t\tif (filter.call(this, evt, target, this)) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tpreventOnFilter && evt.preventDefault();\n
Action.c(5):     \t\t\t\tcontainer = document.createElement( "div" );\n
Action.c(5):     \t\t\t\t\treturn; // cancel dnd\n
Action.c(5):     \t\t\t\tdiv = document.createElement( "div" );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tcontainer.style.cssText = containerStyles;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\telse if (filter) {\n
Action.c(5):     \t\t\t\tbody.appendChild( container ).appendChild( div );\n
Action.c(5):     \t\t\t\tfilter = filter.split(',').some(function (criteria) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el);\n
Action.c(5):     \t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// gets computed margin-right based on width of container. (#3333)\n
Action.c(5):     \t\t\t\t\tif (criteria) {\n
Action.c(5):     \t\t\t\t// Fails in WebKit before Feb 2011 nightlies\n
Action.c(5):     \t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);\n
Action.c(5):     \t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n
Action.c(5):     \t\t\t\t\t\treturn true;\n
Action.c(5):     \t\t\t\tmarginDiv = div.appendChild( document.createElement( "div" ) );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\tmarginDiv.style.cssText = div.style.cssText = divReset;\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     \t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = "0";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tdiv.style.width = "1px";\n
Action.c(5):     \t\t\t\tif (filter) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tpreventOnFilter && evt.preventDefault();\n
Action.c(5):     \t\t\t\treliableMarginRightVal =\n
Action.c(5):     \t\t\t\t\treturn; // cancel dnd\n
Action.c(5):     \t\t\t\t\t!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\tbody.removeChild( container );\n
Action.c(5):     \t\t\tif (options.handle && !_closest(originalTarget, options.handle, el)) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn reliableMarginRightVal;\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t// Prepare `dragstart`\n
Action.c(5):     \t});\n
Action.c(5):     \t\t\tthis._prepareDragStart(evt, touch, target, startIndex);\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     \tfunction computeStyleTests() {\n
Action.c(5):     \n
Action.c(5):     \t\tvar container, div,\n
Action.c(5):     \t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */tar
Action.c(5):     \t\t\tbody = document.getElementsByTagName( "body" )[ 0 ];\n
Action.c(5):     get, /** Number */startIndex) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tvar _this = this,\n
Action.c(5):     \t\tif ( !body ) {\n
Action.c(5):     \t\t\t\tel = _this.el,\n
Action.c(5):     \t\t\t// Test fired too early or in an unsupported environment, exit.\n
Action.c(5):     \t\t\t\toptions = _this.options,\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t\t\townerDocument = el.ownerDocument,\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tdragStartFn;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tcontainer = document.createElement( "div" );\n
Action.c(5):     \t\t\tif (target && !dragEl && (target.parentNode === el)) {\n
Action.c(5):     \t\tdiv = document.createElement( "div" );\n
Action.c(5):     \t\t\t\ttapEvt = evt;\n
Action.c(5):     \n
Action.c(5):     \t\tcontainer.style.cssText = containerStyles;\n
Action.c(5):     \t\t\t\trootEl = el;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tdragEl = target;\n
Action.c(5):     \t\tbody.appendChild( container ).appendChild( div );\n
Action.c(5):     \t\t\t\tparentEl = dragEl.parentNode;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tnextEl = dragEl.nextSibling;\n
Action.c(5):     \t\tdiv.style.cssText =\n
Action.c(5):     \t\t\t\tlastDownEl = target;\n
Action.c(5):     \t\t\t"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;" +\n
Action.c(5):     \t\t\t\tactiveGroup = options.group;\n
Action.c(5):     \t\t\t\t"position:absolute;display:block;padding:1px;border:1px;width:4px;" +\n
Action.c(5):     \t\t\t\toldIndex = startIndex;\n
Action.c(5):     \t\t\t\t"margin-top:1%;top:1%";\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\tthis._lastX = (touch || evt).clientX;\n
Action.c(5):     \t\t// Workaround failing boxSizing test due to offsetWidth returning wrong value\n
Action.c(5):     \t\t\t\tthis._lastY = (touch || evt).clientY;\n
Action.c(5):     \t\t// with some non-1 values of body zoom, ticket #13543\n
Action.c(5):     \n
Action.c(5):     \t\tjQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function
Action.c(5):     \t\t\t\tdragEl.style['will-change'] = 'transform';\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tdragStartFn = function () {\n
Action.c(5):     \t\t\t\t\t// Delayed drag has been triggered\n
Action.c(5):     \t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n
Action.c(5):     \t\t\t\t\t_this._disableDelayedDrag();\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Make the element draggable\n
Action.c(5): t=214018ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     \t\t\t\t\tdragEl.draggable = _this.nativeDraggable;\n
Action.c(5):     () {\n
Action.c(5):     \n
Action.c(5):     \t\t\tboxSizingVal = div.offsetWidth === 4;\n
Action.c(5):     \t\t\t\t\t// Chosen item\n
Action.c(5):     \t\t});\n
Action.c(5):     \t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t// Will be changed later if needed.\n
Action.c(5):     \t\t\t\t\t// Bind the events: dragstart/dragend\n
Action.c(5):     \t\tboxSizingReliableVal = true;\n
Action.c(5):     \t\t\t\t\t_this._triggerDragStart(evt, touch);\n
Action.c(5):     \t\tpixelPositionVal = false;\n
Action.c(5):     \n
Action.c(5):     \t\treliableMarginRightVal = true;\n
Action.c(5):     \t\t\t\t\t// Drag start event\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);\n
Action.c(5):     \t\t// Use window.getComputedStyle because jsdom on node.js will break without it.\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \t\tif ( window.getComputedStyle ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tpixelPositionVal = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";\n
Action.c(5):     \t\t\t\t// Disable "draggable"\n
Action.c(5):     \t\t\tboxSizingReliableVal =\n
Action.c(5):     \t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n
Action.c(5):     \t\t\t\t( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";\n
Action.c(5):     \t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tbody.removeChild( container );\n
Action.c(5):     \t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n
Action.c(5):     \t\t// Null elements to avoid leaks in IE.\n
Action.c(5):     \t\tdiv = body = null;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     })();\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // A method for quickly swapping in/out CSS properties to get correct calculations.\n
Action.c(5):     jQuery.swap = function( elem, options, callback, args ) {\n
Action.c(5):     \tvar ret, name,\n
Action.c(5):     \t\told = {};\n
Action.c(5):     \n
Action.c(5):     \t// Remember the old values, and insert the new ones\n
Action.c(5):     \tfor ( name in options ) {\n
Action.c(5):     \t\told[ name ] = elem.style[ name ];\n
Action.c(5):     \t\telem.style[ name ] = options[ name ];\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tret = callback.apply( elem, args || [] );\n
Action.c(5):     \t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t_on(ownerDocument, 'pointercancel', _this._onDrop);\n
Action.c(5):     \t// Revert the old values\n
Action.c(5):     \t\t\t\t_on(ownerDocument, 'selectstart', _this);\n
Action.c(5):     \tfor ( name in options ) {\n
Action.c(5):     \n
Action.c(5):     \t\telem.style[ name ] = old[ name ];\n
Action.c(5):     \t\t\t\tif (options.delay) {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t\t// If the user moves the pointer or let go the click or touch\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// before the delay has been reached:\n
Action.c(5):     \treturn ret;\n
Action.c(5):     \t\t\t\t\t// disable the delayed drag\n
Action.c(5):     };\n
Action.c(5):     \t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n
Action.c(5):     var\n
Action.c(5):     \t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n
Action.c(5):     \t\tralpha = /alpha\\([^)]*\\)/i,\n
Action.c(5):     \t\t\t\t\t_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\n
Action.c(5):     \tropacity = /opacity\\s*=\\s*([^)]*)/,\n
Action.c(5):     \t\t\t\t\t_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);\n
Action.c(5):     \t// swappable if display is none or starts with table except "table", "table-cell", or "t
Action.c(5):     \n
Action.c(5):     able-caption"\n
Action.c(5):     \t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n
Action.c(5):     \t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n
Action.c(5):     \t\t\t\t\tdragStartFn();\n
Action.c(5):     \trnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \trrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tcssShow = { position: "absolute", visibility: "hidden", display: "block" },\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \tcssNormalTransform = {\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tletterSpacing: 0,\n
Action.c(5):     \n
Action.c(5):     \t\tfontWeight: 400\n
Action.c(5):     \t\t_disableDelayedDrag: function () {\n
Action.c(5):     \t},\n
Action.c(5):     \t\t\tvar ownerDocument = this.el.ownerDocument;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tcssPrefixes = [ "Webkit", "O", "Moz", "ms" ];\n
Action.c(5):     \t\t\tclearTimeout(this._dragStartTimer);\n
Action.c(5):     \n
Action.c(5):     \t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n
Action.c(5):     \n
Action.c(5):     \t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n
Action.c(5):     // return a css property mapped to a potentially vendor prefixed property\n
Action.c(5):     \t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n
Action.c(5):     function vendorPropName( style, name ) {\n
Action.c(5):     \t\t\t_off(ownerDocument, 'mousemove', this._disableDelayedDrag);\n
Action.c(5):     \n
Action.c(5):     \t\t\t_off(ownerDocument, 'touchmove', this._disableDelayedDrag);\n
Action.c(5):     \t// shortcut for names that are not vendor prefixed\n
Action.c(5):     \t\t\t_off(ownerDocument, 'pointermove', this._disableDelayedDrag);\n
Action.c(5):     \tif ( name in style ) {\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\treturn name;\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n
Action.c(5):     \n
Action.c(5):     \t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n
Action.c(5):     \t// check for vendor prefixed names\n
Action.c(5):     \n
Action.c(5):     \tvar capName = name.charAt(0).toUpperCase() + name.slice(1),\n
Action.c(5):     \t\t\tif (touch) {\n
Action.c(5):     \t\torigName = name,\n
Action.c(5):     \t\t\t\t// Touch device support\n
Action.c(5):     \t\ti = cssPrefixes.length;\n
Action.c(5):     \t\t\t\ttapEvt = {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\ttarget: dragEl,\n
Action.c(5):     \twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\tclientX: touch.clientX,\n
Action.c(5):     \t\tname = cssPrefixes[ i ] + capName;\n
Action.c(5):     \t\t\t\t\tclientY: touch.clientY\n
Action.c(5):     \t\tif ( name in style ) {\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \t\t\treturn name;\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tthis._onDragStart(tapEvt, 'touch');\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\telse if (!this.nativeDraggable) {\n
Action.c(5):     \treturn origName;\n
Action.c(5):     \t\t\t\tthis._onDragStart(tapEvt, true);\n
Action.c(5):     }\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\telse {\n
Action.c(5):     function showHide( elements, show ) {\n
Action.c(5):     \t\t\t\t_on(dragEl, 'dragend', this);\n
Action.c(5):     \tvar display, elem, hidden,\n
Action.c(5):     \t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n
Action.c(5):     \t\tvalues = [],\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\tindex = 0,\n
Action.c(5):     \n
Action.c(5):     \t\tlength = elements.length;\n
Action.c(5):     \t\t\ttry {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif (document.selection) {\t\t\t\t\t\n
Action.c(5):     \tfor ( ; index < length; index++ ) {\n
Action.c(5):     \t\t\t\t\t// Timeout neccessary for IE9\t\t\t\t\t\n
Action.c(5):     \t\telem = elements[ index ];\n
Action.c(5):     \t\t\t\t\tsetTimeout(function () {\n
Action.c(5):     \t\tif ( !elem.style ) {\n
Action.c(5):     \t\t\t\t\t\tdocument.selection.empty();\n
Action.c(5):     \t\t\tcontinue;\n
Action.c(5):     \t\t\t\t\t});\t\t\t\t\t\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\twindow.getSelection().removeAllRanges();\n
Action.c(5):     \t\tvalues[ index ] = jQuery._data( elem, "olddisplay" );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\tdisplay = elem.style.display;\n
Action.c(5):     \t\t\t} catch (err) {\n
Action.c(5):     \t\tif ( show ) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t// Reset the inline display of this element to learn if it is\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t// being hidden by cascaded rules or not\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( !values[ index ] && display === "none" ) {\n
Action.c(5):     \t\t_dragStarted: function () {\n
Action.c(5):     \t\t\t\telem.style.display = "";\n
Action.c(5):     \t\t\tif (rootEl && dragEl) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tvar options = this.options;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t// Set elements which have been overridden with display: none\n
Action.c(5):     \t\t\t\t// Apply effect\n
Action.c(5):     \t\t\t// in a stylesheet to whatever the default browser style is\n
Action.c(5):     \t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n
Action.c(5):     \t\t\t// for such an element\n
Action.c(5):     \t\t\t\t_toggleClass(dragEl, options.dragClass, false);\n
Action.c(5):     \t\t\tif ( elem.style.display === "" && isHidden( elem ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tvalues[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) 
Action.c(5):     \t\t\t\tSortable.active = this;\n
Action.c(5):     );\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t// Drag start event\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t\t_dispatchEvent(
Action.c(5):     \n
Action.c(5):     \t\t\tif ( !values[ index ] ) {\n
Action.c(5):     \t\t\t\thidden = isHidden( elem );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( display && display !== "none" || !hidden ) {\n
Action.c(5):     \t\t\t\t\tjQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display"
Action.c(5):      ) );\n
Action.c(5): t=214019ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/app/common/controls/drag-sortable/Sortable.js" (RelFrameId=, Internal ID=295)
Action.c(5):     \t\t\t\t}\n
Action.c(5):     this, rootEl, 'start', dragEl, rootEl, oldIndex);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tthis._nulling();\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     \t// Set the display of most of the elements in a second loop\n
Action.c(5):     \n
Action.c(5):     \t// to avoid the constant reflow\n
Action.c(5):     \t\t_emulateDragOver: function () {\n
Action.c(5):     \tfor ( index = 0; index < length; index++ ) {\n
Action.c(5):     \t\t\tif (touchEvt) {\n
Action.c(5):     \t\telem = elements[ index ];\n
Action.c(5):     \t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\n
Action.c(5):     \t\tif ( !elem.style ) {\n
Action.c(5):     \t\t\t\t\treturn;\n
Action.c(5):     \t\t\tcontinue;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !show || elem.style.display === "none" || elem.style.display === "" ) {\n
Action.c(5):     \t\t\t\tthis._lastX = touchEvt.clientX;\n
Action.c(5):     \t\t\telem.style.display = show ? values[ index ] || "" : "none";\n
Action.c(5):     \t\t\t\tthis._lastY = touchEvt.clientY;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\tif (!supportCssPointerEvents) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t_css(ghostEl, 'display', 'none');\n
Action.c(5):     \treturn elements;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\n
Action.c(5):     function setPositiveNumber( elem, value, subtract ) {\n
Action.c(5):     \t\t\t\t\tparent = target,\n
Action.c(5):     \tvar matches = rnumsplit.exec( value );\n
Action.c(5):     \t\t\t\t\ti = touchDragOverListeners.length;\n
Action.c(5):     \treturn matches ?\n
Action.c(5):     \n
Action.c(5):     \t\t// Guard against undefined "subtract", e.g., when used as in cssHooks\n
Action.c(5):     \t\t\t\tif (parent) {\n
Action.c(5):     \t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :\n
Action.c(5):     \t\t\t\t\tdo {\n
Action.c(5):     \t\tvalue;\n
Action.c(5):     \t\t\t\t\t\tif (parent[expando]) {\n
Action.c(5):     }\n
Action.c(5):     \t\t\t\t\t\t\twhile (i--) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\ttouchDragOverListeners[i]({\n
Action.c(5):     function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n
Action.c(5):     \tvar i = extra === ( isBorderBox ? "border" : "content" ) ?\n
Action.c(5):     \t\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n
Action.c(5):     \t\t// If we already have the right measurement, avoid augmentation\n
Action.c(5):     \t\t\t\t\t\t\t\t\ttarget: target,\n
Action.c(5):     \t\t4 :\n
Action.c(5):     \t\t\t\t\t\t\t\t\trootEl: parent\n
Action.c(5):     \t\t// Otherwise initialize for horizontal or vertical properties\n
Action.c(5):     \t\t\t\t\t\t\t\t});\n
Action.c(5):     \t\tname === "width" ? 1 : 0,\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tval = 0;\n
Action.c(5):     \t\t\t\t\t\t\tbreak;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \tfor ( ; i < 4; i += 2 ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// both box models exclude margin, so add it if we want it\n
Action.c(5):     \t\t\t\t\t\ttarget = parent; // store last element\n
Action.c(5):     \t\tif ( extra === "margin" ) {\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n
Action.c(5):     \t\t\t\t\t/* jshint boss:true */\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\twhile (parent = parent.parentNode);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\tif ( isBorderBox ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// border-box includes padding, so remove it if we want content\n
Action.c(5):     \t\t\t\tif (!supportCssPointerEvents) {\n
Action.c(5):     \t\t\tif ( extra === "content" ) {\n
Action.c(5):     \t\t\t\t\t_css(ghostEl, 'display', '');\n
Action.c(5):     \t\t\t\tval -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t// at this point, extra isn't border nor margin, so remove border\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( extra !== "margin" ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tval -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );\n
Action.c(5):     \t\t_onTouchMove: function (/**TouchEvent*/evt) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif (tapEvt) {\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t\tvar\toptions = this.options,\n
Action.c(5):     \t\t\t// at this point, extra isn't content, so add padding\n
Action.c(5):     \t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n
Action.c(5):     \t\t\tval += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );\n
Action.c(5):     \t\t\t\t\tfallbackOffset = options.fallbackOffset,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n
Action.c(5):     \t\t\t// at this point, extra isn't content nor padding, so add border\n
Action.c(5):     \t\t\t\t\tdx = (touch.clientX - tapEvt.clientX) + fallbackOffset.x,\n
Action.c(5):     \t\t\tif ( extra !== "padding" ) {\n
Action.c(5):     \t\t\t\t\tdy = (touch.clientY - tapEvt.clientY) + fallbackOffset.y,\n
Action.c(5):     \t\t\t\tval += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );\n
Action.c(5):     \t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'transl
Action.c(5):     \t\t\t}\n
Action.c(5):     ate(' + dx + 'px,' + dy + 'px)';\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t// only set the status to dragging, when we are actually dragging\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif (!Sortable.active) {\n
Action.c(5):     \treturn val;\n
Action.c(5):     \t\t\t\t\tif (fallbackTolerance &&\n
Action.c(5):     }\n
Action.c(5):     \t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fall
Action.c(5):     \n
Action.c(5):     backTolerance\n
Action.c(5):     function getWidthOrHeight( elem, name, extra ) {\n
Action.c(5):     \t\t\t\t\t) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\treturn;\n
Action.c(5):     \t// Start with offset property, which is equivalent to the border-box value\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \tvar valueIsBorderBox = true,\n
Action.c(5):     \n
Action.c(5):     \t\tval = name === "width" ? elem.offsetWidth : elem.offsetHeight,\n
Action.c(5):     \t\t\t\t\tthis._dragStarted();\n
Action.c(5):     \t\tstyles = getStyles( elem ),\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\tisBorderBox = support.boxSizing() && jQuery.css( elem, "boxSizing", false, styles ) ==
Action.c(5):     \n
Action.c(5):     = "border-box";\n
Action.c(5):     \t\t\t\t// as well as creating the ghost element on the document body\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tthis._appendGhost();\n
Action.c(5):     \t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n
Action.c(5):     \n
Action.c(5):     \t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n
Action.c(5):     \t\t\t\tmoved = true;\n
Action.c(5):     \t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n
Action.c(5):     \t\t\t\ttouchEvt = touch;\n
Action.c(5):     \tif ( val <= 0 || val == null ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Fall back to computed then uncomputed css if necessary\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n
Action.c(5):     \t\tval = curCSS( elem, name, styles );\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n
Action.c(5):     \t\tif ( val < 0 || val == null ) {\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n
Action.c(5):     \t\t\tval = elem.style[ name ];\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'transform', translate3d);\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\tevt.preventDefault();\n
Action.c(5):     \t\t// Computed unit is not pixels. Stop here and return.\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\tif ( rnumnonpx.test(val) ) {\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\treturn val;\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t_appendGhost: function () {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif (!ghostEl) {\n
Action.c(5):     \t\t// we need the check for style in case a browser which returns unreliable values\n
Action.c(5):     \t\t\t\tvar rect = dragEl.getBoundingClientRect(),\n
Action.c(5):     \t\t// for getComputedStyle silently falls back to the reliable elem.style\n
Action.c(5):     \t\t\t\t\tcss = _css(dragEl),\n
Action.c(5):     \t\tvalueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[
Action.c(5):     \t\t\t\t\toptions = this.options,\n
Action.c(5):      name ] );\n
Action.c(5):     \t\t\t\t\tghostRect;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t// Normalize "", auto, and prepare for extra\n
Action.c(5):     \t\t\t\tghostEl = dragEl.cloneNode(true);\n
Action.c(5):     \t\tval = parseFloat( val ) || 0;\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n
Action.c(5):     \t// use the active box-sizing model to add/subtract irrelevant styles\n
Action.c(5):     \t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n
Action.c(5):     \treturn ( val +\n
Action.c(5):     \n
Action.c(5):     \t\taugmentWidthOrHeight(\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\n
Action.c(5):     \t\t\telem,\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\n
Action.c(5):     \t\t\tname,\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'width', rect.width);\n
Action.c(5):     \t\t\textra || ( isBorderBox ? "border" : "content" ),\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'height', rect.height);\n
Action.c(5):     \t\t\tvalueIsBorderBox,\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'opacity', '0.8');\n
Action.c(5):     \t\t\tstyles\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'position', 'fixed');\n
Action.c(5):     \t\t)\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'zIndex', '100000');\n
Action.c(5):     \t) + "px";\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\toptions.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild
Action.c(5):     jQuery.extend({\n
Action.c(5):     (ghostEl);\n
Action.c(5):     \t// Add in style property hooks for overriding the default\n
Action.c(5):     \n
Action.c(5):     \t// behavior of getting and setting a style property\n
Action.c(5):     \t\t\t\t// Fixing dimensions.\n
Action.c(5):     \tcssHooks: {\n
Action.c(5):     \t\t\t\tghostRect = ghostEl.getBoundingClientRect();\n
Action.c(5):     \t\topacity: {\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\n
Action.c(5):     \t\t\tget: function( elem, computed ) {\n
Action.c(5):     \t\t\t\t_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\n
Action.c(5):     \t\t\t\tif ( computed ) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\t// We should always get a number back from opacity\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t\t\tvar ret = curCSS( elem, "opacity" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\treturn ret === "" ? "1" : ret;\n
Action.c(5):     \t\t_onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\tvar dataTransfer = evt.dataTransfer,\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\toptions = this.options;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t},\n
Action.c(5):     \t\t\tthis._offUpEvents();\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t// Don't automatically add "px" to these possibly-unitless properties\n
Action.c(5):     \t\t\tif (activeGroup.checkPull(this, this, dragEl, evt)) {\n
Action.c(5):     \tcssNumber: {\n
Action.c(5):     \t\t\t\tcloneEl = _clone(dragEl);\n
Action.c(5):     \t\t"columnCount": true,\n
Action.c(5):     \n
Action.c(5):     \t\t"fillOpacity": true,\n
Action.c(5):     \t\t\t\tcloneEl.draggable = false;\n
Action.c(5):     \t\t"fontWeight": true,\n
Action.c(5):     \t\t\t\tcloneEl.style['will-change'] = '';\n
Action.c(5):     \t\t"lineHeight": true,\n
Action.c(5):     \n
Action.c(5):     \t\t"opacity": true,\n
Action.c(5):     \t\t\t\t_css(cloneEl, 'display', 'none');\n
Action.c(5):     \t\t"order": true,\n
Action.c(5):     \t\t\t\t_toggleClass(cloneEl, this.options.chosenClass, false);\n
Action.c(5):     \t\t"orphans": true,\n
Action.c(5):     \n
Action.c(5):     \t\t"widows": true,\n
Action.c(5):     \t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n
Action.c(5):     \t\t"zIndex": true,\n
Action.c(5):     \t\t\t\t_dispatchEvent(this, rootEl, 'clone', dragEl);\n
Action.c(5):     \t\t"zoom": true\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t_toggleClass(dragEl, options.dragClass, true);\n
Action.c(5):     \t// Add in properties whose names you wish to fix before\n
Action.c(5):     \n
Action.c(5):     \t// setting or getting the value\n
Action.c(5):     \t\t\tif (useFallback) {\n
Action.c(5):     \tcssProps: {\n
Action.c(5):     \t\t\t\tif (useFallback === 'touch') {\n
Action.c(5):     \t\t// normalize float css property\n
Action.c(5):     \t\t\t\t\t// Bind touch events\n
Action.c(5):     \t\t"float": support.cssFloat ? "cssFloat" : "styleFloat"\n
Action.c(5):     \t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n
Action.c(5):     \t},\n
Action.c(5):     \t\t\t\t\t_on(document, 'touchend', this._onDrop);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t_on(document, 'touchcancel', this._onDrop);\n
Action.c(5):     \t// Get and set the style property on a DOM Node\n
Action.c(5):     \t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n
Action.c(5):     \tstyle: function( elem, name, value, extra ) {\n
Action.c(5):     \t\t\t\t\t_on(document, 'pointerup', this._onDrop);\n
Action.c(5):     \t\t// Don't set styles on text and comment nodes\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n
Action.c(5):     \t\t\t\t\t// Old brwoser\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\t_on(document, 'mouseup', this._onDrop);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t// Make sure that we're working with the right name\n
Action.c(5):     \n
Action.c(5):     \t\tvar ret, type, hooks,\n
Action.c(5):     \t\t\t\tthis._loopId = setInterval(this._emulateDragOver, 50);\n
Action.c(5):     \t\t\torigName = jQuery.camelCase( name ),\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tstyle = elem.style;\n
Action.c(5):     \t\t\telse {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif (dataTransfer) {\n
Action.c(5):     \t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( 
Action.c(5):     \t\t\t\t\tdataTransfer.effectAllowed = 'move';\n
Action.c(5):     style, origName ) );\n
Action.c(5):     \t\t\t\t\toptions.setData && options.setData.call(this, dataTransfer, dragEl);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t// gets hook for the prefixed version\n
Action.c(5):     \n
Action.c(5):     \t\t// followed by the unprefixed version\n
Action.c(5):     \t\t\t\t_on(document, 'drop', this);\n
Action.c(5):     \t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n
Action.c(5):     \t\t\t\tsetTimeout(this._dragStarted, 0);\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t// Check if we're setting a value\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tif ( value !== undefined ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\ttype = typeof value;\n
Action.c(5):     \t\t_onDragOver: function (/**Event*/evt) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tvar el = this.el,\n
Action.c(5):     \t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n
Action.c(5):     \t\t\t\ttarget,\n
Action.c(5):     \t\t\tif ( type === "string" && (ret = rrelNum.exec( value )) ) {\n
Action.c(5):     \t\t\t\tdragRect,\n
Action.c(5):     \t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n
Action.c(5):     \t\t\t\ttargetRect,\n
Action.c(5):     \t\t\t\t// Fixes bug #9237\n
Action.c(5):     \t\t\t\trevert,\n
Action.c(5):     \t\t\t\ttype = "number";\n
Action.c(5):     \t\t\t\toptions = this.options,\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tgroup = options.group,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tactiveSortable = Sortable.active,\n
Action.c(5):     \t\t\t// Make sure that null and NaN values aren't set. See: #7116\n
Action.c(5):     \t\t\t\tisOwner = (activeGroup === group),\n
Action.c(5):     \t\t\tif ( value == null || value !== value ) {\n
Action.c(5):     \t\t\t\tisMovingBetweenSortable = false,\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t\tcanSort = options.sort;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif (evt.preventDefault !== void 0) {\n
Action.c(5):     \t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n
Action.c(5):     \t\t\t\tevt.preventDefault();\n
Action.c(5):     \t\t\tif ( type === "number" && !jQuery.cssNumber[ origName ] ) {\n
Action.c(5):     \t\t\t\t!options.dragoverBubble && evt.stopPropagation();\n
Action.c(5):     \t\t\t\tvalue += "px";\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif (dragEl.animated) {\n
Action.c(5):     \t\t\t// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t// but it would mean to define eight (for every problematic property) identical func
Action.c(5):     \t\t\t}\n
Action.c(5):     tions\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( !support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) 
Action.c(5):     \t\t\tmoved = true;\n
Action.c(5):     {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tstyle[ name ] = "inherit";\n
Action.c(5):     \t\t\tif (activeSortable && !options.disabled &&\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t(isOwner\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the orig
Action.c(5):     \t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n
Action.c(5):     inal list\n
Action.c(5):     \t\t\tif ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== un
Action.c(5):     \t\t\t\t\t: (\n
Action.c(5):     defined ) {\n
Action.c(5):     \t\t\t\t\t\tputSortable === this ||\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t(\n
Action.c(5):     \t\t\t\t// Support: IE\n
Action.c(5):     \t\t\t\t\t\t\t(activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, d
Action.c(5):     \t\t\t\t// Swallow errors from 'invalid' CSS values (#5509)\n
Action.c(5):     ragEl, evt)) &&\n
Action.c(5):     \t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n
Action.c(5):     \t\t\t\t\t// Support: Chrome, Safari\n
Action.c(5):     \t\t\t\t\t\t)\n
Action.c(5):     \t\t\t\t\t// Setting style to blank string required to delete "style: x !important;"\n
Action.c(5):     \t\t\t\t\t)\n
Action.c(5):     \t\t\t\t\tstyle[ name ] = "";\n
Action.c(5):     \t\t\t\t) &&\n
Action.c(5):     \t\t\t\t\tstyle[ name ] = value;\n
Action.c(5):     \t\t\t\t(evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\n
Action.c(5):     \t\t\t\t} catch(e) {}\n
Action.c(5):     \t\t\t) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t// Smart auto-scrolling\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t_autoScroll(evt, options, this.el);\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If a hook was provided get the non-computed value from there\n
Action.c(5):     \t\t\t\tif (_silent) {\n
Action.c(5):     \t\t\tif ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefine
Action.c(5):     \t\t\t\t\treturn;\n
Action.c(5):     d ) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\treturn ret;\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\ttarget = _closest(evt.target, options.draggable, el);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tdragRect = dragEl.getBoundingClientRect();\n
Action.c(5):     \t\t\t// Otherwise just get the value from the style object\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn style[ name ];\n
Action.c(5):     \t\t\t\tif (putSortable !== this) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\tputSortable = this;\n
Action.c(5):     \t},\n
Action.c(5):     \t\t\t\t\tisMovingBetweenSortable = true;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \tcss: function( elem, name, extra, styles ) {\n
Action.c(5):     \n
Action.c(5):     \t\tvar num, val, hooks,\n
Action.c(5):     \t\t\t\tif (revert) {\n
Action.c(5):     \t\t\torigName = jQuery.camelCase( name );\n
Action.c(5):     \t\t\t\t\t_cloneHide(activeSortable, true);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tparentEl = rootEl; // actualization\n
Action.c(5):     \t\t// Make sure that we're working with the right name\n
Action.c(5):     \n
Action.c(5):     \t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( 
Action.c(5):     \t\t\t\t\tif (cloneEl || nextEl) {\n
Action.c(5):     elem.style, origName ) );\n
Action.c(5):     \t\t\t\t\t\trootEl.insertBefore(dragEl, cloneEl || nextEl);\n
Action.c(5):     \n
Action.c(5):     \t\t// gets hook for the prefixed version\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t// followed by the unprefixed version\n
Action.c(5):     \t\t\t\t\telse if (!canSort) {\n
Action.c(5):     \t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n
Action.c(5):     \t\t\t\t\t\trootEl.appendChild(dragEl);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t// If a hook was provided get the computed value from there\n
Action.c(5):     \n
Action.c(5):     \t\tif ( hooks && "get" in hooks ) {\n
Action.c(5):     \t\t\t\t\treturn;\n
Action.c(5):     \t\t\tval = hooks.get( elem, true, extra );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t// Otherwise, if a way to get the computed value exists, use that\n
Action.c(5):     \t\t\t\tif ((el.children.length === 0) || (el.children[0] === ghostEl) ||\n
Action.c(5):     \t\tif ( val === undefined ) {\n
Action.c(5):     \t\t\t\t\t(el === evt.target) && (target = _ghostIsLast(el, evt))\n
Action.c(5):     \t\t\tval = curCSS( elem, name, styles );\n
Action.c(5):     \t\t\t\t) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\tif (target) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tif (target.animated) {\n
Action.c(5):     \t\t//convert "normal" to computed value\n
Action.c(5):     \t\t\t\t\t\t\treturn;\n
Action.c(5):     \t\tif ( val === "normal" && name in cssNormalTransform ) {\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\tval = cssNormalTransform[ name ];\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\t\ttargetRect = target.getBoundingClientRect();\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t// Return, converting to number if forced or a qualifier was provided and val looks nu
Action.c(5):     \n
Action.c(5):     meric\n
Action.c(5):     \t\t\t\t\t_cloneHide(activeSortable, isOwner);\n
Action.c(5):     \t\tif ( extra === "" || extra ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tnum = parseFloat( val );\n
Action.c(5):     \t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {\n
Action.c(5):     \t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n
Action.c(5):     \t\t\t\t\t\tif (!dragEl.contains(el)) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\t\t\tel.appendChild(dragEl);\n
Action.c(5):     \t\treturn val;\n
Action.c(5):     \t\t\t\t\t\t\tparentEl = el; // actualization\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tthis._animate(dragRect, dragEl);\n
Action.c(5):     jQuery.each([ "height", "width" ], function( i, name ) {\n
Action.c(5):     \t\t\t\t\t\ttarget && this._animate(targetRect, target);\n
Action.c(5):     \tjQuery.cssHooks[ name ] = {\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\tget: function( elem, computed, extra ) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\tif ( computed ) {\n
Action.c(5):     \t\t\t\telse if (target && !target.animated && target !== dragEl && (target.parentNode[exp
Action.c(5):     \t\t\t\t// certain elements can have dimension info if we invisibly show them\n
Action.c(5):     ando] !== void 0)) {\n
Action.c(5):     \t\t\t\t// however, it must have a current display style that would benefit from this\n
Action.c(5):     \t\t\t\t\tif (lastEl !== target) {\n
Action.c(5):     \t\t\t\treturn elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, "display" ) 
Action.c(5):     \t\t\t\t\t\tlastEl = target;\n
Action.c(5):     ) ?\n
Action.c(5):     \t\t\t\t\t\tlastCSS = _css(target);\n
Action.c(5):     \t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n
Action.c(5):     \t\t\t\t\t\tlastParentCSS = _css(target.parentNode);\n
Action.c(5):     \t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n
Action.c(5):     \t\t\t\t\ttargetRect = target.getBoundingClientRect();\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t\t\tvar width = targetRect.right - targetRect.left,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\theight = targetRect.bottom - targetRect.top,\n
Action.c(5):     \t\tset: function( elem, value, extra ) {\n
Action.c(5):     \t\t\t\t\t\tfloating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display)\n
Action.c(5):     \t\t\tvar styles = extra && getStyles( elem );\n
Action.c(5):     \t\t\t\t\t\t\t|| (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].index
Action.c(5):     \t\t\treturn setPositiveNumber( elem, value, extra ?\n
Action.c(5):     Of('row') === 0),\n
Action.c(5):     \t\t\t\taugmentWidthOrHeight(\n
Action.c(5):     \t\t\t\t\t\tisWide = (target.offsetWidth > dragEl.offsetWidth),\n
Action.c(5):     \t\t\t\t\telem,\n
Action.c(5):     \t\t\t\t\t\tisLong = (target.offsetHeight > dragEl.offsetHeight),\n
Action.c(5):     \t\t\t\t\tname,\n
Action.c(5):     \t\t\t\t\t\thalfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY -
Action.c(5):     \t\t\t\t\textra,\n
Action.c(5):      targetRect.top) / height) > 0.5,\n
Action.c(5):     \t\t\t\t\tsupport.boxSizing() && jQuery.css( elem, "boxSizing", false, styles ) === "borde
Action.c(5):     \t\t\t\t\t\tnextSibling = target.nextElementSibling,\n
Action.c(5):     r-box",\n
Action.c(5):     \t\t\t\t\t\tmoveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt),\n
Action.c(5):     \t\t\t\t\tstyles\n
Action.c(5):     \t\t\t\t\t\tafter = false\n
Action.c(5):     \t\t\t\t) : 0\n
Action.c(5):     \t\t\t\t\t;\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\tif (moveVector !== false) {\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\t\t\t\t_silent = true;\n
Action.c(5):     });\n
Action.c(5):     \t\t\t\t\t\tsetTimeout(_unsilent, 30);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     if ( !support.opacity ) {\n
Action.c(5):     \t\t\t\t\t\t_cloneHide(activeSortable, isOwner);\n
Action.c(5):     \tjQuery.cssHooks.opacity = {\n
Action.c(5):     \n
Action.c(5):     \t\tget: function( elem, computed ) {\n
Action.c(5):     \t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n
Action.c(5):     \t\t\t// IE uses filters for opacity\n
Action.c(5):     \t\t\t\t\t\t\tafter = (moveVector === 1);\n
Action.c(5):     \t\t\treturn ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : el
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     em.style.filter) || "" ) ?\n
Action.c(5):     \t\t\t\t\t\telse if (floating) {\n
Action.c(5):     \t\t\t\t( 0.01 * parseFloat( RegExp.$1 ) ) + "" :\n
Action.c(5):     \t\t\t\t\t\t\tvar elTop = dragEl.offsetTop,\n
Action.c(5):     \t\t\t\tcomputed ? "1" : "";\n
Action.c(5):     \t\t\t\t\t\t\t\ttgTop = target.offsetTop;\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\tif (elTop === tgTop) {\n
Action.c(5):     \t\tset: function( elem, value ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tafter = (target.previousElementSibling === dragEl) && !isWide || halfway &
Action.c(5):     \t\t\tvar style = elem.style,\n
Action.c(5):     & isWide;\n
Action.c(5):     \t\t\t\tcurrentStyle = elem.currentStyle,\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\topacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",\n
Action.c(5):     \t\t\t\t\t\t\telse if (target.previousElementSibling === dragEl || dragEl.previousElementS
Action.c(5):     \t\t\t\tfilter = cur
Action.c(5):     ibling === target) {\n
Action.c(5):     \t\t\t\t\t\t\t\tafter = (evt.clientY - targetRect.top) / height > 0.5;\n
Action.c(5):     \t\t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t\tafter = tgTop > elTop;\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t} else if (!isMovingBetweenSortable) {\n
Action.c(5):     \t\t\t\t\t\t\tafter = (nextSibling !== dragEl) && !isLong || halfway && isLong;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5): t=214023ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     \n
Action.c(5):     rentStyle && currentStyle.filter || style.filter || "";\n
Action.c(5):     \t\t\t\t\t\tif (!dragEl.contains(el)) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\tif (after && !nextSibling) {\n
Action.c(5):     \t\t\t// IE has trouble with opacity if it does not have layout\n
Action.c(5):     \t\t\t\t\t\t\t\tel.appendChild(dragEl);\n
Action.c(5):     \t\t\t// Force it by setting the zoom level\n
Action.c(5):     \t\t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\tstyle.zoom = 1;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n
Action.c(5):     \t\t\t// if setting opacity to 1, and no other filters exist - attempt to remove filter at
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     tribute #6652\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t// if value === "", then remove inline opacity #12685\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( ( value >= 1 || value === "" ) &&\n
Action.c(5):     \t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n
Action.c(5):     \t\t\t\t\tjQuery.trim( filter.replace( ralpha, "" ) ) === "" &&\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tstyle.removeAttribute ) {\n
Action.c(5):     \t\t\t\t\t\tthis._animate(dragRect, dragEl);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\tthis._animate(targetRect, target);\n
Action.c(5):     \t\t\t\t// Setting style.filter to null, "" & " " still leave "filter:" in the cssText\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t// if "filter:" is present at all, clearType is disabled, we want to avoid this\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t// style.removeAttribute is IE Only, but so apparently is this code path...\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tstyle.removeAttribute( "filter" );\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// if there is no filter style applied in a css rule or unset inline opacity, we a
Action.c(5):     \t\t_animate: function (prevRect, target) {\n
Action.c(5):     re done\n
Action.c(5):     \t\t\tvar ms = this.options.animation;\n
Action.c(5):     \t\t\t\tif ( value === "" || currentStyle && !currentStyle.filter ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\treturn;\n
Action.c(5):     \t\t\tif (ms) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tvar currentRect = target.getBoundingClientRect();\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif (prevRect.nodeType === 1) {\n
Action.c(5):     \t\t\t// otherwise, set new filter values\n
Action.c(5):     \t\t\t\t\tprevRect = prevRect.getBoundingClientRect();\n
Action.c(5):     \t\t\tstyle.filter = ralpha.test( filter ) ?\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tfilter.replace( ralpha, opacity ) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tfilter + " " + opacity;\n
Action.c(5):     \t\t\t\t_css(target, 'transition', 'none');\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t_css(target, 'transform', 'translate3d('\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\t\t\t+ (prevRect.left - currentRect.left) + 'px,'\n
Action.c(5):     }\n
Action.c(5):     \t\t\t\t\t+ (prevRect.top - currentRect.top) + 'px,0)'\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t);\n
Action.c(5):     jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n
Action.c(5):     \n
Action.c(5):     \tfunction( elem, computed ) {\n
Action.c(5):     \t\t\t\ttarget.offsetWidth; // repaint\n
Action.c(5):     \t\tif ( computed ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n
Action.c(5):     \t\t\t\t_css(target, 'transition', 'all ' + ms + 'ms');\n
Action.c(5):     \t\t\t// Work around by temporarily setting element display to inline-block\n
Action.c(5):     \t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n
Action.c(5):     \t\t\treturn jQuery.swap( elem, { "display": "inline-block" },\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tcurCSS, [ elem, "marginRight" ] );\n
Action.c(5):     \t\t\t\tclearTimeout(target.animated);\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\ttarget.animated = setTimeout(function () {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t\t_css(target, 'transition', '');\n
Action.c(5):     );\n
Action.c(5):     \t\t\t\t\t_css(target, 'transform', '');\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\ttarget.animated = false;\n
Action.c(5):     // These hooks are used by animate to expand properties\n
Action.c(5):     \t\t\t\t}, ms);\n
Action.c(5):     jQuery.each({\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \tmargin: "",\n
Action.c(5):     \t\t},\n
Action.c(5):     \tpadding: "",\n
Action.c(5):     \n
Action.c(5):     \tborder: "Width"\n
Action.c(5):     \t\t_offUpEvents: function () {\n
Action.c(5):     }, function( prefix, suffix ) {\n
Action.c(5):     \t\t\tvar ownerDocument = this.el.ownerDocument;\n
Action.c(5):     \tjQuery.cssHooks[ prefix + suffix ] = {\n
Action.c(5):     \n
Action.c(5):     \t\texpand: function( value ) {\n
Action.c(5):     \t\t\t_off(document, 'touchmove', this._onTouchMove);\n
Action.c(5):     \t\t\tvar i = 0,\n
Action.c(5):     \t\t\t_off(document, 'pointermove', this._onTouchMove);\n
Action.c(5):     \t\t\t\texpanded = {},\n
Action.c(5):     \t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n
Action.c(5):     \n
Action.c(5):     \t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n
Action.c(5):     \t\t\t\t// assumes a single number if not a string\n
Action.c(5):     \t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n
Action.c(5):     \t\t\t\tparts = typeof value === "string" ? value.split(" ") : [ value ];\n
Action.c(5):     \t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n
Action.c(5):     \n
Action.c(5):     \t\t\t_off(ownerDocument, 'selectstart', this);\n
Action.c(5):     \t\t\tfor ( ; i < 4; i++ ) {\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n
Action.c(5):     \t\t_onDrop: function (/**Event*/evt) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tvar el = this.el,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\toptions = this.options;\n
Action.c(5):     \t\t\treturn expanded;\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\tclearInterval(this._loopId);\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\tclearInterval(autoScroll.pid);\n
Action.c(5):     \n
Action.c(5):     \t\t\tclearTimeout(this._dragStartTimer);\n
Action.c(5):     \tif ( !rmargin.test( prefix ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n
Action.c(5):     \t\t\t// Unbind events\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t_off(document, 'mousemove', this._onTouchMove);\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif (this.nativeDraggable) {\n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \t\t\t\t_off(document, 'drop', this);\n
Action.c(5):     \tcss: function( name, value ) {\n
Action.c(5):     \t\t\t\t_off(el, 'dragstart', this._onDragStart);\n
Action.c(5):     \t\treturn access( this, function( elem, name, value ) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tvar styles, len,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tmap = {},\n
Action.c(5):     \t\t\tthis._offUpEvents();\n
Action.c(5):     \t\t\t\ti = 0;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif (evt) {\n
Action.c(5):     \t\t\tif ( jQuery.isArray( name ) ) {\n
Action.c(5):     \t\t\t\tif (moved) {\n
Action.c(5):     \t\t\t\tstyles = getStyles( elem );\n
Action.c(5):     \t\t\t\t\tevt.preventDefault();\n
Action.c(5):     \t\t\t\tlen = name.length;\n
Action.c(5):     \t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tfor ( ; i < len; i++ ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n
Action.c(5):     \t\t\t\tghostEl && ghostEl.parentNode.removeChild(ghostEl);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {\n
Action.c(5):     \t\t\t\treturn map;\n
Action.c(5):     \t\t\t\t\t// Remove clone\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\tcloneEl && cloneEl.parentNode.removeChild(cloneEl);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\treturn value !== undefined ?\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tjQuery.style( elem, name, value ) :\n
Action.c(5):     \t\t\t\tif (dragEl) {\n
Action.c(5):     \t\t\t\tjQuery.css( elem, name );\n
Action.c(5):     \t\t\t\t\tif (this.nativeDraggable) {\n
Action.c(5):     \t\t}, name, value, arguments.length > 1 );\n
Action.c(5):     \t\t\t\t\t\t_off(dragEl, 'dragend', this);\n
Action.c(5):     \t},\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \tshow: function() {\n
Action.c(5):     \n
Action.c(5):     \t\treturn showHide( this, true );\n
Action.c(5):     \t\t\t\t\t_disableDraggable(dragEl);\n
Action.c(5):     \t},\n
Action.c(5):     \t\t\t\t\tdragEl.style['will-change'] = '';\n
Action.c(5):     \thide: function() {\n
Action.c(5):     \n
Action.c(5):     \t\treturn showHide( this );\n
Action.c(5):     \t\t\t\t\t// Remove class's\n
Action.c(5):     \t},\n
Action.c(5):     \t\t\t\t\t_toggleClass(dragEl, this.options.ghostClass, false);\n
Action.c(5):     \ttoggle: function( state ) {\n
Action.c(5):     \t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n
Action.c(5):     \t\tif ( typeof state === "boolean" ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn state ? this.show() : this.hide();\n
Action.c(5):     \t\t\t\t\tif (rootEl !== parentEl) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\t\t\t\tif (newIndex >= 0) {\n
Action.c(5):     \t\t\tif ( isHidden( this ) ) {\n
Action.c(5):     \t\t\t\t\t\t\t// Add event\n
Action.c(5):     \t\t\t\tjQuery( this ).show();\n
Action.c(5):     \t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tjQuery( this ).hide();\n
Action.c(5):     \t\t\t\t\t\t\t// Remove event\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t\t\t\t// drag from one list and drop into another\n
Action.c(5):     });\n
Action.c(5):     \t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     function Tween( elem, options, prop, end, easing ) {\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \treturn new Tween.prototype.init( elem, options, prop, end, easing );\n
Action.c(5):     \t\t\t\t\telse {\n
Action.c(5):     }\n
Action.c(5):     \t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n
Action.c(5):     jQuery.Tween = Tween;\n
Action.c(5):     \t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\tnewIndex = _index(dragEl, options.draggable);\n
Action.c(5):     Tween.prototype = {\n
Action.c(5):     \n
Action.c(5):     \tconstructor: Tween,\n
Action.c(5):     \t\t\t\t\t\t\tif (newIndex >= 0) {\n
Action.c(5):     \tinit: function( elem, options, prop, end, easing, unit ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t// drag & drop within the same list\n
Action.c(5):     \t\tthis.elem = elem;\n
Action.c(5):     \t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex)
Action.c(5):     \t\tthis.prop = prop;\n
Action.c(5):     ;\n
Action.c(5):     \t\tthis.easing = easing || "swing";\n
Action.c(5):     \t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\n
Action.c(5):     \t\tthis.options = options;\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\tthis.start = this.now = this.cur();\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\tthis.end = end;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );\n
Action.c(5):     \n
Action.c(5):     \t},\n
Action.c(5):     \t\t\t\t\tif (Sortable.active) {\n
Action.c(5):     \tcur: function() {\n
Action.c(5):     \t\t\t\t\t\t/* jshint eqnull:true */\n
Action.c(5):     \t\tvar hooks = Tween.propHooks[ this.prop ];\n
Action.c(5):     \t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\tnewIndex = oldIndex;\n
Action.c(5):     \t\treturn hooks && hooks.get ?\n
Action.c(5):     \t
Action.c(5):     \t\t\thooks.get( this ) :\n
Action.c(5):     \t\t\tTween.propHooks._default.get( this );\n
Action.c(5):     \t},\n
Action.c(5):     \trun: function( percent ) {\n
Action.c(5):     \t\tvar eased,\n
Action.c(5):     \t\t\thooks = Tween.propHooks[ this.prop ];\n
Action.c(5):     \n
Action.c(5): t=214024ms: 10433-byte DECODED response body for "http://10.184.129.208/Platform/app/common/controls/drag-sortable/Sortable.js" (RelFrameId=, Internal ID=295)
Action.c(5):     \t\tif ( this.options.duration ) {\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n
Action.c(5):     \t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t\t\t\t// Save sorting\n
Action.c(5):     \t\t\tthis.pos = eased = percent;\n
Action.c(5):     \t\t\t\t\t\tthis.save();\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\tthis.now = ( this.end - this.start ) * eased + this.start;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tif ( this.options.step ) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tthis.options.step.call( this.elem, this.now, this );\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\tthis._nulling();\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tif ( hooks && hooks.set ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\thooks.set( this );\n
Action.c(5):     \t\t_nulling: function() {\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\trootEl =\n
Action.c(5):     \t\t\tTween.propHooks._default.set( this );\n
Action.c(5):     \t\t\tdragEl =\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\tparentEl =\n
Action.c(5):     \t\treturn this;\n
Action.c(5):     \t\t\tghostEl =\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tnextEl =\n
Action.c(5):     };\n
Action.c(5):     \t\t\tcloneEl =\n
Action.c(5):     \n
Action.c(5):     \t\t\tlastDownEl =\n
Action.c(5):     Tween.prototype.init.prototype = Tween.prototype;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tscrollEl =\n
Action.c(5):     Tween.propHooks = {\n
Action.c(5):     \t\t\tscrollParentEl =\n
Action.c(5):     \t_default: {\n
Action.c(5):     \n
Action.c(5):     \t\tget: function( tween ) {\n
Action.c(5):     \t\t\ttapEvt =\n
Action.c(5):     \t\t\tvar result;\n
Action.c(5):     \t\t\ttouchEvt =\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( tween.elem[ tween.prop ] != null &&\n
Action.c(5):     \t\t\tmoved =\n
Action.c(5):     \t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n
Action.c(5):     \t\t\tnewIndex =\n
Action.c(5):     \t\t\t\treturn tween.elem[ tween.prop ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tlastEl =\n
Action.c(5):     \n
Action.c(5):     \t\t\tlastCSS =\n
Action.c(5):     \t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n
Action.c(5):     \n
Action.c(5):     \t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n
Action.c(5):     \t\t\tputSortable =\n
Action.c(5):     \t\t\t// so, simple values such as "10px" are parsed to Float.\n
Action.c(5):     \t\t\tactiveGroup =\n
Action.c(5):     \t\t\t// complex values such as "rotate(1rad)" are returned as is.\n
Action.c(5):     \t\t\tSortable.active = null;\n
Action.c(5):     \t\t\tresult = jQuery.css( tween.elem, tween.prop, "" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Empty strings, null, undefined and "auto" are converted to 0.\n
Action.c(5):     \t\t\tsavedInputChecked.forEach(function (el) {\n
Action.c(5):     \t\t\treturn !result || result === "auto" ? 0 : result;\n
Action.c(5):     \t\t\t\tel.checked = true;\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\tset: function( tween ) {\n
Action.c(5):     \t\t\tsavedInputChecked.length = 0;\n
Action.c(5):     \t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t// available and use plain properties where available\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n
Action.c(5):     \t\thandleEvent: function (/**Event*/evt) {\n
Action.c(5):     \t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n
Action.c(5):     \t\t\tswitch (evt.type) {\n
Action.c(5):     \t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] 
Action.c(5):     \t\t\t\tcase 'drop':\n
Action.c(5):     != null || jQuery.cssHooks[ tween.prop ] ) ) {\n
Action.c(5):     \t\t\t\tcase 'dragend':\n
Action.c(5):     \t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n
Action.c(5):     \t\t\t\t\tthis._onDrop(evt);\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\ttween.elem[ tween.prop ] = tween.now;\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tcase 'dragover':\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tcase 'dragenter':\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t\tif (dragEl) {\n
Action.c(5):     };\n
Action.c(5):     \t\t\t\t\t\tthis._onDragOver(evt);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t_globalDragOver(evt);\n
Action.c(5):     // Support: IE <=9\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     // Panic based approach to setting things on disconnected nodes\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n
Action.c(5):     \t\t\t\tcase 'selectstart':\n
Action.c(5):     \tset: function( tween ) {\n
Action.c(5):     \t\t\t\t\tevt.preventDefault();\n
Action.c(5):     \t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n
Action.c(5):     \t\t\t\t\tbreak;\n
Action.c(5):     \t\t\ttween.elem[ tween.prop ] = tween.now;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t/**\n
Action.c(5):     jQuery.easing = {\n
Action.c(5):     \t\t * Serializes the item into an array of string.\n
Action.c(5):     \tlinear: function( p ) {\n
Action.c(5):     \t\t * @returns {String[]}\n
Action.c(5):     \t\treturn p;\n
Action.c(5):     \t\t */\n
Action.c(5):     \t},\n
Action.c(5):     \t\ttoArray: function () {\n
Action.c(5):     \tswing: function( p ) {\n
Action.c(5):     \t\t\tvar order = [],\n
Action.c(5):     \t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n
Action.c(5):     \t\t\t\tel,\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\tchildren = this.el.children,\n
Action.c(5):     };\n
Action.c(5):     \t\t\t\ti = 0,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tn = children.length,\n
Action.c(5):     jQuery.fx = Tween.prototype.init;\n
Action.c(5):     \t\t\t\toptions = this.options;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Back Compat <1.8 extension point\n
Action.c(5):     \t\t\tfor (; i < n; i++) {\n
Action.c(5):     jQuery.fx.step = {};\n
Action.c(5):     \t\t\t\tel = children[i];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif (_closest(el, options.draggable, this.el)) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     var\n
Action.c(5):     \n
Action.c(5):     \tfxNow, timerId,\n
Action.c(5):     \t\t\treturn order;\n
Action.c(5):     \trfxtypes = /^(?:toggle|show|hide)$/,\n
Action.c(5):     \t\t},\n
Action.c(5):     \trfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),\n
Action.c(5):     \n
Action.c(5):     \trrun = /queueHooks$/,\n
Action.c(5):     \n
Action.c(5):     \tanimationPrefilters = [ defaultPrefilter ],\n
Action.c(5):     \t\t/**\n
Action.c(5):     \ttweeners = {\n
Action.c(5):     \t\t * Sorts the elements according to the array.\n
Action.c(5):     \t\t"*": [ function( prop, value ) {\n
Action.c(5):     \t\t * @param  {String[]}  order  order of the items\n
Action.c(5):     \t\t\tvar tween = this.createTween( prop, value ),\n
Action.c(5):     \t\t */\n
Action.c(5):     \t\t\t\ttarget = tween.cur(),\n
Action.c(5):     \t\tsort: function (order) {\n
Action.c(5):     \t\t\t\tparts = rfxnum.exec( value ),\n
Action.c(5):     \t\t\tvar items = {}, rootEl = this.el;\n
Action.c(5):     \t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tthis.toArray().forEach(function (id, i) {\n
Action.c(5):     \t\t\t\t// Starting value computation is required for potential unit mismatches\n
Action.c(5):     \t\t\t\tvar el = rootEl.children[i];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&\n
Action.c(5):     \t\t\t\tif (_closest(el, this.options.draggable, rootEl)) {\n
Action.c(5):     \t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n
Action.c(5):     \t\t\t\t\titems[id] = el;\n
Action.c(5):     \t\t\t\tscale = 1,\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tmaxIterations = 20;\n
Action.c(5):     \t\t\t}, this);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( start && start[ 3 ] !== unit ) {\n
Action.c(5):     \t\t\torder.forEach(function (id) {\n
Action.c(5):     \t\t\t\t// Trust units reported by jQuery.css\n
Action.c(5):     \t\t\t\tif (items[id]) {\n
Action.c(5):     \t\t\t\tunit = unit || start[ 3 ];\n
Action.c(5):     \t\t\t\t\trootEl.removeChild(items[id]);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\trootEl.appendChild(items[id]);\n
Action.c(5):     \t\t\t\t// Make sure we update the tween properties later on\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tparts = parts || [];\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t\t// Iteratively approximate from a nonzero starting point\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tstart = +target || 1;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t/**\n
Action.c(5):     \t\t\t\tdo {\n
Action.c(5):     \t\t * Save the current sorting\n
Action.c(5):     \t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n
Action.c(5):     \t\t */\n
Action.c(5):     \t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchan
Action.c(5):     \t\tsave: function () {\n
Action.c(5):     ged below\n
Action.c(5):     \t\t\tvar store = this.options.store;\n
Action.c(5):     \t\t\t\t\tscale = scale || ".5";\n
Action.c(5):     \t\t\tstore && store.set(this);\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\t\t\t// Adjust and apply\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tstart = start / scale;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n
Action.c(5):     \t\t/**\n
Action.c(5):     \n
Action.c(5):     \t\t * For each element in the set, get the first element that matches the selector by tes
Action.c(5):     \t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n
Action.c(5):     ting the element itself and traversing up through its ancestors in the DOM tree.\n
Action.c(5):     \t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had en
Action.c(5):     \t\t * @param   {HTMLElement}  el\n
Action.c(5):     ough\n
Action.c(5):     \t\t * @param   {String}       [selector]  default: `options.draggable`\n
Action.c(5):     \t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIteratio
Action.c(5):     \t\t * @returns {HTMLElement|null}\n
Action.c(5):     ns );\n
Action.c(5):     \t\t */\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\tclosest: function (el, selector) {\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn _closest(el, selector || this.options.draggable, this.el);\n
Action.c(5):     \t\t\t// Update tween properties\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\tif ( parts ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tstart = tween.start = +start || +target || 0;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\ttween.unit = unit;\n
Action.c(5):     \t\t/**\n
Action.c(5):     \t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n
Action.c(5):     \t\t * Set/get option\n
Action.c(5):     \t\t\t\ttween.end = parts[ 1 ] ?\n
Action.c(5):     \t\t * @param   {string} name\n
Action.c(5):     \t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n
Action.c(5):     \t\t * @param   {*}      [value]\n
Action.c(5):     \t\t\t\t\t+parts[ 2 ];\n
Action.c(5):     \t\t * @returns {*}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t */\n
Action.c(5):     \n
Action.c(5):     \t\toption: function (name, value) {\n
Action.c(5):     \t\t\treturn tween;\n
Action.c(5):     \t\t\tvar options = this.options;\n
Action.c(5):     \t\t} ]\n
Action.c(5):     \n
Action.c(5):     \t};\n
Action.c(5):     \t\t\tif (value === void 0) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn options[name];\n
Action.c(5):     // Animations created synchronously will run synchronously\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     function createFxNow() {\n
Action.c(5):     \t\t\t\toptions[name] = value;\n
Action.c(5):     \tsetTimeout(function() {\n
Action.c(5):     \n
Action.c(5):     \t\tfxNow = undefined;\n
Action.c(5):     \t\t\t\tif (name === 'group') {\n
Action.c(5):     \t});\n
Action.c(5):     \t\t\t\t\t_prepareGroup(options);\n
Action.c(5):     \treturn ( fxNow = jQuery.now() );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     }\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t},\n
Action.c(5):     // Generate parameters to create a standard animation\n
Action.c(5):     \n
Action.c(5):     function genFx( type, includeWidth ) {\n
Action.c(5):     \n
Action.c(5):     \tvar which,\n
Action.c(5):     \t\t/**\n
Action.c(5):     \t\tattrs = { height: type },\n
Action.c(5):     \t\t * Destroy\n
Action.c(5):     \t\ti = 0;\n
Action.c(5):     \t\t */\n
Action.c(5):     \n
Action.c(5):     \t\tdestroy: function () {\n
Action.c(5):     \t// if we include width, step value is 1 to do all cssExpand values,\n
Action.c(5):     \t\t\tvar el = this.el;\n
Action.c(5):     \t// if we don't include width, step value is 2 to skip over Left and Right\n
Action.c(5):     \n
Action.c(5):     \tincludeWidth = includeWidth ? 1 : 0;\n
Action.c(5):     \t\t\tel[expando] = null;\n
Action.c(5):     \tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n
Action.c(5):     \n
Action.c(5):     \t\twhich = cssExpand[ i ];\n
Action.c(5):     \t\t\t_off(el, 'mousedown', this._onTapStart);\n
Action.c(5):     \t\tattrs[ "margin" + which ] = attrs[ "padding" + which ] = type;\n
Action.c(5):     \t\t\t_off(el, 'touchstart', this._onTapStart);\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t_off(el, 'pointerdown', this._onTapStart);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tif ( includeWidth ) {\n
Action.c(5):     \t\t\tif (this.nativeDraggable) {\n
Action.c(5):     \t\tattrs.opacity = attrs.width = type;\n
Action.c(5):     \t\t\t\t_off(el, 'dragover', this);\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t_off(el, 'dragenter', this);\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \treturn attrs;\n
Action.c(5):     \n
Action.c(5):     }\n
Action.c(5):     \t\t\t// Remove draggable attributes\n
Action.c(5):     \n
Action.c(5):     \t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n
Action.c(5):     function createTween( value, prop, animation ) {\n
Action.c(5):     \t\t\t\tel.removeAttribute('draggable');\n
Action.c(5):     \tvar tween,\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),\n
Action.c(5):     \n
Action.c(5):     \t\tindex = 0,\n
Action.c(5):     \t\t\ttouchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\n
Action.c(5):     \t\tlength = collection.length;\n
Action.c(5):     \n
Action.c(5):     \tfor ( ; index < length; index++ ) {\n
Action.c(5):     \t\t\tthis._onDrop();\n
Action.c(5):     \t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tthis.el = el = null;\n
Action.c(5):     \t\t\t// we're done with this property\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\treturn tween;\n
Action.c(5):     \t};\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     }\n
Action.c(5):     \tfunction _cloneHide(sortable, state) {\n
Action.c(5):     \n
Action.c(5):     \t\tif (sortable.lastPullMode !== 'clone') {\n
Action.c(5):     function defaultPrefilter( elem, props, opts ) {\n
Action.c(5):     \t\t\tstate = true;\n
Action.c(5):     \t/* jshint validthis: true */\n
Action.c(5):     \t\t}\n
Action.c(5):     \tvar prop, value, toggle, tween, hooks, oldfire, display, dDisplay,\n
Action.c(5):     \n
Action.c(5):     \t\tanim = this,\n
Action.c(5):     \t\tif (cloneEl && (cloneEl.state !== state)) {\n
Action.c(5):     \t\torig = {},\n
Action.c(5):     \t\t\t_css(cloneEl, 'display', state ? 'none' : '');\n
Action.c(5):     \t\tstyle = elem.style,\n
Action.c(5):     \n
Action.c(5):     \t\thidden = elem.nodeType && isHidden( elem ),\n
Action.c(5):     \t\t\tif (!state) {\n
Action.c(5):     \t\tdataShow = jQuery._data( elem, "fxshow" );\n
Action.c(5):     \t\t\t\tif (cloneEl.state) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif (sortable.options.group.revertClone) {\n
Action.c(5):     \t// handle queue: false promises\n
Action.c(5):     \t\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n
Action.c(5):     \tif ( !opts.queue ) {\n
Action.c(5):     \t\t\t\t\t\tsortable._animate(dragEl, cloneEl);\n
Action.c(5):     \t\thooks = jQuery._queueHooks( elem, "fx" );\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\tif ( hooks.unqueued == null ) {\n
Action.c(5):     \t\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n
Action.c(5):     \t\t\thooks.unqueued = 0;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\toldfire = hooks.empty.fire;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\thooks.empty.fire = function() {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tif ( !hooks.unqueued ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\toldfire();\n
Action.c(5):     \t\t\tcloneEl.state = state;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\thooks.unqueued++;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\n
Action.c(5):     \t\tanim.always(function() {\n
Action.c(5):     \t\tif (el) {\n
Action.c(5):     \t\t\t// doing this makes sure that the complete handler will be called\n
Action.c(5):     \t\t\tctx = ctx || document;\n
Action.c(5):     \t\t\t// before this completes\n
Action.c(5):     \n
Action.c(5):     \t\t\tanim.always(function() {\n
Action.c(5):     \t\t\tdo {\n
Action.c(5):     \t\t\t\thooks.unqueued--;\n
Action.c(5):     \t\t\t\tif ((selector === '>*' && el.parentNode === ctx) || _matches(el, selector)) {\n
Action.c(5):     \t\t\t\tif ( !jQuery.queue( elem, "fx" ).length ) {\n
Action.c(5):     \t\t\t\t\treturn el;\n
Action.c(5):     \t\t\t\t\thooks.empty.fire();\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t/* jshint boss:true */\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t\t} while (el = _getParentOrHost(el));\n
Action.c(5):     \t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\treturn null;\n
Action.c(5):     \t// height/width overflow pass\n
Action.c(5):     \t}\n
Action.c(5):     \tif ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Make sure that nothing sneaks out\n
Action.c(5):     \n
Action.c(5):     \t\t// Record all 3 overflow attributes because IE does not\n
Action.c(5):     \tfunction _getParentOrHost(el) {\n
Action.c(5):     \t\t// change the overflow attribute when overflowX and\n
Action.c(5):     \t\tvar parent = el.host;\n
Action.c(5):     \t\t// overflowY are set to the same value\n
Action.c(5):     \n
Action.c(5):     \t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n
Action.c(5):     \t\treturn (parent && parent.nodeType) ? parent : el.parentNode;\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \t\t// Set display property to inline-block for height/width\n
Action.c(5):     \n
Action.c(5):     \t\t// animations on inline elements that are having width/height animated\n
Action.c(5):     \n
Action.c(5):     \t\tdisplay = jQuery.css( elem, "display" );\n
Action.c(5):     \tfunction _globalDragOver(/**Event*/evt) {\n
Action.c(5):     \t\tdDisplay = defaultDisplay( elem.nodeName );\n
Action.c(5):     \t\tif (evt.dataTransfer) {\n
Action.c(5):     \t\tif ( display === "none" ) {\n
Action.c(5):     \t\t\tevt.dataTransfer.dropEffect = 'move';\n
Action.c(5):     \t\t\tdisplay = dDisplay;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tevt.preventDefault();\n
Action.c(5):     \t\tif ( display === "inline" &&\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\tjQuery.css( elem, "float" ) === "none" ) {\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t// inline-level elements accept inline-block;\n
Action.c(5):     \tfunction _on(el, event, fn) {\n
Action.c(5):     \t\t\t// block-level elements need to be inline with layout\n
Action.c(5):     \t\tel.addEventListener(event, fn, captureMode);\n
Action.c(5):     \t\t\tif ( !support.inlineBlockNeedsLayout || dDisplay === "inline" ) {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\tstyle.display = "inline-block";\n
Action.c(5):     \n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tstyle.zoom = 1;\n
Action.c(5):     \tfunction _off(el, event, fn) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\tel.removeEventListener(event, fn, captureMode);\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tif ( opts.overflow ) {\n
Action.c(5):     \tfunction _toggleClass(el, name, state) {\n
Action.c(5):     \t\tstyle.overflow = "hidden";\n
Action.c(5):     \t\tif (el) {\n
Action.c(5):     \t\tif ( !support.shrinkWrapBlocks() ) {\n
Action.c(5):     \t\t\tif (el.classList) {\n
Action.c(5):     \t\t\tanim.always(function() {\n
Action.c(5):     \t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n
Action.c(5):     \t\t\t\tstyle.overflow = opts.overflow[ 0 ];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n
Action.c(5):     \t\t\telse {\n
Action.c(5):     \t\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n
Action.c(5):     \t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + nam
Action.c(5):     \t\t\t});\n
Action.c(5):     e + ' ', ' ');\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t// show/hide pass\n
Action.c(5):     \t}\n
Action.c(5):     \tfor ( prop in props ) {\n
Action.c(5):     \n
Action.c(5):     \t\tvalue = props[ prop ];\n
Action.c(5):     \n
Action.c(5):     \t\tif ( rfxtypes.exec( value ) ) {\n
Action.c(5):     \tfunction _css(el, prop, val) {\n
Action.c(5):     \t\t\tdelete props[ prop ];\n
Action.c(5):     \t\tvar style = el && el.style;\n
Action.c(5):     \t\t\ttoggle = toggle || value === "toggle";\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( value === ( hidden ? "hide" : "show" ) ) {\n
Action.c(5):     \t\tif (style) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif (val === void 0) {\n
Action.c(5):     \t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to 
Action.c(5):     \t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n
Action.c(5):     proceed with show, we should pretend to be hidden\n
Action.c(5):     \t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n
Action.c(5):     \t\t\t\tif ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t\thidden = true;\n
Action.c(5):     \t\t\t\telse if (el.currentStyle) {\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tval = el.currentStyle;\n
Action.c(5):     \t\t\t\t\tcontinue;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\treturn prop === void 0 ? val : val[prop];\n
Action.c(5):     \t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\telse {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\tif (!(prop in style)) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tprop = '-webkit-' + prop;\n
Action.c(5):     \tif ( !jQuery.isEmptyObject( orig ) ) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\tif ( dataShow ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( "hidden" in dataShow ) {\n
Action.c(5):     \t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n
Action.c(5):     \t\t\t\thidden = dataShow.hidden;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tdataShow = jQuery._data( elem, "fxshow", {} );\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tfunction _find(ctx, tagName, iterator) {\n
Action.c(5):     \t\t// store state if its toggle - enables .stop().toggle() to "reverse"\n
Action.c(5):     \t\tif (ctx) {\n
Action.c(5):     \t\tif ( toggle ) {\n
Action.c(5):     \t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n
Action.c(5):     \t\t\tdataShow.hidden = !hidden;\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\tif (iterator) {\n
Action.c(5):     \t\tif ( hidden ) {\n
Action.c(5):     \t\t\t\tfor (; i < n; i++) {\n
Action.c(5):     \t\t\tjQuery( elem ).show();\n
Action.c(5):     \t\t\t\t\titerator(list[i], i);\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\tanim.done(function() {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\tjQuery( elem ).hide();\n
Action.c(5):     \n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t\treturn list;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tanim.done(function() {\n
Action.c(5):     \n
Action.c(5):     \t\t\tvar prop;\n
Action.c(5):     \t\treturn [];\n
Action.c(5):     \t\t\tjQuery._removeData( elem, "fxshow" );\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tfor ( prop in orig ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n
Action.c(5):     \n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t});\n
Action.c(5):     \tfunction _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) 
Action.c(5):     \t\tfor ( prop in orig ) {\n
Action.c(5):     {\n
Action.c(5):     \t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n
Action.c(5):     \t\tsortable = (sortable || rootEl[expando]);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( !( prop 
Action.c(5):     \t\tvar evt = document.createEvent('Event'),\n
Action.c(5):     \t\t\toptions = sortable.options,\n
Action.c(5):     \t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n
Action.c(5):     \n
Action.c(5):     \t\tevt.initEvent(name, true, true);\n
Action.c(5):     \n
Action.c(5): t=214028ms: 6133-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     \t\tevt.to = rootEl;\n
Action.c(5):     in dataShow ) ) {\n
Action.c(5):     \t\tevt.from = fromEl || rootEl;\n
Action.c(5):     \t\t\t\tdataShow[ prop ] = tween.start;\n
Action.c(5):     \t\tevt.item = targetEl || rootEl;\n
Action.c(5):     \t\t\t\tif ( hidden ) {\n
Action.c(5):     \t\tevt.clone = cloneEl;\n
Action.c(5):     \t\t\t\t\ttween.end = tween.start;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\ttween.start = prop === "width" || prop === "height" ? 1 : 0;\n
Action.c(5):     \t\tevt.oldIndex = startIndex;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\tevt.newIndex = newIndex;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\trootEl.dispatchEvent(evt);\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     }\n
Action.c(5):     \t\tif (options[onName]) {\n
Action.c(5):     \n
Action.c(5):     \t\t\toptions[onName].call(sortable, evt);\n
Action.c(5):     function propFilter( props, specialEasing ) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \tvar index, name, easing, value, hooks;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t// camelCase, specialEasing and expand cssHook pass\n
Action.c(5):     \n
Action.c(5):     \tfor ( index in props ) {\n
Action.c(5):     \tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt) {\n
Action.c(5):     \t\tname = jQuery.camelCase( index );\n
Action.c(5):     \t\tvar evt,\n
Action.c(5):     \t\teasing = specialEasing[ name ];\n
Action.c(5):     \t\t\tsortable = fromEl[expando],\n
Action.c(5):     \t\tvalue = props[ index ];\n
Action.c(5):     \t\t\tonMoveFn = sortable.options.onMove,\n
Action.c(5):     \t\tif ( jQuery.isArray( value ) ) {\n
Action.c(5):     \t\t\tretVal;\n
Action.c(5):     \t\t\teasing = value[ 1 ];\n
Action.c(5):     \n
Action.c(5):     \t\t\tvalue = props[ index ] = value[ 0 ];\n
Action.c(5):     \t\tevt = document.createEvent('Event');\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tevt.initEvent('move', true, true);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tif ( index !== name ) {\n
Action.c(5):     \t\tevt.to = toEl;\n
Action.c(5):     \t\t\tprops[ name ] = value;\n
Action.c(5):     \t\tevt.from = fromEl;\n
Action.c(5):     \t\t\tdelete props[ index ];\n
Action.c(5):     \t\tevt.dragged = dragEl;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tevt.draggedRect = dragRect;\n
Action.c(5):     \n
Action.c(5):     \t\tevt.related = targetEl || toEl;\n
Action.c(5):     \t\thooks = jQuery.cssHooks[ name ];\n
Action.c(5):     \t\tevt.relatedRect = targetRect || toEl.getBoundingClientRect();\n
Action.c(5):     \t\tif ( hooks && "expand" in hooks ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tvalue = hooks.expand( value );\n
Action.c(5):     \t\tfromEl.dispatchEvent(evt);\n
Action.c(5):     \t\t\tdelete props[ name ];\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tif (onMoveFn) {\n
Action.c(5):     \t\t\t// not quite $.extend, this wont overwrite keys already present.\n
Action.c(5):     \t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t// also - reusing 'index' from above because we have the correct "name"\n
Action.c(5):     \n
Action.c(5):     \t\t\tfor ( index in value ) {\n
Action.c(5):     \t\treturn retVal;\n
Action.c(5):     \t\t\t\tif ( !( index in props ) ) {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t\tprops[ index ] = value[ index ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tspecialEasing[ index ] = easing;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \tfunction _disableDraggable(el) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\tel.draggable = false;\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tspecialEasing[ name ] = easing;\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \tfunction _unsilent() {\n
Action.c(5):     }\n
Action.c(5):     \t\t_silent = false;\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     function Animation( elem, properties, options ) {\n
Action.c(5):     \n
Action.c(5):     \tvar result,\n
Action.c(5):     \n
Action.c(5):     \t\tstopped,\n
Action.c(5):     \t/** @returns {HTMLElement|false} */\n
Action.c(5):     \t\tindex = 0,\n
Action.c(5):     \tfunction _ghostIsLast(el, evt) {\n
Action.c(5):     \t\tlength = animationPrefilters.length,\n
Action.c(5):     \t\tvar lastEl = el.lastElementChild,\n
Action.c(5):     \t\tdeferred = jQuery.Deferred().always( function() {\n
Action.c(5):     \t\t\trect = lastEl.getBoundingClientRect();\n
Action.c(5):     \t\t\t// don't match elem in the :animated selector\n
Action.c(5):     \n
Action.c(5):     \t\t\tdelete tick.elem;\n
Action.c(5):     \t\t// 5 â\x94 min delta\n
Action.c(5):     \t\t}),\n
Action.c(5):     \t\t// abs â\x94 Ð½ÐµÐ»ÑÐ·Ñ Ð´Ð¾Ð±Ð°Ð²Ð»ÑÑÑ, Ð° ÑÐ¾ Ð³Ð»ÑÐºÐ¸ Ð¿ÑÐ¸ Ð½Ð°Ð²ÐµÐ´ÐµÐ½
Action.c(5):     \t\ttick = function() {\n
Action.c(5):     Ð¸Ð¸ ÑÐ²ÐµÑÑÑ\n
Action.c(5):     \t\t\tif ( stopped ) {\n
Action.c(5):     \t\treturn (\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t(evt.clientY - (rect.top + rect.height) > 5) ||\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t(evt.clientX - (rect.right + rect.width) > 5)\n
Action.c(5):     \t\t\tvar currentTime = fxNow || createFxNow(),\n
Action.c(5):     \t\t) && lastEl;\n
Action.c(5):     \t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n
Action.c(5):     \n
Action.c(5):     \t\t\t\ttemp = remaining / animation.duration || 0,\n
Action.c(5):     \t/**\n
Action.c(5):     \t\t\t\tpercent = 1 - temp,\n
Action.c(5):     \t * Generate id\n
Action.c(5):     \t\t\t\tindex = 0,\n
Action.c(5):     \t * @param   {HTMLElement} el\n
Action.c(5):     \t\t\t\tlength = animation.tweens.length;\n
Action.c(5):     \t * @returns {String}\n
Action.c(5):     \n
Action.c(5):     \t * @private\n
Action.c(5):     \t\t\tfor ( ; index < length ; index++ ) {\n
Action.c(5):     \t */\n
Action.c(5):     \t\t\t\tanimation.tweens[ index ].run( percent );\n
Action.c(5):     \tfunction _generateId(el) {\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n
Action.c(5):     \n
Action.c(5):     \t\t\ti = str.length,\n
Action.c(5):     \t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n
Action.c(5):     \t\t\tsum = 0;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( percent < 1 && length ) {\n
Action.c(5):     \t\twhile (i--) {\n
Action.c(5):     \t\t\t\treturn remaining;\n
Action.c(5):     \t\t\tsum += str.charCodeAt(i);\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\treturn sum.toString(36);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tanimation = deferred.promise({\n
Action.c(5):     \t/**\n
Action.c(5):     \t\t\telem: elem,\n
Action.c(5):     \t * Returns the index of an element within its parent for a selected set of\n
Action.c(5):     \t\t\tprops: jQuery.extend( {}, properties ),\n
Action.c(5):     \t * elements\n
Action.c(5):     \t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n
Action.c(5):     \t * @param  {HTMLElement} el\n
Action.c(5):     \t\t\toriginalProperties: properties,\n
Action.c(5):     \t * @param  {selector} selector\n
Action.c(5):     \t\t\toriginalOptions: options,\n
Action.c(5):     \t * @return {number}\n
Action.c(5):     \t\t\tstartTime: fxNow || createFxNow(),\n
Action.c(5):     \t */\n
Action.c(5):     \t\t\tduration: options.duration,\n
Action.c(5):     \tfunction _index(el, selector) {\n
Action.c(5):     \t\t\ttweens: [],\n
Action.c(5):     \t\tvar index = 0;\n
Action.c(5):     \t\t\tcreateTween: function( prop, end ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n
Action.c(5):     \t\tif (!el || !el.parentNode) {\n
Action.c(5):     \t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n
Action.c(5):     \t\t\treturn -1;\n
Action.c(5):     \t\t\t\tanimation.tweens.push( tween );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\treturn tween;\n
Action.c(5):     \n
Action.c(5):     \t\t\t},\n
Action.c(5):     \t\twhile (el && (el = el.previousElementSibling)) {\n
Action.c(5):     \t\t\tstop: function( gotoEnd ) {\n
Action.c(5):     \t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && (selector === '>*' || _matches(el,
Action.c(5):     \t\t\t\tvar index = 0,\n
Action.c(5):      selector))) {\n
Action.c(5):     \t\t\t\t\t// if we are going to the end, we want to run all the tweens\n
Action.c(5):     \t\t\t\tindex++;\n
Action.c(5):     \t\t\t\t\t// otherwise we skip this part\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\tif ( stopped ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \t\treturn index;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\tstopped = true;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tfor ( ; index < length ; index++ ) {\n
Action.c(5):     \tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n
Action.c(5):     \t\t\t\t\tanimation.tweens[ index ].run( 1 );\n
Action.c(5):     \t\tif (el) {\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\tselector = selector.split('.');\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// resolve when we played the last frame\n
Action.c(5):     \t\t\tvar tag = selector.shift().toUpperCase(),\n
Action.c(5):     \t\t\t\t// otherwise, reject\n
Action.c(5):     \t\t\t\tre = new RegExp('\\\\s(' + selector.join('|') + ')(?=\\\\s)', 'g');\n
Action.c(5):     \t\t\t\tif ( gotoEnd ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n
Action.c(5):     \t\t\treturn (\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t(tag === '' || el.nodeName.toUpperCase() == tag) &&\n
Action.c(5):     \t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n
Action.c(5):     \t\t\t\t(!selector.length || ((' ' + el.className + ' ').match(re) || []).length == select
Action.c(5):     \t\t\t\t}\n
Action.c(5):     or.length)\n
Action.c(5):     \t\t\t\treturn this;\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t}),\n
Action.c(5):     \n
Action.c(5):     \t\tprops = animation.props;\n
Action.c(5):     \t\treturn false;\n
Action.c(5):     \n
Action.c(5):     \t}\n
Action.c(5):     \tpropFilter( props, animation.opts.specialEasing );\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tfunction _throttle(callback, ms) {\n
Action.c(5):     \tfor ( ; index < length ; index++ ) {\n
Action.c(5):     \t\tvar args, _this;\n
Action.c(5):     \t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( result ) {\n
Action.c(5):     \t\treturn function () {\n
Action.c(5):     \t\t\treturn result;\n
Action.c(5):     \t\t\tif (args === void 0) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t\targs = arguments;\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t_this = this;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tjQuery.map( props, createTween, animation );\n
Action.c(5):     \t\t\t\tsetTimeout(function () {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif (args.length === 1) {\n
Action.c(5):     \tif ( jQuery.isFunction( animation.opts.start ) ) {\n
Action.c(5):     \t\t\t\t\t\tcallback.call(_this, args[0]);\n
Action.c(5):     \t\tanimation.opts.start.call( elem, animation );\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\t\t\t\tcallback.apply(_this, args);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \tjQuery.fx.timer(\n
Action.c(5):     \n
Action.c(5):     \t\tjQuery.extend( tick, {\n
Action.c(5):     \t\t\t\t\targs = void 0;\n
Action.c(5):     \t\t\telem: elem,\n
Action.c(5):     \t\t\t\t}, ms);\n
Action.c(5):     \t\t\tanim: animation,\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tqueue: animation.opts.queue\n
Action.c(5):     \t\t};\n
Action.c(5):     \t\t})\n
Action.c(5):     \t}\n
Action.c(5):     \t);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \tfunction _extend(dst, src) {\n
Action.c(5):     \t// attach callbacks from options\n
Action.c(5):     \t\tif (dst && src) {\n
Action.c(5):     \treturn animation.progress( animation.opts.progress )\n
Action.c(5):     \t\t\tfor (var key in src) {\n
Action.c(5):     \t\t.done( animation.opts.done, animation.opts.complete )\n
Action.c(5):     \t\t\t\tif (src.hasOwnProperty(key)) {\n
Action.c(5):     \t\t.fail( animation.opts.fail )\n
Action.c(5):     \t\t\t\t\tdst[key] = src[key];\n
Action.c(5):     \t\t.always( animation.opts.always );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     }\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     jQuery.Animation = jQuery.extend( Animation, {\n
Action.c(5):     \n
Action.c(5):     \ttweener: function( props, callback ) {\n
Action.c(5):     \t\treturn dst;\n
Action.c(5):     \t\tif ( jQuery.isFunction( props ) ) {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tcallback = props;\n
Action.c(5):     \n
Action.c(5):     \t\t\tprops = [ "*" ];\n
Action.c(5):     \tfunction _clone(el) {\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\treturn $\n
Action.c(5):     \t\t\tprops = props.split(" ");\n
Action.c(5):     \t\t\t? $(el).clone(true)[0]\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t\t: (Polymer && Polymer.dom\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t? Polymer.dom(el).cloneNode(true)\n
Action.c(5):     \t\tvar prop,\n
Action.c(5):     \t\t\t\t: el.cloneNode(true)\n
Action.c(5):     \t\t\tindex = 0,\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \t\t\tlength = props.length;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tfor ( ; index < length ; index++ ) {\n
Action.c(5):     \tfunction _saveInputCheckedState(root) {\n
Action.c(5):     \t\t\tprop = props[ index ];\n
Action.c(5):     \t\tvar inputs = root.getElementsByTagName('input');\n
Action.c(5):     \t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n
Action.c(5):     \t\tvar idx = inputs.length;\n
Action.c(5):     \t\t\ttweeners[ prop ].unshift( callback );\n
Action.c(5):     \n
Action.c(5):     \t\t}\n
Action.c(5):     \t\twhile (idx--) {\n
Action.c(5):     \t},\n
Action.c(5):     \t\t\tvar el = inputs[idx];\n
Action.c(5):     \n
Action.c(5):     \t\t\tel.checked && savedInputChecked.push(el);\n
Action.c(5):     \tprefilter: function( callback, prepend ) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( prepend ) {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tanimationPrefilters.unshift( callback );\n
Action.c(5):     \n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t// Fixed #973: \n
Action.c(5):     \t\t\tanimationPrefilters.push( callback );\n
Action.c(5):     \t_on(document, 'touchmove', function (evt) {\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif (Sortable.active) {\n
Action.c(5):     \t}\n
Action.c(5):     \t\t\tevt.preventDefault();\n
Action.c(5):     });\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t});\n
Action.c(5):     jQuery.speed = function( speed, easing, fn ) {\n
Action.c(5):     \n
Action.c(5):     \tvar opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {\n
Action.c(5):     \ttry {\n
Action.c(5):     \t\tcomplete: fn || !fn && easing ||\n
Action.c(5):     \t\twindow.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n
Action.c(5):     \t\t\tjQuery.isFunction( speed ) && speed,\n
Action.c(5):     \t\t\tget: function () {\n
Action.c(5):     \t\tduration: speed,\n
Action.c(5):     \t\t\t\tcaptureMode = {\n
Action.c(5):     \t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n
Action.c(5):     \t\t\t\t\tcapture: false,\n
Action.c(5):     \t};\n
Action.c(5):     \t\t\t\t\tpassive: false\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds
Action.c(5):     \t\t}));\n
Action.c(5):     ._default;\n
Action.c(5):     \t} catch (err) {}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t// normalize opt.queue - true/undefined/null -> "fx"\n
Action.c(5):     \t// Export utils\n
Action.c(5):     \tif ( opt.queue == null || opt.queue === true ) {\n
Action.c(5):     \tSortable.utils = {\n
Action.c(5):     \t\topt.queue = "fx";\n
Action.c(5):     \t\ton: _on,\n
Action.c(5):     \t}\n
Action.c(5):     \t\toff: _off,\n
Action.c(5):     \n
Action.c(5):     \t\tcss: _css,\n
Action.c(5):     \t// Queueing\n
Action.c(5):     \t\tfind: _find,\n
Action.c(5):     \topt.old = opt.complete;\n
Action.c(5):     \t\tis: function (el, selector) {\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn !!_closest(el, selector, el);\n
Action.c(5):     \topt.complete = function() {\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tif ( jQuery.isFunction( opt.old ) ) {\n
Action.c(5):     \t\textend: _extend,\n
Action.c(5):     \t\tthrottle: _throttle,\n
Action.c(5):     \t\tclosest: _closest,\n
Action.c(5):     \t\ttoggleClass: _toggleClass,\n
Action.c(5):     \t\tclone: _clone,\n
Action.c(5):     \t\tindex: _index\n
Action.c(5):     \t\t\topt.old.call( this );\n
Action.c(5):     \t};\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t\tif ( opt.queue ) {\n
Action.c(5):     \t/**\n
Action.c(5):     \t\t\tjQuery.dequeue( this, opt.queue );\n
Action.c(5):     \t * Create sortable instance\n
Action.c(5):     \t\t}\n
Action.c(5):     \t * @param {HTMLElement}  el\n
Action.c(5):     \t};\n
Action.c(5):     \t * @param {Object}      [options]\n
Action.c(5):     \n
Action.c(5):     \t */\n
Action.c(5):     \treturn opt;\n
Action.c(5):     \tSortable.create = function (el, options) {\n
Action.c(5):     };\n
Action.c(5):     \t\treturn new Sortable(el, options);\n
Action.c(5):     \n
Action.c(5):     \t};\n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \n
Action.c(5):     \tfadeTo: function( speed, to, easing, callback ) {\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \t// Export\n
Action.c(5):     \t\t// show any hidden elements after setting opacity to 0\n
Action.c(5):     \tSortable.version = '1.5.1';\n
Action.c(5):     \t\treturn this.filter( isHidden ).css( "opacity", 0 ).show()\n
Action.c(5):     \treturn Sortable;\n
Action.c(5):     \n
Action.c(5):     });\n
Action.c(5):     \t\t\t// animate to the value specified\n
Action.c(5):     \t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n
Action.c(5):     \t},\n
Action.c(5):     \tanimate: function( prop, speed, easing, callback ) {\n
Action.c(5):     \t\tvar empty = jQuery.isEmptyObject( prop ),\n
Action.c(5): t=214030ms: 259-byte response headers for "http://10.184.129.208/Platform/app/common/behaviors/notAllowDot.js" (RelFrameId=, Internal ID=292)
Action.c(5):     \t\t\toptall = jQuery.speed( speed, easing, callback ),\n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \t\t\tdoAnimation = function() {\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     \t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     \t\t\t\t// Empty animations, or finishing resolves immediately\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \t\t\t\tif ( empty || jQuery._data( this, "finish" ) ) {\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \t\t\t\t\tanim.stop(
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:09 GMT\r\n
Action.c(5):     Content-Length: 490\r\n
Action.c(5):     \r\n
Action.c(5): t=214030ms: 12288-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5): t=214030ms: 490-byte response body for "http://10.184.129.208/Platform/app/common/behaviors/notAllowDot.js" (RelFrameId=, Internal ID=292)
Action.c(5):     ï»¿commonModule.directive('notAllowDot', function () {\r\n
Action.c(5):         return {\r\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):             link: function (scope, elm, attrs, ctrl) {\r\n
Action.c(5):                 elm.on('keydown', function (event) {\r\n
Action.c(5):                     if (event.which == 190 || event.which == 110) {\r\n
Action.c(5):                         //Stop dot\r\n
Action.c(5): t=214030ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):                         event.preventDefault();\r\n
Action.c(5):      true );\n
Action.c(5):                         return false;\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):                     } else {\r\n
Action.c(5):     \t\t\t};\n
Action.c(5):                         return true;\r\n
Action.c(5):     \t\t\tdoAnimation.finish = doAnimation;\n
Action.c(5):                     }\r\n
Action.c(5):     \n
Action.c(5):                 });\r\n
Action.c(5):     \t\treturn empty || optall.queue === false ?\n
Action.c(5):             }\r\n
Action.c(5):     \t\t\tthis.each( doAnimation ) :\n
Action.c(5):         }\r\n
Action.c(5):     \t\t\tthis.queue( optall.queue, doAnimation );\n
Action.c(5):     });
Action.c(5):     \t},\n
Action.c(5):     \tstop: function( type, clearQueue, gotoEnd ) {\n
Action.c(5):     \t\tvar stopQueue = function( hooks ) {\n
Action.c(5):     \t\t\tvar stop = hooks.stop;\n
Action.c(5):     \t\t\tdelete hooks.stop;\n
Action.c(5):     \t\t\tstop( gotoEnd );\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof type !== "string" ) {\n
Action.c(5): t=214031ms: 259-byte response headers for "http://10.184.129.208/Platform/app/common/controls/puma-confirm/puma-confirm.js" (RelFrameId=, Internal ID=296)
Action.c(5):     \t\t\tgotoEnd = clearQueue;\n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \t\t\tclearQueue = type;\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     \t\t\ttype = undefined;\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \t\t}\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \t\tif ( clearQueue && type !== false ) {\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     \t\t\tthis.queue( type || "fx", [] );\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \t\t}\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:09 GMT\r\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     Content-Length: 960\r\n
Action.c(5):     \t\t\tvar dequeue = true,\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\tindex = type != null && type + "queueHooks",\n
Action.c(5):     \t\t\t\ttimers = jQuery.timers,\n
Action.c(5):     \t\t\t\tdata = jQuery._data( this );\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( index ) {\n
Action.c(5): t=214031ms: 960-byte response body for "http://10.184.129.208/Platform/app/common/controls/puma-confirm/puma-confirm.js" (RelFrameId=, Internal ID=296)
Action.c(5):     \t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n
Action.c(5):     ï»¿commonModule.directive('pumaConfirm', ['openDialog', function (openDialog) {\r\n
Action.c(5):     \t\t\t\t\tstopQueue( data[ index ] );\n
Action.c(5):         return {\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):             scope: {\r\n
Action.c(5):     \t\t\t\tfor ( index in data ) {\n
Action.c(5):                 ngConfirmMessage: '@confirmMessage',\r\n
Action.c(5):     \t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n
Action.c(5):                 ngWarningMessage: '@warningMessage',\r\n
Action.c(5):     \t\t\t\t\t\tstopQueue( data[ index ] );\n
Action.c(5):                 ngConfirm: '&confirm',\r\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):                 ngDisabled: '&ngDisabled'\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):             },\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):             link: function (scope, element) {\r\n
Action.c(5):     \n
Action.c(5):                 element.bind('click', function () {\r\n
Action.c(5):     \t\t\tfor ( index = timers.length; index--; ) {\n
Action.c(5):                     if (!scope.ngDisabled()) {\r\n
Action.c(5):     \t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === t
Action.c(5):                         if (scope.ngWarningMessage) {\r\n
Action.c(5):     ype) ) {\n
Action.c(5):                             openDialog.openIconDialogOkCancelNoTitleWarning(openDialog.NotifyM
Action.c(5):     \t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n
Action.c(5):     essageType.Warn, scope.ngWarningMessage, scope.ngConfirmMessage, scope.ngConfirm);\r\n
Action.c(5):     \t\t\t\t\tdequeue = false;\n
Action.c(5):                         }\r\n
Action.c(5):     \t\t\t\t\ttimers.splice( index, 1 );\n
Action.c(5):                         else {\r\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):                             openDialog.openIconDialogOkCancelNoTitle(openDialog.NotifyMessageT
Action.c(5):     \t\t\t}\n
Action.c(5):     ype.Warn, scope.ngConfirmMessage, scope.ngConfirm);\r\n
Action.c(5):     \n
Action.c(5):                         }\r\n
Action.c(5):     \t\t\t// start the next in the queue if the last step wasn't forced\n
Action.c(5):                     }\r\n
Action.c(5):     \t\t\t// timers currently will call their complete callbacks, which will dequeue\n
Action.c(5):                 });\r\n
Action.c(5):     \t\t\t// but only if they were gotoEnd\n
Action.c(5):             }\r\n
Action.c(5):     \t\t\tif ( dequeue || !gotoEnd ) {\n
Action.c(5):         }\r\n
Action.c(5):     \t\t\t\tjQuery.dequeue( this, type );\n
Action.c(5):     }]);
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5): t=214031ms: 259-byte response headers for "http://10.184.129.208/Platform/app/common/behaviors/notAllowSpecialChar.js" (RelFrameId=, Internal ID=293)
Action.c(5):     \tfinish: function( type ) {\n
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     \t\tif ( type !== false ) {\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     \t\t\ttype = type || "fx";\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:42 GMT\r\n
Action.c(5):     \t\t}\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     ETag: "0957ad82d6fd31:0"\r\n
Action.c(5):     \t\t\tvar index,\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     \t\t\t\tdata = jQuery._data( this ),\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     \t\t\t\tqueue = data[ type + "queue" ],\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:09 GMT\r\n
Action.c(5):     \t\t\t\thooks = data[ type + "queueHooks" ],\n
Action.c(5):     Content-Length: 399\r\n
Action.c(5):     \t\t\t\ttimers = jQuery.timers,\n
Action.c(5):     \r\n
Action.c(5):     \t\t\t\tlength = queue ? queue.length : 0;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// enable finishing flag on private data\n
Action.c(5): t=214031ms: 399-byte response body for "http://10.184.129.208/Platform/app/common/behaviors/notAllowSpecialChar.js" (RelFrameId=, Internal ID=293)
Action.c(5):     \t\t\tdata.finish = true;\n
Action.c(5):     ï»¿commonModule.directive('notAllowSpecialChar', function () {\r\n
Action.c(5):     \n
Action.c(5):         return {\r\n
Action.c(5):     \t\t\t// empty the queue first\n
Action.c(5):             restrict: 'A',\r\n
Action.c(5):     \t\t\tjQuery.queue( this, type, [] );\n
Action.c(5):             scope: {\r\n
Action.c(5):     \n
Action.c(5):                 model: '=ngModel'\r\n
Action.c(5):     \t\t\tif ( hooks && hooks.stop ) {\n
Action.c(5):             },\r\n
Action.c(5):     \t\t\t\thooks.stop.call( this, true );\n
Action.c(5):             link: function (scope, elm, attrs, ctrl) {\r\n
Action.c(5):     \t\t\t}\n
Action.c(5):                 elm.bind('blur', function (event) {\r\n
Action.c(5):     \n
Action.c(5):                     scope.model = scope.model.replace(/[']/g, '');\r\n
Action.c(5):     \t\t\t// look for any active animations, and finish them\n
Action.c(5):                     scope.$apply();\r\n
Action.c(5):     \t\t\tfor ( index = timers.length; index--; ) {\n
Action.c(5):                 });\r\n
Action.c(5):     \t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n
Action.c(5):             }\r\n
Action.c(5):     \t\t\t\t\ttimers[ index ].anim.stop( true );\n
Action.c(5):         }\r\n
Action.c(5):     \t\t\t\t\ttimers.splice( index, 1 );\n
Action.c(5):     });
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// look for any animations in the old queue and finish them\n
Action.c(5):     \t\t\tfor ( index = 0; index < length; index++ ) {\n
Action.c(5):     \t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n
Action.c(5):     \t\t\t\t\tqueue[ index ].finish.call( this );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// turn off finishing flag\n
Action.c(5):     \t\t\tdelete data.finish;\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {\n
Action.c(5):     \tvar cssFn = jQuery.fn[ name ];\n
Action.c(5):     \tjQuery.fn[ name ] = function( speed, easing, callback ) {\n
Action.c(5):     \t\treturn speed == null || typeof speed === "boolean" ?\n
Action.c(5):     \t\t\tcssFn.apply( this, arguments ) :\n
Action.c(5):     \t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Generate shortcuts for custom animations\n
Action.c(5):     jQuery.each({\n
Action.c(5):     \tslideDown: genFx("show"),\n
Action.c(5):     \tslideUp: genFx("hide"),\n
Action.c(5):     \tslideToggle: genFx("toggle"),\n
Action.c(5):     \tfadeIn: { opacity: "show" },\n
Action.c(5):     \tfadeOut: { opacity: "hide" },\n
Action.c(5):     \tfadeToggle: { opacity: "toggle" }\n
Action.c(5):     }, function( name, props ) {\n
Action.c(5):     \tjQuery.fn[ name ] = function( speed, easing, callback ) {\n
Action.c(5):     \t\treturn this.animate( props, speed, easing, callback );\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.timers = [];\n
Action.c(5):     jQuery.fx.tick = function() {\n
Action.c(5):     \tvar timer,\n
Action.c(5):     \t\ttimers = jQuery.timers,\n
Action.c(5):     \t\ti = 0;\n
Action.c(5):     \n
Action.c(5):     \tfxNow = jQuery.now();\n
Action.c(5):     \n
Action.c(5):     \tfor ( ; i < timers.length; i++ ) {\n
Action.c(5):     \t\ttimer = timers[ i ];\n
Action.c(5):     \t\t// Checks the timer has not already been removed\n
Action.c(5):     \t\tif ( !timer() && timers[ i ] === timer ) {\n
Action.c(5):     \t\t\ttimers.splice( i--, 1 );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( !timers.length ) {\n
Action.c(5):     \t\tjQuery.fx.stop();\n
Action.c(5):     \t}\n
Action.c(5):     \tfxNow = undefined;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fx.timer = function( timer ) {\n
Action.c(5):     \tjQuery.timers.push( timer );\n
Action.c(5):     \tif ( timer() ) {\n
Action.c(5):     \t\tjQuery.fx.start();\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\tjQuery.timers.pop();\n
Action.c(5):     \t}\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fx.interval = 13;\n
Action.c(5):     \n
Action.c(5):     jQuery.fx.start = function() {\n
Action.c(5):     \tif ( !timerId ) {\n
Action.c(5):     \t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n
Action.c(5):     \t}\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fx.stop = function() {\n
Action.c(5):     \tclearInterval( timerId );\n
Action.c(5):     \ttimerId = null;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fx.speeds = {\n
Action.c(5):     \tslow: 600,\n
Action.c(5):     \tfast: 200,\n
Action.c(5):     \t// Default speed\n
Action.c(5):     \t_default: 400\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Based off of the plugin by Clint Helfers, with permission.\n
Action.c(5):     // http://blindsignals.com/index.php/2009/07/jquery-delay/\n
Action.c(5):     jQuery.fn.delay = function( time, type ) {\n
Action.c(5):     \ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n
Action.c(5):     \ttype = type || "fx";\n
Action.c(5):     \n
Action.c(5):     \treturn this.queue( type, function( next, hooks ) {\n
Action.c(5):     \t\tvar timeout = setTimeout( next, time );\n
Action.c(5):     \t\thooks.stop = function() {\n
Action.c(5):     \t\t\tclearTimeout( timeout );\n
Action.c(5):     \t\t};\n
Action.c(5):     \t});\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     (function() {\n
Action.c(5):     \tvar a, input, select, opt,\n
Action.c(5):     \t\tdiv = document.createElement("div" );\n
Action.c(5):     \n
Action.c(5):     \t// Setup\n
Action.c(5):     \tdiv.setAttribute( "className", "t" );\n
Action.c(5):     \tdiv.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";\n
Action.c(5):     \ta = div.getElementsByTagName("a")[ 0 ];\n
Action.c(5):     \n
Action.c(5):     \t// First batch of tests.\n
Action.c(5):     \tselect = document.createElement("select");\n
Action.c(5):     \topt = select.appendChild( document.createElement("option") );\n
Action.c(5):     \tinput = div.getElementsByTagName("input")[ 0 ];\n
Action.c(5):     \n
Action.c(5):     \ta.style.cssText = "top:1px";\n
Action.c(5):     \n
Action.c(5):     \t// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/s
Action.c(5):     etAttribute (ie6/7)\n
Action.c(5):     \tsupport.getSetAttribute = div.className !== "t";\n
Action.c(5):     \n
Action.c(5):     \t// Get the style information from getAttribute\n
Action.c(5):     \t// (IE uses .cssText instead)\n
Action.c(5):     \tsupport.style = /top/.test( a.getAttribute("style") );\n
Action.c(5):     \n
Action.c(5):     \t// Make sure that URLs aren't manipulated\n
Action.c(5):     \t// (IE normalizes it by default)\n
Action.c(5):     \tsupport.hrefNormalized = a.getAttribute("href") === "/a";\n
Action.c(5):     \n
Action.c(5):     \t// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)\n
Action.c(5):     \tsupport.checkOn = !!input.value;\n
Action.c(5):     \n
Action.c(5):     \t// Make sure that a selected-by-default option has a working selected property.\n
Action.c(5):     \t// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)\n
Action.c(5):     \tsupport.optSelected = opt.selected;\n
Action.c(5):     \n
Action.c(5):     \t// Tests for enctype support on a form (#6743)\n
Action.c(5):     \tsupport.enctype = !!document.createElement("form").enctype;\n
Action.c(5):     \n
Action.c(5):     \t// Make sure that the options inside disabled selects aren't marked as disabled\n
Action.c(5):     \t// (WebKit marks them as disabled)\n
Action.c(5):     \tselect.disabled = true;\n
Action.c(5):     \tsupport.optDisabled = !opt.disabled;\n
Action.c(5):     \n
Action.c(5):     \t// Support: IE8 only\n
Action.c(5):     \t// Check if we can trust getAttribute("value")\n
Action.c(5):     \tinput = document.createElement( "input" );\n
Action.c(5):     \tinput.setAttribute( "value", "" );\n
Action.c(5):     \tsupport.input = input.getAttribute( "value" ) === "";\n
Action.c(5):     \n
Action.c(5):     \t// Check if an input maintains its value after becoming a radio\n
Action.c(5):     \tinput.value = "t";\n
Action.c(5):     \tinput.setAttribute( "type", "radio" );\n
Action.c(5):     \tsupport.radioValue = input.value === "t";\n
Action.c(5):     \n
Action.c(5):     \t// Null elements to avoid leaks in IE.\n
Action.c(5):     \ta = input = select = opt = div = null;\n
Action.c(5):     })();\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rreturn = /\\r/g;\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \tval: function( value ) {\n
Action.c(5):     \t\tvar hooks, ret, isFunction,\n
Action.c(5):     \t\t\telem = this[0];\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !arguments.length ) {\n
Action.c(5):     \t\t\tif ( elem ) {\n
Action.c(5):     \t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase
Action.c(5):     () ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined )
Action.c(5):      {\n
Action.c(5):     \t\t\t\t\treturn ret;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tret = elem.value;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn typeof ret === "string" ?\n
Action.c(5):     \t\t\t\t\t// handle most common string cases\n
Action.c(5):     \t\t\t\t\tret.replace(rreturn, "") :\n
Action.c(5):     \t\t\t\t\t// handle cases where value is null/undef or number\n
Action.c(5):     \t\t\t\t\tret == null ? "" : ret;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tisFunction = jQuery.isFunction( value );\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.each(function( i ) {\n
Action.c(5):     \t\t\tvar val;\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( this.nodeType !== 1 ) {\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( isFunction ) {\n
Action.c(5):     \t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tval = value;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Treat null/undefined as ""; convert numbers to string\n
Action.c(5):     \t\t\tif ( val == null ) {\n
Action.c(5):     \t\t\t\tval = "";\n
Action.c(5):     \t\t\t} else if ( typeof val === "number" ) {\n
Action.c(5):     \t\t\t\tval += "";\n
Action.c(5):     \t\t\t} else if ( jQuery.isArray( val ) ) {\n
Action.c(5):     \t\t\t\tval = jQuery.map( val, function( value ) {\n
Action.c(5):     \t\t\t\t\treturn value == null ? "" : value + "";\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase()
Action.c(5):      ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If set returns undefined, fall back to normal setting\n
Action.c(5):     \t\t\tif ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) 
Action.c(5):     {\n
Action.c(5):     \t\t\t\tthis.value = val;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \tvalHooks: {\n
Action.c(5):     \t\toption: {\n
Action.c(5):     \t\t\tget: function( elem ) {\n
Action.c(5):     \t\t\t\tvar val = jQuery.find.attr( elem, "value" );\n
Action.c(5):     \t\t\t\treturn val != null ?\n
Action.c(5):     \t\t\t\t\tval :\n
Action.c(5):     \t\t\t\t\tjQuery.text( elem );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tselect: {\n
Action.c(5):     \t\t\tget: function( elem ) {\n
Action.c(5):     \t\t\t\tvar value, option,\n
Action.c(5):     \t\t\t\t\toptions = elem.options,\n
Action.c(5):     \t\t\t\t\tindex = elem.selectedIndex,\n
Action.c(5):     \t\t\t\t\tone = elem.type === "select-one" || index < 0,\n
Action.c(5):     \t\t\t\t\tvalues = one ? null : [],\n
Action.c(5):     \t\t\t\t\tmax = one ? index + 1 : options.length,\n
Action.c(5):     \t\t\t\t\ti = index < 0 ?\n
Action.c(5):     \t\t\t\t\t\tmax :\n
Action.c(5):     \t\t\t\t\t\tone ? index : 0;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Loop through all the selected options\n
Action.c(5):     \t\t\t\tfor ( ; i < max; i++ ) {\n
Action.c(5):     \t\t\t\t\toption = options[ i ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// oldIE doesn't update selected after form reset (#2551)\n
Action.c(5):     \t\t\t\t\tif ( ( option.selected || i === index ) &&\n
Action.c(5):     \t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n
Action.c(5):     \t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute("disabled") =
Action.c(5):     == null ) &&\n
Action.c(5):     \t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgr
Action.c(5):     oup" ) ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Get the specific value for the option\n
Action.c(5):     \t\t\t\t\t\tvalue = jQuery( option ).val();\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// We don't need an array for one selects\n
Action.c(5):     \t\t\t\t\t\tif ( one ) {\n
Action.c(5):     \t\t\t\t\t\t\treturn value;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Multi-Selects return an array\n
Action.c(5):     \t\t\t\t\t\tvalues.push( value );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn values;\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\tset: function( elem, value ) {\n
Action.c(5):     \t\t\t\tvar optionSet, option,\n
Action.c(5):     \t\t\t\t\toptions = elem.options,\n
Action.c(5):     \t\t\t\t\tvalues = jQuery.makeArray( value ),\n
Action.c(5):     \t\t\t\t\ti = options.length;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\twhile ( i-- ) {\n
Action.c(5):     \t\t\t\t\toption = options[ i ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Support: IE6\n
Action.c(5):     \t\t\t\t\t\t// When new option element is added to select box we need to\n
Action.c(5):     \t\t\t\t\t\t// force reflow of newly added node in order to workaround delay\n
Action.c(5):     \t\t\t\t\t\t// of initialization properties\n
Action.c(5):     \t\t\t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\t\t\toption.selected = optionSet = true;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t} catch ( _ ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// Will be executed only in IE6\n
Action.c(5):     \t\t\t\t\t\t\toption.scrollHeight;\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\toption.selected = false;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Force browsers to behave consistently when non-matching value is set\n
Action.c(5):     \t\t\t\tif ( !optionSet ) {\n
Action.c(5):     \t\t\t\t\telem.selectedIndex = -1;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn options;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Radios and checkboxes getter/setter\n
Action.c(5):     jQuery.each([ "radio", "checkbox" ], function() {\n
Action.c(5):     \tjQuery.valHooks[ this ] = {\n
Action.c(5):     \t\tset: function( elem, value ) {\n
Action.c(5):     \t\t\tif ( jQuery.isArray( value ) ) {\n
Action.c(5):     \t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     \tif ( !support.checkOn ) {\n
Action.c(5):     \t\tjQuery.valHooks[ this ].get = function( elem ) {\n
Action.c(5):     \t\t\t// Support: Webkit\n
Action.c(5):     \t\t\t// "" is returned instead of "on" if a value isn't specified\n
Action.c(5):     \t\t\treturn elem.getAttribute("value") === null ? "on" : elem.value;\n
Action.c(5):     \t\t};\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var nodeHook, boolHook,\n
Action.c(5):     \tattrHandle = jQuery.expr.attrHandle,\n
Action.c(5):     \truseDefault = /^(?:checked|selected)$/i,\n
Action.c(5):     \tgetSetAttribute = support.getSetAttribute,\n
Action.c(5):     \tgetSetInput = support.input;\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \tattr: function( name, value ) {\n
Action.c(5):     \t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tremoveAttr: function( name ) {\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\tjQuery.removeAttr( this, name );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \tattr: function( elem, name, value ) {\n
Action.c(5):     \t\tvar hooks, ret,\n
Action.c(5):     \t\t\tnType = elem.nodeType;\n
Action.c(5):     \n
Action.c(5):     \t\t// don't get/set attributes on text, comment and attribute nodes\n
Action.c(5):     \t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Fallback to prop when attributes are not supported\n
Action.c(5):     \t\tif ( typeof elem.getAttribute === strundefined ) {\n
Action.c(5):     \t\t\treturn jQuery.prop( elem, name, value );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// All attributes are lowercase\n
Action.c(5):     \t\t// Grab necessary hook if one is defined\n
Action.c(5):     \t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n
Action.c(5):     \t\t\tname = name.toLowerCase();\n
Action.c(5):     \t\t\thooks = jQuery.attrHooks[ name ] ||\n
Action.c(5):     \t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( value !== undefined ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( value === null ) {\n
Action.c(5):     \t\t\t\tjQuery.removeAttr( elem, name );\n
Action.c(5):     \n
Action.c(5):     \t\t\t} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== un
Action.c(5):     defined ) {\n
Action.c(5):     \t\t\t\treturn ret;\n
Action.c(5):     \n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\telem.setAttribute( name, value + "" );\n
Action.c(5):     \t\t\t\treturn value;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n
Action.c(5):     \t\t\treturn ret;\n
Action.c(5):     \n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tret = jQuery.find.attr( elem, name );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Non-existent attributes return null, we normalize to undefined\n
Action.c(5):     \t\t\treturn ret == null ?\n
Action.c(5):     \t\t\t\tundefined :\n
Action.c(5):     \t\t\t\tret;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tremoveAttr: function( elem, value ) {
Action.c(5): t=214035ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     \n
Action.c(5):     \t\tvar name, propName,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tattrNames = value && value.match( rnotwhite );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( attrNames && elem.nodeType === 1 ) {\n
Action.c(5):     \t\t\twhile ( (name = attrNames[i++]) ) {\n
Action.c(5):     \t\t\t\tpropName = jQuery.propFix[ name ] || name;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Boolean attributes get special treatment (#10870)\n
Action.c(5):     \t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n
Action.c(5):     \t\t\t\t\t// Set corresponding property to false\n
Action.c(5):     \t\t\t\t\tif ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n
Action.c(5):     \t\t\t\t\t\telem[ propName ] = false;\n
Action.c(5):     \t\t\t\t\t// Support: IE<9\n
Action.c(5):     \t\t\t\t\t// Also clear defaultChecked/defaultSelected (if appropriate)\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\telem[ jQuery.camelCase( "default-" + name ) ] =\n
Action.c(5):     \t\t\t\t\t\t\telem[ propName ] = false;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// See #9699 for explanation of this approach (setting first, then removal)\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tjQuery.attr( elem, name, "" );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\telem.removeAttribute( getSetAttribute ? name : propName );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tattrHooks: {\n
Action.c(5):     \t\ttype: {\n
Action.c(5):     \t\t\tset: function( elem, value ) {\n
Action.c(5):     \t\t\t\tif ( !support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) 
Action.c(5):     {\n
Action.c(5):     \t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n
Action.c(5):     \t\t\t\t\t// Reset value to default in case type is set after value during creation\n
Action.c(5):     \t\t\t\t\tvar val = elem.value;\n
Action.c(5):     \t\t\t\t\telem.setAttribute( "type", value );\n
Action.c(5):     \t\t\t\t\tif ( val ) {\n
Action.c(5):     \t\t\t\t\t\telem.value = val;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\treturn value;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Hook for boolean attributes\n
Action.c(5):     boolHook = {\n
Action.c(5):     \tset: function( elem, value, name ) {\n
Action.c(5):     \t\tif ( value === false ) {\n
Action.c(5):     \t\t\t// Remove boolean attributes when set to false\n
Action.c(5):     \t\t\tjQuery.removeAttr( elem, name );\n
Action.c(5):     \t\t} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {\n
Action.c(5):     \t\t\t// IE<8 needs the *property* name\n
Action.c(5):     \t\t\telem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );\n
Action.c(5):     \n
Action.c(5):     \t\t// Use defaultChecked and defaultSelected for oldIE\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\telem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn name;\n
Action.c(5):     \t}\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     // Retrieve booleans specially\n
Action.c(5):     jQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n
Action.c(5):     \n
Action.c(5):     \tvar getter = attrHandle[ name ] || jQuery.find.attr;\n
Action.c(5):     \n
Action.c(5):     \tattrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?\n
Action.c(5):     \t\tfunction( elem, name, isXML ) {\n
Action.c(5):     \t\t\tvar ret, handle;\n
Action.c(5):     \t\t\tif ( !isXML ) {\n
Action.c(5):     \t\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n
Action.c(5):     \t\t\t\thandle = attrHandle[ name ];\n
Action.c(5):     \t\t\t\tattrHandle[ name ] = ret;\n
Action.c(5):     \t\t\t\tret = getter( elem, name, isXML ) != null ?\n
Action.c(5):     \t\t\t\t\tname.toLowerCase() :\n
Action.c(5):     \t\t\t\t\tnull;\n
Action.c(5):     \t\t\t\tattrHandle[ name ] = handle;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn ret;\n
Action.c(5):     \t\t} :\n
Action.c(5):     \t\tfunction( elem, name, isXML ) {\n
Action.c(5):     \t\t\tif ( !isXML ) {\n
Action.c(5):     \t\t\t\treturn elem[ jQuery.camelCase( "default-" + name ) ] ?\n
Action.c(5):     \t\t\t\t\tname.toLowerCase() :\n
Action.c(5):     \t\t\t\t\tnull;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // fix oldIE attroperties\n
Action.c(5):     if ( !getSetInput || !getSetAttribute ) {\n
Action.c(5):     \tjQuery.attrHooks.value = {\n
Action.c(5):     \t\tset: function( elem, value, name ) {\n
Action.c(5):     \t\t\tif ( jQuery.nodeName( elem, "input" ) ) {\n
Action.c(5):     \t\t\t\t// Does not return so that setAttribute is also used\n
Action.c(5):     \t\t\t\telem.defaultValue = value;\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\t// Use nodeHook if defined (#1954); otherwise setAttribute is fine\n
Action.c(5):     \t\t\t\treturn nodeHook && nodeHook.set( elem, value, name );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // IE6/7 do not support getting/setting some attributes with get/setAttribute\n
Action.c(5):     if ( !getSetAttribute ) {\n
Action.c(5):     \n
Action.c(5):     \t// Use this for any attribute in IE6/7\n
Action.c(5):     \t// This fixes almost every IE6/7 issue\n
Action.c(5):     \tnodeHook = {\n
Action.c(5):     \t\tset: function( elem, value, name ) {\n
Action.c(5):     \t\t\t// Set the existing or create a new attribute node\n
Action.c(5):     \t\t\tvar ret = elem.getAttributeNode( name );\n
Action.c(5):     \t\t\tif ( !ret ) {\n
Action.c(5):     \t\t\t\telem.setAttributeNode(\n
Action.c(5):     \t\t\t\t\t(ret = elem.ownerDocument.createAttribute( name ))\n
Action.c(5):     \t\t\t\t);\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tret.value = value += "";\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Break association with cloned elements by also using setAttribute (#9646)\n
Action.c(5):     \t\t\tif ( name === "value" || value === elem.getAttribute( name ) ) {\n
Action.c(5):     \t\t\t\treturn value;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     \t// Some attributes are constructed with empty-string values when not defined\n
Action.c(5):     \tattrHandle.id = attrHandle.name = attrHandle.coords =\n
Action.c(5):     \t\tfunction( elem, name, isXML ) {\n
Action.c(5):     \t\t\tvar ret;\n
Action.c(5):     \t\t\tif ( !isXML ) {\n
Action.c(5):     \t\t\t\treturn (ret = elem.getAttributeNode( name )) && ret.value !== "" ?\n
Action.c(5):     \t\t\t\t\tret.value :\n
Action.c(5):     \t\t\t\t\tnull;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t// Fixing value retrieval on a button requires this module\n
Action.c(5):     \tjQuery.valHooks.button = {\n
Action.c(5):     \t\tget: function( elem, name ) {\n
Action.c(5):     \t\t\tvar ret = elem.getAttributeNode( name );\n
Action.c(5):     \t\t\tif ( ret && ret.specified ) {\n
Action.c(5):     \t\t\t\treturn ret.value;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tset: nodeHook.set\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     \t// Set contenteditable to false on removals(#10429)\n
Action.c(5):     \t// Setting to empty string throws an error as an invalid value\n
Action.c(5):     \tjQuery.attrHooks.contenteditable = {\n
Action.c(5):     \t\tset: function( elem, value, name ) {\n
Action.c(5):     \t\t\tnodeHook.set( elem, value === "" ? false : value, name );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     \n
Action.c(5):     \t// Set width and height to auto instead of 0 on empty string( Bug #8150 )\n
Action.c(5):     \t// This is for removals\n
Action.c(5):     \tjQuery.each([ "width", "height" ], function( i, name ) {\n
Action.c(5):     \t\tjQuery.attrHooks[ name ] = {\n
Action.c(5):     \t\t\tset: function( elem, value ) {\n
Action.c(5):     \t\t\t\tif ( value === "" ) {\n
Action.c(5):     \t\t\t\t\telem.setAttribute( name, "auto" );\n
Action.c(5):     \t\t\t\t\treturn value;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     if ( !support.style ) {\n
Action.c(5):     \tjQuery.attrHooks.style = {\n
Action.c(5):     \t\tget: function( elem ) {\n
Action.c(5):     \t\t\t// Return undefined in the case of empty string\n
Action.c(5):     \t\t\t// Note: IE uppercases css property names, but if we were to .toLowerCase()\n
Action.c(5):     \t\t\t// .cssText, that would destroy case senstitivity in URL's, like in "background"\n
Action.c(5):     \t\t\treturn elem.style.cssText || undefined;\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\tset: function( elem, value ) {\n
Action.c(5):     \t\t\treturn ( elem.style.cssText = value + "" );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rfocusable = /^(?:input|select|textarea|button|object)$/i,\n
Action.c(5):     \trclickable = /^(?:a|area)$/i;\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \tprop: function( name, value ) {\n
Action.c(5):     \t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tremoveProp: function( name ) {\n
Action.c(5):     \t\tname = jQuery.propFix[ name ] || name;\n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\t// try/catch handles cases where IE balks (such as removing a property on window)\n
Action.c(5):     \t\t\ttry {\n
Action.c(5):     \t\t\t\tthis[ name ] = undefined;\n
Action.c(5):     \t\t\t\tdelete this[ name ];\n
Action.c(5):     \t\t\t} catch( e ) {}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \tpropFix: {\n
Action.c(5):     \t\t"for": "htmlFor",\n
Action.c(5):     \t\t"class": "className"\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tprop: function( elem, name, value ) {\n
Action.c(5):     \t\tvar ret, hooks, notxml,\n
Action.c(5):     \t\t\tnType = elem.nodeType;\n
Action.c(5):     \n
Action.c(5):     \t\t// don't get/set properties on text, comment and attribute nodes\n
Action.c(5):     \t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n
Action.c(5):     \n
Action.c(5):     \t\tif ( notxml ) {\n
Action.c(5):     \t\t\t// Fix name and attach hooks\n
Action.c(5):     \t\t\tname = jQuery.propFix[ name ] || name;\n
Action.c(5):     \t\t\thooks = jQuery.propHooks[ name ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( value !== undefined ) {\n
Action.c(5):     \t\t\treturn hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefin
Action.c(5):     ed ?\n
Action.c(5):     \t\t\t\tret :\n
Action.c(5):     \t\t\t\t( elem[ name ] = value );\n
Action.c(5):     \n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\treturn hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?\n
Action.c(5):     \t\t\t\tret :\n
Action.c(5):     \t\t\t\telem[ name ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tpropHooks: {\n
Action.c(5):     \t\ttabIndex: {\n
Action.c(5):     \t\t\tget: function( elem ) {\n
Action.c(5):     \t\t\t\t// elem.tabIndex doesn't always return the correct value when it hasn't been expli
Action.c(5):     citly set\n
Action.c(5):     \t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-v
Action.c(5):     alues-with-javascript/\n
Action.c(5):     \t\t\t\t// Use proper attribute retrieval(#12072)\n
Action.c(5):     \t\t\t\tvar tabindex = jQuery.find.attr( elem, "tabindex" );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn tabindex ?\n
Action.c(5):     \t\t\t\t\tparseInt( tabindex, 10 ) :\n
Action.c(5):     \t\t\t\t\trfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.hre
Action.c(5):     f ?\n
Action.c(5):     \t\t\t\t\t\t0 :\n
Action.c(5):     \t\t\t\t\t\t-1;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Some attributes require a special call on IE\n
Action.c(5):     // http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n
Action.c(5):     if ( !support.hrefNormalized ) {\n
Action.c(5):     \t// href/src property should get the full normalized URL (#10299/#12915)\n
Action.c(5):     \tjQuery.each([ "href", "src" ], function( i, name ) {\n
Action.c(5):     \t\tjQuery.propHooks[ name ] = {\n
Action.c(5):     \t\t\tget: function( elem ) {\n
Action.c(5):     \t\t\t\treturn elem.getAttribute( name, 4 );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Support: Safari, IE9+\n
Action.c(5):     // mis-reports the default selected property of an option\n
Action.c(5):     // Accessing the parent's selectedIndex property fixes it\n
Action.c(5):     if ( !support.optSelected ) {\n
Action.c(5):     \tjQuery.propHooks.selected = {\n
Action.c(5):     \t\tget: function( elem ) {\n
Action.c(5):     \t\t\tvar parent = elem.parentNode;\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( parent ) {\n
Action.c(5):     \t\t\t\tparent.selectedIndex;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Make sure that it also works with optgroups, see #5701\n
Action.c(5):     \t\t\t\tif ( parent.parentNode ) {\n
Action.c(5):     \t\t\t\t\tparent.parentNode.selectedIndex;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn null;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.each([\n
Action.c(5):     \t"tabIndex",\n
Action.c(5):     \t"readOnly",\n
Action.c(5):     \t"maxLength",\n
Action.c(5):     \t"cellSpacing",\n
Action.c(5):     \t"cellPadding",\n
Action.c(5):     \t"rowSpan",\n
Action.c(5):     \t"colSpan",\n
Action.c(5):     \t"useMap",\n
Action.c(5):     \t"frameBorder",\n
Action.c(5):     \t"contentEditable"\n
Action.c(5):     ], function() {\n
Action.c(5):     \tjQuery.propFix[ this.toLowerCase() ] = this;\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // IE6/7 call enctype encoding\n
Action.c(5):     if ( !support.enctype ) {\n
Action.c(5):     \tjQuery.propFix.enctype = "encoding";\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rclass = /[\\t\\r\\n\\f]/g;\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \taddClass: function( value ) {\n
Action.c(5):     \t\tvar classes, elem, cur, clazz, j, finalValue,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tlen = this.length,\n
Action.c(5):     \t\t\tproceed = typeof value === "string" && value;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( jQuery.isFunction( value ) ) {\n
Action.c(5):     \t\t\treturn this.each(function( j ) {\n
Action.c(5):     \t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( proceed ) {\n
Action.c(5):     \t\t\t// The disjunction here is for better compressibility (see removeClass)\n
Action.c(5):     \t\t\tclasses = ( value || "" ).match( rnotwhite ) || [];\n
Action.c(5):     \n
Action.c(5):     \t\t\tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\t\t\telem = this[ i ];\n
Action.c(5):     \t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n
Action.c(5):     \t\t\t\t\t( " " + elem.className + " " ).replace( rclass, " " ) :\n
Action.c(5):     \t\t\t\t\t" "\n
Action.c(5):     \t\t\t\t);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( cur ) {\n
Action.c(5):     \t\t\t\t\tj = 0;\n
Action.c(5):     \t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n
Action.c(5):     \t\t\t\t\t\tif ( cur.indexOf( " " + clazz + " " ) < 0 ) {\n
Action.c(5):     \t\t\t\t\t\t\tcur += clazz + " ";\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// only assign if different to avoid unneeded rendering.\n
Action.c(5):     \t\t\t\t\tfinalValue = jQuery.trim( cur );\n
Action.c(5):     \t\t\t\t\tif ( elem.className !== finalValue ) {\n
Action.c(5):     \t\t\t\t\t\telem.className = finalValue;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tremoveClass: function( value ) {\n
Action.c(5):     \t\tvar classes, elem, cur, clazz, j, finalValue,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tlen = this.length,\n
Action.c(5):     \t\t\tproceed = arguments.length === 0 || typeof value === "string" && value;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( jQuery.isFunction( value ) ) {\n
Action.c(5):     \t\t\treturn this.each(function( j ) {\n
Action.c(5):     \t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( proceed ) {\n
Action.c(5):     \t\t\tclasses = ( value || "" ).match( rnotwhite ) || [];\n
Action.c(5):     \n
Action.c(5):     \t\t\tfor ( ; i < len; i++ ) {\n
Action.c(5):     \t\t\t\telem = this[ i ];\n
Action.c(5):     \t\t\t\t// This expression is here for better compressibility (see addClass)\n
Action.c(5):     \t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n
Action.c(5):     \t\t\t\t\t( " " + elem.className + " " ).replace( rclass, " " ) :\n
Action.c(5):     \t\t\t\t\t""\n
Action.c(5):     \t\t\t\t);\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( cur ) {\n
Action.c(5):     \t\t\t\t\tj = 0;\n
Action.c(5):     \t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n
Action.c(5):     \t\t\t\t\t\t// Remove *all* instances\n
Action.c(5):     \t\t\t\t\t\twhile ( cur.indexOf( " " + clazz + " " ) >= 0 ) {\n
Action.c(5):     \t\t\t\t\t\t\tcur = cur.replace( " " + clazz + " ", " " );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// only assign if different to avoid unneeded rendering.\n
Action.c(5):     \t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : "";\n
Action.c(5):     \t\t\t\t\tif ( elem.className !== finalValue ) {\n
Action.c(5):     \t\t\t\t\t\telem.className = finalValue;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \ttoggleClass: function( value, stateVal ) {\n
Action.c(5):     \t\tvar type = typeof value;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof stateVal === "boolean" && type === "string" ) {\n
Action.c(5):     \t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( jQuery.isFunction( value ) ) {\n
Action.c(5):     \t\t\treturn this.each(function( i ) {\n
Action.c(5):     \t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVa
Action.c(5):     l );\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\tif ( type === "string" ) {\n
Action.c(5):     \t\t\t\t// toggle individual class names\n
Action.c(5):     \t\t\t\tvar className,\n
Action.c(5):     \t\t\t\t\ti = 0,\n
Action.c(5):     \t\t\t\t\tself = jQuery( this ),\n
Action.c(5):     \t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n
Action.c(5):     \t\t\t\t\t// check each className given, space separated list\n
Action.c(5):     \t\t\t\t\tif ( self.hasClass( className ) ) {\n
Action.c(5):     \t\t\t\t\t\tself.removeClass( className );\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\tself.addClass( className );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Toggle whole class name\n
Action.c(5):     \t\t\t} else if ( type === strundefined || type === "boolean" ) {\n
Action.c(5):     \t\t\t\tif ( this.className ) {\n
Action.c(5):     \t\t\t\t\t// store className if set\n
Action.c(5):     \t\t\t\t\tjQuery._data( this, "__className__", this.className );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// If the element has a class name or if we're passed "false",\n
Action.c(5):     \t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n
Action.c(5):     \t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n
Action.c(5):     \t\t\t\t// falling back to the empty string if nothing was stored.\n
Action.c(5):     \t\t\t\tthis.className = this.className || value === false ? "" : jQuery._data( this, "__c
Action.c(5):     lassName__" ) || "";\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \thasClass: function( selector ) {\n
Action.c(5):     \t\tvar className = " " + selector + " ",\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tl = this.length;\n
Action.c(5):     \t\tfor ( ; i < l; i++ ) {\n
Action.c(5):     \t\t\tif ( this[i].nodeType === 1 && (" " + this[i].className + " ").repl
Action.c(5): t=214039ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     ace(rclass, " ").indexOf( className ) >= 0 ) {\n
Action.c(5):     \t\t\t\treturn true;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn false;\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Return jQuery for attributes-only inclusion\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +\n
Action.c(5):     \t"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +\n
Action.c(5):     \t"change select submit keydown keypress keyup error contextmenu").split(" "), function( i
Action.c(5):     , name ) {\n
Action.c(5):     \n
Action.c(5):     \t// Handle event binding\n
Action.c(5):     \tjQuery.fn[ name ] = function( data, fn ) {\n
Action.c(5):     \t\treturn arguments.length > 0 ?\n
Action.c(5):     \t\t\tthis.on( name, null, data, fn ) :\n
Action.c(5):     \t\t\tthis.trigger( name );\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \thover: function( fnOver, fnOut ) {\n
Action.c(5):     \t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tbind: function( types, data, fn ) {\n
Action.c(5):     \t\treturn this.on( types, null, data, fn );\n
Action.c(5):     \t},\n
Action.c(5):     \tunbind: function( types, fn ) {\n
Action.c(5):     \t\treturn this.off( types, null, fn );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tdelegate: function( selector, types, data, fn ) {\n
Action.c(5):     \t\treturn this.on( types, selector, data, fn );\n
Action.c(5):     \t},\n
Action.c(5):     \tundelegate: function( selector, types, fn ) {\n
Action.c(5):     \t\t// ( namespace ) or ( selector, types [, fn] )\n
Action.c(5):     \t\treturn arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector
Action.c(5):      || "**", fn );\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var nonce = jQuery.now();\n
Action.c(5):     \n
Action.c(5):     var rquery = (/\\?/);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var rvalidtokens = /(,)|(\\[|{)|(}|])|"(?:[^"\\\\\\r\\n]|\\\\["\\\\\\/bfnrt]|\\\\u[\\da-fA
Action.c(5):     -F]{4})*"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g;\n
Action.c(5):     \n
Action.c(5):     jQuery.parseJSON = function( data ) {\n
Action.c(5):     \t// Attempt to parse using the native JSON parser first\n
Action.c(5):     \tif ( window.JSON && window.JSON.parse ) {\n
Action.c(5):     \t\t// Support: Android 2.3\n
Action.c(5):     \t\t// Workaround failure to string-cast null input\n
Action.c(5):     \t\treturn window.JSON.parse( data + "" );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tvar requireNonComma,\n
Action.c(5):     \t\tdepth = null,\n
Action.c(5):     \t\tstr = jQuery.trim( data + "" );\n
Action.c(5):     \n
Action.c(5):     \t// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
Action.c(5):     \n
Action.c(5):     \t// after removing valid tokens\n
Action.c(5):     \treturn str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, clo
Action.c(5):     se ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Force termination if we see a misplaced comma\n
Action.c(5):     \t\tif ( requireNonComma && comma ) {\n
Action.c(5):     \t\t\tdepth = 0;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Perform no more replacements after returning to outermost depth\n
Action.c(5):     \t\tif ( depth === 0 ) {\n
Action.c(5):     \t\t\treturn token;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Commas must not follow "[", "{", or ","\n
Action.c(5):     \t\trequireNonComma = open || comma;\n
Action.c(5):     \n
Action.c(5):     \t\t// Determine new depth\n
Action.c(5):     \t\t// array/object open ("[" or "{"): depth += true - false (increment)\n
Action.c(5):     \t\t// array/object close ("]" or "}"): depth += false - true (decrement)\n
Action.c(5):     \t\t// other cases ("," or primitive): depth += true - true (numeric cast)\n
Action.c(5):     \t\tdepth += !close - !open;\n
Action.c(5):     \n
Action.c(5):     \t\t// Remove this token\n
Action.c(5):     \t\treturn "";\n
Action.c(5):     \t}) ) ?\n
Action.c(5):     \t\t( Function( "return " + str ) )() :\n
Action.c(5):     \t\tjQuery.error( "Invalid JSON: " + data );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Cross-browser xml parsing\n
Action.c(5):     jQuery.parseXML = function( data ) {\n
Action.c(5):     \tvar xml, tmp;\n
Action.c(5):     \tif ( !data || typeof data !== "string" ) {\n
Action.c(5):     \t\treturn null;\n
Action.c(5):     \t}\n
Action.c(5):     \ttry {\n
Action.c(5):     \t\tif ( window.DOMParser ) { // Standard\n
Action.c(5):     \t\t\ttmp = new DOMParser();\n
Action.c(5):     \t\t\txml = tmp.parseFromString( data, "text/xml" );\n
Action.c(5):     \t\t} else { // IE\n
Action.c(5):     \t\t\txml = new ActiveXObject( "Microsoft.XMLDOM" );\n
Action.c(5):     \t\t\txml.async = "false";\n
Action.c(5):     \t\t\txml.loadXML( data );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t} catch( e ) {\n
Action.c(5):     \t\txml = undefined;\n
Action.c(5):     \t}\n
Action.c(5):     \tif ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) 
Action.c(5):     {\n
Action.c(5):     \t\tjQuery.error( "Invalid XML: " + data );\n
Action.c(5):     \t}\n
Action.c(5):     \treturn xml;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var\n
Action.c(5):     \t// Document location\n
Action.c(5):     \tajaxLocParts,\n
Action.c(5):     \tajaxLocation,\n
Action.c(5):     \n
Action.c(5):     \trhash = /#.*$/,\n
Action.c(5):     \trts = /([?&])_=[^&]*/,\n
Action.c(5):     \trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, // IE leaves an \\r character at EOL\n
Action.c(5):     \t// #7653, #8125, #8152: local protocol detection\n
Action.c(5):     \trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n
Action.c(5):     \trnoContent = /^(?:GET|HEAD)$/,\n
Action.c(5):     \trprotocol = /^\\/\\//,\n
Action.c(5):     \trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n
Action.c(5):     \n
Action.c(5):     \t/* Prefilters\n
Action.c(5):     \t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n
Action.c(5):     \t * 2) These are called:\n
Action.c(5):     \t *    - BEFORE asking for a transport\n
Action.c(5):     \t *    - AFTER param serialization (s.data is a string if s.processData is true)\n
Action.c(5):     \t * 3) key is the dataType\n
Action.c(5):     \t * 4) the catchall symbol "*" can be used\n
Action.c(5):     \t * 5) execution will start with transport dataType and THEN continue down to "*" if need
Action.c(5):     ed\n
Action.c(5):     \t */\n
Action.c(5):     \tprefilters = {},\n
Action.c(5):     \n
Action.c(5):     \t/* Transports bindings\n
Action.c(5):     \t * 1) key is the dataType\n
Action.c(5):     \t * 2) the catchall symbol "*" can be used\n
Action.c(5):     \t * 3) selection will start with transport dataType and THEN go to "*" if needed\n
Action.c(5):     \t */\n
Action.c(5):     \ttransports = {},\n
Action.c(5):     \n
Action.c(5):     \t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n
Action.c(5):     \tallTypes = "*/".concat("*");\n
Action.c(5):     \n
Action.c(5):     // #8138, IE may throw an exception when accessing\n
Action.c(5):     // a field from window.location if document.domain has been set\n
Action.c(5):     try {\n
Action.c(5):     \tajaxLocation = location.href;\n
Action.c(5):     } catch( e ) {\n
Action.c(5):     \t// Use the href attribute of an A element\n
Action.c(5):     \t// since IE will modify it given document.location\n
Action.c(5):     \tajaxLocation = document.createElement( "a" );\n
Action.c(5):     \tajaxLocation.href = "";\n
Action.c(5):     \tajaxLocation = ajaxLocation.href;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Segment location into parts\n
Action.c(5):     ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n
Action.c(5):     \n
Action.c(5):     // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n
Action.c(5):     function addToPrefiltersOrTransports( structure ) {\n
Action.c(5):     \n
Action.c(5):     \t// dataTypeExpression is optional and defaults to "*"\n
Action.c(5):     \treturn function( dataTypeExpression, func ) {\n
Action.c(5):     \n
Action.c(5):     \t\tif ( typeof dataTypeExpression !== "string" ) {\n
Action.c(5):     \t\t\tfunc = dataTypeExpression;\n
Action.c(5):     \t\t\tdataTypeExpression = "*";\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tvar dataType,\n
Action.c(5):     \t\t\ti = 0,\n
Action.c(5):     \t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n
Action.c(5):     \n
Action.c(5):     \t\tif ( jQuery.isFunction( func ) ) {\n
Action.c(5):     \t\t\t// For each dataType in the dataTypeExpression\n
Action.c(5):     \t\t\twhile ( (dataType = dataTypes[i++]) ) {\n
Action.c(5):     \t\t\t\t// Prepend if requested\n
Action.c(5):     \t\t\t\tif ( dataType.charAt( 0 ) === "+" ) {\n
Action.c(5):     \t\t\t\t\tdataType = dataType.slice( 1 ) || "*";\n
Action.c(5):     \t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Otherwise append\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t};\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Base inspection function for prefilters and transports\n
Action.c(5):     function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n
Action.c(5):     \n
Action.c(5):     \tvar inspected = {},\n
Action.c(5):     \t\tseekingTransport = ( structure === transports );\n
Action.c(5):     \n
Action.c(5):     \tfunction inspect( dataType ) {\n
Action.c(5):     \t\tvar selected;\n
Action.c(5):     \t\tinspected[ dataType ] = true;\n
Action.c(5):     \t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n
Action.c(5):     \t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n
Action.c(5):     \t\t\tif ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dat
Action.c(5):     aTypeOrTransport ] ) {\n
Action.c(5):     \t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n
Action.c(5):     \t\t\t\tinspect( dataTypeOrTransport );\n
Action.c(5):     \t\t\t\treturn false;\n
Action.c(5):     \t\t\t} else if ( seekingTransport ) {\n
Action.c(5):     \t\t\t\treturn !( selected = dataTypeOrTransport );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t\treturn selected;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // A special extend for ajax options\n
Action.c(5):     // that takes "flat" options (not to be deep extended)\n
Action.c(5):     // Fixes #9887\n
Action.c(5):     function ajaxExtend( target, src ) {\n
Action.c(5):     \tvar deep, key,\n
Action.c(5):     \t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n
Action.c(5):     \n
Action.c(5):     \tfor ( key in src ) {\n
Action.c(5):     \t\tif ( src[ key ] !== undefined ) {\n
Action.c(5):     \t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \tif ( deep ) {\n
Action.c(5):     \t\tjQuery.extend( true, target, deep );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn target;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /* Handles responses to an ajax request:\n
Action.c(5):      * - finds the right dataType (mediates between content-type and expected dataType)\n
Action.c(5):      * - returns the corresponding response\n
Action.c(5):      */\n
Action.c(5):     function ajaxHandleResponses( s, jqXHR, responses ) {\n
Action.c(5):     \tvar firstDataType, ct, finalDataType, type,\n
Action.c(5):     \t\tcontents = s.contents,\n
Action.c(5):     \t\tdataTypes = s.dataTypes;\n
Action.c(5):     \n
Action.c(5):     \t// Remove auto dataType and get content-type in the process\n
Action.c(5):     \twhile ( dataTypes[ 0 ] === "*" ) {\n
Action.c(5):     \t\tdataTypes.shift();\n
Action.c(5):     \t\tif ( ct === undefined ) {\n
Action.c(5):     \t\t\tct = s.mimeType || jqXHR.getResponseHeader("Content-Type");\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Check if we're dealing with a known content-type\n
Action.c(5):     \tif ( ct ) {\n
Action.c(5):     \t\tfor ( type in contents ) {\n
Action.c(5):     \t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n
Action.c(5):     \t\t\t\tdataTypes.unshift( type );\n
Action.c(5):     \t\t\t\tbreak;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Check to see if we have a response for the expected dataType\n
Action.c(5):     \tif ( dataTypes[ 0 ] in responses ) {\n
Action.c(5):     \t\tfinalDataType = dataTypes[ 0 ];\n
Action.c(5):     \t} else {\n
Action.c(5):     \t\t// Try convertible dataTypes\n
Action.c(5):     \t\tfor ( type in responses ) {\n
Action.c(5):     \t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {\n
Action.c(5):     \t\t\t\tfinalDataType = type;\n
Action.c(5):     \t\t\t\tbreak;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( !firstDataType ) {\n
Action.c(5):     \t\t\t\tfirstDataType = type;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\t// Or just use first one\n
Action.c(5):     \t\tfinalDataType = finalDataType || firstDataType;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// If we found a dataType\n
Action.c(5):     \t// We add the dataType to the list if needed\n
Action.c(5):     \t// and return the corresponding response\n
Action.c(5):     \tif ( finalDataType ) {\n
Action.c(5):     \t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n
Action.c(5):     \t\t\tdataTypes.unshift( finalDataType );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\treturn responses[ finalDataType ];\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     /* Chain conversions given the request and the original response\n
Action.c(5):      * Also sets the responseXXX fields on the jqXHR instance\n
Action.c(5):      */\n
Action.c(5):     function ajaxConvert( s, response, jqXHR, isSuccess ) {\n
Action.c(5):     \tvar conv2, current, conv, tmp, prev,\n
Action.c(5):     \t\tconverters = {},\n
Action.c(5):     \t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n
Action.c(5):     \t\tdataTypes = s.dataTypes.slice();\n
Action.c(5):     \n
Action.c(5):     \t// Create converters map with lowercased keys\n
Action.c(5):     \tif ( dataTypes[ 1 ] ) {\n
Action.c(5):     \t\tfor ( conv in s.converters ) {\n
Action.c(5):     \t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tcurrent = dataTypes.shift();\n
Action.c(5):     \n
Action.c(5):     \t// Convert to each sequential dataType\n
Action.c(5):     \twhile ( current ) {\n
Action.c(5):     \n
Action.c(5):     \t\tif ( s.responseFields[ current ] ) {\n
Action.c(5):     \t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Apply the dataFilter if provided\n
Action.c(5):     \t\tif ( !prev && isSuccess && s.dataFilter ) {\n
Action.c(5):     \t\t\tresponse = s.dataFilter( response, s.dataType );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tprev = current;\n
Action.c(5):     \t\tcurrent = dataTypes.shift();\n
Action.c(5):     \n
Action.c(5):     \t\tif ( current ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// There's only work to do if current dataType is non-auto\n
Action.c(5):     \t\t\tif ( current === "*" ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tcurrent = prev;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Convert response if prev dataType is non-auto and differs from current\n
Action.c(5):     \t\t\t} else if ( prev !== "*" && prev !== current ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Seek a direct converter\n
Action.c(5):     \t\t\t\tconv = converters[ prev + " " + current ] || converters[ "* " + current ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// If none found, seek a pair\n
Action.c(5):     \t\t\t\tif ( !conv ) {\n
Action.c(5):     \t\t\t\t\tfor ( conv2 in converters ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// If conv2 outputs current\n
Action.c(5):     \t\t\t\t\t\ttmp = conv2.split( " " );\n
Action.c(5):     \t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// If prev can be converted to accepted input\n
Action.c(5):     \t\t\t\t\t\t\tconv = converters[ prev + " " + tmp[ 0 ] ] ||\n
Action.c(5):     \t\t\t\t\t\t\t\tconverters[ "* " + tmp[ 0 ] ];\n
Action.c(5):     \t\t\t\t\t\t\tif ( conv ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t// Condense equivalence converters\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( conv === true ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n
Action.c(5):     \t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n
Action.c(5):     \t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t\tbreak;\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Apply converter (if not an equivalence)\n
Action.c(5):     \t\t\t\tif ( conv !== true ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n
Action.c(5):     \t\t\t\t\tif ( conv && s[ "throws" ] ) {\n
Action.c(5):     \t\t\t\t\t\tresponse = conv( response );\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\t\t\tresponse = conv( response );\n
Action.c(5):     \t\t\t\t\t\t} catch ( e ) {\n
Action.c(5):     \t\t\t\t\t\t\treturn { state: "parsererror", error: conv ? e : "No conversion from " + pre
Action.c(5):     v + " to " + current };\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn { state: "success", data: response };\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.extend({\n
Action.c(5):     \n
Action.c(5):     \t// Counter for holding the number of active queries\n
Action.c(5):     \tactive: 0,\n
Action.c(5):     \n
Action.c(5):     \t// Last-Modified header cache for next request\n
Action.c(5):     \tlastModified: {},\n
Action.c(5):     \tetag: {},\n
Action.c(5):     \n
Action.c(5):     \tajaxSettings: {\n
Action.c(5):     \t\turl: ajaxLocation,\n
Action.c(5):     \t\ttype: "GET",\n
Action.c(5):     \t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n
Action.c(5):     \t\tglobal: true,\n
Action.c(5):     \t\tprocessData: true,\n
Action.c(5):     \t\tasync: true,\n
Action.c(5):     \t\tcontentType: "application/x-www-form-urlencoded; charset=UTF-8",\n
Action.c(5):     \t\t/*\n
Action.c(5):     \t\ttimeout: 0,\n
Action.c(5):     \t\tdata: null,\n
Action.c(5):     \t\tdataType: null,\n
Action.c(5):     \t\tusername: null,\n
Action.c(5):     \t\tpassword: null,\n
Action.c(5):     \t\tcache: null,\n
Action.c(5):     \t\tthrows: false,\n
Action.c(5):     \t\ttraditional: false,\n
Action.c(5):     \t\theaders: {},\n
Action.c(5):     \t\t*/\n
Action.c(5):     \n
Action.c(5):     \t\taccepts: {\n
Action.c(5):     \t\t\t"*": allTypes,\n
Action.c(5):     \t\t\ttext: "text/plain",\n
Action.c(5):     \t\t\thtml: "text/html",\n
Action.c(5):     \t\t\txml: "application/xml, text/xml",\n
Action.c(5):     \t\t\tjson: "application/json, text/javascript"\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tcontents: {\n
Action.c(5):     \t\t\txml: /xml/,\n
Action.c(5):     \t\t\thtml: /html/,\n
Action.c(5):     \t\t\tjson: /json/\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\tresponseFields: {\n
Action.c(5):     \t\t\txml: "responseXML",\n
Action.c(5):     \t\t\ttext: "responseText",\n
Action.c(5):     \t\t\tjson: "responseJSON"\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// Data converters\n
Action.c(5):     \t\t// Keys separate source (or catchall "*") and destination types with a single space\n
Action.c(5):     \t\tconverters: {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Convert anything to text\n
Action.c(5):     \t\t\t"* text": String,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Text to html (true = no transformation)\n
Action.c(5):     \t\t\t"text html": true,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Evaluate text as a json expression\n
Action.c(5):     \t\t\t"text json": jQuery.parseJSON,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Parse text as xml\n
Action.c(5):     \t\t\t"text xml": jQuery.par
Action.c(5): t=214044ms: 4680-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     seXML\n
Action.c(5):     \t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t// For options that shouldn't be deep extended:\n
Action.c(5):     \t\t// you can add your own custom options here if\n
Action.c(5):     \t\t// and when you create one that shouldn't be\n
Action.c(5):     \t\t// deep extended (see ajaxExtend)\n
Action.c(5):     \t\tflatOptions: {\n
Action.c(5):     \t\t\turl: true,\n
Action.c(5):     \t\t\tcontext: true\n
Action.c(5):     \t\t}\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \t// Creates a full fledged settings object into target\n
Action.c(5):     \t// with both ajaxSettings and settings fields.\n
Action.c(5):     \t// If target is omitted, writes into ajaxSettings.\n
Action.c(5):     \tajaxSetup: function( target, settings ) {\n
Action.c(5):     \t\treturn settings ?\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Building a settings object\n
Action.c(5):     \t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Extending ajaxSettings\n
Action.c(5):     \t\t\tajaxExtend( jQuery.ajaxSettings, target );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n
Action.c(5):     \tajaxTransport: addToPrefiltersOrTransports( transports ),\n
Action.c(5):     \n
Action.c(5):     \t// Main method\n
Action.c(5):     \tajax: function( url, options ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// If url is an object, simulate pre-1.5 signature\n
Action.c(5):     \t\tif ( typeof url === "object" ) {\n
Action.c(5):     \t\t\toptions = url;\n
Action.c(5):     \t\t\turl = undefined;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Force options to be an object\n
Action.c(5):     \t\toptions = options || {};\n
Action.c(5):     \n
Action.c(5):     \t\tvar // Cross-domain detection vars\n
Action.c(5):     \t\t\tparts,\n
Action.c(5):     \t\t\t// Loop variable\n
Action.c(5):     \t\t\ti,\n
Action.c(5):     \t\t\t// URL without anti-cache param\n
Action.c(5):     \t\t\tcacheURL,\n
Action.c(5):     \t\t\t// Response headers as string\n
Action.c(5):     \t\t\tresponseHeadersString,\n
Action.c(5):     \t\t\t// timeout handle\n
Action.c(5):     \t\t\ttimeoutTimer,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// To know if global events are to be dispatched\n
Action.c(5):     \t\t\tfireGlobals,\n
Action.c(5):     \n
Action.c(5):     \t\t\ttransport,\n
Action.c(5):     \t\t\t// Response headers\n
Action.c(5):     \t\t\tresponseHeaders,\n
Action.c(5):     \t\t\t// Create the final options object\n
Action.c(5):     \t\t\ts = jQuery.ajaxSetup( {}, options ),\n
Action.c(5):     \t\t\t// Callbacks context\n
Action.c(5):     \t\t\tcallbackContext = s.context || s,\n
Action.c(5):     \t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collec
Action.c(5):     tion\n
Action.c(5):     \t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jque
Action.c(5):     ry ) ?\n
Action.c(5):     \t\t\t\tjQuery( callbackContext ) :\n
Action.c(5):     \t\t\t\tjQuery.event,\n
Action.c(5):     \t\t\t// Deferreds\n
Action.c(5):     \t\t\tdeferred = jQuery.Deferred(),\n
Action.c(5):     \t\t\tcompleteDeferred = jQuery.Callbacks("once memory"),\n
Action.c(5):     \t\t\t// Status-dependent callbacks\n
Action.c(5):     \t\t\tstatusCode = s.statusCode || {},\n
Action.c(5):     \t\t\t// Headers (they are sent all at once)\n
Action.c(5):     \t\t\trequestHeaders = {},\n
Action.c(5):     \t\t\trequestHeadersNames = {},\n
Action.c(5):     \t\t\t// The jqXHR state\n
Action.c(5):     \t\t\tstate = 0,\n
Action.c(5):     \t\t\t// Default abort message\n
Action.c(5):     \t\t\tstrAbort = "canceled",\n
Action.c(5):     \t\t\t// Fake xhr\n
Action.c(5):     \t\t\tjqXHR = {\n
Action.c(5):     \t\t\t\treadyState: 0,\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Builds headers hashtable if needed\n
Action.c(5):     \t\t\t\tgetResponseHeader: function( key ) {\n
Action.c(5):     \t\t\t\t\tvar match;\n
Action.c(5):     \t\t\t\t\tif ( state === 2 ) {\n
Action.c(5):     \t\t\t\t\t\tif ( !responseHeaders ) {\n
Action.c(5):     \t\t\t\t\t\t\tresponseHeaders = {};\n
Action.c(5):     \t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\treturn match == null ? null : match;\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Raw string\n
Action.c(5):     \t\t\t\tgetAllResponseHeaders: function() {\n
Action.c(5):     \t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Caches the header\n
Action.c(5):     \t\t\t\tsetRequestHeader: function( name, value ) {\n
Action.c(5):     \t\t\t\t\tvar lname = name.toLowerCase();\n
Action.c(5):     \t\t\t\t\tif ( !state ) {\n
Action.c(5):     \t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n
Action.c(5):     \t\t\t\t\t\trequestHeaders[ name ] = value;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Overrides response content-type header\n
Action.c(5):     \t\t\t\toverrideMimeType: function( type ) {\n
Action.c(5):     \t\t\t\t\tif ( !state ) {\n
Action.c(5):     \t\t\t\t\t\ts.mimeType = type;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Status-dependent callbacks\n
Action.c(5):     \t\t\t\tstatusCode: function( map ) {\n
Action.c(5):     \t\t\t\t\tvar code;\n
Action.c(5):     \t\t\t\t\tif ( map ) {\n
Action.c(5):     \t\t\t\t\t\tif ( state < 2 ) {\n
Action.c(5):     \t\t\t\t\t\t\tfor ( code in map ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n
Action.c(5):     \t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t// Execute the appropriate callbacks\n
Action.c(5):     \t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Cancel the request\n
Action.c(5):     \t\t\t\tabort: function( statusText ) {\n
Action.c(5):     \t\t\t\t\tvar finalText = statusText || strAbort;\n
Action.c(5):     \t\t\t\t\tif ( transport ) {\n
Action.c(5):     \t\t\t\t\t\ttransport.abort( finalText );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tdone( 0, finalText );\n
Action.c(5):     \t\t\t\t\treturn this;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \n
Action.c(5):     \t\t// Attach deferreds\n
Action.c(5):     \t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n
Action.c(5):     \t\tjqXHR.success = jqXHR.done;\n
Action.c(5):     \t\tjqXHR.error = jqXHR.fail;\n
Action.c(5):     \n
Action.c(5):     \t\t// Remove hash character (#7531: and string promotion)\n
Action.c(5):     \t\t// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)\n
Action.c(5):     \t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n
Action.c(5):     \t\t// We also use the url parameter if available\n
Action.c(5):     \t\ts.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rproto
Action.c(5):     col, ajaxLocParts[ 1 ] + "//" );\n
Action.c(5):     \n
Action.c(5):     \t\t// Alias method option to type as per ticket #12004\n
Action.c(5):     \t\ts.type = options.method || options.type || s.method || s.type;\n
Action.c(5):     \n
Action.c(5):     \t\t// Extract dataTypes list\n
Action.c(5):     \t\ts.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "
Action.c(5):     " ];\n
Action.c(5):     \n
Action.c(5):     \t\t// A cross-domain request is in order when we have a protocol:host:
Action.c(5): t=214045ms: 10246-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5): t=214045ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     port mismatch\n
Action.c(5):     \t\tif ( s.crossDomain == null ) {\n
Action.c(5):     \t\t\tparts = rurl.exec( s.url.toLowerCase() );\n
Action.c(5):     \t\t\ts.crossDomain = !!( parts &&\n
Action.c(5):     \t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n
Action.c(5):     \t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==\n
Action.c(5):     \t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )\n
Action.c(5):     \t\t\t);\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Convert data if not already a string\n
Action.c(5):     \t\tif ( s.data && s.processData && typeof s.data !== "string" ) {\n
Action.c(5):     \t\t\ts.data = jQuery.param( s.data, s.traditional );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Apply prefilters\n
Action.c(5):     \t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n
Action.c(5):     \n
Action.c(5):     \t\t// If request was aborted inside a prefilter, stop there\n
Action.c(5):     \t\tif ( state === 2 ) {\n
Action.c(5):     \t\t\treturn jqXHR;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// We can fire global events as of now if asked to\n
Action.c(5):     \t\tfireGlobals = s.global;\n
Action.c(5):     \n
Action.c(5):     \t\t// Watch for a new set of requests\n
Action.c(5):     \t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n
Action.c(5):     \t\t\tjQuery.event.trigger("ajaxStart");\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Uppercase the type\n
Action.c(5):     \t\ts.type = s.type.toUpperCase();\n
Action.c(5):     \n
Action.c(5):     \t\t// Determine if request has content\n
Action.c(5):     \t\ts.hasContent = !rnoContent.test( s.type );\n
Action.c(5):     \n
Action.c(5):     \t\t// Save the URL in case we're toying with the If-Modified-Since\n
Action.c(5):     \t\t// and/or If-None-Match header later on\n
Action.c(5):     \t\tcacheURL = s.url;\n
Action.c(5):     \n
Action.c(5):     \t\t// More options handling for requests with no content\n
Action.c(5):     \t\tif ( !s.hasContent ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If data is available, append data to url\n
Action.c(5):     \t\t\tif ( s.data ) {\n
Action.c(5):     \t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );\n
Action.c(5):     \t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n
Action.c(5):     \t\t\t\tdelete s.data;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add anti-cache in url if needed\n
Action.c(5):     \t\t\tif ( s.cache === false ) {\n
Action.c(5):     \t\t\t\ts.url = rts.test( cacheURL ) ?\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// If there is already a '_' parameter, set its value\n
Action.c(5):     \t\t\t\t\tcacheURL.replace( rts, "$1_=" + nonce++ ) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Otherwise add one to the end\n
Action.c(5):     \t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n
Action.c(5):     \t\tif ( s.ifModified ) {\n
Action.c(5):     \t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n
Action.c(5):     \t\t\t\tjqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( jQuery.etag[ cacheURL ] ) {\n
Action.c(5):     \t\t\t\tjqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Set the correct header, if data is being sent\n
Action.c(5):     \t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n
Action.c(5):     \t\t\tjqXHR.setRequestHeader( "Content-Type", s.contentType );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Set the Accepts header for the server, depending on the dataType\n
Action.c(5):     \t\tjqXHR.setRequestHeader(\n
Action.c(5):     \t\t\t"Accept",\n
Action.c(5):     \t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n
Action.c(5):     \t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=
Action.c(5):     0.01" : "" ) :\n
Action.c(5):     \t\t\t\ts.accepts[ "*" ]\n
Action.c(5):     \t\t);\n
Action.c(5):     \n
Action.c(5):     \t\t// Check for headers option\n
Action.c(5):     \t\tfor ( i in s.headers ) {\n
Action.c(5):     \t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Allow custom headers/mimetypes and early abort\n
Action.c(5):     \t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || sta
Action.c(5):     te === 2 ) ) {\n
Action.c(5):     \t\t\t// Abort if not done already and return\n
Action.c(5):     \t\t\treturn jqXHR.abort();\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// aborting is no longer a cancellation\n
Action.c(5):     \t\tstrAbort = "abort";\n
Action.c(5):     \n
Action.c(5):     \t\t// Install callbacks on deferreds\n
Action.c(5):     \t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n
Action.c(5):     \t\t\tjqXHR[ i ]( s[ i ] );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Get transport\n
Action.c(5):     \t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n
Action.c(5):     \n
Action.c(5):     \t\t// If no transport, we auto-abort\n
Action.c(5):     \t\tif ( !transport ) {\n
Action.c(5):     \t\t\tdone( -1, "No Transport" );\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tjqXHR.readyState = 1;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Send global event\n
Action.c(5):     \t\t\tif ( fireGlobals ) {\n
Action.c(5):     \t\t\t\tglobalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t// Timeout\n
Action.c(5):     \t\t\tif ( s.async && s.timeout > 0 ) {\n
Action.c(5):     \t\t\t\ttimeoutTimer = setTimeout(function() {\n
Action.c(5):     \t\t\t\t\tjqXHR.abort("timeout");\n
Action.c(5):     \t\t\t\t}, s.timeout );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\ttry {\n
Action.c(5):     \t\t\t\tstate = 1;\n
Action.c(5):     \t\t\t\ttransport.send( requestHeaders, done );\n
Action.c(5):     \t\t\t} catch ( e ) {\n
Action.c(5):     \t\t\t\t// Propagate exception as error if not done\n
Action.c(5):     \t\t\t\tif ( state < 2 ) {\n
Action.c(5):     \t\t\t\t\tdone( -1, e );\n
Action.c(5):     \t\t\t\t// Simply rethrow otherwise\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tthrow e;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Callback for when everything is done\n
Action.c(5):     \t\tfunction done( status, nativeStatusText, responses, headers ) {\n
Action.c(5):     \t\t\tvar isSuccess, success, error, response, modified,\n
Action.c(5):     \t\t\t\tstatusText = nativeStatusText;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Called once\n
Action.c(5):     \t\t\tif ( state === 2 ) {\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// State is "done" now\n
Action.c(5):     \t\t\tstate = 2;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Clear timeout if it exists\n
Action.c(5):     \t\t\tif ( timeoutTimer ) {\n
Action.c(5):     \t\t\t\tclearTimeout( timeoutTimer );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Dereference transport for early garbage collection\n
Action.c(5):     \t\t\t// (no matter how long the jqXHR object will be used)\n
Action.c(5):     \t\t\ttransport = undefined;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Cache response headers\n
Action.c(5):     \t\t\tresponseHeadersString = headers || "";\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Set readyState\n
Action.c(5):     \t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Determine if successful\n
Action.c(5):     \t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Get response data\n
Action.c(5):     \t\t\tif ( responses ) {\n
Action.c(5):     \t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Convert no matter what (that way responseXXX fields are always set)\n
Action.c(5):     \t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n
Action.c(5):     \n
Action.c(5):     \t\t\t// If successful, handle type chaining\n
Action.c(5):     \t\t\tif ( isSuccess ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n
Action.c(5):     \t\t\t\tif ( s.ifModified ) {\n
Action.c(5):     \t\t\t\t\tmodified = jqXHR.getResponseHeader("Last-Modified");\n
Action.c(5):     \t\t\t\t\tif ( modified ) {\n
Action.c(5):     \t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\tmodified = jqXHR.getResponseHeader("etag");\n
Action.c(5):     \t\t\t\t\tif ( modified ) {\n
Action.c(5):     \t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// if no content\n
Action.c(5):     \t\t\t\tif ( status === 204 || s.type === "HEAD" ) {\n
Action.c(5):     \t\t\t\t\tstatusText = "nocontent";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// if not modified\n
Action.c(5):     \t\t\t\t} else if ( status === 304 ) {\n
Action.c(5):     \t\t\t\t\tstatusText = "notmodified";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// If we have data, let's convert it\n
Action.c(5):     \t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\tstatusText = response.state;\n
Action.c(5):     \t\t\t\t\tsuccess = response.data;\n
Action.c(5):     \t\t\t\t\terror = response.error;\n
Action.c(5):     \t\t\t\t\tisSuccess = !error;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\t// We extract error from statusText\n
Action.c(5):     \t\t\t\t// then normalize statusText and status for non-aborts\n
Action.c(5):     \t\t\t\terror = statusText;\n
Action.c(5):     \t\t\t\tif ( status || !statusText ) {\n
Action.c(5):     \t\t\t\t\tstatusText = "error";\n
Action.c(5):     \t\t\t\t\tif ( status < 0 ) {\n
Action.c(5):     \t\t\t\t\t\tstatus = 0;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Set data for the fake xhr object\n
Action.c(5):     \t\t\tjqXHR.status = status;\n
Action.c(5):     \t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + "";\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Success/Error\n
Action.c(5):     \t\t\tif ( isSuccess ) {\n
Action.c(5):     \t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Status-dependent callbacks\n
Action.c(5):     \t\t\tjqXHR.statusCode( statusCode );\n
Action.c(5):     \t\t\tstatusCode = undefined;\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( fireGlobals ) {\n
Action.c(5):     \t\t\t\tglobalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",\n
Action.c(5):     \t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Complete\n
Action.c(5):     \t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( fireGlobals ) {\n
Action.c(5):     \t\t\t\tglobalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );\n
Action.c(5):     \t\t\t\t// Handle the global AJAX counter\n
Action.c(5):     \t\t\t\tif ( !( --jQuery.active ) ) {\n
Action.c(5):     \t\t\t\t\tjQuery.event.trigger("ajaxStop");\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn jqXHR;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tgetJSON: function( url, data, callback ) {\n
Action.c(5):     \t\treturn jQuery.get( url, data, callback, "json" );\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tgetScript: function( url, callback ) {\n
Action.c(5):     \t\treturn jQuery.get( url, undefined, callback, "script" );\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     jQuery.each( [ "get", "post" ], function( i, method ) {\n
Action.c(5):     \tjQuery[ method ] = function( url, data, callback, type ) {\n
Action.c(5):     \t\t// shift arguments if data argument was omitted\n
Action.c(5):     \t\tif ( jQuery.isFunction( data ) ) {\n
Action.c(5):     \t\t\ttype = type || callback;\n
Action.c(5):     \t\t\tcallback = data;\n
Action.c(5):     \t\t\tdata = undefined;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn jQuery.ajax({\n
Action.c(5):     \t\t\turl: url,\n
Action.c(5):     \t\t\ttype: method,\n
Action.c(5):     \t\t\tdataType: type,\n
Action.c(5):     \t\t\tdata: data,\n
Action.c(5):     \t\t\tsuccess: callback\n
Action.c(5):     \t\t});\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Attach a bunch of functions for handling common AJAX events\n
Action.c(5):     jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxS
Action.c(5):     end" ], function( i, type ) {\n
Action.c(5):     \tjQuery.fn[ type ] = function( fn ) {\n
Action.c(5):     \t\treturn this.on( type, fn );\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     jQuery._evalUrl = function( url ) {\n
Action.c(5):     \treturn jQuery.ajax({\n
Action.c(5):     \t\turl: url,\n
Action.c(5):     \t\ttype: "GET",\n
Action.c(5):     \t\tdataType: "script",\n
Action.c(5):     \t\tasync: false,\n
Action.c(5):     \t\tglobal: false,\n
Action.c(5):     \t\t"throws": true\n
Action.c(5):     \t});\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \twrapAll: function( html ) {\n
Action.c(5):     \t\tif ( jQuery.isFunction( html ) ) {\n
Action.c(5):     \t\t\treturn this.each(function(i) {\n
Action.c(5):     \t\t\t\tjQuery(this).wrapAll( html.call(this, i) );\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( this[0] ) {\n
Action.c(5):     \t\t\t// The elements to wrap the target around\n
Action.c(5):     \t\t\tvar wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( this[0].parentNode ) {\n
Action.c(5):     \t\t\t\twrap.insertBefore( this[0] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\twrap.map(function() {\n
Action.c(5):     \t\t\t\tvar elem = this;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\twhile ( elem.firstChild && elem.firstChild.nodeType === 1 ) {\n
Action.c(5):     \t\t\t\t\telem = elem.firstChild;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn elem;\n
Action.c(5):     \t\t\t}).append( this );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this;\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \twrapInner: function( html ) {\n
Action.c(5):     \t\tif ( jQuery.isFunction( html ) ) {\n
Action.c(5):     \t\t\treturn this.each(function(i) {\n
Action.c(5):     \t\t\t\tjQuery(this).wrapInner( html.call(this, i) );\n
Action.c(5):     \t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.each(function() {\n
Action.c(5):     \t\t\tvar self = jQuery( this ),\n
Action.c(5):     \t\t\t\tcontents = self.contents();\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( contents.length ) {\n
Action.c(5):     \t\t\t\tcontents.wrapAll( html );\n
Action.c(5):     \n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\tself.append( html );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \twrap: function( html ) {\n
Action.c(5):     \t\tvar isFunction = jQuery.isFunction( html );\n
Action.c(5):     \n
Action.c(5):     \t\treturn this.each(function(i) {\n
Action.c(5):     \t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tunwrap: function() {\n
Action.c(5):     \t\treturn this.parent().each(function() {\n
Action.c(5):     \t\t\tif ( !jQuery.nodeName( this, "body" ) ) {\n
Action.c(5):     \t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}).end();\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     jQuery.expr.filters.hidden = function( elem ) {\n
Action.c(5):     \t// Support: Opera <= 12.12\n
Action.c(5):     \t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n
Action.c(5):     \treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||\n
Action.c(5):     \t\t(!support.reliableHiddenOffsets() &&\n
Action.c(5):     \t\t\t((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.expr.filters.visible = function( elem ) {\n
Action.c(5):     \treturn !jQuery.expr.filters.hidden( elem );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var r20 = /%20/g,\n
Action.c(5):     \trbracket = /\\[\\]$/,\n
Action.c(5):     \trCRLF = /\\r?\\n/g,\n
Action.c(5):     \trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n
Action.c(5):     \trsubmittable = /^(?:input|select|textarea|keygen)/i;\n
Action.c(5):     \n
Action.c(5):     function buildParams( prefix, obj, traditional, add ) {\n
Action.c(5):     \tvar name;\n
Action.c(5):     \n
Action.c(5):     \tif ( jQuery.isArray( obj ) ) {\n
Action.c(5):     \t\t// Serialize array item.\n
Action.c(5):     \t\tjQuery.each( obj, function( i, v ) {\n
Action.c(5):     \t\t\tif ( traditional || rbracket.test( prefix ) ) {\n
Action.c(5):     \t\t\t\t// Treat each array item as a scalar.\n
Action.c(5):     \t\t\t\tadd( prefix, v );\n
Action.c(5):     \n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n
Action.c(5):     \t\t\t\tbuildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, tradition
Action.c(5):     al, add );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t} else if ( !traditional && jQuery.type( obj ) === "object" ) {\n
Action.c(5):     \t\t// Serialize object item.\n
Action.c(5):     \t\tfor ( name in obj ) {\n
Action.c(5):     \t\t\tbuildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t} else {\n
Action.c(5):     \t\t// Serialize scalar item.\n
Action.c(5):     \t\tadd( prefix, obj );\n
Action.c(5):     \t}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Serialize an array of form elements or a set of\n
Action.c(5):     // key/values into a query string\n
Action.c(5):     jQuery.param = function( a, traditional ) {\n
Action.c(5):     \tvar prefix,\n
Action.c(5):     \t\ts = [],\n
Action.c(5):     \t\tadd = function( key, value ) {\n
Action.c(5):     \t\t\t// If value is a function, invoke it and return its value\n
Action.c(5):     \t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );\n
Action.c(5):     \t\t\ts[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t// Set traditional to true for jQuery <= 1.3.2 behavior.\n
Action.c(5):     \tif ( traditional === undefined ) {\n
Action.c(5):     \t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// If an array was passed in, assume that it is an array of form elements.\n
Action.c(5):     \tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n
Action.c(5):     \t\t// Serialize the form elements\n
Action.c(5):     \t\tjQuery.each( a, function() {\n
Action.c(5):     \t\t\tadd( this.name, this.value );\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t} else {\n
Action.c(5):     \t\t// If traditional, encode the "old" way (the way 1.3.2 or older\n
Action.c(5):     \t\t// did it), otherwise encode params recursively.\n
Action.c(5):     \t\tfor ( prefix in a ) {\n
Action.c(5):     \t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// Return the resulting serialization\n
Action.c(5):     \treturn s.join( "&" ).replace( r20, "+" );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \tserialize: function() {\n
Action.c(5):     \t\treturn jQuery.param( this.serializeArray() );\n
Action.c(5):     \t},\n
Action.c(5):     \tserializeArray: function() {\n
Action.c(5):     \t\treturn this.map(function() {\n
Action.c(5):     \t\t\t// Can add propHook for "elements" to filter or add form elements\n
Action.c(5):     \t\t\tvar elements = jQuery.prop( this, "elements" );\n
Action.c(5):     \t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n
Action.c(5):     \t\t})\n
Action.c(5):     \t\t.filter(function() {\n
Action.c(5):     \t\t\tvar type = this.type;\n
Action.c(5):     \t\t\t// Use .is(":disabled") so that fieldset[disabled] wor
Action.c(5): t=214050ms: 12288-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     ks\n
Action.c(5):     \t\t\treturn this.name && !jQuery( this ).is( ":disabled" ) &&\n
Action.c(5):     \t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n
Action.c(5):     \t\t\t\t( this.checked || !rcheckableType.test( type ) );\n
Action.c(5):     \t\t})\n
Action.c(5):     \t\t.map(function( i, elem ) {\n
Action.c(5):     \t\t\tvar val = jQuery( this ).val();\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn val == null ?\n
Action.c(5):     \t\t\t\tnull :\n
Action.c(5):     \t\t\t\tjQuery.isArray( val ) ?\n
Action.c(5):     \t\t\t\t\tjQuery.map( val, function( val ) {\n
Action.c(5):     \t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, "\\r\\n" ) };\n
Action.c(5):     \t\t\t\t\t}) :\n
Action.c(5):     \t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, "\\r\\n" ) };\n
Action.c(5):     \t\t}).get();\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Create the request object\n
Action.c(5):     // (This is still attached to ajaxSettings for backward compatibility)\n
Action.c(5):     jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?\n
Action.c(5):     \t// Support: IE6+\n
Action.c(5):     \tfunction() {\n
Action.c(5):     \n
Action.c(5):     \t\t// XHR cannot access local files, always use ActiveX for that case\n
Action.c(5):     \t\treturn !this.isLocal &&\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Support: IE7-8\n
Action.c(5):     \t\t\t// oldIE XHR does not support non-RFC2616 methods (#13240)\n
Action.c(5):     \t\t\t// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx\n
Action.c(5):     \t\t\t// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9\n
Action.c(5):     \t\t\t// Although this check for six methods instead of eight\n
Action.c(5):     \t\t\t// since IE also does not support "trace" and "connect"\n
Action.c(5):     \t\t\t/^(get|post|head|put|delete|options)$/i.test( this.type ) &&\n
Action.c(5):     \n
Action.c(5):     \t\t\tcreateStandardXHR() || createActiveXHR();\n
Action.c(5):     \t} :\n
Action.c(5):     \t// For all other browsers, use the standard XMLHttpRequest object\n
Action.c(5):     \tcreateStandardXHR;\n
Action.c(5):     \n
Action.c(5):     var xhrId = 0,\n
Action.c(5):     \txhrCallbacks = {},\n
Action.c(5):     \txhrSupported = jQuery.ajaxSettings.xhr();\n
Action.c(5):     \n
Action.c(5):     // Support: IE<10\n
Action.c(5):     // Open requests must be manually aborted on unload (#5280)\n
Action.c(5):     if ( window.ActiveXObject ) {\n
Action.c(5):     \tjQuery( window ).on( "unload", function() {\n
Action.c(5):     \t\tfor ( var key in xhrCallbacks ) {\n
Action.c(5):     \t\t\txhrCallbacks[ key ]( undefined, true );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Determine support properties\n
Action.c(5):     support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );\n
Action.c(5):     xhrSupported = support.ajax = !!xhrSupported;\n
Action.c(5):     \n
Action.c(5):     // Create transport if the browser can provide an xhr\n
Action.c(5):     if ( xhrSupported ) {\n
Action.c(5):     \n
Action.c(5):     \tjQuery.ajaxTransport(function( options ) {\n
Action.c(5):     \t\t// Cross domain only allowed if supported through XMLHttpRequest\n
Action.c(5):     \t\tif ( !options.crossDomain || support.cors ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\tvar callback;\n
Action.c(5):     \n
Action.c(5):     \t\t\treturn {\n
Action.c(5):     \t\t\t\tsend: function( headers, complete ) {\n
Action.c(5):     \t\t\t\t\tvar i,\n
Action.c(5):     \t\t\t\t\t\txhr = options.xhr(),\n
Action.c(5):     \t\t\t\t\t\tid = ++xhrId;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Open the socket\n
Action.c(5):     \t\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.pa
Action.c(5):     ssword );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Apply custom fields if provided\n
Action.c(5):     \t\t\t\t\tif ( options.xhrFields ) {\n
Action.c(5):     \t\t\t\t\t\tfor ( i in options.xhrFields ) {\n
Action.c(5):     \t\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Override mime type if needed\n
Action.c(5):     \t\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n
Action.c(5):     \t\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// X-Requested-With header\n
Action.c(5):     \t\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n
Action.c(5):     \t\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n
Action.c(5):     \t\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n
Action.c(5):     \t\t\t\t\t// For same-domain requests, won't change header if already provided.\n
Action.c(5):     \t\t\t\t\tif ( !options.crossDomain && !headers["X-Requested-With"] ) {\n
Action.c(5):     \t\t\t\t\t\theaders["X-Requested-With"] = "XMLHttpRequest";\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Set headers\n
Action.c(5):     \t\t\t\t\tfor ( i in headers ) {\n
Action.c(5):     \t\t\t\t\t\t// Support: IE<9\n
Action.c(5):     \t\t\t\t\t\t// IE's ActiveXObject throws a 'Type Mismatch' exception when setting\n
Action.c(5):     \t\t\t\t\t\t// request header to a null-value.\n
Action.c(5):     \t\t\t\t\t\t//\n
Action.c(5):     \t\t\t\t\t\t// To keep consistent with other XHR implementations, cast the value\n
Action.c(5):     \t\t\t\t\t\t// to string and ignore `undefined`.\n
Action.c(5):     \t\t\t\t\t\tif ( headers[ i ] !== undefined ) {\n
Action.c(5):     \t\t\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] + "" );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Do send the request\n
Action.c(5):     \t\t\t\t\t// This may raise an exception which is actually\n
Action.c(5):     \t\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n
Action.c(5):     \t\t\t\t\txhr.send( ( options.hasContent && options.data ) || null );\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Listener\n
Action.c(5):     \t\t\t\t\tcallback = function( _, isAbort ) {\n
Action.c(5):     \t\t\t\t\t\tvar status, statusText, responses;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Was never called and is aborted or complete\n
Action.c(5):     \t\t\t\t\t\tif ( callback && ( isAbort || xhr.readyState === 4 ) ) {\n
Action.c(5):     \t\t\t\t\t\t\t// Clean up\n
Action.c(5):     \t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n
Action.c(5):     \t\t\t\t\t\t\tcallback = undefined;\n
Action.c(5):     \t\t\t\t\t\t\txhr.onreadystatechange = jQuery.noop;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t// Abort manually if needed\n
Action.c(5):     \t\t\t\t\t\t\tif ( isAbort ) {\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( xhr.readyState !== 4 ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\txhr.abort();\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t\t\tresponses = {};\n
Action.c(5):     \t\t\t\t\t\t\t\tstatus = xhr.status;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t// Support: IE<10\n
Action.c(5):     \t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n
Action.c(5):     \t\t\t\t\t\t\t\t// (#11426)\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( typeof xhr.responseText === "string" ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tresponses.text = xhr.responseText;\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t// Firefox throws an exception when accessing\n
Action.c(5):     \t\t\t\t\t\t\t\t// statusText for faulty cross-domain requests\n
Action.c(5):     \t\t\t\t\t\t\t\ttry {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tstatusText = xhr.statusText;\n
Action.c(5):     \t\t\t\t\t\t\t\t} catch( e ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\t// We normalize with Webkit giving an empty statusText\n
Action.c(5):     \t\t\t\t\t\t\t\t\tstatusText = "";\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t// Filter status for non standard behaviors\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t\t\t// If the request is local and we have data: assume a success\n
Action.c(5):     \t\t\t\t\t\t\t\t// (success with no data won't get notified, that's the best we\n
Action.c(5):     \t\t\t\t\t\t\t\t// can do given current implementations)\n
Action.c(5):     \t\t\t\t\t\t\t\tif ( !status && options.isLocal && !options.crossDomain ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tstatus = responses.text ? 200 : 404;\n
Action.c(5):     \t\t\t\t\t\t\t\t// IE - #1450: sometimes returns 1223 when it should be 204\n
Action.c(5):     \t\t\t\t\t\t\t\t} else if ( status === 1223 ) {\n
Action.c(5):     \t\t\t\t\t\t\t\t\tstatus = 204;\n
Action.c(5):     \t\t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Call complete if needed\n
Action.c(5):     \t\t\t\t\t\tif ( responses ) {\n
Action.c(5):     \t\t\t\t\t\t\tcomplete( status, statusText, responses, xhr.getAllResponseHeaders() );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t};\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( !options.async ) {\n
Action.c(5):     \t\t\t\t\t\t// if we're in sync mode we fire the callback\n
Action.c(5):     \t\t\t\t\t\tcallback();\n
Action.c(5):     \t\t\t\t\t} else if ( xhr.readyState === 4 ) {\n
Action.c(5):     \t\t\t\t\t\t// (IE6 & IE7) if it's in cache and has been\n
Action.c(5):     \t\t\t\t\t\t// retrieved directly we need to fire the callback\n
Action.c(5):     \t\t\t\t\t\tsetTimeout( callback );\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\t// Add to the list of active xhr callbacks\n
Action.c(5):     \t\t\t\t\t\txhr.onreadystatechange = xhrCallbacks[ id ] = callback;\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tabort: function() {\n
Action.c(5):     \t\t\t\t\tif ( callback ) {\n
Action.c(5):     \t\t\t\t\t\tcallback( undefined, true );\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t}\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     // Functions to create xhrs\n
Action.c(5):     function createStandardXHR() {\n
Action.c(5):     \ttry {\n
Action.c(5):     \t\treturn new window.XMLHttpRequest();\n
Action.c(5):     \t} catch( e ) {}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     function createActiveXHR() {\n
Action.c(5):     \ttry {\n
Action.c(5):     \t\treturn new window.ActiveXObject( "Microsoft.XMLHTTP" );\n
Action.c(5):     \t} catch( e ) {}\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Install script dataType\n
Action.c(5):     jQuery.ajaxSetup({\n
Action.c(5):     \taccepts: {\n
Action.c(5):     \t\tscript: "text/javascript, application/javascript, application/ecmascript, application/
Action.c(5):     x-ecmascript"\n
Action.c(5):     \t},\n
Action.c(5):     \tcontents: {\n
Action.c(5):     \t\tscript: /(?:java|ecma)script/\n
Action.c(5):     \t},\n
Action.c(5):     \tconverters: {\n
Action.c(5):     \t\t"text script": function( text ) {\n
Action.c(5):     \t\t\tjQuery.globalEval( text );\n
Action.c(5):     \t\t\treturn text;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Handle cache's special case and global\n
Action.c(5):     jQuery.ajaxPrefilter( "script", function( s ) {\n
Action.c(5):     \tif ( s.cache === undefined ) {\n
Action.c(5):     \t\ts.cache = false;\n
Action.c(5):     \t}\n
Action.c(5):     \tif ( s.crossDomain ) {\n
Action.c(5):     \t\ts.type = "GET";\n
Action.c(5):     \t\ts.global = false;\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Bind script tag hack transport\n
Action.c(5):     jQuery.ajaxTransport( "script", function(s) {\n
Action.c(5):     \n
Action.c(5):     \t// This transport only deals with cross domain requests\n
Action.c(5):     \tif ( s.crossDomain ) {\n
Action.c(5):     \n
Action.c(5):     \t\tvar script,\n
Action.c(5):     \t\t\thead = document.head || jQuery("head")[0] || document.documentElement;\n
Action.c(5):     \n
Action.c(5):     \t\treturn {\n
Action.c(5):     \n
Action.c(5):     \t\t\tsend: function( _, callback ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tscript = document.createElement("script");\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tscript.async = true;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tif ( s.scriptCharset ) {\n
Action.c(5):     \t\t\t\t\tscript.charset = s.scriptCharset;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\tscript.src = s.url;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Attach handlers for all browsers\n
Action.c(5):     \t\t\t\tscript.onload = script.onreadystatechange = function( _, isAbort ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\tif ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState 
Action.c(5):     ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Handle memory leak in IE\n
Action.c(5):     \t\t\t\t\t\tscript.onload = script.onreadystatechange = null;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Remove the script\n
Action.c(5):     \t\t\t\t\t\tif ( script.parentNode ) {\n
Action.c(5):     \t\t\t\t\t\t\tscript.parentNode.removeChild( script );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Dereference the script\n
Action.c(5):     \t\t\t\t\t\tscript = null;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t\t// Callback if not abort\n
Action.c(5):     \t\t\t\t\t\tif ( !isAbort ) {\n
Action.c(5):     \t\t\t\t\t\t\tcallback( 200, "success" );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t};\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending\n
Action.c(5):     \t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n
Action.c(5):     \t\t\t\thead.insertBefore( script, head.firstChild );\n
Action.c(5):     \t\t\t},\n
Action.c(5):     \n
Action.c(5):     \t\t\tabort: function() {\n
Action.c(5):     \t\t\t\tif ( script ) {\n
Action.c(5):     \t\t\t\t\tscript.onload( undefined, true );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t};\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var oldCallbacks = [],\n
Action.c(5):     \trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n
Action.c(5):     \n
Action.c(5):     // Default jsonp settings\n
Action.c(5):     jQuery.ajaxSetup({\n
Action.c(5):     \tjsonp: "callback",\n
Action.c(5):     \tjsonpCallback: function() {\n
Action.c(5):     \t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );\n
Action.c(5):     \t\tthis[ callback ] = true;\n
Action.c(5):     \t\treturn callback;\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Detect, normalize options and install callbacks for jsonp requests\n
Action.c(5):     jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {\n
Action.c(5):     \n
Action.c(5):     \tvar callbackName, overwritten, responseContainer,\n
Action.c(5):     \t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n
Action.c(5):     \t\t\t"url" :\n
Action.c(5):     \t\t\ttypeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-fo
Action.c(5):     rm-urlencoded") && rjsonp.test( s.data ) && "data"\n
Action.c(5):     \t\t);\n
Action.c(5):     \n
Action.c(5):     \t// Handle iff the expected data type is "jsonp" or we have a parameter to set\n
Action.c(5):     \tif ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// Get callback name, remembering preexisting value associated with it\n
Action.c(5):     \t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n
Action.c(5):     \t\t\ts.jsonpCallback() :\n
Action.c(5):     \t\t\ts.jsonpCallback;\n
Action.c(5):     \n
Action.c(5):     \t\t// Insert callback into url or form data\n
Action.c(5):     \t\tif ( jsonProp ) {\n
Action.c(5):     \t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );\n
Action.c(5):     \t\t} else if ( s.jsonp !== false ) {\n
Action.c(5):     \t\t\ts.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Use data converter to retrieve json after script execution\n
Action.c(5):     \t\ts.converters["script json"] = function() {\n
Action.c(5):     \t\t\tif ( !responseContainer ) {\n
Action.c(5):     \t\t\t\tjQuery.error( callbackName + " was not called" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn responseContainer[ 0 ];\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t\t// force json dataType\n
Action.c(5):     \t\ts.dataTypes[ 0 ] = "json";\n
Action.c(5):     \n
Action.c(5):     \t\t// Install callback\n
Action.c(5):     \t\toverwritten = window[ callbackName ];\n
Action.c(5):     \t\twindow[ callbackName ] = function() {\n
Action.c(5):     \t\t\tresponseContainer = arguments;\n
Action.c(5):     \t\t};\n
Action.c(5):     \n
Action.c(5):     \t\t// Clean-up function (fires after converters)\n
Action.c(5):     \t\tjqXHR.always(function() {\n
Action.c(5):     \t\t\t// Restore preexisting value\n
Action.c(5):     \t\t\twindow[ callbackName ] = overwritten;\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Save back as free\n
Action.c(5):     \t\t\tif ( s[ callbackName ] ) {\n
Action.c(5):     \t\t\t\t// make sure that re-using the options doesn't screw things around\n
Action.c(5):     \t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// save the callback name for future use\n
Action.c(5):     \t\t\t\toldCallbacks.push( callbackName );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Call if it was a function and we have a response\n
Action.c(5):     \t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n
Action.c(5):     \t\t\t\toverwritten( responseContainer[ 0 ] );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tresponseContainer = overwritten = undefined;\n
Action.c(5):     \t\t});\n
Action.c(5):     \n
Action.c(5):     \t\t// Delegate to script\n
Action.c(5):     \t\treturn "script";\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // data: string of html\n
Action.c(5):     // context (optional): If specified, the fragment will be created in this context, default
Action.c(5):     s to document\n
Action.c(5):     // keepScripts (optional): If true, will include scripts passed in the html string\n
Action.c(5):     jQuery.parseHTML = function( data, context, keepScripts ) {\n
Action.c(5):     \tif ( !data || typeof data !== "string" ) {\n
Action.c(5):     \t\treturn null;\n
Action.c(5):     \t}\n
Action.c(5):     \tif ( typeof context === "boolean" ) {\n
Action.c(5):     \t\tkeepScripts = context;\n
Action.c(5):     \t\tcontext = false;\n
Action.c(5):     \t}\n
Action.c(5):     \tcontext = context || document;\n
Action.c(5):     \n
Action.c(5):     \tvar parsed = rsingleTag.exec( data ),\n
Action.c(5):     \t\tscripts = !keepScripts && [];\n
Action.c(5):     \n
Action.c(5):     \t// Single tag\n
Action.c(5):     \tif ( parsed ) {\n
Action.c(5):     \t\treturn [ context.createElement( parsed[1] ) ];\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tparsed = jQuery.buildFragment( [ data ], context, scripts );\n
Action.c(5):     \n
Action.c(5):     \tif ( scripts && scripts.length ) {\n
Action.c(5):     \t\tjQuery( scripts ).remove();\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn jQuery.merge( [], parsed.childNodes );\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Keep a copy of the old load method\n
Action.c(5):     var _load = jQuery.fn.load;\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Load a url into a page\n
Action.c(5):      */\n
Action.c(5):     jQuery.fn.load = function( url, params, callback ) {\n
Action.c(5):     \tif ( typeof url !== "string" && _load ) {\n
Action.c(5):     \t\treturn _load.apply( this, arguments );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tvar selector, response, type,\n
Action.c(5):     \t\tself = this,\n
Action.c(5):     \t\toff = url.indexOf(" ");\n
Action.c(5):     \n
Action.c(5):     \tif ( off >= 0 ) {\n
Action.c(5):     \t\tselector = url.slice( off, url.length );\n
Action.c(5):     \t\turl = url.slice( 0, off );\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// If it's a function\n
Action.c(5):     \tif ( jQuery.isFunction( params ) ) {\n
Action.c(5):     \n
Action.c(5):     \t\t// We assume that it's the callback\n
Action.c(5):     \t\tcallback = params;\n
Action.c(5):     \t\tparams = undefined;\n
Action.c(5):     \n
Action.c(5):     \t// Otherwise, build a param string\n
Action.c(5):     \t} else if ( params && typeof params === "object" ) {\n
Action.c(5):     \t\ttype = "POST";\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \t// If we have elements to modify, make the request\n
Action.c(5):     \tif ( self.length > 0 ) {\n
Action.c(5):     \t\tjQuery.ajax({\n
Action.c(5):     \t\t\turl: url,\n
Action.c(5):     \n
Action.c(5):     \t\t\t// if "type" variable is undefined, then "GET" method will be used\n
Action.c(5):     \t\t\ttype: type,\n
Action.c(5):     \t\t\tdataType: "html",\n
Action.c(5):     \t\t\tdata: params\n
Action.c(5):     \t\t}).done(function( responseText ) {\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Save resp
Action.c(5): t=214056ms: 9357-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/jquery-1.11.0.js" (RelFrameId=, Internal ID=255)
Action.c(5):     onse for use in complete callback\n
Action.c(135): Notify: Transaction "User_login" ended with a "Stop" status (Duration: 0.4592 Wasted Time: 0.0001).	[MsgId: MMSG-16871]
Action.c(5):     \t\t\tresponse = arguments;\n
Action.c(5):     \n
Action was aborted.	[MsgId: MMSG-10694]
Action was aborted.	[MsgId: MMSG-10694]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Abort was called from an action.	[MsgId: MMSG-10447]
Starting action vuser_end.	[MsgId: MMSG-15919]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending Vuser...	[MsgId: MMSG-15966]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Starting action vuser_end.	[MsgId: MMSG-15919]
Action.c(5):     \t\t\tself.html( selector ?\n
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(5):     \n
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(5):     \t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(5):     \t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n
Action.c(5):     \t\t\t\tjQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n
Action.c(5):     \n
Ending action vuser_end.	[MsgId: MMSG-15918]
Abort was called from an action.	[MsgId: MMSG-10447]
Abort was called from an action.	[MsgId: MMSG-10447]
Action was aborted.	[MsgId: MMSG-10694]
Abort was called from an action.	[MsgId: MMSG-10447]
Vuser Terminated.	[MsgId: MMSG-15963]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Ending Vuser...	[MsgId: MMSG-15966]
Ending Vuser...	[MsgId: MMSG-15966]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Starting action vuser_end.	[MsgId: MMSG-15919]
Starting action vuser_end.	[MsgId: MMSG-15919]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Ending action vuser_end.	[MsgId: MMSG-15918]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Vuser Terminated.	[MsgId: MMSG-15963]
Vuser Terminated.	[MsgId: MMSG-15963]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending action vuser_end.	[MsgId: MMSG-15918]
Ending Vuser...	[MsgId: MMSG-15966]
Abort was called from an action.	[MsgId: MMSG-10447]
Starting action vuser_end.	[MsgId: MMSG-15919]
Vuser Terminated.	[MsgId: MMSG-15963]
Ending action vuser_end.	[MsgId: MMSG-15918]
Ending Vuser...	[MsgId: MMSG-15966]
Vuser Terminated.	[MsgId: MMSG-15963]
Starting action vuser_end.	[MsgId: MMSG-15919]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending action vuser_end.	[MsgId: MMSG-15918]
Ending Vuser...	[MsgId: MMSG-15966]
Vuser Terminated.	[MsgId: MMSG-15963]
Abort was called from an action.	[MsgId: MMSG-10447]
Starting action vuser_end.	[MsgId: MMSG-15919]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Ending action vuser_end.	[MsgId: MMSG-15918]
Starting action vuser_end.	[MsgId: MMSG-15919]
Vuser Terminated.	[MsgId: MMSG-15963]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending Vuser...	[MsgId: MMSG-15966]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Ending action vuser_end.	[MsgId: MMSG-15918]
Starting action vuser_end.	[MsgId: MMSG-15919]
Vuser Terminated.	[MsgId: MMSG-15963]
Abort was called from an action.	[MsgId: MMSG-10447]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(5):     \t\t\t\t// Otherwise use the full result\n
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(135): Continuing after Error -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 0789CCE0  	[MsgId: MERR-27496]
Vuser 13 (thread 27580), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\t\t\tresponseText );\n
Vuser 10 (thread 37220), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \n
Action.c(5):     \t\t}).complete( callback && function( jqXHR, status ) {\n
Action.c(5):     \t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn this;\n
Action.c(5):     };\n
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 079C0A58  	[MsgId: MWAR-27496]
Action.c(5):     \n
Action.c(5):     \n
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 0789D208  	[MsgId: MWAR-27496]
Action.c(5):     \n
Action.c(5):     \n
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 07952FF0  	[MsgId: MWAR-27496]
Action.c(5):     jQuery.expr.filters.animated = function( elem ) {\n
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 07952D88  	[MsgId: MWAR-27496]
Action.c(5):     \treturn jQuery.grep(jQuery.timers, function( fn ) {\n
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 07928DD8  	[MsgId: MWAR-27496]
Action.c(5):     \t\treturn elem === fn.elem;\n
Action.c(5):     \t}).length;\n
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 08D22918  	[MsgId: MWAR-27496]
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var docElem = window.document.documentElement;\n
Action.c(5):     \n
Action.c(5):     /**\n
Action.c(5):      * Gets a window from an element\n
Action.c(5):      */\n
Action.c(5):     function getWindow( elem ) {\n
Action.c(5):     \treturn jQuery.isWindow( elem ) ?\n
Action.c(5):     \t\telem :\n
Action.c(5):     \t\telem.nodeType === 9 ?\n
Action.c(5):     \t\t\telem.defaultView || elem.parentWindow :\n
Action.c(5):     \t\t\tfalse;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     jQuery.offset = {\n
Action.c(5):     \tsetOffset: function( elem, options, i ) {\n
Action.c(5):     \t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
Action.c(5):     \n
Action.c(5):     \t\t\tposition = jQuery.css( elem, "position" ),\n
Action.c(5):     \t\t\tcurElem = jQuery( elem ),\n
Action.c(5):     \t\t\tprops = {};\n
Action.c(5):     \n
Action.c(5):     \t\t// set position first, in-case top/left are set even on static elem\n
Action.c(5):     \t\tif ( position === "static" ) {\n
Action.c(5):     \t\t\telem.style.position = "relative";\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tcurOffset = curElem.offset();\n
Action.c(5):     \t\tcurCSSTop = jQuery.css( elem, "top" );\n
Action.c(5):     \t\tcurCSSLeft = jQuery.css( elem, "left" );\n
Action.c(5):     \t\tcalculatePosition = ( position === "absolute" || position === "fixed" ) &&\n
Vuser 19 (thread 45728), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\t\tjQuery.inArray("auto", [ curCSSTop, curCSSLeft ] ) > -1;\n
Action.c(5):     \n
Action.c(5):     \t\t// need to be able to calculate position if either top or left is auto and position is
Action.c(5):      either absolute or fixed\n
Action.c(5):     \t\tif ( calculatePosition ) {\n
Action.c(5):     \t\t\tcurPosition = curElem.position();\n
Action.c(5):     \t\t\tcurTop = curPosition.top;\n
Vuser 14 (thread 47268), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\t\tcurLeft = curPosition.left;\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n
Action.c(5):     \t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( jQuery.isFunction( options ) ) {\n
Action.c(5):     \t\t\toptions = options.call( elem, i, curOffset );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( options.top != null ) {\n
Action.c(5):     \t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\tif ( options.left != null ) {\n
Action.c(5):     \t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tif ( "using" in options ) {\n
Action.c(5):     \t\t\toptions.using.call( elem, props );\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\tcurElem.css( props );\n
Action.c(5):     \t\t}\n
Action.c(5):     \t}\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.extend({\n
Action.c(5):     \toffset: function( options ) {\n
Action.c(5):     \t\tif ( arguments.length ) {\n
Action.c(5):     \t\t\treturn options === undefined ?\n
Action.c(5):     \t\t\t\tthis :\n
Action.c(5):     \t\t\t\tthis.each(function( i ) {\n
Action.c(5):     \t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n
Action.c(5):     \t\t\t\t});\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tvar docElem, win,\n
Action.c(5):     \t\t\tbox = { top: 0, left: 0 },\n
Action.c(5):     \t\t\telem = this[ 0 ],\n
Action.c(5):     \t\t\tdoc = elem && elem.ownerDocument;\n
Action.c(5):     \n
Action.c(5):     \t\tif ( !doc ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tdocElem = doc.documentElement;\n
Action.c(5):     \n
Action.c(5):     \t\t// Make sure it's not a disconnected DOM node\n
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/app/common/controls/puma-delete-button/puma-delete-button.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 079C0A58, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Vuser 8 (thread 26384), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\tif ( !jQuery.contains( docElem, elem ) ) {\n
Action.c(5):     \t\t\treturn box;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// If we don't have gBCR, just use 0,0 rather than error\n
Action.c(5):     \t\t// BlackBerry 5, iOS 3 (original iPhone)\n
Action.c(5):     \t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n
Action.c(5):     \t\t\tbox = elem.getBoundingClientRect();\n
Action.c(5):     \t\t}\n
Action.c(5):     \t\twin = getWindow( doc );\n
Vuser 11 (thread 38848), ended OK."	[MsgId: MMSG-10695]
Vuser 1 (thread 22536), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\treturn {\n
Action.c(5):     \t\t\ttop: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 
Action.c(5):     0 ),\n
Action.c(5):     \t\t\tleft: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft ||
Action.c(5):      0 )\n
Action.c(5):     \t\t};\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \tposition: function() {\n
Action.c(5):     \t\tif ( !this[ 0 ] ) {\n
Action.c(5):     \t\t\treturn;\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\tvar offsetParent, offset,\n
Action.c(5):     \t\t\tparentOffset = { top: 0, left: 0 },\n
Action.c(5):     \t\t\telem = this[ 0 ];\n
Action.c(5):     \n
Action.c(5):     \t\t// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it 
Action.c(5):     is its only offset parent\n
Action.c(5):     \t\tif ( jQuery.css( elem, "position" ) === "fixed" ) {\n
Action.c(5):     \t\t\t// we assume that getBoundingClientRect is available when computed position is fixed
Action.c(5):     \n
Action.c(5):     \t\t\toffset = elem.getBoundingClientRect();\n
Action.c(5):     \t\t} else {\n
Action.c(5):     \t\t\t// Get *real* offsetParent\n
Action.c(5):     \t\t\toffsetParent = this.offsetParent();\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Get correct offsets\n
Action.c(5):     \t\t\toffset = this.offset();\n
Action.c(5):     \t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {\n
Action.c(5):     \t\t\t\tparentOffset = offsetParent.offset();\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t// Add offsetParent borders\n
Action.c(5):     \t\t\tparentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );\n
Action.c(5):     \t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );\n
Action.c(5):     \t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t// Subtract parent offsets and element margins\n
Action.c(5):     \t\t// note: when an element has margin: auto the offsetLeft and marginLeft\n
Action.c(5):     \t\t// are the same in Safari causing offset.left to incorrectly be 0\n
Action.c(5):     \t\treturn {\n
Action.c(5):     \t\t\ttop:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),\n
Action.c(5):     \t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)\n
Action.c(5):     \t\t};\n
Action.c(5):     \t},\n
Action.c(5):     \n
Action.c(5):     \toffsetParent: function() {\n
Action.c(5):     \t\treturn this.map(function() {\n
Action.c(5):     \t\t\tvar offsetParent = this.offsetParent || docElem;\n
Action.c(5):     \n
Action.c(5):     \t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( of
Action.c(5):     fsetParent, "position" ) === "static" ) ) {\n
Action.c(5):     \t\t\t\toffsetParent = offsetParent.offsetParent;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn offsetParent || docElem;\n
Action.c(5):     \t\t});\n
Action.c(5):     \t}\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Create scrollLeft and scrollTop methods\n
Action.c(5):     jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, pr
Action.c(5):     op ) {\n
Action.c(5):     \tvar top = /Y/.test( prop );\n
Action.c(5):     \n
Action.c(5):     \tjQuery.fn[ method ] = function( val ) {\n
Action.c(5):     \t\treturn access( this, function( elem, method, val ) {\n
Action.c(5):     \t\t\tvar win = getWindow( elem );\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( val === undefined ) {\n
Action.c(5):     \t\t\t\treturn win ? (prop in win) ? win[ prop ] :\n
Action.c(5):     \t\t\t\t\twin.document.documentElement[ method ] :\n
Action.c(5):     \t\t\t\t\telem[ method ];\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tif ( win ) {\n
Action.c(5):     \t\t\t\twin.scrollTo(\n
Action.c(5):     \t\t\t\t\t!top ? val : jQuery( win ).scrollLeft(),\n
Action.c(5):     \t\t\t\t\ttop ? val : jQuery( win ).scrollTop()\n
Action.c(5):     \t\t\t\t);\n
Action.c(5):     \n
Action.c(5):     \t\t\t} else {\n
Action.c(5):     \t\t\t\telem[ method ] = val;\n
Vuser 16 (thread 27916), ended OK."	[MsgId: MMSG-10695]
Vuser 7 (thread 40416), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}, method, val, arguments.length, null );\n
Action.c(5):     \t};\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     // Add the top/left cssHooks using jQuery.fn.position\n
Action.c(5):     // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n
Action.c(5):     // getComputedStyle returns percent when specified for top/left/bottom/right\n
Action.c(5):     // rather than make the css module depend on the offset module, we just check for it here\n
Action.c(5):     jQuery.each( [ "top", "left" ], function( i, prop ) {\n
Action.c(5):     \tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n
Action.c(5):     \t\tfunction( elem, computed ) {\n
Action.c(5):     \t\t\tif ( computed ) {\n
Action.c(5):     \t\t\t\tcomputed = curCSS( elem, prop );\n
Action.c(5):     \t\t\t\t// if curCSS returns percentage, fallback to offset\n
Action.c(5):     \t\t\t\treturn rnumnonpx.test( computed ) ?\n
Action.c(5):     \t\t\t\t\tjQuery( elem ).position()[ prop ] + "px" :\n
Action.c(5):     \t\t\t\t\tcomputed;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t}\n
Action.c(5):     \t);\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n
Action.c(5):     jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {\n
Action.c(5):     \tjQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( d
Action.c(5):     efaultExtra, funcName ) {\n
Vuser 15 (thread 43052), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\t// margin is only for outerHeight, outerWidth\n
Vuser 18 (thread 34708), ended OK."	[MsgId: MMSG-10695]
Vuser 12 (thread 38128), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\tjQuery.fn[ funcName ] = function( margin, value ) {\n
Action.c(5):     \t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
Action.c(5):     \n
Vuser 9 (thread 41760), ended OK."	[MsgId: MMSG-10695]
Vuser 17 (thread 2484), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \t\t\t\textra = defaultExtra || ( margin === true || value === true ? "margin" : "border" 
Action.c(5):     );\n
Vuser 5 (thread 45060), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \n
Action.c(5):     \t\t\treturn access( this, function( elem, type, value ) {\n
Action.c(5):     \t\t\t\tvar doc;\n
Action.c(5):     \n
Action.c(135): Continuing after Error -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/workarea"  	[MsgId: MERR-27492]
Action.c(5):     \t\t\t\tif ( jQuery.isWindow( elem ) ) {\n
Action.c(5):     \t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n
Action.c(5):     \t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n
Action.c(5):     \t\t\t\t\treturn elem.document.documentElement[ "client" + name ];\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t// Get document width or height\n
Action.c(5):     \t\t\t\tif ( elem.nodeType === 9 ) {\n
Action.c(5):     \t\t\t\t\tdoc = elem.documentElement;\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], 
Action.c(5):     whichever is greatest\n
Action.c(5):     \t\t\t\t\t// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no
Action.c(5):      good, small way to fix it.\n
Action.c(5):     \t\t\t\t\treturn Math.max(\n
Action.c(5):     \t\t\t\t\t\telem.body[ "scroll" + name ], doc[ "scroll" + name ],\n
Action.c(5):     \t\t\t\t\t\telem.body[ "offset" + name ], doc[ "offset" + name ],\n
Action.c(5):     \t\t\t\t\t\tdoc[ "client" + name ]\n
Action.c(5):     \t\t\t\t\t);\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\t\treturn value === undefined ?\n
Action.c(5):     \t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n
Action.c(5):     \t\t\t\t\tjQuery.css( elem, type, extra ) :\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t\t// Set width or height on the element\n
Action.c(5):     \t\t\t\t\tjQuery.style( elem, type, value, extra );\n
Action.c(5):     \t\t\t}, type, chainable ? margin : undefined, chainable, null );\n
Action.c(5):     \t\t};\n
Action.c(5):     \t});\n
Action.c(5):     });\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // The number of elements contained in the matched element set\n
Action.c(5):     jQuery.fn.size = function() {\n
Action.c(5):     \treturn this.length;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     jQuery.fn.andSelf = jQuery.fn.addBack;\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     // Register as a named AMD module, since jQuery can be concatenated with other\n
Action.c(5):     // files that may use define, but not via a proper concatenation script that\n
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/app/common/controls/puma-multi-select/puma-multi-select.js"  	[MsgId: MWAR-27492]
Action.c(5):     // understands anonymous AMD modules. A named AMD is safest and most robust\n
Action.c(5):     // way to register. Lowercase jquery is used because AMD module names are\n
Action.c(5):     // derived from file names, and jQuery is normally delivered in a lowercase\n
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 0789D208, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5):     // file name. Do this after creating the global so that if an AMD module wants\n
Action.c(5):     // to call noConflict to hide this version of jQuery, it will work.\n
Action.c(5):     if ( typeof define === "function" && define.amd ) {\n
Action.c(5):     \tdefine( "jquery", [], function() {\n
Action.c(5):     \t\treturn jQuery;\n
Action.c(5):     \t});\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     var\n
Action.c(5):     \t// Map over jQuery in case of overwrite\n
Action.c(5):     \t_jQuery = window.jQuery,\n
Action.c(5):     \n
Action.c(5):     \t// Map over the $ in case of overwrite\n
Action.c(5):     \t_$ = window.$;\n
Action.c(5):     \n
Action.c(5):     jQuery.noConflict = function( deep ) {\n
Action.c(5):     \tif ( window.$ === jQuery ) {\n
Action.c(5):     \t\twindow.$ = _$;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \tif ( deep && window.jQuery === jQuery ) {\n
Action.c(5):     \t\twindow.jQuery = _jQuery;\n
Action.c(5):     \t}\n
Action.c(5):     \n
Action.c(5):     \treturn jQuery;\n
Action.c(5):     };\n
Action.c(5):     \n
Action.c(5):     // Expose jQuery and $ identifiers, even in\n
Action.c(5):     // AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n
Action.c(5):     // and CommonJS for browser emulators (#13566)\n
Action.c(5):     if ( typeof noGlobal === strundefined ) {\n
Action.c(5):     \twindow.jQuery = window.$ = jQuery;\n
Action.c(5):     }\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     return jQuery;\n
Action.c(5):     \n
Action.c(5):     }));\n
Action.c(5): t=214091ms: 307-byte response headers for "http://10.184.129.208/Platform/Scripts/respond.js" (RelFrameId=, Internal ID=260)
Action.c(5):     HTTP/1.1 200 OK\r\n
Action.c(5):     Content-Type: application/javascript\r\n
Action.c(5):     Content-Encoding: gzip\r\n
Action.c(5):     Last-Modified: Thu, 07 Dec 2017 07:34:38 GMT\r\n
Action.c(5):     Accept-Ranges: bytes\r\n
Action.c(5):     ETag: "03b18d62d6fd31:0"\r\n
Action.c(5):     Vary: Accept-Encoding\r\n
Action.c(5):     Server: Microsoft-IIS/8.5\r\n
Action.c(5):     X-Powered-By: ASP.NET\r\n
Action.c(5):     Date: Mon, 11 Dec 2017 03:06:08 GMT\r\n
Action.c(5):     Content-Length: 4164\r\n
Action.c(5):     \r\n
Action.c(5): t=214091ms: 4164-byte ENCODED response body received for "http://10.184.129.208/Platform/Scripts/respond.js" (RelFrameId=, Internal ID=260)
Action.c(5): t=214091ms: 10318-byte DECODED response body for "http://10.184.129.208/Platform/Scripts/respond.js" (RelFrameId=, Internal ID=260)
Action.c(5):     /* NUGET: BEGIN LICENSE TEXT\n
Action.c(5):      *\n
Action.c(5):      * Microsoft grants you the right to use these script files for the sole\n
Action.c(5):      * purpose of either: (i) interacting through your browser with the Microsoft\n
Action.c(5):      * website or online service, subject to the applicable licensing or use\n
Action.c(5):      * terms; or (ii) using the files as included with a Microsoft product subject\n
Action.c(5):      * to that product's license terms. Microsoft reserves all other rights to the\n
Action.c(5):      * files not expressly granted by Microsoft, whether by implication, estoppel\n
Action.c(5):      * or otherwise. Insofar as a script file is dual licensed under GPL,\n
Action.c(5):      * Microsoft neither took the code under GPL nor distributes it thereunder but\n
Action.c(5):      * under the terms set out in this paragraph. All notices and licenses\n
Action.c(5):      * below are for informational purposes only.\n
Action.c(5):      *\n
Action.c(5):      * NUGET: END LICENSE TEXT */\n
Action.c(5):     /*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 201
Action.c(5):     2: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\n
Action.c(5):     /*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherw
Action.c(5):     ise, you don't need this part */\n
Action.c(5):     window.matchMedia = window.matchMedia || (function(doc, undefined){\n
Action.c(5):       \n
Action.c(5):       var bool,\n
Action.c(5):           docElem  = doc.documentElement,\n
Action.c(5):           refNode  = docElem.firstElementChild || docElem.firstChild,\n
Action.c(5):           // fakeBody required for <FF4 when executed in <head>\n
Action.c(5):           fakeBody = doc.createElement('body'),\n
Action.c(5):           div      = doc.createElement('div');\n
Action.c(5):       \n
Action.c(5):       div.id = 'mq-test-1';\n
Action.c(5):       div.style.cssText = "position:absolute;top:-100em";\n
Action.c(5):       fakeBody.style.background = "none";\n
Action.c(5):       fakeBody.appendChild(div);\n
Action.c(5):       \n
Action.c(5):       return function(q){\n
Action.c(5):         \n
Action.c(5):         div.innerHTML = '&shy;<style media="'+q+'"> #mq-test-1 { width: 42px; }</style>';\n
Action.c(5):         \n
Action.c(5):         docElem.insertBefore(fakeBody, refNode);\n
Action.c(5):         bool = div.offsetWidth == 42;  \n
Action.c(5):         docElem.removeChild(fakeBody);\n
Action.c(5):         \n
Action.c(5):         return { matches: bool, media: q };\n
Action.c(5):       };\n
Action.c(5):       \n
Action.c(5):     })(document);\n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     \n
Action.c(5):     /*! Respond.js v1.2.0: min/max-width media query polyfill. (c) Scott Jehl. MIT/GPLv2 Lic. 
Action.c(5):     j.mp/respondjs  */\n
Action.c(5):     (function( win ){\n
Action.c(5):     \t//exposed namespace\n
Action.c(5):     \twin.respond\t\t= {};\n
Action.c(5):     \t\n
Action.c(5):     \t//define update even in native-mq-supporting browsers, to avoid errors\n
Action.c(5):     \trespond.update\t= function(){};\n
Action.c(5):     \t\n
Action.c(5):     \t//expose media query support flag for external use\n
Action.c(5):     \trespond.mediaQueriesSupported\t= win.matchMedia && win.matchMedia( "only all" ).matches;
Action.c(5):     \n
Action.c(5):     \t\n
Action.c(5):     \t//if media queries are supported, exit here\n
Vuser 4 (thread 30608), ended OK."	[MsgId: MMSG-10695]
Action.c(5):     \tif( respond.mediaQueriesSupported ){ return; }\n
Action.c(5):     \t\n
Action.c(5):     \t//define vars\n
Action.c(5):     \tvar doc \t\t\t= win.document,\n
Action.c(5):     \t\tdocElem \t\t= doc.documentElement,\n
Action.c(5):     \t\tmediastyles\t\t= [],\n
Action.c(5):     \t\trules\t\t\t= [],\n
Action.c(5):     \t\tappendedEls \t= [],\n
Action.c(5):     \t\tparsedSheets \t= {},\n
Action.c(5):     \t\tresizeThrottle\t= 30,\n
Action.c(5):     \t\thead \t\t\t= doc.getElementsByTagName( "head" )[0] || docElem,\n
Action.c(5):     \t\tbase\t\t\t= doc.getElementsByTagName( "base" )[0],\n
Action.c(5):     \t\tlinks\t\t\t= head.getElementsByTagName( "link" ),\n
Action.c(5):     \t\trequestQueue\t= [],\n
Action.c(5):     \t\t\n
Action.c(5):     \t\t//loop stylesheets, send text content to translate\n
Action.c(5):     \t\tripCSS\t\t\t= function(){\n
Action.c(5):     \t\t\tvar sheets \t= links,\n
Action.c(5):     \t\t\t\tsl \t\t= sheets.length,\n
Action.c(5):     \t\t\t\ti\t\t= 0,\n
Action.c(5):     \t\t\t\t//vars for loop:\n
Action.c(5):     \t\t\t\tsheet, href, media, isCSS;\n
Action.c(5):     \n
Action.c(5):     \t\t\tfor( ; i < sl; i++ ){\n
Action.c(5):     \t\t\t\tsheet\t= sheets[ i ],\n
Action.c(5):     \t\t\t\thref\t= sheet.href,\n
Action.c(5):     \t\t\t\tmedia\t= sheet.media,\n
Action.c(5):     \t\t\t\tisCSS\t= sheet.rel && sheet.rel.toLowerCase() === "stylesheet";\n
Action.c(5):     \n
Action.c(5):     \t\t\t\t//only links plz and prevent re-parsing\n
Action.c(5):     \t\t\t\tif( !!href && isCSS && !parsedSheets[ href ] ){\n
Action.c(5):     \t\t\t\t\t// selectivizr exposes css through the rawCssText expando\n
Action.c(5):     \t\t\t\t\tif (sheet.styleSheet && sheet.styleSheet.rawCssText) {\n
Action.c(5):     \t\t\t\t\t\ttranslate( sheet.styleSheet.rawCssText, href, media );\n
Action.c(5):     \t\t\t\t\t\tparsedSheets[ href ] = true;\n
Action.c(5):     \t\t\t\t\t} else {\n
Action.c(5):     \t\t\t\t\t\tif( (!/^([a-zA-Z:]*\\/\\/)/.test( href ) && !base)\n
Action.c(5):     \t\t\t\t\t\t\t|| href.replace( RegExp.$1, "" ).split( "/" )[0] === win.location.host ){\n
Action.c(5):     \t\t\t\t\t\t\trequestQueue.push( {\n
Action.c(5):     \t\t\t\t\t\t\t\thref: href,\n
Action.c(5):     \t\t\t\t\t\t\t\tmedia: media\n
Action.c(5):     \t\t\t\t\t\t\t} );\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t}\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tmakeRequests();\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\n
Action.c(5):     \t\t//recurse through request queue, get css text\n
Action.c(5):     \t\tmakeRequests\t= function(){\n
Action.c(5):     \t\t\tif( requestQueue.length ){\n
Action.c(5):     \t\t\t\tvar thisRequest = requestQueue.shift();\n
Action.c(5):     \t\t\t\t\n
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 0789CCE0, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5):     \t\t\t\tajax( thisRequest.href, function( styles ){\n
Action.c(5):     \t\t\t\t\ttranslate( styles, thisRequest.href, thisRequest.media );\n
Action.c(5):     \t\t\t\t\tparsedSheets[ thisRequest.href ] = true;\n
Action.c(5):     \t\t\t\t\tmakeRequests();\n
Action.c(5):     \t\t\t\t} );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\n
Action.c(5):     \t\t//find media blocks in css text, convert to style blocks\n
Action.c(5):     \t\ttranslate\t\t\t= function( styles, href, media ){\n
Action.c(5):     \t\t\tvar qs\t\t\t= styles.match(  /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi ),\n
Action.c(5):     \t\t\t\tql\t\t\t= qs && qs.length || 0,\n
Action.c(5):     \t\t\t\t//try to get CSS path\n
Action.c(5):     \t\t\t\thref\t\t= href.substring( 0, href.lastIndexOf( "/" )),\n
Action.c(5):     \t\t\t\trepUrls\t\t= function( css ){\n
Action.c(5):     \t\t\t\t\treturn css.replace( /(url\\()['"]?([^\\/\\)'"][^:\\)'"]+)['"]?(\\))/g, "$1" + hr
Action.c(5):     ef + "$2$3" );\n
Action.c(5):     \t\t\t\t},\n
Action.c(5):     \t\t\t\tuseMedia\t= !ql && media,\n
Action.c(5):     \t\t\t\t//vars used in loop\n
Action.c(5):     \t\t\t\ti\t\t\t= 0,\n
Action.c(5):     \t\t\t\tj, fullq, thisq, eachq, eql;\n
Action.c(5):     \n
Action.c(5):     \t\t\t//if path exists, tack on trailing slash\n
Action.c(5):     \t\t\tif( href.length ){ href += "/"; }\t\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t//if no internal queries exist, but media attr does, use that\t\n
Action.c(5):     \t\t\t//note: this currently lacks support for situations where a media attr is specified 
Action.c(5):     on a link AND\n
Action.c(5):     \t\t\t\t//its associated stylesheet has internal CSS media queries.\n
Action.c(5):     \t\t\t\t//In those cases, the media attribute will currently be ignored.\n
Action.c(5):     \t\t\tif( useMedia ){\n
Action.c(5):     \t\t\t\tql = 1;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\n
Action.c(5):     \n
Action.c(5):     \t\t\tfor( ; i < ql; i++ ){\n
Action.c(5):     \t\t\t\tj\t= 0;\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t\t//media attr\n
Action.c(5):     \t\t\t\tif( useMedia ){\n
Action.c(5):     \t\t\t\t\tfullq = media;\n
Action.c(5):     \t\t\t\t\trules.push( repUrls( styles ) );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t//parse for styles\n
Action.c(5):     \t\t\t\telse{\n
Action.c(5):     \t\t\t\t\tfullq\t= qs[ i ].match( /@media *([^\\{]+)\\{([\\S\\s]+?)$/ ) && RegExp.$1;\n
Action.c(5):     \t\t\t\t\trules.push( RegExp.$2 && repUrls( RegExp.$2 ) );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t\teachq\t= fullq.split( "," );\n
Action.c(5):     \t\t\t\teql\t\t= eachq.length;\n
Action.c(5):     \t\t\t\t\t\n
Action.c(5):     \t\t\t\tfor( ; j < eql; j++ ){\n
Action.c(5):     \t\t\t\t\tthisq\t= eachq[ j ];\n
Action.c(5):     \t\t\t\t\tmediastyles.push( { \n
Action.c(5):     \t\t\t\t\t\tmedia\t: thisq.split( "(" )[ 0 ].match( /(only\\s+)?([a-zA-Z]+)\\s?/ ) && RegE
Action.c(5):     xp.$2 || "all",\n
Action.c(5):     \t\t\t\t\t\trules\t: rules.length - 1,\n
Action.c(5):     \t\t\t\t\t\thasquery: thisq.indexOf("(") > -1,\n
Action.c(5):     \t\t\t\t\t\tminw\t: thisq.match( /\\(min\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/ 
Action.c(5):     ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || "" ), \n
Action.c(5):     \t\t\t\t\t\tmaxw\t: thisq.match( /\\(max\\-width:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/ 
Action.c(5):     ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || "" )\n
Action.c(5):     \t\t\t\t\t} );\n
Action.c(5):     \t\t\t\t}\t\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \n
Action.c(5):     \t\t\tapplyMedia();\n
Action.c(5):     \t\t},\n
Action.c(5):             \t\n
Action.c(5):     \t\tlastCall,\n
Action.c(5):     \t\t\n
Action.c(5):     \t\tresizeDefer,\n
Action.c(5):     \t\t\n
Action.c(5):     \t\t// returns the value of 1em in pixels\n
Action.c(5):     \t\tgetEmValue\t\t= function() {\n
Action.c(5):     \t\t\tvar ret,\n
Action.c(5):     \t\t\t\tdiv = doc.createElement('div'),\n
Action.c(5):     \t\t\t\tbody = doc.body,\n
Action.c(5):     \t\t\t\tfakeUsed = false;\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\n
Action.c(5):     \t\t\tdiv.style.cssText = "position:absolute;font-size:1em;width:1em";\n
Action.c(5):     \t\t\t\t\t\n
Action.c(5):     \t\t\tif( !body ){\n
Action.c(5):     \t\t\t\tbody = fakeUsed = doc.createElement( "body" );\n
Action.c(5):     \t\t\t\tbody.style.background = "none";\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\t\n
Action.c(5):     \t\t\tbody.appendChild( div );\n
Action.c(5):     \t\t\t\t\t\t\t\t\n
Action.c(5):     \t\t\tdocElem.insertBefore( body, docElem.firstChild );\n
Action.c(5):     \t\t\t\t\t\t\t\t\n
Action.c(5):     \t\t\tret = div.offsetWidth;\n
Action.c(5):     \t\t\t\t\t\t\t\t\n
Action.c(5):     \t\t\tif( fakeUsed ){\n
Action.c(5):     \t\t\t\tdocElem.removeChild( body );\n
Action.c(5):     \t\t\t}\n
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/app/common/controls/puma-multi-select/puma-multi-select.tpl.js"  	[MsgId: MWAR-27492]
Action.c(5):     \t\t\telse {\n
Action.c(5):     \t\t\t\tbody.removeChild( div );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\n
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 07952FF0, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5):     \t\t\t//also update eminpx before returning\n
Action.c(5):     \t\t\tret = eminpx = parseFloat(ret);\n
Action.c(5):     \t\t\t\t\t\t\t\t\n
Action.c(5):     \t\t\treturn ret;\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t\n
Action.c(5):     \t\t//cached container for 1em value, populated the first time it's needed \n
Action.c(5):     \t\teminpx,\n
Action.c(5):     \t\t\n
Action.c(5):     \t\t//enable/disable styles\n
Action.c(5):     \t\tapplyMedia\t\t\t= function( fromResize ){\n
Action.c(5):     \t\t\tvar name\t\t= "clientWidth",\n
Action.c(5):     \t\t\t\tdocElemProp\t= docElem[ name ],\n
Action.c(5):     \t\t\t\tcurrWidth \t= doc.compatMode === "CSS1Compat" && docElemProp || doc.body[ name ] |
Action.c(5):     | docElemProp,\n
Action.c(5):     \t\t\t\tstyleBlocks\t= {},\n
Action.c(5):     \t\t\t\tlastLink\t= links[ links.length-1 ],\n
Action.c(5):     \t\t\t\tnow \t\t= (new Date()).getTime();\n
Action.c(5):     \n
Action.c(5):     \t\t\t//throttle resize calls\t\n
Action.c(5):     \t\t\tif( fromResize && lastCall && now - lastCall < resizeThrottle ){\n
Action.c(5):     \t\t\t\tclearTimeout( resizeDefer );\n
Action.c(5):     \t\t\t\tresizeDefer = setTimeout( applyMedia, resizeThrottle );\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\telse {\n
Action.c(5):     \t\t\t\tlastCall\t= now;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\t\t\t\t\t\t\t\n
Action.c(5):     \t\t\tfor( var i in mediastyles ){\n
Action.c(5):     \t\t\t\tvar thisstyle = mediastyles[ i ],\n
Action.c(5):     \t\t\t\t\tmin = thisstyle.minw,\n
Action.c(5):     \t\t\t\t\tmax = thisstyle.maxw,\n
Action.c(5):     \t\t\t\t\tminnull = min === null,\n
Action.c(5):     \t\t\t\t\tmaxnull = max === null,\n
Action.c(5):     \t\t\t\t\tem = "em";\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t\tif( !!min ){\n
Action.c(5):     \t\t\t\t\tmin = parseFloat( min ) * ( min.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) 
Action.c(5):     : 1 );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tif( !!max ){\n
Action.c(5):     \t\t\t\t\tmax = parseFloat( max ) * ( max.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) 
Action.c(5):     : 1 );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t\t// if there's no media query at all (the () part), or min or max is not null, and 
Action.c(5):     if either is present, they're true\n
Action.c(5):     \t\t\t\tif( !thisstyle.hasquery || ( !minnull || !maxnull ) && ( minnull || currWidth >= m
Action.c(5):     in ) && ( maxnull || currWidth <= max ) ){\n
Action.c(5):     \t\t\t\t\t\tif( !styleBlocks[ thisstyle.media ] ){\n
Action.c(5):     \t\t\t\t\t\t\tstyleBlocks[ thisstyle.media ] = [];\n
Action.c(5):     \t\t\t\t\t\t}\n
Action.c(5):     \t\t\t\t\t\tstyleBlocks[ thisstyle.media ].push( rules[ thisstyle.rules ] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\n
Action.c(5):     \t\t\t//remove any existing respond style element(s)\n
Action.c(5):     \t\t\tfor( var i in appendedEls ){\n
Action.c(5):     \t\t\t\tif( appendedEls[ i ] && appendedEls[ i ].parentNode === head ){\n
Action.c(5):     \t\t\t\t\thead.removeChild( appendedEls[ i ] );\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\t\n
Action.c(5):     \t\t\t//inject active styles, grouped by media type\n
Action.c(5):     \t\t\tfor( var i in styleBlocks ){\n
Action.c(5):     \t\t\t\tvar ss\t\t= doc.createElement( "style" ),\n
Action.c(5):     \t\t\t\t\tcss\t\t= styleBlocks[ i ].join( "\\n" );\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t\tss.type = "text/css";\t\n
Action.c(5):     \t\t\t\tss.media\t= i;\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t\t//originally, ss was appended to a documentFragment and sheets were appended in bu
Action.c(5):     lk.\n
Action.c(5):     \t\t\t\t//this caused crashes in IE in a number of circumstances, such as when the HTML el
Action.c(5):     ement had a bg image set, so appending beforehand seems best. Thanks to @dvelyk for the in
Action.c(5):     itial research on this one!\n
Action.c(5):     \t\t\t\thead.insertBefore( ss, lastLink.nextSibling );\n
Action.c(5):     \t\t\t\t\n
Action.c(5):     \t\t\t\tif ( ss.styleSheet ){ \n
Action.c(5):     \t\t        \tss.styleSheet.cssText = css;\n
Action.c(5):     \t\t        } \n
Action.c(5):     \t\t        else {\n
Action.c(5):     \t\t\t\t\tss.appendChild( doc.createTextNode( css ) );\n
Action.c(5):     \t\t        }\n
Action.c(5):     \t\t        \n
Action.c(5):     \t\t\t\t//push to appendedEls to track for later removal\n
Action.c(5):     \t\t\t\tappendedEls.push( ss );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t//tweaked Ajax functions from Quirksmode\n
Action.c(5):     \t\tajax = function( url, callback ) {\n
Action.c(5):     \t\t\tvar req = xmlHttp();\n
Action.c(5):     \t\t\tif (!req){\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t}\t\n
Action.c(5):     \t\t\treq.open( "GET", url, true );\n
Action.c(5):     \t\t\treq.onreadystatechange = function () {\n
Action.c(5):     \t\t\t\tif ( req.readyState != 4 || req.status != 200 && req.status != 304 ){\n
Action.c(5):     \t\t\t\t\treturn;\n
Action.c(5):     \t\t\t\t}\n
Action.c(5):     \t\t\t\tcallback( req.responseText );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tif ( req.readyState == 4 ){\n
Action.c(5):     \t\t\t\treturn;\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treq.send( null );\n
Action.c(5):     \t\t},\n
Action.c(5):     \t\t//define ajax obj \n
Action.c(5):     \t\txmlHttp = (function() {\n
Action.c(5):     \t\t\tvar xmlhttpmethod = false;\t\n
Action.c(5):     \t\t\ttry {\n
Action.c(5):     \t\t\t\txmlhttpmethod = new XMLHttpRequest();\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\tcatch( e ){\n
Action.c(5):     \t\t\t\txmlhttpmethod = new ActiveXObject( "Microsoft.XMLHTTP" );\n
Action.c(5):     \t\t\t}\n
Action.c(5):     \t\t\treturn function(){\n
Action.c(5):     \t\t\t\treturn xmlhttpmethod;\n
Action.c(5):     \t\t\t};\n
Action.c(5):     \t\t})();\n
Action.c(5):     \t\n
Action.c(5):     \t//translate CSS\n
Action.c(5):     \tripCSS();\n
Action.c(5):     \t\n
Action.c(5):     \t//expose update for re-running respond later on\n
Action.c(5):     \trespond.update = ripCSS;\n
Action.c(5):     \t\n
Action.c(5):     \t//adjust on resize\n
Action.c(5):     \tfunction callMedia(){\n
Action.c(5):     \t\tapplyMedia( true );\n
Action.c(5):     \t}\n
Action.c(5):     \tif( win.addEventListener ){\n
Action.c(5):     \t\twin.addEventListener( "resize", callMedia, false );\n
Action.c(5):     \t}\n
Action.c(5):     \telse if( win.attachEvent ){\n
Action.c(5):     \t\twin.attachEvent( "onresize", callMedia );\n
Action.c(5):     \t}\n
Action.c(5):     })(this);\n
Abort was called from an action.	[MsgId: MMSG-10447]
Ending Vuser...	[MsgId: MMSG-15966]
Starting action vuser_end.	[MsgId: MMSG-15919]
Ending action vuser_end.	[MsgId: MMSG-15918]
Vuser Terminated.	[MsgId: MMSG-15963]
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 07928388  	[MsgId: MWAR-27496]
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 07928FE8  	[MsgId: MWAR-27496]
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 0789CFA0  	[MsgId: MWAR-27496]
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 0789D3C0  	[MsgId: MWAR-27496]
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 079282D8  	[MsgId: MWAR-27496]
Action.c(5): Warning -27496: Internal Error - _eStat (5) != LRW_ITEM_STAT_ENUM_UNHANDLED for HandledTask at 07928B70  	[MsgId: MWAR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/Scripts/PDF.js.1.3.91/compatibility.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 07928388, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/app/common/controls/puma-open-dialog/open-dialog.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 07952D88, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/Scripts/PDF.js.1.3.91/pdf.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 07928FE8, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/app/common/controls/puma-open-dialog/puma-dialog.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 07928DD8, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/Scripts/PDF.js.1.3.91/pdf.worker.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 0789CFA0, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/app/common/controls/puma-switch/puma-switch.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 08D22918, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/Scripts/PDF.js.1.3.91/text_layer_builder.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 0789D3C0, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/Scripts/angular.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 079282D8, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Action.c(5): Warning -27492: "HttpSendRequest" failed, Windows error code=12017 and retry limit (0) exceeded for URL="http://10.184.129.208/Platform/Scripts/angular-ui-router.js"  	[MsgId: MWAR-27492]
Continuing after Error -27496: Internal Error - InternetCloseHandle failed for item at 07928B70, Windows error code=6. Assuming the item can be deleted, but error(s) may occur in fvLrwNetWinInetCallback  	[MsgId: MERR-27496]
Vuser 0 (thread 51120), ended OK."	[MsgId: MMSG-10695]
Vuser 3 (thread 15052), ended OK."	[MsgId: MMSG-10695]
Vuser 2 (thread 34056), ended OK."	[MsgId: MMSG-10695]
