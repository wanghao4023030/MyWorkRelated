USE [WGGC]
GO
/****** Object:  StoredProcedure [dbo].[sp_Integration_GetExamInfo]    Script Date: 08/31/2014 23:56:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[sp_Integration_GetExamInfo]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[sp_Integration_GetExamInfo]
GO

-- =============================================
-- Author: <Gary Shi>
-- Create date: <2014-08-21>
-- Alter date: <2014-12-18>
-- Description: <For KIOSK Get ExamInfo>
/*
declare	@PatientIDs nvarchar(max) ='P20140403094904,P000000071'
declare	@PatientNames nvarchar(128) ='E20140403094904,ÀîÅàÐù'
declare	@AccessionNumbers nvarchar(max) ='A20140403094904,201105140073'
declare	@Modalitys nvarchar(128) ='CR,DR'
declare	@StartDT nvarchar(32) =''
declare	@EndDT nvarchar(32) =''
declare	@OutputInfo xml =''
exec dbo.sp_Integration_GetExamInfo @PatientIDs,@PatientNames,@AccessionNumbers,@Modalitys,@StartDT,@EndDT,@OutputInfo output
*/
-- =============================================
CREATE PROCEDURE [dbo].[sp_Integration_GetExamInfo]
	@PatientIDs nvarchar(max),
	@PatientNames nvarchar(max),
	@AccessionNumbers nvarchar(max),
	@Modalitys nvarchar(max),
	@StartDT nvarchar(32),
	@EndDT nvarchar(32),
	@OutputInfo xml output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Warning: Null value is eliminated by an aggregate or other SET operation.
	-- SET ANSI_WARNINGS OFF;

	SET @PatientIDs = LTRIM(RTRIM(ISNULL(@PatientIDs,'')))
	SET @PatientNames = LTRIM(RTRIM(ISNULL(@PatientNames,'')))
	SET @AccessionNumbers = LTRIM(RTRIM(ISNULL(@AccessionNumbers,'')))
	SET @Modalitys = LTRIM(RTRIM(ISNULL(@Modalitys,'')))
	SET @StartDT = LTRIM(RTRIM(ISNULL(@StartDT,'')))
	SET @EndDT = LTRIM(RTRIM(ISNULL(@EndDT,'')))
	SET @OutputInfo = '<OutputInfo>sp_Integration_GetExamInfo:Success</OutputInfo>'

	DECLARE @SQL nvarchar(max) = ''
	DECLARE @PatientIDList nvarchar(max) = ''
	DECLARE @PatientNameList nvarchar(max) = ''
	DECLARE @AccessionNumberList nvarchar(max) = ''
	DECLARE @ModalitysList nvarchar(max) = ''
	DECLARE @WHERE nvarchar(max) = ''

	BEGIN TRANSACTION TGetExamInfo
	BEGIN TRY
		IF(0<LEN(@PatientIDs))
		BEGIN
			SET @PatientIDList = REPLACE(@PatientIDs,',',''''',''''')
			SET @WHERE = @WHERE+' AND ({patientID} IN (''''' + @PatientIDList + '''''))'
		END

		IF(0<LEN(@PatientNames))
		BEGIN
			SET @PatientNameList = REPLACE(@PatientNames,',',''''',''''')
			SET @WHERE = @WHERE+' AND ({otherPatientName} IN (''''' + @PatientNames + ''''') OR {patientName} IN (''''' + @PatientNames + '''''))'
		END

		IF(0<LEN(@AccessionNumbers))
		BEGIN
			SET @AccessionNumberList = REPLACE(@AccessionNumbers,',',''''',''''')
			SET @WHERE = @WHERE+' AND ({accessionNumber} IN (''''' + @AccessionNumberList + '''''))'
		END

		IF(0<LEN(@Modalitys))
		BEGIN
			SET @ModalitysList = REPLACE(@Modalitys,',',''''',''''')
			SET @WHERE = @WHERE+' AND ({modality} IN (''''' + @ModalitysList + '''''))'
		END


		IF(0<LEN(@WHERE))
		BEGIN
			SET @SQL = 'SELECT DISTINCT {patientID} AS [PatientID], {accessionNumber} AS [AccessionNumber], {otherPatientName} AS [NameEN], 
			{patientName} AS [NameCN], {gender} AS [Gender],{birthday} AS [Birthday], {modality} AS [Modality], {modalityName} AS [ModalityName],
			(SELECT TOP 1 [KEY] FROM [dbo].[T_Integration_Dictionary] WHERE [TagType]=''PatientType'' AND ([Value]=ISNULL(LTRIM(RTRIM([{patientType}])),'''') OR 
			[Value]=''Other'')) AS [PatientType],{visitID} AS [VisitID], {requestID} AS [RequestID], {referringDepartment} AS [RequestDepartment], 
			{requestDT} AS [RequestDT], {registerDT} AS [RegisterDT], {examDT} AS [ExamDT], {submitDT} AS [SubmitDt], {approveDT} AS [ApproveDT],
			{pdfReportURL} AS [PDFReportURL], {studyStatus} AS [StudyStatus],{outHospitalNo} AS [OutHospitalNo], {inHospitalNo} AS [InHospitalNo], 
			{physicalExamNo} AS [PhysicalNumber], {examName} AS [ExamName], {examBodypart} AS [ExamBodyPart],{optional0} AS [Optional0], {optional1} AS [Optional1],
			{optional2} AS [Optional2], {optional3} AS [Optional3], {optional4} AS [Optional4], {optional5} AS [Optional5], {optional6} AS [Optional6],
			{optional7} AS [Optional7], {optional8} AS [Optional8], {optional9} AS [Optional9]
			FROM OPENQUERY(RISDB,''SELECT * FROM {viewName} WHERE 1=1' + @WHERE + ''') AS DS'
			--SELECT @SQL
			EXEC (@SQL)
		END

		SET @OutputInfo = '<OutputInfo>sp_Integration_GetExamInfo:Success PatientID['+@PatientIDs+'] Name['+@PatientNames+'] AccessionNumber['+@AccessionNumbers+'] Modality['+@Modalitys+']</OutputInfo>'
		COMMIT TRANSACTION TGetExamInfo
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION TGetExamInfo
		SET @OutputInfo = '<OutputInfo>sp_Integration_GetExamInfo:Error PatientID['+@PatientIDs+'] Name['+@PatientNames+'] AccessionNumber['+@AccessionNumbers+'] Modality['+@Modalitys+']</OutputInfo>'
	END CATCH
END
GO
