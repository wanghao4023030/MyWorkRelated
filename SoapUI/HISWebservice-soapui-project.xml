<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="HISWebservice" resourceRoot="" soapui-version="4.6.0" abortOnError="false" runType="SEQUENTIAL" id="e05b34f7-133c-4faa-a392-dae31a217c95" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Exam"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value="D:\SoapUI"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="PID001Request01"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="true"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="HIS_PS_SvcSoap" type="wsdl" bindingName="{http://tempuri.org/}HIS_PS_SvcSoap" soapVersion="1_1" anonymous="optional" definition="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx?wsdl" id="48c4e5e4-6cc5-43aa-b0c7-95dd1553ba22" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx?wsdl"><con:part><con:url>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://tempuri.org/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/">
      <s:element name="HISStatusUpdateNotify">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="infoXml" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HISStatusUpdateNotifyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="HISStatusUpdateNotifyResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SynchDepartmentFromHIS">
        <s:complexType/>
      </s:element>
      <s:element name="SynchDepartmentFromHISResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SynchDepartmentFromHISResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReportReadyNotify">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="xml_para" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReportReadyNotifyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ReportReadyNotifyResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HISGetWechat2DcodeImage">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="wechat" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HISGetWechat2DcodeImageResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="HISGetWechat2DcodeImageResult" type="s:base64Binary"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ExamStatusUpdateNotify">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="examInfo" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ExamStatusUpdateNotifyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ExamStatusUpdateNotifyResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="TestMethod">
        <s:complexType/>
      </s:element>
      <s:element name="TestMethodResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="TestMethodResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="HISStatusUpdateNotifySoapIn">
    <wsdl:part name="parameters" element="tns:HISStatusUpdateNotify"/>
  </wsdl:message>
  <wsdl:message name="HISStatusUpdateNotifySoapOut">
    <wsdl:part name="parameters" element="tns:HISStatusUpdateNotifyResponse"/>
  </wsdl:message>
  <wsdl:message name="SynchDepartmentFromHISSoapIn">
    <wsdl:part name="parameters" element="tns:SynchDepartmentFromHIS"/>
  </wsdl:message>
  <wsdl:message name="SynchDepartmentFromHISSoapOut">
    <wsdl:part name="parameters" element="tns:SynchDepartmentFromHISResponse"/>
  </wsdl:message>
  <wsdl:message name="ReportReadyNotifySoapIn">
    <wsdl:part name="parameters" element="tns:ReportReadyNotify"/>
  </wsdl:message>
  <wsdl:message name="ReportReadyNotifySoapOut">
    <wsdl:part name="parameters" element="tns:ReportReadyNotifyResponse"/>
  </wsdl:message>
  <wsdl:message name="HISGetWechat2DcodeImageSoapIn">
    <wsdl:part name="parameters" element="tns:HISGetWechat2DcodeImage"/>
  </wsdl:message>
  <wsdl:message name="HISGetWechat2DcodeImageSoapOut">
    <wsdl:part name="parameters" element="tns:HISGetWechat2DcodeImageResponse"/>
  </wsdl:message>
  <wsdl:message name="ExamStatusUpdateNotifySoapIn">
    <wsdl:part name="parameters" element="tns:ExamStatusUpdateNotify"/>
  </wsdl:message>
  <wsdl:message name="ExamStatusUpdateNotifySoapOut">
    <wsdl:part name="parameters" element="tns:ExamStatusUpdateNotifyResponse"/>
  </wsdl:message>
  <wsdl:message name="TestMethodSoapIn">
    <wsdl:part name="parameters" element="tns:TestMethod"/>
  </wsdl:message>
  <wsdl:message name="TestMethodSoapOut">
    <wsdl:part name="parameters" element="tns:TestMethodResponse"/>
  </wsdl:message>
  <wsdl:portType name="HIS_PS_SvcSoap">
    <wsdl:operation name="HISStatusUpdateNotify">
      <wsdl:input message="tns:HISStatusUpdateNotifySoapIn"/>
      <wsdl:output message="tns:HISStatusUpdateNotifySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="SynchDepartmentFromHIS">
      <wsdl:input message="tns:SynchDepartmentFromHISSoapIn"/>
      <wsdl:output message="tns:SynchDepartmentFromHISSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="ReportReadyNotify">
      <wsdl:input message="tns:ReportReadyNotifySoapIn"/>
      <wsdl:output message="tns:ReportReadyNotifySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="HISGetWechat2DcodeImage">
      <wsdl:input message="tns:HISGetWechat2DcodeImageSoapIn"/>
      <wsdl:output message="tns:HISGetWechat2DcodeImageSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="ExamStatusUpdateNotify">
      <wsdl:input message="tns:ExamStatusUpdateNotifySoapIn"/>
      <wsdl:output message="tns:ExamStatusUpdateNotifySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="TestMethod">
      <wsdl:input message="tns:TestMethodSoapIn"/>
      <wsdl:output message="tns:TestMethodSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HIS_PS_SvcSoap" type="tns:HIS_PS_SvcSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="HISStatusUpdateNotify">
      <soap:operation soapAction="http://tempuri.org/HISStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SynchDepartmentFromHIS">
      <soap:operation soapAction="http://tempuri.org/SynchDepartmentFromHIS" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReportReadyNotify">
      <soap:operation soapAction="http://tempuri.org/ReportReadyNotify" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="HISGetWechat2DcodeImage">
      <soap:operation soapAction="http://tempuri.org/HISGetWechat2DcodeImage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExamStatusUpdateNotify">
      <soap:operation soapAction="http://tempuri.org/ExamStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="TestMethod">
      <soap:operation soapAction="http://tempuri.org/TestMethod" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="HIS_PS_SvcSoap12" type="tns:HIS_PS_SvcSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="HISStatusUpdateNotify">
      <soap12:operation soapAction="http://tempuri.org/HISStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SynchDepartmentFromHIS">
      <soap12:operation soapAction="http://tempuri.org/SynchDepartmentFromHIS" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReportReadyNotify">
      <soap12:operation soapAction="http://tempuri.org/ReportReadyNotify" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="HISGetWechat2DcodeImage">
      <soap12:operation soapAction="http://tempuri.org/HISGetWechat2DcodeImage" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExamStatusUpdateNotify">
      <soap12:operation soapAction="http://tempuri.org/ExamStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="TestMethod">
      <soap12:operation soapAction="http://tempuri.org/TestMethod" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HIS_PS_Svc">
    <wsdl:port name="HIS_PS_SvcSoap" binding="tns:HIS_PS_SvcSoap">
      <soap:address location="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx"/>
    </wsdl:port>
    <wsdl:port name="HIS_PS_SvcSoap12" binding="tns:HIS_PS_SvcSoap12">
      <soap12:address location="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://tempuri.org/ExamStatusUpdateNotify" name="ExamStatusUpdateNotify" bindingOperationName="ExamStatusUpdateNotify" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bc5876d2-9efe-48f7-896b-0368b39ce512"><con:settings/><con:call name="Request 1" id="a40ec9a6-1350-411e-bd1f-cc24d9d51494"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID001</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>PID001</SubsysPID>    <EventCatalog>7</EventCatalog>  </BasicInfo>  <!-- Examination: 7 -->   <Examination>    <ExamStatus>2</ExamStatus>  </Examination></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/HISGetWechat2DcodeImage" name="HISGetWechat2DcodeImage" bindingOperationName="HISGetWechat2DcodeImage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5b6fee5b-c89e-40e0-8ffb-55dcd86fcf31"><con:settings/><con:call name="Request 1" id="6d1a0e78-a133-418d-95fd-903d3c2de388"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISGetWechat2DcodeImage>
         <!--Optional:-->
         <tem:wechat><![CDATA[<HISPatientWeChat>  <HospitalID>0</HospitalID>  <PatientID>PID001</PatientID></HISPatientWeChat>]]]]>><![CDATA[</tem:wechat>
      </tem:HISGetWechat2DcodeImage>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISGetWechat2DcodeImage"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/HISStatusUpdateNotify" name="HISStatusUpdateNotify" bindingOperationName="HISStatusUpdateNotify" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1f3c9f68-61ee-48fe-b8e5-85605269975e"><con:settings/><con:call name="Request 1" id="6e6fae8d-df76-4856-af65-1b339185e601"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID001</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T001</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O001">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-06-15 13:45:30</Datetime>      <Comments>微信测试001</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/ReportReadyNotify" name="ReportReadyNotify" bindingOperationName="ReportReadyNotify" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="058ed6f1-8601-4967-88fa-374e2a7d84ab"><con:settings/><con:call name="Request 1" id="9d983256-c7c0-412f-9039-06a5e72b2a8e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>张三</PatientName>  <PatientID>PID001</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E001</applyNo>        <reportID>1</reportID>      <FilePath>\\10.184.129.235\temp\Guodong\PID001.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/SynchDepartmentFromHIS" name="SynchDepartmentFromHIS" bindingOperationName="SynchDepartmentFromHIS" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a47ec4b8-fbe1-4bf1-8299-848f9ea42d34"><con:settings/><con:call name="Request 1" id="14eb500a-d153-495c-9d67-00dc6b889d42"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:SynchDepartmentFromHIS/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SynchDepartmentFromHIS"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/TestMethod" name="TestMethod" bindingOperationName="TestMethod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6fbc2b2b-d41e-4d32-81d2-7538894ce403"><con:settings/><con:call name="Request 1" id="4db0a021-7302-4dd2-9195-c4edba7713c5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:TestMethod/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/TestMethod"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="HIS_PS_SvcSoap12" type="wsdl" bindingName="{http://tempuri.org/}HIS_PS_SvcSoap12" soapVersion="1_2" anonymous="optional" definition="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx?wsdl" id="8850f34c-1c71-4c77-ad8a-b9f5123a5eac" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx?wsdl"><con:part><con:url>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://tempuri.org/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/">
      <s:element name="HISStatusUpdateNotify">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="infoXml" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HISStatusUpdateNotifyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="HISStatusUpdateNotifyResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SynchDepartmentFromHIS">
        <s:complexType/>
      </s:element>
      <s:element name="SynchDepartmentFromHISResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SynchDepartmentFromHISResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReportReadyNotify">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="xml_para" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReportReadyNotifyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ReportReadyNotifyResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HISGetWechat2DcodeImage">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="wechat" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HISGetWechat2DcodeImageResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="HISGetWechat2DcodeImageResult" type="s:base64Binary"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ExamStatusUpdateNotify">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="examInfo" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ExamStatusUpdateNotifyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ExamStatusUpdateNotifyResult" type="s:int"/>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="TestMethod">
        <s:complexType/>
      </s:element>
      <s:element name="TestMethodResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="TestMethodResult" type="s:string"/>
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="HISStatusUpdateNotifySoapIn">
    <wsdl:part name="parameters" element="tns:HISStatusUpdateNotify"/>
  </wsdl:message>
  <wsdl:message name="HISStatusUpdateNotifySoapOut">
    <wsdl:part name="parameters" element="tns:HISStatusUpdateNotifyResponse"/>
  </wsdl:message>
  <wsdl:message name="SynchDepartmentFromHISSoapIn">
    <wsdl:part name="parameters" element="tns:SynchDepartmentFromHIS"/>
  </wsdl:message>
  <wsdl:message name="SynchDepartmentFromHISSoapOut">
    <wsdl:part name="parameters" element="tns:SynchDepartmentFromHISResponse"/>
  </wsdl:message>
  <wsdl:message name="ReportReadyNotifySoapIn">
    <wsdl:part name="parameters" element="tns:ReportReadyNotify"/>
  </wsdl:message>
  <wsdl:message name="ReportReadyNotifySoapOut">
    <wsdl:part name="parameters" element="tns:ReportReadyNotifyResponse"/>
  </wsdl:message>
  <wsdl:message name="HISGetWechat2DcodeImageSoapIn">
    <wsdl:part name="parameters" element="tns:HISGetWechat2DcodeImage"/>
  </wsdl:message>
  <wsdl:message name="HISGetWechat2DcodeImageSoapOut">
    <wsdl:part name="parameters" element="tns:HISGetWechat2DcodeImageResponse"/>
  </wsdl:message>
  <wsdl:message name="ExamStatusUpdateNotifySoapIn">
    <wsdl:part name="parameters" element="tns:ExamStatusUpdateNotify"/>
  </wsdl:message>
  <wsdl:message name="ExamStatusUpdateNotifySoapOut">
    <wsdl:part name="parameters" element="tns:ExamStatusUpdateNotifyResponse"/>
  </wsdl:message>
  <wsdl:message name="TestMethodSoapIn">
    <wsdl:part name="parameters" element="tns:TestMethod"/>
  </wsdl:message>
  <wsdl:message name="TestMethodSoapOut">
    <wsdl:part name="parameters" element="tns:TestMethodResponse"/>
  </wsdl:message>
  <wsdl:portType name="HIS_PS_SvcSoap">
    <wsdl:operation name="HISStatusUpdateNotify">
      <wsdl:input message="tns:HISStatusUpdateNotifySoapIn"/>
      <wsdl:output message="tns:HISStatusUpdateNotifySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="SynchDepartmentFromHIS">
      <wsdl:input message="tns:SynchDepartmentFromHISSoapIn"/>
      <wsdl:output message="tns:SynchDepartmentFromHISSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="ReportReadyNotify">
      <wsdl:input message="tns:ReportReadyNotifySoapIn"/>
      <wsdl:output message="tns:ReportReadyNotifySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="HISGetWechat2DcodeImage">
      <wsdl:input message="tns:HISGetWechat2DcodeImageSoapIn"/>
      <wsdl:output message="tns:HISGetWechat2DcodeImageSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="ExamStatusUpdateNotify">
      <wsdl:input message="tns:ExamStatusUpdateNotifySoapIn"/>
      <wsdl:output message="tns:ExamStatusUpdateNotifySoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="TestMethod">
      <wsdl:input message="tns:TestMethodSoapIn"/>
      <wsdl:output message="tns:TestMethodSoapOut"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HIS_PS_SvcSoap" type="tns:HIS_PS_SvcSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="HISStatusUpdateNotify">
      <soap:operation soapAction="http://tempuri.org/HISStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SynchDepartmentFromHIS">
      <soap:operation soapAction="http://tempuri.org/SynchDepartmentFromHIS" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReportReadyNotify">
      <soap:operation soapAction="http://tempuri.org/ReportReadyNotify" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="HISGetWechat2DcodeImage">
      <soap:operation soapAction="http://tempuri.org/HISGetWechat2DcodeImage" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExamStatusUpdateNotify">
      <soap:operation soapAction="http://tempuri.org/ExamStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="TestMethod">
      <soap:operation soapAction="http://tempuri.org/TestMethod" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="HIS_PS_SvcSoap12" type="tns:HIS_PS_SvcSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="HISStatusUpdateNotify">
      <soap12:operation soapAction="http://tempuri.org/HISStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SynchDepartmentFromHIS">
      <soap12:operation soapAction="http://tempuri.org/SynchDepartmentFromHIS" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ReportReadyNotify">
      <soap12:operation soapAction="http://tempuri.org/ReportReadyNotify" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="HISGetWechat2DcodeImage">
      <soap12:operation soapAction="http://tempuri.org/HISGetWechat2DcodeImage" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ExamStatusUpdateNotify">
      <soap12:operation soapAction="http://tempuri.org/ExamStatusUpdateNotify" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="TestMethod">
      <soap12:operation soapAction="http://tempuri.org/TestMethod" style="document"/>
      <wsdl:input>
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HIS_PS_Svc">
    <wsdl:port name="HIS_PS_SvcSoap" binding="tns:HIS_PS_SvcSoap">
      <soap:address location="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx"/>
    </wsdl:port>
    <wsdl:port name="HIS_PS_SvcSoap12" binding="tns:HIS_PS_SvcSoap12">
      <soap12:address location="http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://tempuri.org/ExamStatusUpdateNotify" name="ExamStatusUpdateNotify" bindingOperationName="ExamStatusUpdateNotify" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8d83c300-62e3-4b7f-a336-b133e444e5c5"><con:settings/><con:call name="Request 1" id="729bebd8-6329-4820-aee1-999de3a3c81e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:tem="http://tempuri.org/">
   <soap:Header/>
   <soap:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo>?</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HIS_PS_SvcSoap/ExamStatusUpdateNotifyRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/HISGetWechat2DcodeImage" name="HISGetWechat2DcodeImage" bindingOperationName="HISGetWechat2DcodeImage" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="fe25b3aa-de08-4544-936f-6237b1a13c2d"><con:settings/><con:call name="Request 1" id="2c9b2241-ac82-48d5-8628-ed419fd51145"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:tem="http://tempuri.org/">
   <soap:Header/>
   <soap:Body>
      <tem:HISGetWechat2DcodeImage>
         <!--Optional:-->
         <tem:wechat>?</tem:wechat>
      </tem:HISGetWechat2DcodeImage>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HIS_PS_SvcSoap/HISGetWechat2DcodeImageRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/HISStatusUpdateNotify" name="HISStatusUpdateNotify" bindingOperationName="HISStatusUpdateNotify" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="84dca4b3-b802-4d57-b12a-88f27c66de3a"><con:settings/><con:call name="Request 1" id="e7976e38-5076-4c26-bbdf-a89a810f43ef"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:tem="http://tempuri.org/">
   <soap:Header/>
   <soap:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml>?</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HIS_PS_SvcSoap/HISStatusUpdateNotifyRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/ReportReadyNotify" name="ReportReadyNotify" bindingOperationName="ReportReadyNotify" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0946d978-dd51-491c-8ece-8031955ac2c6"><con:settings/><con:call name="Request 1" id="c9430bce-35ec-4a30-9b6f-cc024941e2d0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:tem="http://tempuri.org/">
   <soap:Header/>
   <soap:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para>?</tem:xml_para>
      </tem:ReportReadyNotify>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HIS_PS_SvcSoap/ReportReadyNotifyRequest"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/SynchDepartmentFromHIS" name="SynchDepartmentFromHIS" bindingOperationName="SynchDepartmentFromHIS" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="12365ef0-6c20-4d69-9b11-f196454af818"><con:settings/><con:call name="Request 1" id="07cac178-c8a4-430f-b91d-f362de8e9f47"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:tem="http://tempuri.org/">
   <soap:Header/>
   <soap:Body>
      <tem:SynchDepartmentFromHIS/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HIS_PS_SvcSoap/SynchDepartmentFromHISRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://tempuri.org/TestMethod" name="TestMethod" bindingOperationName="TestMethod" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f762c0e3-57a2-4cda-9d49-94424a030f55"><con:settings/><con:call name="Request 1" id="c6e70a90-c76d-44fd-9145-990e01469c39"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:tem="http://tempuri.org/">
   <soap:Header/>
   <soap:Body>
      <tem:TestMethod/>
   </soap:Body>
</soap:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HIS_PS_SvcSoap/TestMethodRequest"/></con:call></con:operation></con:interface><con:testSuite name="HisDepartment" id="bfc3115d-76e8-4001-8916-912e4f0b0242"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Hospital01" searchProperties="true" id="3da0a14e-3d1b-4d16-8ffa-f51158fd503c"><con:settings/><con:testStep type="request" name="SynchDepartmentFromHIS" id="18e90383-ff05-4a20-b60c-50a517c1b20f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>SynchDepartmentFromHIS</con:operation><con:request name="SynchDepartmentFromHIS" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3250504c-5513-44fb-863f-9ba180d1c185"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:SynchDepartmentFromHIS/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a78b1a60-d1af-455c-abce-295b43c0e32b"/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="72a7c6ea-8ce8-4fce-97a4-687f09be2790"><con:configuration><scriptText>import groovy.sql.Sql;

//get data from His DB
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.140\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def HisDB = Sql.newInstance(url,username,password,driver)
assert HisDB != null 
def Hisdepartment = HisDB.rows('select * from department ')

//get data from CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def department = database.rows('select * from department ')
def count = database.firstRow('select count(*) from department')

for (def i=0; i&lt;count[0]; i++)
{
	assert Hisdepartment[i].departmentID  == department[i].departmentID 
	log.info Hisdepartment[i].departmentID
	assert Hisdepartment[i].departmentname  == department[i].departmentname
	log.info Hisdepartment[i].departmentname
	assert Hisdepartment[i].examlocation  == department[i].examlocation
	log.info Hisdepartment[i].examlocation
}


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/SynchDepartmentFromHIS"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest name="LoadTest 1" id="68092720-5739-4b31-8dab-2a69dfe59f3f"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Thread</con:type><con:config><startThreadCount>1</startThreadCount><endThreadCount>10</endThreadCount></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="HIS Consultation" id="02f2a5c5-01dd-4bd0-8397-8f1631a7f13b"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID001 Treatments" searchProperties="true" id="e72f3b5a-668e-4e82-af65-f74974e0a4e5"><con:settings/><con:testStep type="request" name="01.02.02.01 CreateTreatment T001" id="60832bee-5247-48b0-90f1-b80e972743da"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.02.01 CreateTreatment T001" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5dd611c4-de5e-454f-aa84-90a06bf53274"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID001</PatientID>    <EventCatalog>1</EventCatalog>    <TreatmentID>T001</TreatmentID>  </BasicInfo>  <!-- EventCatalog = 1 -> HISRegistration -->  <HISRegistration>    <ReservID>0</ReservID> <!-- reservation id, maybe null -->    <Status>0</Status>    <Datetime>2016-08-15 13:45:30</Datetime>    <Comments>微信测试001</Comments>    <AvaiDatetimeBegin>2016-08-15 13:45:30</AvaiDatetimeBegin>    <AvaiDatetimeEnd>2016-09-15 13:45:30</AvaiDatetimeEnd>    <DepartmentID>001</DepartmentID>    <RoomName>内科1诊室</RoomName>    <Type>医保</Type>  </HISRegistration></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7a4db034-1981-47c3-a5b0-8a3d6c44edd5"/><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="9de93afa-72ce-4b91-85a1-39f27889baaf"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = "\'T001\'"

def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"  
   
def database = Sql.newInstance(url,username,password,driver)  
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID) 
assert treatment != null </scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in wechat from CS" id="21b4541b-e6bc-44f2-8ad0-a68cbe4d46fb"><con:configuration><scriptText>import groovy.sql.Sql;

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.getPropertyValue("patientID")
def treatmentID = "\'T002\'"

//get data from CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
log.info patientID
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + treatment.statusID)
assert globalstatus != null

//get data from His DB
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.140\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def HisDB = Sql.newInstance(url,username,password,driver)
assert HisDB != null 
def Hispatient = HisDB.firstRow('select * from patient where patientID = ' +patientID)
assert Hispatient != null
def Hisdepartment = HisDB.firstRow('select * from department where departmentID = '+ department.departmentID )
assert Hisdepartment != null

//show the display info of wechat
log.info globalstatus.querymessage

assert Hispatient.patientname == patient.patientname
log.info patient.patientname

log.info treatment.createdatetime

assert Hisdepartment.departmentname == department.departmentname
log.info department.departmentname
log.info department.examlocation
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
// show the info inputted from request xml which is not shown in wechat
log.info treatment.roomname
log.info treatment.paytype
log.info treatment.actionID

log.info('//////////')</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.02.02 UpdateTreatment to add T002" id="64bee04e-c361-4664-8bd4-7c0abda0968c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.02.02 UpdateTreatment to add T002" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6ec75c96-060d-4011-9b5b-a1927758a1e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID001</PatientID>    <EventCatalog>1</EventCatalog>    <TreatmentID>T002</TreatmentID>  </BasicInfo>  <!-- EventCatalog = 1 -> HISRegistration -->  <HISRegistration>    <ReservID>0</ReservID> <!-- reservation id, maybe null -->    <Status>0</Status>    <Datetime>2016-09-15 13:45:30</Datetime>    <Comments>微信测试PID001更新</Comments>    <AvaiDatetimeBegin>2016-08-16 13:45:30</AvaiDatetimeBegin>    <AvaiDatetimeEnd>2016-06-15 13:45:30</AvaiDatetimeEnd>    <DepartmentID>006</DepartmentID>    <RoomName>内科3诊室</RoomName>    <Type>自费</Type>  </HISRegistration></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="dc1e672a-d96c-435f-a6da-a2dd99f8a69a"/><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="1343674e-59d6-4a9c-b6e5-a6ca4d49a021"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"   
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = "\'T002\'"
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID) 
assert treatment != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check notificaiton in wechat" id="a9aec342-5ad9-4b8b-83cf-69d577110eed"><con:configuration><scriptText>import groovy.sql.Sql;

def testCase = messageExchange.modelItem.testCase
def patientID = testCase.getPropertyValue("patientID")
def treatmentID = "\'T002\'"
//get data from His DB
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.140\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def HisDB = Sql.newInstance(url,username,password,driver)
assert HisDB != null 
def Hispatient = HisDB.firstRow('select * from patient where patientID =' + patientID)

//get data from CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def patient = database.firstRow('select * from patient where patientID =' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID =' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID = ' + treatment.departmentID)
assert department != null
def globalstatus = database.firstRow('select * from globalstatus where statusID = ' + treatment.statusID)
assert globalstatus != null
def Hisdepartment = HisDB.firstRow('select * from department where departmentID = '+ department.departmentID )

//show the display info of wechat
log.info globalstatus.querymessage

assert Hispatient.patientname == patient.patientname
log.info patient.patientname

log.info treatment.createdatetime

assert Hisdepartment.departmentname == department.departmentname
log.info department.departmentname
log.info department.examlocation
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
// show the info inputted from request xml which is not shown in wechat
log.info treatment.roomname
log.info treatment.paytype
log.info treatment.actionID

log.info('//////////')</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.02.03 CancelTreatment T001" id="144db5da-8b80-42cb-974d-e3eae474253a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.02.03 CancelTreatment T001" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1c7eca00-e948-45af-97cd-62e98422ec22"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID001</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T001</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O001">      <Status>2</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-07-06 13:45:30</Datetime>      <Comments>微信测试取消Order</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5c4a0416-dd1e-4def-a9b9-ec4497b8fbc4"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>patientID</con:name><con:value>'PID001'</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID002 Orders and requests" searchProperties="true" id="34bf4da4-d8dc-44b3-8f47-c2e124ee3f89"><con:settings/><con:testStep type="jdbc" name="Precondition HIS Reset Request and Order" id="402d95ff-d4df-4fd7-a1b2-29ac1685c083"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>Update Request Set ItemName = '眼科',Quatity = '1' where RequestID = 'R006'
Update Request Set ItemName = '普放',Quatity = '1' where RequestID = 'R004'
Update PlaceOrder Set Diagnosis = '发烧',PrintUserName = '程于伦' where PlaceOrderID = 'O003'
Update PlaceOrder Set Diagnosis = '沙眼',PrintUserName = '李丽' where PlaceOrderID = 'O004'
</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6dffcffa-2225-475a-8f4a-5f1a3662706c"/><con:properties/></con:config></con:testStep><con:testStep type="request" name="01.02.03.01 Precondition CreateTreatment T004" id="6a837e6b-9810-4988-9bf7-31ad7b634646"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.01 Precondition CreateTreatment T004" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1beba9e0-0fdb-4152-a807-3ff78f907482"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>1</EventCatalog>    <TreatmentID>T004</TreatmentID>  </BasicInfo>  <!-- EventCatalog = 1 -> HISRegistration -->  <HISRegistration>    <ReservID>0</ReservID> <!-- reservation id, maybe null -->    <Status>0</Status>    <Datetime>2016-08-15 13:45:30</Datetime>    <Comments>微信测试004</Comments>    <AvaiDatetimeBegin>2016-08-15 13:45:30</AvaiDatetimeBegin>    <AvaiDatetimeEnd>2016-09-15 13:45:30</AvaiDatetimeEnd>    <DepartmentID>004</DepartmentID>    <RoomName>眼科1诊室</RoomName>    <Type>医保</Type>  </HISRegistration></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="26712e1a-787e-437f-9208-41bc2659b1ca"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.03.01 CreateOrder one request T004o004" id="4289a0f6-500a-42e8-94e1-26ec72d9ca0f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.01 CreateOrder one request T004o004" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b1485025-cf01-42da-9471-8ce220d426d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T004</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O004">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-07-06 13:45:30</Datetime>      <Comments>微信测试创建Order</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6d810acd-8af0-4dd3-a1bb-f4fe117d95fc"/><con:assertion type="GroovyScriptAssertion" name="Check notification in wechat" id="8b548ab8-d6ab-4e60-8c86-2bdd4ada1621"><con:configuration><scriptText>import groovy.sql.Sql;

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get data from His DB
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.140\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def HisDB = Sql.newInstance(url,username,password,driver)
assert HisDB != null 
def Hispatient = HisDB.firstRow('select * from patient where patientID = ' +patientID)
assert Hispatient != null
def Hisorder = HisDB.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert Hisorder != null
//get data from CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + order.statusID)
assert globalstatus != null
def Hisdepartment = HisDB.firstRow('select * from department where departmentID = '+ department.departmentID )
assert Hisdepartment != null

//verify whether CS get the order record from HIS
assert order.treatmentID == treatment.treatmentID
assert Hisorder.diagnosis == order.diagnosis
//verify whether CS get the patient and department record from HIS
assert Hispatient.patientname == patient.patientname
assert Hisdepartment.departmentname == department.departmentname

//verify the new request records got from HIS are correct
def requestcount = HisDB.firstRow('select count(*) from request where placeorderID = '+ orderID)
assert requestcount != null
def Hisrequest = HisDB.rows('select * from request where placeorderID = '+ orderID)
def request = database.rows('select * from request where placeorderID = '+ orderID)
//show the display info of wechat
log.info globalstatus.querymessage
log.info patient.patientname
for (def i=0; i&lt;requestcount[0]; i++)
{
	//verify the new request records got from HIS are correct
	assert Hisrequest[i].requestID == request[i].requestID
	assert Hisrequest[i].itemname == request[i].itemname
	assert Hisrequest[i].comments == request[i].comments

	log.info request[i].itemname
	def requestdepartment = database.firstRow('select * from department where departmentID =' + request[i].excdepartmentID)
     assert requestdepartment != null
	log.info requestdepartment.departmentname
	log.info requestdepartment.examlocation
}
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
log.info ('///////')</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.03.02 CreateOrder multi Request T005o003" id="29dd3aa1-105e-4fec-8723-885981be64d6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.02 CreateOrder multi Request T005o003" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d9d15f81-c8c8-4ee3-895e-4b6c7bf6b464"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T005</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O003">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-07-06 13:45:30</Datetime>      <Comments>微信测试创建multirequest</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4d0829d5-b17e-45e0-9d76-bd00e7722a12"/><con:assertion type="GroovyScriptAssertion" name="Check notification in wechat" id="3562494d-b303-4530-8140-cfd0a2425281"><con:configuration><scriptText>import groovy.sql.Sql;

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get data from His DB
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.140\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def HisDB = Sql.newInstance(url,username,password,driver)
assert HisDB != null 
def Hispatient = HisDB.firstRow('select * from patient where patientID = ' +patientID)
assert Hispatient != null
def Hisorder = HisDB.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert Hisorder != null
//get data from CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + order.statusID)
assert globalstatus != null
def Hisdepartment = HisDB.firstRow('select * from department where departmentID = '+ department.departmentID )
assert Hisdepartment != null

//verify whether CS get the order record from HIS
assert order.treatmentID == treatment.treatmentID
assert Hisorder.diagnosis == order.diagnosis
//verify whether CS get the patient and department record from HIS
assert Hispatient.patientname == patient.patientname
assert Hisdepartment.departmentname == department.departmentname

//verify the new request records got from HIS are correct
def requestcount = HisDB.firstRow('select count(*) from request where placeorderID = '+ orderID)
assert requestcount != null
def Hisrequest = HisDB.rows('select * from request where placeorderID = '+ orderID)
def request = database.rows('select * from request where placeorderID = '+ orderID)
//show the display info of wechat
log.info globalstatus.querymessage
log.info patient.patientname
for (def i=0; i&lt;requestcount[0]; i++)
{
	//verify the new request records got from HIS are correct
	assert Hisrequest[i].requestID == request[i].requestID
	assert Hisrequest[i].itemname == request[i].itemname
	assert Hisrequest[i].comments == request[i].comments

	log.info request[i].itemname
	def requestdepartment = database.firstRow('select * from department where departmentID =' + request[i].excdepartmentID)
     assert requestdepartment != null
	log.info requestdepartment.departmentname
	log.info requestdepartment.examlocation
}
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
log.info ('///////')</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="01.02.03.03-04-05-08 HIS Update Request and Order" id="02991275-a3c0-45da-a2f9-7c07d1d268c8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>Update Request Set ItemName = '眼外科',Quatity = '2' where RequestID = 'R006'
Update Request Set ItemName = '普放外科',Quatity = '2' where RequestID = 'R004'
Update PlaceOrder Set Diagnosis = '腹泻',PrintUserName = '车晓' where PlaceOrderID = 'O003'
Update PlaceOrder Set Diagnosis = '白内障',PrintUserName = '百越' where PlaceOrderID = 'O004'
</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ef144d51-9b75-4256-a020-a7f3d4ec452f"/><con:assertion type="JDBC Timeout" name="JDBC Timeout" id="6e78a5e2-9275-413d-b487-07d4a8ce4e1c"/><con:properties/></con:config></con:testStep><con:testStep type="request" name="01.02.03.03 RequestUpdate o004" id="41128d68-e191-431d-a6f3-bc2f9444c90c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.03 RequestUpdate o004" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e7f533d6-e42f-472b-aec3-9c689d8a30ac"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T004</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O004">      <Status>1</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试更新Order</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="bcc4e063-270e-47b3-872b-8defa215aceb"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.03.04 RequestpartialUpdate o003" id="78bb0ac6-8451-42a8-baca-9140ec1a93c6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.04 RequestpartialUpdate o003" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d483676e-8477-4661-8e4d-4c4bb6760c6a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T005</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O003">      <Status>1</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试多request更新Order</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="337359ee-61b2-4b9b-b350-061c529f99e4"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.03.05 UpdateOrder multi request T005 o003" id="9262f28a-6e66-4dcd-9900-bd5b7945e938"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.05 UpdateOrder multi request T005 o003" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7ef5c38c-822f-48c4-9270-2f0e0b84ba53"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T005</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O003">      <Status>1</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试更新Order</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6e588c11-2244-4a84-9db1-5933350e9021"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.03.08 UpdateOrder T004 o004" id="0eefc010-ce76-441b-a1ad-759b9e47dfee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.08 UpdateOrder T004 o004" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f01dbcaf-7a31-4a1c-826d-0eb85a05e6db"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T004</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O004">      <Status>1</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试更新Order单request</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="eaad73b5-43b8-4b51-bd21-c3b236198cc8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.03.09 Cancel request T004 o004" id="05780454-8715-4cd0-8d44-238f6218fe00"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.09 Cancel request T004 o004" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f9259d84-eb17-4623-b052-79e23056bfb1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T004</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O004">      <Status>2</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试取消Order单request</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3125a4f7-002b-4659-86a1-4a5d67356b58"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="01.02.03.10 HIS delete partial requests of o003" id="53bd3f47-4f85-4881-ac5e-b4ccb5cb5cfe"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>DELETE FROM Request where RequestID = 'R004'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8b8e75da-f7e6-4f25-bb62-ec9888c5bc13"/><con:properties/></con:config></con:testStep><con:testStep type="request" name="01.02.03.10 Cancel partial request T005 o003" id="e19540cb-c0f7-49eb-9207-db1b5ec48ba5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.10 Cancel partial request T005 o003" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="45452973-da2e-4686-bdc3-a6e33cc221cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T005</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O003">      <Status>1</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试取消Order部分request</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="08fff400-ddd2-4233-97b2-b2ea59130887"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="01.02.03.10(end condition) add requests for o003 from HIS" id="f669d3b6-751d-4bd7-8411-89543e556532"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>INSERT INTO Request VALUES
('R004', '0', 'O003', '普放', '鼻腔', '1', '15', 'false', '001', '0', '鼻咽', '2016-09-13 00:00:00.000', '2016-09-14 00:00:00.000', NULL)
</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1d72158f-15c2-41aa-bd78-e6a8c8bd96f4"/><con:properties/></con:config></con:testStep><con:testStep type="request" name="01.02.03.11 Cancel order T005 o003" id="2deccc16-fb2e-47af-8a9d-0c9add40a16a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.11 Cancel order T005 o003" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="252da958-bc92-4d6b-b015-7bd44048fcb9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T005</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O003">      <Status>2</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试取消Order</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="36303d3a-4258-44c4-b843-b6bdd3c5a255"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.03.12 Preconditon CreateTreatment T006" id="f2890fe4-f2be-42a6-a348-516d200da556"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.12 Preconditon CreateTreatment T006" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d4e8ffaf-4943-4274-9a8d-477324e5441e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>1</EventCatalog>    <TreatmentID>T006</TreatmentID>  </BasicInfo>  <!-- EventCatalog = 1 -> HISRegistration -->  <HISRegistration>    <ReservID>0</ReservID> <!-- reservation id, maybe null -->    <Status>0</Status>    <Datetime>2016-08-15 13:45:30</Datetime>    <Comments>微信测试006</Comments>    <AvaiDatetimeBegin>2016-08-15 13:45:30</AvaiDatetimeBegin>    <AvaiDatetimeEnd>2016-09-15 13:45:30</AvaiDatetimeEnd>    <DepartmentID>004</DepartmentID>    <RoomName>五官科1诊室</RoomName>    <Type>医保</Type>  </HISRegistration></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4fca8fba-5416-4e35-85cc-2973b69e42e2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="01.02.03.12 add requests for o005 from HIS" id="406f7191-c3af-403b-856a-0bfe265e9b86"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>INSERT INTO Request VALUES
('R007', '0', 'O005', '鼻窦', '鼻腔', '1', '25', 'false', '001', '0', '鼻咽', '2016-09-13 00:00:00.000', '2016-09-14 00:00:00.000', NULL),
('R008', '0', 'O005', '耳朵', '耳廓', '3', '13', 'false', '004', '0', '中耳炎', '2016-09-13 00:00:00.000', '2016-09-14 00:00:00.000', NULL)
</con:query><con:properties/></con:config></con:testStep><con:testStep type="request" name="01.02.03.12 CreateOrder T006 o005" id="01ebccb1-17d5-4fef-9087-29fdbc21d40d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.12 CreateOrder T006 o005" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="682425a3-e813-41af-90e6-309ee9aeab84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T006</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O005">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试创建Order所有request</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="9fa63269-9766-409c-ba26-040f83deb92e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="01.02.03.12 delete requests of o005 from HIS" id="13c7574e-1291-4105-84c4-428bc73814ce"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>DELETE FROM Request where PlaceOrderID = 'O005'</con:query><con:properties/></con:config></con:testStep><con:testStep type="request" name="01.02.03.12 Cancel all request T006 o005" id="272a5891-d8c4-4937-86a0-01877bed5de1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.03.12 Cancel all request T006 o005" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f3786e7e-0d41-4f30-aba1-929531d4dfd3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T006</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O005">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-09-12 13:45:30</Datetime>      <Comments>微信测试删除所有request</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0cb12d14-6590-49ad-95a1-d7478a0e5cb5"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/HISStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>treatmentID</con:name><con:value>'T003'</con:value></con:property><con:property><con:name>patientID</con:name><con:value>'PID002'</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID002 payment" searchProperties="true" id="a879a8da-30c7-417b-84a3-be41a0c68531"><con:settings/><con:testStep type="request" name="01.02.04.01 CreateOrder o006 for T003" id="686c3001-66f9-4c25-bf63-2045cbc6433c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.04.01 CreateOrder o006 for T003" id="7e81aa90-0f6d-46db-9463-592bd8786dd2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T003</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O006">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-07-06 13:45:30</Datetime>      <Comments>微信测试payment</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="96bd3136-4929-47b7-86f9-449be5d85f2f"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.04.01 Update order payment for T003 o006" id="60f447ff-3927-4480-818a-3c093f0c3d28"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.04.01 Update order payment for T003 o006" id="3bd3b4e0-619e-41cf-8872-720f6b252780"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>4</EventCatalog>    <TreatmentID>T003</TreatmentID>  </BasicInfo>  <HISPayment>	<OrderItem id="O006" PaymentStatus="1">	 <RequestItem id="R009" PaymentStatus="1" />	</OrderItem>  </HISPayment></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d749bfaf-1020-4cc5-aef6-a23531853650"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.04.02 CreatTreatment T007" id="e9bd335d-c3b0-40ce-b09d-2a58d1688b9d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.04.02 CreatTreatment T007" id="0dd92935-c8ac-464e-acb7-4118a6fb8b92"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>1</EventCatalog>    <TreatmentID>T007</TreatmentID>  </BasicInfo>  <!-- EventCatalog = 1 -> HISRegistration -->  <HISRegistration>    <ReservID>0</ReservID> <!-- reservation id, maybe null -->    <Status>0</Status>    <Datetime>2016-09-26 13:45:30</Datetime>    <Comments>微信测试007</Comments>    <AvaiDatetimeBegin>2016-09-26 13:45:30</AvaiDatetimeBegin>    <AvaiDatetimeEnd>2016-09-26 13:45:30</AvaiDatetimeEnd>    <DepartmentID>001</DepartmentID>    <RoomName>普方7诊室</RoomName>    <Type>医保</Type>  </HISRegistration></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="999997ad-0f96-4f8d-8999-07a60b6ff9d4"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.04.02 CreateOrder o007 for T007" id="c883e4cb-cce4-467e-9f7a-2ed6fbeb81a1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.04.02 CreateOrder o007 for T007" id="7083d277-320c-474a-8861-e4f33adb001f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T007</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O007">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-07-06 13:45:30</Datetime>      <Comments>微信测试payment02</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f8885e52-1393-4b48-ab9b-63726fa03ab7"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.04.02 Update partial request payment for T007 o007" id="04759684-02f3-455f-aeba-fa592f88496f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.04.02 Update partial request payment for T007 o007" id="1a3689dd-8565-49d8-a71c-1fc7a8dc6cce"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>4</EventCatalog>    <TreatmentID>T007</TreatmentID>  </BasicInfo>  <HISPayment>	<OrderItem id="O007" PaymentStatus="2">	 <RequestItem id="R011" PaymentStatus="1" /> < RequestItem id="R010" PaymentStatus="0"/>	</OrderItem>  </HISPayment></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9b123333-2989-45c3-929c-89afe6274327"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.02.04.03 Update all request payment for T007 o007" id="a2dd05eb-485d-4048-88bc-12c69b1604f1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.04.03 Update all request payment for T007 o007" id="b5b0eb9f-6bfd-4a77-8a23-2121e6593e4d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>4</EventCatalog>    <TreatmentID>T007</TreatmentID>  </BasicInfo>  <HISPayment>	<OrderItem id="O007" PaymentStatus="1">	 <RequestItem id="R011" PaymentStatus="1" /> < RequestItem id="R010" PaymentStatus="1"/> <RequestItem id="R012" PaymentStatus="1" />	</OrderItem>  </HISPayment></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3466abfe-d320-4a01-b4ef-b1c7d6f420a8"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="01.02.04.04 HIS update order and request" id="215261dc-be38-405e-91fd-0c7bd9ef3c50"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>Update Request Set ItemName = '血液全查'，Quatity = '3' where RequestID = 'R012'
Update PlaceOrder Set Diagnosis = '黄疸'，PrintUserName = '金鳞' where PlaceOrderID = 'O007'
</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c2b51e9a-eeae-49ab-bd8d-a359e4020a7a"/><con:properties/></con:config></con:testStep><con:testStep type="request" name="01.02.04.04 Update order/request/ payment for T007 o007" id="99d0c448-9dfa-4a06-9407-40d02cbac4a3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.02.04.04 Update order/request/ payment for T007 o007" id="1b9c1f15-5454-4bac-8556-e8f93abca65b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>4</EventCatalog>    <TreatmentID>T007</TreatmentID>  </BasicInfo>  <HISPayment>	<OrderItem id="O007" PaymentStatus="2">	 <RequestItem id="R011" PaymentStatus="0" /> < RequestItem id="R010" PaymentStatus="1"/> <RequestItem id="R012" PaymentStatus="1" />	</OrderItem>  </HISPayment></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0f6e455d-1f6f-4327-a691-a0eee21b06e4"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="01.02.04.04 End conditon HIS reset order and request" id="7e6823ad-3303-44e6-9c4d-5d6faceb0bb3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver> com.microsoft.sqlserver.jdbc.SQLServerDrive</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>Update Request Set ItemName = '血常规'，Quatity = '1' where RequestID = 'R012'
Update PlaceOrder Set Diagnosis = '胆管结石'，PrintUserName = '吴广' where PlaceOrderID = 'O007'
</con:query><con:properties/></con:config></con:testStep><con:loadTest name="LoadTest 1" id="6c235f44-ff29-46af-8d4f-abaf31fd2ccf"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>60</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="Exam" id="139f3f33-f391-41be-b8f1-71214febdf6b"><con:settings/><con:runType>PARALLELL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID003 one order with only one request" searchProperties="true" id="114e9e16-a794-4d85-bad9-6c42ed10dc41"><con:settings/><con:testStep type="request" name="01.03.02.01 CreateExam RIS o006 R009" id="785c5eb0-0cb3-4479-a101-69cefa454f28"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.02.01 CreateExam RIS o006 R009" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="bb2e98e6-8ce7-49ae-8367-07beed520102"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S002</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R009</RequestID >      <ExamID>E009</ExamID>      <Status>0</Status>      <Datetime>2016-09-26 13:45:30</Datetime>      <Comments>检查009</Comments>      <AvaiDatetimeBegin>2016-09-26 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-09-27 13:45:30</AvaiDatetimeEnd>      <ExamName>腹部</ExamName>      <ExamType>放射科</ExamType>      <ExamRoomID>普放1室</ExamRoomID>      <ExamModality>DX</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="612c82e3-dd37-4038-b903-10cf60f1ba20"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"   
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestID")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check CS DB" id="658c6cf8-dd78-41a9-b013-946e711877ff"><con:configuration><scriptText>//import java.sql.*;
import groovy.sql.Sql
 
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");


//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestID")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="0c115346-2ca9-43df-afb0-d7e5053e32f5"><con:configuration><scriptText>import groovy.sql.Sql

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestID")
def orderID = testCase.getPropertyValue("orderID")

//get different table of CS
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + request.statusID)
assert globalstatus != null

//print out the result
log.info globalstatus.querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname

if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check report" id="0b4eefcd-631c-405a-9723-59becb3d2d5f"><con:configuration><scriptText>import groovy.sql.Sql

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestID")

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def exam = database.firstRow('select * from examination where requestID =' + requestID) 
assert exam != null

log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info("//////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.02.02 UpdateExam RIS o006 R009" id="55370c4b-1b78-4467-a687-fccf056a4ae5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.02.02 UpdateExam RIS o006 R009" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8e3f4808-1af6-4d5e-8025-e6a64c8e2ce9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S002</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R009</RequestID >      <ExamID>E009</ExamID>      <Status>1</Status>      <Datetime>2016-10-12 15:45:30</Datetime>      <Comments>检查009</Comments>      <AvaiDatetimeBegin>2016-09-26 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-09-27 13:45:30</AvaiDatetimeEnd>      <ExamName>下腹部</ExamName>      <ExamType>放射内科</ExamType>      <ExamRoomID>普放2室</ExamRoomID>      <ExamModality>MR</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="9fe3d7c5-aaa2-4908-922b-11e3dfa812b0"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestID")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null

log.info exam.examroom
log.info exam.examname
log.info exam.modalitytype
log.info exam.modalityname
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check CS DB" id="a053626d-3400-4fc6-8294-b0e2da08b314"><con:configuration><scriptText>//import java.sql.*;
import groovy.sql.Sql
 
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestID")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check notification displayed in Wechat" id="c5249ee3-a777-411e-8574-4c00eb9321bd"><con:configuration><scriptText>import groovy.sql.Sql

//get instance of CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestID")
def orderID = testCase.getPropertyValue("orderID")

//get different table of CS
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def exam = database.firstRow('select * from examination where requestID = '+ requestID) 
assert exam != null
assert exam.actionID == 1


////print out the result
log.info patient.patientname
log.info treatment.createdatetime
log.info treatment.roomname
log.info department.departmentname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname

if (exam.actionID == 1)
{log.info '登记修改'}
log.info department.departmentname
log.info department.examlocation
log.info request.price
log.info request.quatity
log.info request.comments

log.info exam.examroom
log.info exam.examname
log.info exam.modalitytype
log.info exam.modalityname
log.info exam.examID</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check report status" id="02c6af35-efe5-475f-9679-5c270a8780ae"><con:configuration><scriptText>import groovy.sql.Sql

//get instance of CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestID")

//get different table of CS
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null

//print out the result
log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.02.03 Delete Exam RIS o006 R009" id="ad8ac8ba-66c8-4cc8-aafc-a27df3207583"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.02.03 Delete Exam RIS o006 R009" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0a2f8be5-d5f9-412e-a977-84e9d40d37a8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S002</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R009</RequestID >      <ExamID>E009</ExamID>      <Status>2</Status>      <Datetime>2016-10-12 18:45:30</Datetime>      <Comments>检查009</Comments>      <AvaiDatetimeBegin>2016-10-11 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-12 19:45:30</AvaiDatetimeEnd>      <ExamName>下腹部</ExamName>      <ExamType>放射内科</ExamType>      <ExamRoomID>普放2室</ExamRoomID>      <ExamModality>MR</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="7e20588c-a9ca-4780-9306-994c3a94bdab"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"  
   
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestID")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null

log.info exam.examroom
log.info exam.examname
log.info exam.modalitytype
log.info exam.modalityname
log.info exam.actionID
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check CS DB" id="714267a0-ff18-4b26-944a-7407cca8f9f7"><con:configuration><scriptText>//import java.sql.*;
import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestID")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check notification displayed in Wechat" id="df7f843c-a005-436b-8fa1-da8c453d28e0"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestID")
def orderID = testCase.getPropertyValue("orderID")

//get different table of CS
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
assert exam.actionID == 2
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)
assert globalstatus != null

//print out the result
log.info globalstatus.querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info treatment.roomname
log.info department.departmentname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname

if (exam.actionID == 2)
{log.info '登记取消'}
log.info department.departmentname
log.info department.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info exam.examroom
log.info exam.examname
log.info exam.modalitytype
log.info exam.modalityname
log.info exam.examID
log.info('/////')</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>orderID</con:name><con:value>'O006'</con:value></con:property><con:property><con:name>requestID</con:name><con:value>'R009'</con:value></con:property><con:property><con:name>treatmentID</con:name><con:value>'T003'</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID003 one order with multi requests" searchProperties="true" id="4c45c589-b5ca-49c2-a161-3680ba9fa855"><con:settings/><con:testStep type="request" name="01.03.02.04 Pre-condition CreatTreatment T008" id="9de65c25-ce5a-46ca-a432-324e2ae82d48"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.03.02.04 Pre-condition CreatTreatment T008" id="50489b65-ac37-4f15-b513-ef9fa649cd07"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>1</EventCatalog>    <TreatmentID>T008</TreatmentID>  </BasicInfo>  <!-- EventCatalog = 1 -> HISRegistration -->  <HISRegistration>    <ReservID>0</ReservID> <!-- reservation id, maybe null -->    <Status>0</Status>    <Datetime>2016-10-05 13:45:30</Datetime>    <Comments>微信测试008</Comments>    <AvaiDatetimeBegin>2016-10-06 13:45:30</AvaiDatetimeBegin>    <AvaiDatetimeEnd>2016-10-06 13:45:30</AvaiDatetimeEnd>    <DepartmentID>005</DepartmentID>    <RoomName>心内诊室</RoomName>    <Type>医保</Type>  </HISRegistration></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8e586008-9d2f-4814-9ec4-cff1216f39e6"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.02.04 Precondition CreateOrder o008 for T008" id="d371ea11-54f0-424e-8397-a1f70cfdfde8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.03.02.04 Precondition CreateOrder o008 for T008" id="047acdde-1b71-40f2-8e36-9541103c5fe1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T008</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O008">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-10-06 13:45:30</Datetime>      <Comments>微信测试exam</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="381f5bc8-8802-40e5-9f47-0807941b838e"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.02.04 CreateExam RIS o008 R013" id="4fc01b44-9f26-458a-a350-ca7f737003bf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.02.04 CreateExam RIS o008 R013" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f120bc77-98ea-44c8-98ac-db3a0c8b701c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S008</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R013</RequestID >      <ExamID>E013</ExamID>      <Status>0</Status>      <Datetime>2016-10-08 13:45:30</Datetime>      <Comments>检查013</Comments>      <AvaiDatetimeBegin>2016-10-09 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-09 13:45:30</AvaiDatetimeEnd>      <ExamName>胸腔</ExamName>      <ExamType>心脏超声</ExamType>      <ExamRoomID>超声1室</ExamRoomID>      <ExamModality>US</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="c8073417-aae1-4195-8bd5-f9a0f7b9a374"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestIDnew")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check CS DB" id="115adbb8-fe69-49a2-b62c-3b541ecd5a74"><con:configuration><scriptText>//import java.sql.*;
import groovy.sql.Sql
 
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestIDnew")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="6bb490e1-2091-40a3-903a-4114f6845a1f"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestIDnew")
def orderID = testCase.getPropertyValue("orderID")

def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null

//print out the result
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check report status" id="92675a96-c2f6-44ad-a46f-fabca91051e5"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestIDnew")

def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null

log.info patient.patientname
log.info requestdepartment.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.02.05 Precondition CreateExam RIS o008 R014" id="eb42f3b1-12d5-4212-8ae2-c4e9fee15f94"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.02.05 Precondition CreateExam RIS o008 R014" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c9e9a2ca-1c9d-4cc2-a19e-37dc4fcaf1a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S008</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R014</RequestID >      <ExamID>E014</ExamID>      <Status>0</Status>      <Datetime>2016-10-11 13:45:30</Datetime>      <Comments>检查014</Comments>      <AvaiDatetimeBegin>2016-10-12 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-12 16:45:30</AvaiDatetimeEnd>      <ExamName>眼球</ExamName>      <ExamType>眼科超声</ExamType>      <ExamRoomID>超声2室</ExamRoomID>      <ExamModality>US</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="bb70fe71-f7d4-4544-8888-1509089e0658"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestIDdelete")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check notification info displayed in Wechat" id="40000e62-e3c7-4a9a-96c4-39501ce35ed4"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestIDdelete")
def orderID = testCase.getPropertyValue("orderID")

def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null

//print out the result
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Click &quot;Check Exam Status&quot;" id="d27bf5a5-a05a-4be8-bc0d-3a77c2e78950"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestIDnew = testCase.getPropertyValue("requestIDnew")
def requestIDdelete = testCase.getPropertyValue("requestIDdelete")
def requestIDother = testCase.getPropertyValue("requestIDother")
def orderID = testCase.getPropertyValue("orderID")

def exam_new = database.firstRow('select * from examination where requestID = ' + requestIDnew) 
assert exam_new != null
def exam_delete = database.firstRow('select * from examination where requestID = ' + requestIDdelete) 
assert exam_delete != null
def exam_other = database.firstRow('select * from examination where requestID = ' + requestIDother) 

def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request_new = database.firstRow('select * from request where requestID = ' + requestIDnew)
assert request_new != null
def requestdepartment_new = database.firstRow('select * from department where departmentID =' + request_new.excdepartmentID)
assert requestdepartment_new != null

def request_delete = database.firstRow('select * from request where requestID = ' + requestIDdelete)
assert request_delete != null
def requestdepartment_delete = database.firstRow('select * from department where departmentID =' + request_delete.excdepartmentID)
assert requestdepartment_delete != null

def request_other = database.firstRow('select * from request where requestID = ' + requestIDother)
assert request_other != null
def requestdepartment_other = database.firstRow('select * from department where departmentID =' + request_other.excdepartmentID)
assert requestdepartment_other != null

//print out the result
log.info patient.patientname
log.info request_new.itemname
switch (exam_new.actionID)
{
	case 0:
	log.info '已登记';
	break;

	case 1:
	log.info '登记修改';
	break;

	case 2:
	log.info '登记取消';
	break;
}
log.info requestdepartment_new.departmentname
log.info requestdepartment_new.examlocation

log.info request_delete.itemname
switch (exam_delete.actionID)
{
	case 0:
	log.info '已登记';
	break;

	case 1:
	log.info '登记修改';
	break;

	case 2:
	log.info '登记取消';
	break;
}
log.info requestdepartment_delete.departmentname
log.info requestdepartment_delete.examlocation

log.info request_other.itemname
if (exam_other == null)
{
	log.info '已开单';
}
log.info requestdepartment_other.departmentname
log.info requestdepartment_other.examlocation
//log.info request_new.price
//log.info request_new.quatity
//log.info request_new.comments
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check report status" id="5df8ffec-076c-457b-a522-894fc9c4b431"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestIDdelete = testCase.getPropertyValue("requestIDdelete")
def requestIDnew = testCase.getPropertyValue("requestIDnew")

def exam_new = database.firstRow('select * from examination where requestID = ' + requestIDnew) 
assert exam_new != null
def exam_delete = database.firstRow('select * from examination where requestID = ' + requestIDdelete) 
assert exam_delete != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
//def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
//assert treatment != null

def request_new = database.firstRow('select * from request where requestID = ' + requestIDnew)
assert request_new != null
def requestdepartment_new = database.firstRow('select * from department where departmentID =' + request_new.excdepartmentID)
assert requestdepartment_new != null
def request_delete = database.firstRow('select * from request where requestID = ' + requestIDdelete)
assert request_delete != null
def requestdepartment_delete = database.firstRow('select * from department where departmentID =' + request_delete.excdepartmentID)
assert requestdepartment_delete != null


log.info patient.patientname
if (exam_new.actionID !=2)
{

	log.info requestdepartment_new.departmentname
	log.info exam_new.examname
	log.info exam_new.createdatetime

}

if (exam_delete.actionID !=2)
{
	log.info requestdepartment_delete.departmentname
	log.info exam_delete.examname
	log.info exam_delete.createdatetime
}

log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="SOAP Response" name="SOAP Response" id="6120556e-9f18-4e1d-9f28-2235ca6ed17d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.02.05 Delete Exam RIS o008 R014" id="b033a648-44d2-4b8f-8934-393d6a90dc97"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.02.05 Delete Exam RIS o008 R014" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1e79497f-dd58-4abf-ae33-e573899373d3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S004</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R014</RequestID >      <ExamID>E014</ExamID>      <Status>2</Status>      <Datetime>2016-10-12 18:45:30</Datetime>      <Comments>检查014</Comments>      <AvaiDatetimeBegin>2016-10-11 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-12 19:45:30</AvaiDatetimeEnd>      <ExamName>眼球</ExamName>      <ExamType>眼科超声</ExamType>      <ExamRoomID>超声2室</ExamRoomID>      <ExamModality>US</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="03a945f4-968e-4f30-abed-35fa38fdce0e"/><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="33cf8ada-dae5-420c-9008-1b9d9e548c2b"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"  
   
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def requestID = testCase.getPropertyValue("requestIDdelete")
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
assert exam.actionID == 2

log.info exam.examroom
log.info exam.examname
log.info exam.modalitytype
log.info exam.modalityname
log.info exam.actionID
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check notification displayed in Wechat" id="e8a121cb-e03e-4cac-b2d4-d8f5119d33e2"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestID = testCase.getPropertyValue("requestIDdelete")
def orderID = testCase.getPropertyValue("orderID")

//get different table of CS
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
assert exam.actionID == 2
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null

//print out the result
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname

assert exam.actionID == 2
if (exam.actionID == 2)
{log.info '登记取消'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info exam.examroom
log.info exam.examname
log.info exam.modalitytype
log.info exam.modalityname
log.info exam.examID
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Click &quot;Check Exam Status&quot;" id="e6d49381-6a4b-49eb-87ff-d4c10ee96f57"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestIDnew = testCase.getPropertyValue("requestIDnew")
def requestIDdelete = testCase.getPropertyValue("requestIDdelete")
def requestIDother = testCase.getPropertyValue("requestIDother")
def orderID = testCase.getPropertyValue("orderID")

def exam_new = database.firstRow('select * from examination where requestID = ' + requestIDnew) 
assert exam_new != null
def exam_delete = database.firstRow('select * from examination where requestID = ' + requestIDdelete) 
assert exam_delete != null
def exam_other = database.firstRow('select * from examination where requestID = ' + requestIDother) 

def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request_new = database.firstRow('select * from request where requestID = ' + requestIDnew)
assert request_new != null
def requestdepartment_new = database.firstRow('select * from department where departmentID =' + request_new.excdepartmentID)
assert requestdepartment_new != null

def request_delete = database.firstRow('select * from request where requestID = ' + requestIDdelete)
assert request_delete != null
def requestdepartment_delete = database.firstRow('select * from department where departmentID =' + request_delete.excdepartmentID)
assert requestdepartment_delete != null

def request_other = database.firstRow('select * from request where requestID = ' + requestIDother)
assert request_other != null
def requestdepartment_other = database.firstRow('select * from department where departmentID =' + request_other.excdepartmentID)
assert requestdepartment_other != null

//print out the result
log.info patient.patientname
log.info request_new.itemname
switch (exam_new.actionID)
{
	case 0:
	log.info '已登记';
	break;

	case 1:
	log.info '登记修改';
	break;

	case 2:
	log.info '登记取消';
	break;
}
log.info requestdepartment_new.departmentname
log.info requestdepartment_new.examlocation

log.info request_delete.itemname
switch (exam_delete.actionID)
{
	case 0:
	log.info '已登记';
	break;

	case 1:
	log.info '登记修改';
	break;

	case 2:
	log.info '登记取消';
	break;
}
log.info requestdepartment_delete.departmentname
log.info requestdepartment_delete.examlocation

log.info request_other.itemname
if (exam_other == null)
{
	log.info '已开单';
}
log.info requestdepartment_other.departmentname
log.info requestdepartment_other.examlocation
//log.info request_new.price
//log.info request_new.quatity
//log.info request_new.comments
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check report" id="14800d61-70cf-424c-811b-09db9ea00136"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def requestIDdelete = testCase.getPropertyValue("requestIDdelete")
def requestIDnew = testCase.getPropertyValue("requestIDnew")

def exam_new = database.firstRow('select * from examination where requestID = ' + requestIDnew) 
assert exam_new != null
def exam_delete = database.firstRow('select * from examination where requestID = ' + requestIDdelete) 
assert exam_delete != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
//def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
//assert treatment != null

def request_new = database.firstRow('select * from request where requestID = ' + requestIDnew)
assert request_new != null
def requestdepartment_new = database.firstRow('select * from department where departmentID =' + request_new.excdepartmentID)
assert requestdepartment_new != null
def request_delete = database.firstRow('select * from request where requestID = ' + requestIDdelete)
assert request_delete != null
def requestdepartment_delete = database.firstRow('select * from department where departmentID =' + request_delete.excdepartmentID)
assert requestdepartment_delete != null

log.info patient.patientname
if (exam_new.actionID !=2)
{

	log.info requestdepartment_new.departmentname
	log.info exam_new.examname
	log.info exam_new.createdatetime

}

if (exam_delete.actionID !=2)
{
	log.info requestdepartment_delete.departmentname
	log.info exam_delete.examname
	log.info exam_delete.createdatetime
}


log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>treatmentID</con:name><con:value>'T008'</con:value></con:property><con:property><con:name>orderID</con:name><con:value>'O008'</con:value></con:property><con:property><con:name>requestIDnew</con:name><con:value>'R013'</con:value></con:property><con:property><con:name>requestIDdelete</con:name><con:value>'R014'</con:value></con:property><con:property><con:name>requestIDother</con:name><con:value>'R015'</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID003 check report for T008" searchProperties="true" id="7eb0b6ff-70aa-476d-9753-81fa0b9f70a2"><con:settings/><con:testStep type="request" name="01.03.03.01 Report is  ready R013 E013" id="74477b6e-e395-49de-98a0-368183ac902d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ReportReadyNotify</con:operation><con:request name="01.03.03.01 Report is  ready R013 E013" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="967e1b09-0692-4a30-8215-d9be10ecba9c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>王五</PatientName>  <PatientID>PID003</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E013</applyNo>        <reportID>013</reportID>      <FilePath>\\10.184.129.235\Kiosk K1\Site Data\PDF\北京妇产\ME140918DX050.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="25fcb344-4ec2-4b18-80a8-ae0d2575e4bb"/><con:assertion type="GroovyScriptAssertion" name="Check PS" id="9f5caefa-a0fa-46eb-a409-06d1e9b81d7b"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

sleep(5000)
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def examID = testCase.getPropertyValue("examID")
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null

def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 
def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
assert printmode != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check notification in wechat" id="574fa130-771e-4195-8c9f-b680ed3a44ef"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def examID = testCase.getPropertyValue("examID")
def requestID = testCase.getPropertyValue("requestID")

def exam = database.firstRow('select * from examination where examID = ' + examID) 
assert exam != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null
assert filmreportstatus.reportcount == "1"
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + filmreportstatus.statusID)
assert globalstatus != null

log.info globalstatus.querymessage
log.info patient.patientname
log.info requestdepartment.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
log.info('///////')</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Click Check report" id="05a294a5-e0df-4910-835f-e30c9038913b"><con:configuration><scriptText>import groovy.sql.Sql

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def requestID = testCase.getPropertyValue("requestID")
def examID = testCase.getPropertyValue("examID")

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def exam = database.firstRow('select * from examination where examID =' + examID) 
assert exam != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null


log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info filmreportstatus.statusmessage
log.info("//////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>treatmentID</con:name><con:value>'T008'</con:value></con:property><con:property><con:name>requestID</con:name><con:value>'R013'</con:value></con:property><con:property><con:name>examID</con:name><con:value>'E013'</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID003 Push NotificationT009" searchProperties="true" id="5d85697f-5838-4d70-961f-ab8c9cd06cbf"><con:settings/><con:testStep type="request" name="01.03.04.01 Pre-condition CreatTreatment T009" id="35fd0144-e2fd-4ec0-8b30-a19d12690d50"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.03.04.01 Pre-condition CreatTreatment T009" id="f90b1eb0-a59b-4bfe-aa54-8d30c49bf0a6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>1</EventCatalog>    <TreatmentID>T009</TreatmentID>  </BasicInfo>  <!-- EventCatalog = 1 -> HISRegistration -->  <HISRegistration>    <ReservID>0</ReservID> <!-- reservation id, maybe null -->    <Status>0</Status>    <Datetime>2016-10-13 13:45:30</Datetime>    <Comments>微信测试009</Comments>    <AvaiDatetimeBegin>2016-10-14 16:45:30</AvaiDatetimeBegin>    <AvaiDatetimeEnd>2016-10-14 13:45:30</AvaiDatetimeEnd>    <DepartmentID>001</DepartmentID>    <RoomName>心内诊室</RoomName>    <Type>医保</Type>  </HISRegistration></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c9dd62a8-8bf5-4790-999a-37717e824a24"/><con:assertion type="GroovyScriptAssertion" name="check notification in wechat" id="270b62c7-2a57-4e37-ba6b-b305787424a9"><con:configuration><scriptText>import groovy.sql.Sql;

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")

//get data from His DB
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.140\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def HisDB = Sql.newInstance(url,username,password,driver)
assert HisDB != null 
def Hispatient = HisDB.firstRow('select * from patient where patientID = ' +patientID)
assert Hispatient != null

//get data from CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + treatment.statusID)
assert globalstatus != null
def Hisdepartment = database.firstRow('select * from department where departmentID = '+ department.departmentID )
assert Hisdepartment != null

//show the display info of wechat
log.info globalstatus.querymessage

assert Hispatient.patientname == patient.patientname
log.info patient.patientname

log.info treatment.createdatetime

assert Hisdepartment.departmentname == department.departmentname
log.info department.departmentname
log.info department.examlocation
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
// show the info inputted from request xml which is not shown in wechat
log.info treatment.roomname
log.info treatment.paytype
log.info treatment.actionID

log.info('//////////')</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.01 Precondition CreateOrder o009 for T009" id="f9414d67-efca-4c89-a630-5a42041fa8c2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>HISStatusUpdateNotify</con:operation><con:request name="01.03.04.01 Precondition CreateOrder o009 for T009" id="3ebdffcd-ec2a-4ea0-bdc8-306ecc001ca5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:HISStatusUpdateNotify>
         <!--Optional:-->
         <tem:infoXml><![CDATA[<HISStatusInfo>  <!--Basic Info-->  <BasicInfo>    <PatientID>PID003</PatientID>    <EventCatalog>3</EventCatalog>    <TreatmentID>T009</TreatmentID>  </BasicInfo>  <HISPlaceOrder>    <OrderItem id="O009">      <Status>0</Status> <!--0: Created, 1: Modified, 2: Deleted/Cancelled-->      <Datetime>2016-10-13 20:45:30</Datetime>      <Comments>微信测试exam</Comments>    </OrderItem>  </HISPlaceOrder></HISStatusInfo>]]]]>><![CDATA[</tem:infoXml>
      </tem:HISStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b31f141d-9831-4a4e-93e8-31c988c71b7a"/><con:assertion type="GroovyScriptAssertion" name="check notification in wechat" id="1f92439a-76e2-4ee6-b6ba-4e81435efc35"><con:configuration><scriptText>import groovy.sql.Sql;

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

sleep(6000)
//get data from His DB
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.140\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def HisDB = Sql.newInstance(url,username,password,driver)
assert HisDB != null 
def Hispatient = HisDB.firstRow('select * from patient where patientID = ' +patientID)
assert Hispatient != null
def Hisorder = HisDB.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert Hisorder != null
//get data from CS DB
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
assert database != null
def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + order.statusID)
assert globalstatus != null
def Hisdepartment = HisDB.firstRow('select * from department where departmentID = '+ department.departmentID )
assert Hisdepartment != null

//verify whether CS get the order record from HIS
assert order.treatmentID == treatment.treatmentID
assert Hisorder.diagnosis == order.diagnosis
//verify whether CS get the patient and department record from HIS
assert Hispatient.patientname == patient.patientname
assert Hisdepartment.departmentname == department.departmentname

//verify the new request records got from HIS are correct
def requestcount = HisDB.firstRow('select count(*) from request where placeorderID = '+ orderID)
assert requestcount != null
def Hisrequest = HisDB.rows('select * from request where placeorderID = '+ orderID)
def request = database.rows('select * from request where placeorderID = '+ orderID)
//show the display info of wechat
log.info globalstatus.querymessage
log.info patient.patientname
for (def i=0; i&lt;requestcount[0]; i++)
{
	//verify the new request records got from HIS are correct
	assert Hisrequest[i].requestID == request[i].requestID
	assert Hisrequest[i].itemname == request[i].itemname
	assert Hisrequest[i].comments == request[i].comments

	log.info request[i].itemname
	def requestdepartment = database.firstRow('select * from department where departmentID =' + request[i].excdepartmentID)
     assert requestdepartment != null
	log.info requestdepartment.departmentname
	log.info requestdepartment.examlocation
}
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
log.info ('///////')</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.01 Precondition CreateExam RIS R016" id="55a27db4-c1e0-4278-ad5c-ac8c884544cc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.01 Precondition CreateExam RIS R016" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="29ea3d1e-547d-4e43-8ae0-310fe15e1a8d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S016</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R016</RequestID >      <ExamID>E016</ExamID>      <Status>0</Status>      <Datetime>2016-10-08 13:45:30</Datetime>      <Comments>检查016</Comments>      <AvaiDatetimeBegin>2016-10-09 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-09 13:45:30</AvaiDatetimeEnd>      <ExamName>眼角膜</ExamName>      <ExamType>US</ExamType>      <ExamRoomID>超声1室</ExamRoomID>      <ExamModality>东软超声仪</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="194dcc49-c2bf-4d7e-961e-5044aca9aaa8"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[0].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check CS DB" id="b22744b0-fba2-46cd-a8a2-3b47d8720c0d"><con:configuration><scriptText>//import java.sql.*;
import groovy.sql.Sql
 
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")
sleep(5000)

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[0].requestID + "\'"

def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="3ed18247-9c90-4f94-b77b-2b253c893b6a"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[0].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check report status" id="14e72a69-8c28-4803-98df-cc5b3a047130"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[0].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null

def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null

log.info patient.patientname
log.info requestdepartment.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.01 Precondition CreateExam RIS R017" id="6d43adb3-7864-4813-9615-6b67e80be73d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.01 Precondition CreateExam RIS R017" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fe89ce4b-419b-4522-a229-4ec8890e340c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S016</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R017</RequestID >      <ExamID>E017</ExamID>      <Status>0</Status>      <Datetime>2016-10-15 13:45:30</Datetime>      <Comments>检查017</Comments>      <AvaiDatetimeBegin>2016-10-09 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-09 13:45:30</AvaiDatetimeEnd>      <ExamName>左心室</ExamName>      <ExamType>CR</ExamType>      <ExamRoomID>超声1室</ExamRoomID>      <ExamModality>瑞克超声仪</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="f9471f9b-9df7-492e-8f78-e40bd867bd10"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[1].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check CS DB" id="60c1c5b1-c266-420d-9447-8d4ee3cfdfbe"><con:configuration><scriptText>//import java.sql.*;
import groovy.sql.Sql
 
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")
sleep(5000)

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[1].requestID + "\'"

def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="963321aa-a508-44ef-8796-455c52738952"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[1].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check report status" id="b1df8bba-4803-45bb-aa20-bb73dac2e0d9"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[1].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null

def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null

log.info patient.patientname
log.info requestdepartment.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="01.03.04.01 Both mode send film to E016 by script only film ready" id="67cc9c4d-f289-43bc-bc11-4f6ff4e72011"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testRunner.testCase.getPropertyValue("treatmentID")
def orderID = testRunner.testCase.getPropertyValue("orderID")

//get database instance of PS->ecs
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"       
def database = Sql.newInstance(url,username,password,driver)  

def patient = database.firstRow('select * from patient where patientID = ' + patientID ) 
assert patient != null
def patientname = patient.patientname
def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[0].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

//get database instance of PS->WGGC and update printmode to "both mode"
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 

//get timestamp to create value for some parameters
def time = new Date()
def studyinstanceUID = "1.2.840.113564.86.3.0.18467." + time.format("yyyyMMddHHmmss.SSS") + ".8378"
def studydate = time.format("yyyyMMdd")
def studytime = time.format("HHmmss")
def createtime = time.format("yyyy-MM-dd HH:mm:ss.SSS")

//if there is no film for the exam, insert a record into "filminfo" to simulate the action for sending film to specific exam
def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
if (filminfo == null)
{
	wggcdatabase.execute ("insert into AFP_filminfo values (${studyinstanceUID},${"0"},${"0"},${createtime},${exam.examID},${patientname},${patient.patientID},${""},${""},${studydate},${studytime},${""},${"ImageSuite"},${"10.184.129.199"},${"0"},${"0"},${"0"},${"8INX10IN"},${"BLUE FILM"},${"PORTRAIT"},${""},${"PROCESSOR"},${"MED"},${"1"},${"BLACK"},${"BLACK"},${"21"},${"300"},${"NO"},${""},${""},${""},${createtime}) ")
}

def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
for (def i=1;printmode == null &amp;&amp; i&lt;10; i++)
{
	printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
	sleep(1000)
} 
assert printmode != null
//update printmode
wggcdatabase.execute "update AFP_printmode set printmode = 0 where accessionnumber = "+ examID

//check there is no report for this exam
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo == null

//assert database record of PS->ECS
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null

//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def CSrequestID = "\'"+CSrequestrows[0].requestID + "\'"
def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
assert CSexam != null 
def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
assert CSpatient != null
def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
assert CSrequest != null
def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
assert department != null
def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
assert CSfilmreportstatus != null
def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

assert globalstatus.statusdescription == "未就绪"
//print out info for wechat "check report status"
log.info globalstatus.querymessage
log.info CSpatient.patientname
log.info department.departmentname
log.info CSexam.examname
log.info CSexam.createdatetime
log.info CSfilmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")</script></con:config></con:testStep><con:testStep type="request" name="01.03.04.01 Both mode R017 E017 only report ready" id="6ada2961-6920-4135-88ab-ac9082f21bc1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ReportReadyNotify</con:operation><con:request name="01.03.04.01 Both mode R017 E017 only report ready" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cf250e6f-b6b2-4b41-9b7e-3e823450f28c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>王五</PatientName>  <PatientID>PID003</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E017</applyNo>        <reportID>017</reportID>      <FilePath>\\10.184.129.235\Kiosk K1\Site Data\PDF\济宁\MR201407030912.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="d295b0cf-2029-4b16-9cb7-72e0e00f985e"/><con:assertion type="GroovyScriptAssertion" name="Check PS" id="98ee5701-c836-4cee-a3e0-e7ccc7f8fec3"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

sleep(5000)
def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[1].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 
def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
assert printmode != null
wggcdatabase.execute "update AFP_printmode set printmode = 0 where accessionnumber = "+ examID

def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
//assert filminfo == null
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null
log.info ("/////////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Click Check report" id="ee0162e5-e5b2-47d9-abcc-67efaa7d7ab1"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get request rows of order 009, and second request is R017 
def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[1].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" + exam.examID+ "\'"


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

assert globalstatus.statusdescription == "未就绪"
log.info globalstatus.querymessage
log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info filmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="01.03.04.01 Both mode  E017 both report and film are ready" id="b38feb98-a6a0-43cf-b2aa-c77e3442b0fe"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testRunner.testCase.getPropertyValue("treatmentID")
def orderID = testRunner.testCase.getPropertyValue("orderID")

//get database instance of PS->ecs
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver) 
// get value for some info
def patient = database.firstRow('select * from patient where patientID = ' + patientID ) 
assert patient != null
def patientname = patient.patientname
def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
//def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[1].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

//get database instance of PS->WGGC
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 

//get timestamp to create value for some parameters
def time = new Date()
def studyinstanceUID = "1.2.840.113564.86.3.0.18467." + time.format("yyyyMMddHHmmss.SSS") + ".8378"
def studydate = time.format("yyyyMMdd")
def studytime = time.format("HHmmss")
def createtime = time.format("yyyy-MM-dd HH:mm:ss.SSS")

//if there is no film for the exam, insert a record into "filminfo" to simulate the action for sending film to specific exam
def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
if (filminfo == null)
{
	wggcdatabase.execute ("insert into AFP_filminfo values (${studyinstanceUID},${"0"},${"0"},${createtime},${exam.examID},${patientname},${patient.patientID},${""},${""},${studydate},${studytime},${""},${"ImageSuite"},${"10.184.129.199"},${"0"},${"0"},${"0"},${"8INX10IN"},${"BLUE FILM"},${"PORTRAIT"},${""},${"PROCESSOR"},${"MED"},${"1"},${"BLACK"},${"BLACK"},${"21"},${"300"},${"NO"},${""},${""},${""},${createtime}) ")
}

def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
for (def i=1;printmode == null &amp;&amp; i&lt;10; i++)
{
	printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
	sleep(1000)
} 
assert printmode != null
// update print mode to "Both report and film"
wggcdatabase.execute "update AFP_printmode set printmode = 0 where accessionnumber = "+ examID
// there should be a new record of the exam inserted in reportinfo
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null

//assert database record of PS->ECS
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null

//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def CSrequestID = "\'"+CSrequestrows[1].requestID + "\'"
def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
assert CSexam != null 
def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
assert CSpatient != null
def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
assert CSrequest != null
def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
assert department != null
def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
assert CSfilmreportstatus != null
def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

//print out info for wechat "check report status"
log.info globalstatus.querymessage
log.info CSpatient.patientname
log.info department.departmentname
log.info CSexam.examname
log.info CSexam.createdatetime
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
log.info("//////")</script></con:config></con:testStep><con:testStep type="request" name="01.03.04.02 Precondition CreateExam RIS R018" id="201d5384-2d0f-4881-8e16-771eeec36852"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.02 Precondition CreateExam RIS R018" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b181d1b4-edfb-47c9-80c8-fb2cb0356ecd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S016</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R018</RequestID >      <ExamID>E018</ExamID>      <Status>0</Status>      <Datetime>2016-10-15 13:45:30</Datetime>      <Comments>检查018</Comments>      <AvaiDatetimeBegin>2016-10-16 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-16 16:45:30</AvaiDatetimeEnd>      <ExamName>右心房</ExamName>      <ExamType>MR</ExamType>      <ExamRoomID>MR1室</ExamRoomID>      <ExamModality>西门子MR</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="2babf133-f47a-43b3-bd8f-fb3a4f09b5eb"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  
sleep(1000)

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[2].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="5be7ce16-9c01-4d49-b9a6-fbb53ffcac0c"><con:configuration><scriptText>import groovy.sql.Sql
sleep(1000)
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[2].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.02 Precondition CreateExam RIS R019" id="f7aac7a5-4d15-45fc-8c03-43676c4615ab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.02 Precondition CreateExam RIS R019" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="624ea63e-e69f-4d2c-ae7e-e2504e0116ac"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S019</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R019</RequestID >      <ExamID>E019</ExamID>      <Status>0</Status>      <Datetime>2016-10-18 13:45:30</Datetime>      <Comments>检查019</Comments>      <AvaiDatetimeBegin>2016-10-18 10:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-18 18:45:30</AvaiDatetimeEnd>      <ExamName>肝功能</ExamName>      <ExamType>血液</ExamType>      <ExamRoomID>检验1室</ExamRoomID>      <ExamModality>血液检验仪</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="5002a481-4baa-436e-bc61-d9f406cc7955"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
sleep(1000)
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[3].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="5ee4efd0-4fbf-4af2-a451-7f0af37a3a36"><con:configuration><scriptText>import groovy.sql.Sql
sleep(1000)
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[3].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check report status" id="cc367d62-fee9-4288-aaa7-dc6bedb91954"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[3].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null

def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null

log.info patient.patientname
log.info requestdepartment.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.02 Film Only R018 E018  report is ready" id="128ecb92-2751-47e2-a08b-0519a1e62063"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ReportReadyNotify</con:operation><con:request name="01.03.04.02 Film Only R018 E018  report is ready" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0035dd33-b285-4109-8256-3cd3337c135a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>王五</PatientName>  <PatientID>PID003</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E018</applyNo>        <reportID>018</reportID>      <FilePath>\\10.184.129.235\Kiosk K1\Site Data\PDF\遂宁\20140607\1377257.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f010c3ce-78a5-4491-a97c-8b99bc2ad028"/><con:assertion type="GroovyScriptAssertion" name="Check PS" id="2917b69a-c425-45cb-bb22-442f81f41082"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

sleep(1000)

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[2].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 
def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
assert printmode != null
wggcdatabase.execute "update AFP_printmode set printmode = 1 where accessionnumber = "+ examID

//def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
//assert filminfo == null
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Click Check report" id="8c2067d8-2105-490a-a5fb-12361100f5af"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get request rows of order 009, and second request is R017 
def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[2].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" + exam.examID+ "\'"


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

assert globalstatus.statusdescription == "未就绪"
log.info globalstatus.querymessage
log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info filmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="01.03.04.02 Film Only E018 both report and film are ready" id="b46a973e-3278-4dee-811c-561a3ea4ece4"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testRunner.testCase.getPropertyValue("treatmentID")
def orderID = testRunner.testCase.getPropertyValue("orderID")

//get database instance of PS->ecs
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  


def patient = database.firstRow('select * from patient where patientID = ' + patientID ) 
assert patient != null
def patientname = patient.patientname
def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[2].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

//get database instance of PS->WGGC
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 

//get timestamp to create value for some parameters
def time = new Date()
def studyinstanceUID = "1.2.840.113564.86.3.0.18467." + time.format("yyyyMMddHHmmss.SSS") + ".8378"
def studydate = time.format("yyyyMMdd")
def studytime = time.format("HHmmss")
def createtime = time.format("yyyy-MM-dd HH:mm:ss.SSS")

//if there is no film for the exam, insert a record into "filminfo" to simulate the action for sending film to specific exam
def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
if (filminfo == null)
{
	wggcdatabase.execute ("insert into AFP_filminfo values (${studyinstanceUID},${"0"},${"0"},${createtime},${exam.examID},${patientname},${patient.patientID},${""},${""},${studydate},${studytime},${""},${"ImageSuite"},${"10.184.129.199"},${"0"},${"0"},${"0"},${"8INX10IN"},${"BLUE FILM"},${"PORTRAIT"},${""},${"PROCESSOR"},${"MED"},${"1"},${"BLACK"},${"BLACK"},${"21"},${"300"},${"NO"},${""},${""},${""},${createtime}) ")
}

def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
for (def i=1;printmode == null &amp;&amp; i&lt;10; i++)
{
	printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
	sleep(1000)
} 
//assert the record is insert to filminfo successfully
assert printmode != null

// verify table reportinfo
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null

//assert database record of PS->ECS
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null

//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def CSrequestID = "\'"+CSrequestrows[2].requestID + "\'"
def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
assert CSexam != null 
def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
assert CSpatient != null
def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
assert CSrequest != null
def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
assert department != null
def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
assert CSfilmreportstatus != null
assert CSfilmreportstatus.filmcount == 1
assert CSfilmreportstatus.reportcount == 1
def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

//print out info for wechat "check report status"
log.info globalstatus.querymessage
log.info CSpatient.patientname
log.info department.departmentname
log.info CSexam.examname
log.info CSexam.createdatetime
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
log.info("//////")</script></con:config></con:testStep><con:testStep type="groovy" name="01.03.04.02 Film Only E019 film is ready" id="588e0250-bdfe-4c90-a44c-28079ce7ef66"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testRunner.testCase.getPropertyValue("treatmentID")
def orderID = testRunner.testCase.getPropertyValue("orderID")

//get database instance of PS->ecs
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

def patient = database.firstRow('select * from patient where patientID = ' + patientID ) 
assert patient != null
def patientname = patient.patientname
def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[3].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

//get database instance of PS->WGGC
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 

//get timestamp to create value for some parameters
def time = new Date()
def studyinstanceUID = "1.2.840.113564.86.3.0.18467." + time.format("yyyyMMddHHmmss.SSS") + ".8378"
def studydate = time.format("yyyyMMdd")
def studytime = time.format("HHmmss")
def createtime = time.format("yyyy-MM-dd HH:mm:ss.SSS")

//if there is no film for the exam, insert a record into "filminfo" to simulate the action for sending film to specific exam
def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
if (filminfo == null)
{
	wggcdatabase.execute ("insert into AFP_filminfo values (${studyinstanceUID},${"0"},${"0"},${createtime},${exam.examID},${patientname},${patient.patientID},${""},${""},${studydate},${studytime},${""},${"ImageSuite"},${"10.184.129.199"},${"0"},${"0"},${"0"},${"8INX10IN"},${"BLUE FILM"},${"PORTRAIT"},${""},${"PROCESSOR"},${"MED"},${"1"},${"BLACK"},${"BLACK"},${"21"},${"300"},${"NO"},${""},${""},${""},${createtime}) ")
}

def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
for (def i=1;printmode == null &amp;&amp; i&lt;10; i++)
{
	printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
	sleep(1000)
} 
//assert the record is insert to filminfo successfully
assert printmode != null
//  update print mode to "Film Only"
wggcdatabase.execute "update AFP_printmode set printmode = 1 where accessionnumber = "+ examID
// there is no record for the exam in reportinfo
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo == null

//assert database record of PS->ECS
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null

//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def CSrequestID = "\'"+CSrequestrows[3].requestID + "\'"
def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
assert CSexam != null 
def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
assert CSpatient != null
def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
assert CSrequest != null
def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
assert department != null
def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
assert CSfilmreportstatus != null
assert CSfilmreportstatus.filmcount == 1

def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

//print out info for wechat "check report status"
log.info globalstatus.querymessage
log.info CSpatient.patientname
log.info department.departmentname
log.info CSexam.examname
log.info CSexam.createdatetime
log.info globalstatus.statusdescription
log.info globalstatus.notificationmessage
log.info("//////")</script></con:config></con:testStep><con:testStep type="request" name="01.03.04.03 Precondition CreateExam RIS R020" id="19e13bf8-4b40-4e18-a4d6-6e1cbf22212c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.03 Precondition CreateExam RIS R020" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dbcfabda-da2b-437d-9460-a41fb6382469"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S016</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R020</RequestID >      <ExamID>E020</ExamID>      <Status>0</Status>      <Datetime>2016-10-17 13:45:30</Datetime>      <Comments>检查020</Comments>      <AvaiDatetimeBegin>2016-10-16 15:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-16 18:45:30</AvaiDatetimeEnd>      <ExamName>动脉</ExamName>      <ExamType>内窥镜</ExamType>      <ExamRoomID>内窥镜1室</ExamRoomID>      <ExamModality>西门子内窥镜</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="fbbddc06-a3bc-4b14-a99b-f4a3c2bf9834"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  
sleep(1000)
//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[4].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="9521fed3-e5b5-4708-b4b6-72b0f8998492"><con:configuration><scriptText>import groovy.sql.Sql
sleep(2000)
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[4].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.03 Precondition CreateExam RIS R021" id="c051a6a1-9e13-427e-9a47-361d7c5ce4d1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.03 Precondition CreateExam RIS R021" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="925e143b-9cb1-4b68-b340-115fdb8281f4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S019</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R021</RequestID >      <ExamID>E021</ExamID>      <Status>0</Status>      <Datetime>2016-10-18 20:45:30</Datetime>      <Comments>检查021</Comments>      <AvaiDatetimeBegin>2016-10-18 15:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-19 10:45:30</AvaiDatetimeEnd>      <ExamName>静脉</ExamName>      <ExamType>血液检测</ExamType>      <ExamRoomID>检验2室</ExamRoomID>      <ExamModality>血凝检验仪</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="0b015ba0-cd40-4ba6-8a69-41d84fd3297f"><con:configuration><scriptText>import groovy.sql.Sql;   
sleep(1000)
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[3].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="e7309bcf-5393-4462-9d25-8fa38120012b"><con:configuration><scriptText>import groovy.sql.Sql
sleep(1000)
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[4].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="01.03.04.03  Report only mode, only send film to E020 by script" id="aa418b0c-7b76-4fbe-9df9-c7a1e581f65b"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testRunner.testCase.getPropertyValue("treatmentID")
def orderID = testRunner.testCase.getPropertyValue("orderID")

//get database instance of PS->ecs
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"       
def database = Sql.newInstance(url,username,password,driver)  

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[4].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID
def patient = database.firstRow('select * from patient where patientID = ' + patientID ) 
assert patient != null
def patientname = patient.patientname

//get database instance of PS->WGGC and update printmode to "both mode"
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 

//get timestamp to create value for some parameters
def time = new Date()
def studyinstanceUID = "1.2.840.113564.86.3.0.18467." + time.format("yyyyMMddHHmmss.SSS") + ".8378"
def studydate = time.format("yyyyMMdd")
def studytime = time.format("HHmmss")
def createtime = time.format("yyyy-MM-dd HH:mm:ss.SSS")

//if there is no film for the exam, insert a record into "filminfo" to simulate the action for sending film to specific exam
def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
if (filminfo == null)
{
	wggcdatabase.execute ("insert into AFP_filminfo values (${studyinstanceUID},${"0"},${"0"},${createtime},${exam.examID},${patientname},${patient.patientID},${""},${""},${studydate},${studytime},${""},${"ImageSuite"},${"10.184.129.199"},${"0"},${"0"},${"0"},${"8INX10IN"},${"BLUE FILM"},${"PORTRAIT"},${""},${"PROCESSOR"},${"MED"},${"1"},${"BLACK"},${"BLACK"},${"21"},${"300"},${"NO"},${""},${""},${""},${createtime}) ")
}

def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
for (def i=1;printmode == null &amp;&amp; i&lt;10; i++)
{
	printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
	sleep(1000)
} 
//assert the record is insert to filminfo successfully
assert printmode != null

// modify print mode to "Report only"
wggcdatabase.execute "update AFP_printmode set printmode = 2 where accessionnumber = "+ examID
//check there is no report for this exam
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo == null

//assert database record of PS->ECS
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null

//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def CSrequestID = "\'"+CSrequestrows[4].requestID + "\'"
def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
assert CSexam != null 
def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
assert CSpatient != null
def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
assert CSrequest != null
def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
assert department != null
def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
assert CSfilmreportstatus != null
def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

//print out info for wechat "check report status"
assert globalstatus.statusdescription == "未就绪"
log.info globalstatus.querymessage
log.info CSpatient.patientname
log.info department.departmentname
log.info CSexam.examname
log.info CSexam.createdatetime
log.info CSfilmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")</script></con:config></con:testStep><con:testStep type="request" name="01.03.04.03 Report Only R020 E020 send report is ready" id="2c9bab9d-bbad-4d07-8881-7fa0f543def5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ReportReadyNotify</con:operation><con:request name="01.03.04.03 Report Only R020 E020 send report is ready" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7cf712a6-d12c-48d0-8b87-b81c4447e88c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>王五</PatientName>  <PatientID>PID003</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E020</applyNo>        <reportID>020</reportID>      <FilePath>\\10.184.129.235\Kiosk K1\Site Data\PDF\遂宁\20140607\1387022.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="14e9a39d-889e-4bef-b5fd-7e8b70955cd6"/><con:assertion type="GroovyScriptAssertion" name="Check PS" id="15b00184-5858-4298-a811-345de926f479"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

sleep(1000)

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[4].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 
def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
assert printmode != null

def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
assert filminfo != null
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check notification in wechat" id="6dc6a00d-4dfd-468f-b5f9-633358e3d9ec"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get request rows of order 009, and second request is R017 
def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[4].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" + exam.examID+ "\'"


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

log.info globalstatus.querymessage
log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info globalstatus.statusdescription
log.info filmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.03 Report Only R021 E021 send report is ready" id="3f82eb77-3771-4a08-b8de-a8140a75ab88"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ReportReadyNotify</con:operation><con:request name="01.03.04.03 Report Only R021 E021 send report is ready" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5d287b88-4863-43c8-8200-d0155d14d5a4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>王五</PatientName>  <PatientID>PID003</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E021</applyNo>        <reportID>021</reportID>      <FilePath>\\10.184.129.235\Kiosk K1\Site Data\PDF\遂宁\20140607\1387199.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c2761806-4d34-47f9-b044-75c4b8c6434d"/><con:assertion type="GroovyScriptAssertion" name="Check PS" id="5e178105-6e30-40d1-a7a1-a7392169562e"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

sleep(1000)

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[5].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 
def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
assert printmode != null
wggcdatabase.execute "update AFP_printmode set printmode = 2 where accessionnumber = "+ examID

def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
assert filminfo == null
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check notification in wechat" id="e30b3786-786a-475e-bc6a-0433fe8eea32"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get request rows of order 009, and second request is R017 
def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[5].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" + exam.examID+ "\'"


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

log.info globalstatus.querymessage
log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info globalstatus.statusdescription
log.info filmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.04 Precondition CreateExam RIS R022" id="5666be03-c077-43e8-8001-c7d2f25e7f0e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.04 Precondition CreateExam RIS R022" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="03338f66-5850-47db-9f39-0d959e17257c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S022</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R022</RequestID >      <ExamID>E022</ExamID>      <Status>0</Status>      <Datetime>2016-10-19 20:45:30</Datetime>      <Comments>检查022</Comments>      <AvaiDatetimeBegin>2016-10-19 10:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-19 21:45:30</AvaiDatetimeEnd>      <ExamName>心房</ExamName>      <ExamType>心脏XA</ExamType>      <ExamRoomID>检验3室</ExamRoomID>      <ExamModality>心脏起搏器</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="369cf4a0-c094-46f5-9127-a0666f6629be"><con:configuration><scriptText>import groovy.sql.Sql;   
sleep(1000)
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[6].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="42f0dcd8-ce0a-4e0b-973f-150cf20c678b"><con:configuration><scriptText>import groovy.sql.Sql
sleep(9000)
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[6].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="01.03.04.04 Any mode, Send film to exam E022" id="91e446cd-9ae5-4c80-9573-1187804f18d1"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testRunner.testCase.getPropertyValue("treatmentID")
def orderID = testRunner.testCase.getPropertyValue("orderID")

//get database instance of PS->ecs
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"       
def database = Sql.newInstance(url,username,password,driver)  


def patient = database.firstRow('select * from patient where patientID = ' + patientID ) 
assert patient != null
def patientname = patient.patientname
def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[6].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID
//get database instance of PS->WGGC
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver)

//get timestamp to create value for some parameters
def time = new Date()
def studyinstanceUID = "1.2.840.113564.86.3.0.18467." + time.format("yyyyMMddHHmmss.SSS") + ".8378"
def studydate = time.format("yyyyMMdd")
def studytime = time.format("HHmmss")
def createtime = time.format("yyyy-MM-dd HH:mm:ss.SSS")

//if there is no film for the exam, insert a record into "filminfo" to simulate the action for sending film to specific exam
def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
if (filminfo == null)
{
	wggcdatabase.execute ("insert into AFP_filminfo values (${studyinstanceUID},${"0"},${"0"},${createtime},${exam.examID},${patientname},${patient.patientID},${""},${""},${studydate},${studytime},${""},${"ImageSuite"},${"10.184.129.199"},${"0"},${"0"},${"0"},${"8INX10IN"},${"BLUE FILM"},${"PORTRAIT"},${""},${"PROCESSOR"},${"MED"},${"1"},${"BLACK"},${"BLACK"},${"21"},${"300"},${"NO"},${""},${""},${""},${createtime}) ")
}

def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
for (def i=1;printmode == null &amp;&amp; i&lt;10; i++)
{
	printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
	sleep(1000)
} 
assert printmode != null
wggcdatabase.execute "update AFP_printmode set printmode = 3 where accessionnumber = "+ examID

sleep(9000)
//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def CSrequestID = "\'"+CSrequestrows[6].requestID + "\'"
def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
assert CSexam != null 
def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
assert CSpatient != null
def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
assert CSrequest != null
def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
assert department != null
def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
assert CSfilmreportstatus != null
def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+CSfilmreportstatus.statusID + "\'")
assert globalstatus != null

//print out info for wechat "check report status"
assert globalstatus.statusdescription == "胶片可打印"
log.info globalstatus.querymessage
log.info CSpatient.patientname
log.info department.departmentname
log.info CSexam.examname
log.info CSexam.createdatetime
log.info CSfilmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")
</script></con:config></con:testStep><con:testStep type="request" name="01.03.04.04 Any Mode R022 E022 send report, film and report are ready" id="16773b91-e351-47f3-9ad1-b14899f7cdac"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ReportReadyNotify</con:operation><con:request name="01.03.04.04 Any Mode R022 E022 send report, film and report are ready" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="18189c98-34d8-41a9-9381-a6d97f323898"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>王五</PatientName>  <PatientID>PID003</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E022</applyNo>        <reportID>022</reportID>      <FilePath>\\10.184.129.235\Kiosk K1\Site Data\PDF\遂宁\20140607\1387274.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="01bc2fb6-ae4d-42a6-b62b-ed38df60dc9c"/><con:assertion type="GroovyScriptAssertion" name="Check PS" id="aa8ad18c-7bd4-4dc1-9e49-9f5b57caebec"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

sleep(1000)

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[6].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 
def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
assert printmode != null
wggcdatabase.execute "update AFP_printmode set printmode = 3 where accessionnumber = "+ examID

def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
assert filminfo != null
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check notification in wechat" id="6baba6b5-6193-462b-a563-ac086ba7019a"><con:configuration><scriptText>import groovy.sql.Sql

def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get request rows of order 009, and second request is R017 
def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[6].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" + exam.examID+ "\'"


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

log.info globalstatus.querymessage
log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info globalstatus.statusdescription
log.info filmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.04 Precondition CreateExam RIS R023" id="d980b770-e4f4-484d-bb54-fd56d7f730fb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="01.03.04.04 Precondition CreateExam RIS R023" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="df4670a7-85cd-426c-afa0-86575469fd9d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID003</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S023</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R023</RequestID >      <ExamID>E023</ExamID>      <Status>0</Status>      <Datetime>2016-10-20 10:45:30</Datetime>      <Comments>检查023</Comments>      <AvaiDatetimeBegin>2016-10-20 16:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-10-20 21:45:30</AvaiDatetimeEnd>      <ExamName>耳朵</ExamName>      <ExamType>助听器</ExamType>      <ExamRoomID>检验3室</ExamRoomID>      <ExamModality>听力检测仪</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Check PS DB" id="c76dbc91-b9e2-45c7-9ed9-baa9cfab7bb3"><con:configuration><scriptText>import groovy.sql.Sql;   
sleep(1000)
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def requestID = "\'"+request[7].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check info displayed in Wechat" id="1a28e560-8965-4e62-818c-31bfc475c31f"><con:configuration><scriptText>import groovy.sql.Sql
sleep(9000)
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[7].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def treatment = database.firstRow('select * from treatment where treatmentID = ' + treatmentID)
assert treatment != null
def department = database.firstRow('select * from department where departmentID =' + treatment.departmentID)
assert department != null
def order = database.firstRow('select * from placeorder where placeorderID = ' + orderID)
assert order != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def requestdepartment = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert requestdepartment != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + exam.statusID)

//print out the result
log.info globalstatus.Querymessage
log.info patient.patientname
log.info treatment.createdatetime
log.info department.departmentname
log.info treatment.roomname
log.info department.examlocation
log.info order.diagnosis
log.info request.itemname
if (exam.actionID==0)
{log.info '已登记'}
log.info requestdepartment.departmentname
log.info requestdepartment.examlocation
log.info request.price
log.info request.quatity
log.info request.comments
log.info globalstatus.notificationmessage
log.info("////////")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="01.03.04.04 Any Mode R023 E023 send report only" id="3bcc64a6-e116-4a93-8f2d-d49490ca3a7b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ReportReadyNotify</con:operation><con:request name="01.03.04.04 Any Mode R023 E023 send report only" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8338b32b-78a7-4595-bf3a-9e2e017472a2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ReportReadyNotify>
         <!--Optional:-->
         <tem:xml_para><![CDATA[<ReportReadyNotify>  <PatientName>王五</PatientName>  <PatientID>PID003</PatientID>  <ReportType>PRIS</ReportType>  <applyInfos>    <applyInfo>      <applyNo>E023</applyNo>        <reportID>023</reportID>      <FilePath>\\10.184.129.235\Kiosk K1\Site Data\PDF\遂宁\20140607\1387769.pdf</FilePath>    </applyInfo>  </applyInfos></ReportReadyNotify>]]]]>><![CDATA[</tem:xml_para>
      </tem:ReportReadyNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="06222411-f3b3-4c35-b75d-706f37c5085d"/><con:assertion type="GroovyScriptAssertion" name="Check PS" id="a6ccb9c9-15d7-4ccc-9983-37eba6ebfdba"><con:configuration><scriptText>import groovy.sql.Sql;   
//import java.lang.String;
def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"     
def database = Sql.newInstance(url,username,password,driver)  

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

sleep(1000)

def request = database.rows('select * from request where placeorderID = ' + orderID)
assert request != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+request[7].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" +exam.examID + "\'";
log.info examID

def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver) 
def printmode =  wggcdatabase.firstRow('select * from AFP_printmode where accessionnumber =' + examID)
assert printmode != null
wggcdatabase.execute "update AFP_printmode set printmode = 3 where accessionnumber = "+ examID

def filminfo = wggcdatabase.firstRow('select * from AFP_filminfo where accessionnumber =' + examID)
assert filminfo == null
def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
assert reportinfo != null
def examinfo = database.firstRow('select * from examinfo where accessionnumber = ' + examID)
assert  examinfo != null
def filmreportstatus =  database.firstRow('select * from filmreportstatus where examID = ' +examID)
assert filmreportstatus != null</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check notification in wechat" id="e6d94872-71b1-4d3f-8ff0-64c244d92ba5"><con:configuration><scriptText>import groovy.sql.Sql
sleep(15000)
def database= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");

//get value from property for some parameters
def testCase = messageExchange.modelItem.testCase
def patientID = testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testCase.getPropertyValue("treatmentID")
def orderID = testCase.getPropertyValue("orderID")

//get request rows of order 009, and second request is R017 
def requestrows = database.rows('select * from request where placeorderID = ' + orderID)
assert requestrows != null
def count  = database.firstRow('select count(*) from request where placeorderID = ' + orderID)
def requestID = "\'"+requestrows[7].requestID + "\'"
def exam = database.firstRow('select * from examination where requestID = ' + requestID) 
assert exam != null
def examID = "\'" + exam.examID+ "\'"


def patient = database.firstRow('select * from patient where patientID = ' + patientID)
assert patient != null
def request = database.firstRow('select * from request where requestID = ' + requestID)
assert request != null
def department = database.firstRow('select * from department where departmentID =' + request.excdepartmentID)
assert department != null
def filmreportstatus = database.firstRow('select * from filmreportstatus where examID =' + examID)
assert filmreportstatus != null
def globalstatus = database.firstRow('select * from globalstatus where statusID =' + "\'"+filmreportstatus.statusID + "\'")
assert globalstatus != null

log.info globalstatus.querymessage
log.info patient.patientname
log.info department.departmentname
log.info exam.examname
log.info exam.createdatetime
log.info globalstatus.statusdescription
log.info filmreportstatus.statusmessage
log.info globalstatus.notificationmessage
log.info("//////")


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ReportReadyNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="01.03.04.04 Check report status for all exams of o009" id="603d8af5-5191-4632-8671-e33d9800c3ab"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def treatmentID = testRunner.testCase.getPropertyValue("treatmentID")
def orderID = testRunner.testCase.getPropertyValue("orderID")


//def request = database.rows('select * from request where placeorderID = ' + orderID)
//assert request != null


//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def count  = CSdatabase.firstRow('select count(*) from request where placeorderID = ' + orderID)
for(def i=0;i&lt;count[0];i++)
{
	
	def CSrequestID = "\'"+CSrequestrows[i].requestID + "\'"
	def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
	assert CSexam != null
	def examID = "\'" +CSexam.examID + "\'";
	log.info examID
 
	def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
	assert CSpatient != null
	def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
	assert CSrequest != null
	def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
	assert department != null
	def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
	assert CSfilmreportstatus != null
	def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+CSfilmreportstatus.statusID + "\'")
	assert globalstatus != null

	switch(i)
	{
		case 0:
		assert globalstatus.statusdescription == "未就绪"
		break
		
		case 1:
		assert globalstatus.statusdescription == "胶片和报告可打印"
		break
		
		case 2:
		assert globalstatus.statusdescription == "胶片可打印"
		break

		case 3:
		assert globalstatus.statusdescription == "胶片可打印"
		break

		case 4:
		assert globalstatus.statusdescription == "报告可打印"
		break

		case 5:
		assert globalstatus.statusdescription == "报告可打印"
		break

		case 6:
		assert globalstatus.statusdescription == "胶片和报告可打印"
		break

		case 7:
		assert globalstatus.statusdescription == "报告可打印"
		break

	}
	
	//print out info for wechat "check report status"
	log.info globalstatus.querymessage
	log.info CSpatient.patientname
	log.info department.departmentname
	log.info CSexam.examname
	log.info CSexam.createdatetime
	log.info globalstatus.statusdescription
	log.info CSfilmreportstatus.statusmessage
	//log.info globalstatus.notificationmessage
	log.info("//////")
}



</script></con:config></con:testStep><con:properties><con:property><con:name>treatmentID</con:name><con:value>'T009'</con:value></con:property><con:property><con:name>orderID</con:name><con:value>'O009'</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID003 check history report" searchProperties="true" id="746301b6-336d-431f-ab73-49e6696440d7"><con:settings/><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TBD PID003 scan to print" searchProperties="true" id="68dfd6be-f9f6-4fbb-a8ec-503408eaf31f"><con:settings/><con:testStep type="groovy" name="01.04.01.01 Check notification in wechat after report print for department A" id="2d202641-a266-40eb-8c18-fd85d6dc933c"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def departmentID = testRunner.testCase.getPropertyValue("departmentID_A")
def orderID = testRunner.testCase.getPropertyValue("orderID")
def terminalID = testRunner.testCase.getPropertyValue("terminalID_A")

def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"       
def database = Sql.newInstance(url,username,password,driver)  
//get database instance of PS->WGGC
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver)


//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def count  = CSdatabase.firstRow('select count(*) from request where placeorderID = ' + orderID)
for(def i=0;i<count[0];i++)
{
	
	def CSrequestID = "\'"+CSrequestrows[i].requestID + "\'"
	def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
	assert CSexam != null
	def examID = "\'" +CSexam.examID + "\'";
	log.info examID
	def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
	assert CSpatient != null
	def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
	assert CSrequest != null
	log.info ("department is " +CSrequest.excdepartmentID)

	def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
	assert department != null

	def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
	assert CSfilmreportstatus != null
	log.info ("statusID is " + CSfilmreportstatus.statusID)
	def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+CSfilmreportstatus.statusID + "\'")
	//assert globalstatus != null

	def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
	if (reportinfo == null)
	{
		log.info examID + "has no report ready"
	}
	else if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype != "CR" && reportinfo.modalitytype != "DX")
	{
		//departmentID和Modality匹配的报告状态应该是248或250，否则断言报错
		if( CSfilmreportstatus.statusID != 248 && CSfilmreportstatus.statusID != 250)
		{
			assert  CSfilmreportstatus.statusID == 248
		}

		assert reportinfo.printstatus == 1
		//print out info for wechat "check report status"
		log.info globalstatus.querymessage
		log.info CSpatient.patientname
		log.info department.departmentname
		log.info CSexam.examname
		log.info CSexam.createdatetime
		log.info globalstatus.statusdescription
		//log.info CSfilmreportstatus.statusmessage
		log.info globalstatus.notificationmessage

	}
	//其他报告错误打印出来的情况断言
	else if( CSfilmreportstatus.statusID == 248 )
	{
		def reportprinttask = wggcdatabase.firstRow('select * from AFP_PrintTaskOfReport where studyinstanceUID = \'' + reportinfo.studyinstanceUID + '\'')
		assert reportprinttask != null
		def printtask = wggcdatabase.firstRow('SELECT * FROM AFP_PrintTask where SN = \''+ reportprinttask.tasksn +'\'')
		assert printtask != null
		
		//如果departmentA,DX或CR的报告被打印出来应该断言报错
		if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype == "DX")
		{
			log.info examID + "modality is " + reportinfo.modalitytype + " should not be printed "
			assert reportinfo.modalitytype == "DX"
		}
		else if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype == "CR")
		{
			log.info examID + "modality is " + reportinfo.modalitytype + " should not be printed "
			assert reportinfo.modalitytype == "DX"
		}
		else if (printtask.terminalid == terminalID)
		{
			//联合查询printtaskofreport和Printtask，得到terminalID打印出的exam，断言报错departmentID不匹配的情况
			//如果其他科室的报告被打印出来应该断言报错
			log.info globalstatus.statusdescription
			log.info examID + " is " +CSrequest.excdepartmentID + " doesn't belong to department " + departmentID + " but the report is printed"
			assert CSrequest.excdepartmentID == departmentID
			assert CSfilmreportstatus.statusID != 248

		}
	}
	else if(CSfilmreportstatus.statusID == 250)
	{
		def reportprinttask = wggcdatabase.firstRow('select * from AFP_PrintTaskOfReport where studyinstanceUID = \'' + reportinfo.studyinstanceUID + '\'')
		assert reportprinttask != null
		def printtask = wggcdatabase.firstRow('select * from AFP_PrintTask where sn = \'' + reportprinttask.tasksn + '\'')
		assert printtask != null

		//如果departmentA,DX或CR的报告被打印出来应该断言报错
		if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype == "DX")
		{
			log.info examID + "modality is " + reportinfo.modalitytype + " should not be printed "
			assert reportinfo.modalitytype == "DX"
		}
		else if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype == "CR")
		{
			log.info examID + "modality is " + reportinfo.modalitytype + " should not be printed "
			assert reportinfo.modalitytype == "DX"
		}
		else if (printtask.terminalID == terminalID)
		{
			//联合查询printtaskofreport和Printtask，得到terminalID打印出的exam，断言报错departmentID不匹配的情况
			//如果其他科室的报告被打印出来应该断言报错
			log.info globalstatus.statusdescription
			log.info examID + " is " +CSrequest.excdepartmentID + " doesn't belong to department " + departmentID + " but the report is printed"
			assert CSrequest.excdepartmentID == departmentID
			assert CSfilmreportstatus.statusID != 248

		}
		
	}

	
}

	log.info("//////")

]]></script></con:config></con:testStep><con:testStep type="groovy" name="01.04.01.01 Check notification in wechat after report print for department B" id="e7a2d889-ba80-40e1-a91d-1f088394185e"><con:settings/><con:config><script><![CDATA[import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def departmentID = testRunner.testCase.getPropertyValue("departmentID_B")
def orderID = testRunner.testCase.getPropertyValue("orderID")
def terminalID = testRunner.testCase.getPropertyValue("terminalID_B")

def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"       
def database = Sql.newInstance(url,username,password,driver)  
//get database instance of PS->WGGC
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver)

def printerterminal = wggcdatabase.firstRow('select * from AFP_printterminalinfo where terminalID =' + terminalID)
assert printerterminal != null
//modality type如果是多个的话需要用逗号分解开，逐个判断
def modalitytype = printerterminal.modality

//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def count  = CSdatabase.firstRow('select count(*) from request where placeorderID = ' + orderID)
for(def i=0;i<count[0];i++)
{
	
	def CSrequestID = "\'"+CSrequestrows[i].requestID + "\'"
	def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
	assert CSexam != null
	def examID = "\'" +CSexam.examID + "\'";
	log.info examID
	def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
	assert CSpatient != null
	def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
	assert CSrequest != null
	log.info ("department is " +CSrequest.excdepartmentID)

	def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
	assert department != null

	def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
	assert CSfilmreportstatus != null
	log.info ("statusID is " + CSfilmreportstatus.statusID)
	def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+CSfilmreportstatus.statusID + "\'")
	//assert globalstatus != null

	def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
	if (reportinfo == null)
	{
		log.info examID + "has no report ready"
	}
	if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype == modalitytype)
	{
		log.info reportinfo.modalitytype
		//有报告且属于departmentB，且modality是DX，打印状态应该是248或者是250，否则打印状态出错
		if( CSfilmreportstatus.statusID != 248 && CSfilmreportstatus.statusID != 250)
		{
			assert  CSfilmreportstatus.statusID == 248
		}
		assert reportinfo.printstatus == 1

		//print out info for wechat "check report status"
		log.info globalstatus.querymessage
		log.info CSpatient.patientname
		log.info department.departmentname
		log.info CSexam.examname
		log.info CSexam.createdatetime
		log.info globalstatus.statusdescription
		//log.info CSfilmreportstatus.statusmessage
		log.info globalstatus.notificationmessage

	}
	
	//其他报告错误打印出来的情况断言
	else if( CSfilmreportstatus.statusID == 248 )
	{
		//如果departmentB,非DX的报告被打印出来应该断言报错
		if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype != modalitytype)
		{
			log.info examID + "modality is " + reportinfo.modalitytype + " should not be printed "
			assert reportinfo.modalitytype == modalitytype
			assert CSfilmreportstatus.statusID != 248
		}
		/*
		else
		{
			//如果其他科室的报告被打印出来应该断言报错
			log.info globalstatus.statusdescription
			log.info examID + " is " +CSrequest.excdepartmentID + " doesn't belong to department " + departmentID + " but the report is printed"
			assert CSrequest.excdepartmentID == departmentID
		}*/
		//assert CSfilmreportstatus.statusID != 248
	}
	else if(CSfilmreportstatus.statusID == 250)
	{
		//如果departmentB,非DX的报告被打印出来应该断言报错
		if(CSrequest.excdepartmentID == departmentID && reportinfo.modalitytype != modalitytype)
		{
			log.info examID + "modality is " + reportinfo.modalitytype + " should not be printed "
			assert reportinfo.modalitytype == modalitytype
			assert CSfilmreportstatus.statusID != 248
		}
		/*
		else
		{
			//如果其他科室的报告被打印出来应该断言报错
			log.info globalstatus.statusdescription
			log.info examID + " is " +CSrequest.excdepartmentID + " doesn't belong to department " + departmentID + " but the report is printed"
			assert CSrequest.excdepartmentID == departmentID
		}
		assert CSfilmreportstatus.statusID != 248
		*/
	}
	
}

	log.info("//////")
]]></script></con:config></con:testStep><con:testStep type="groovy" name="01.04.01.01 Check report status after report print" id="09821206-d25e-4385-bc08-90b16961254e"><con:settings/><con:config><script>import groovy.sql.Sql;   
//import java.lang.String;

//get value from property of testcase for some parameters
def patientID = testRunner.testCase.testSuite.getPropertyValue("patientID")
def departmentID = testRunner.testCase.getPropertyValue("departmentID_A")
def orderID = testRunner.testCase.getPropertyValue("orderID")


def username = "sa"  
def password = "sa20021224\$"  
def url = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=ecs"  
def driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"       
def database = Sql.newInstance(url,username,password,driver)  
//get database instance of PS->WGGC
def WGGCurl = "jdbc:sqlserver://10.184.129.185\\gcpacsws;databaseName=WGGC" 
def wggcdatabase = Sql.newInstance(WGGCurl,username,password,driver)


//assert database record of CS
def CSdatabase= Sql.newInstance("jdbc:mysql://10.184.129.203:3306/ecs","sa", "sa20021224\$", "com.mysql.jdbc.Driver");
def CSrequestrows = CSdatabase.rows('select * from request where placeorderID = ' + orderID)
assert CSrequestrows != null
def count  = CSdatabase.firstRow('select count(*) from request where placeorderID = ' + orderID)
for(def i=0;i&lt;count[0];i++)
{
	
	def CSrequestID = "\'"+CSrequestrows[i].requestID + "\'"
	def CSexam = CSdatabase.firstRow('select * from examination where requestID = ' + CSrequestID) 
	assert CSexam != null
	def examID = "\'" +CSexam.examID + "\'";
	log.info examID
	def CSpatient = CSdatabase.firstRow('select * from patient where patientID = ' + patientID)
	assert CSpatient != null
	def CSrequest = CSdatabase.firstRow('select * from request where requestID = ' + CSrequestID)
	assert CSrequest != null
	log.info ("department is " +CSrequest.excdepartmentID)

	def department = CSdatabase.firstRow('select * from department where departmentID =' + CSrequest.excdepartmentID)
	assert department != null

	def CSfilmreportstatus = CSdatabase.firstRow('select * from filmreportstatus where examID =' + examID)
	assert CSfilmreportstatus != null
	log.info ("statusID is " + CSfilmreportstatus.statusID)
	def globalstatus = CSdatabase.firstRow('select * from globalstatus where statusID =' + "\'"+CSfilmreportstatus.statusID + "\'")
	assert globalstatus != null

	def reportinfo = wggcdatabase.firstRow('select * from AFP_reportinfo where accessionnumber =' + examID)
	if (reportinfo == null)
	{
		log.info examID + "has no report ready"
	}
	else if(CSrequest.excdepartmentID == departmentID)
	{
		if( CSfilmreportstatus.statusID != 248 &amp;&amp; CSfilmreportstatus.statusID != 250)
		{
			assert  CSfilmreportstatus.statusID == 248
		}

	//print out info for wechat "check report status"
	log.info globalstatus.querymessage
	log.info CSpatient.patientname
	log.info department.departmentname
	log.info CSexam.examname
	log.info CSexam.createdatetime
	log.info globalstatus.statusdescription
	log.info CSfilmreportstatus.statusmessage
	//log.info globalstatus.notificationmessage

	}
	else if( CSfilmreportstatus.statusID == 248 )
	{
		log.info globalstatus.statusdescription
		log.info examID + " is " +CSrequest.excdepartmentID + " doesn't belong to department " + departmentID + " but the report is printed"

		assert CSfilmreportstatus.statusID != 248
	}
	else if(CSfilmreportstatus.statusID == 250)
	{
		log.info globalstatus.statusdescription
		log.info examID + " is " +CSrequest.excdepartmentID + " doesn't belong to department " + departmentID + " but the report is printed"

		assert CSfilmreportstatus.statusID != 250
	}
	
}

	log.info("//////")

</script></con:config></con:testStep><con:properties><con:property><con:name>departmentID_A</con:name><con:value>002</con:value></con:property><con:property><con:name>departmentID_B</con:name><con:value>001</con:value></con:property><con:property><con:name>orderID</con:name><con:value>'O009'</con:value></con:property><con:property><con:name>terminalID_A</con:name><con:value>'1234'</con:value></con:property><con:property><con:name>terminalID_B</con:name><con:value>'2345'</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PID001Request01" searchProperties="true" id="b0fc4d94-0676-4b1a-83d6-bfd467e61150"><con:settings/><con:testStep type="request" name="CreateExam" id="40be57cd-7c9b-4374-b3c9-f2ecd4294bd9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HIS_PS_SvcSoap</con:interface><con:operation>ExamStatusUpdateNotify</con:operation><con:request name="CreateExam" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="16cc14ee-009b-48e3-8590-6ca97743f20b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://10.184.129.185/HisIntegration/HIS_PS_Svc.asmx</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <tem:ExamStatusUpdateNotify>
         <!--Optional:-->
         <tem:examInfo><![CDATA[<?xml version="1.0" encoding="gb2312"?><ExamStatusInfo>  <!--Basic Info-->  <BasicInfo>     <PatientID>PID001</PatientID>    <SubsysType>1</SubsysType>    <!-- 1: RIS, 2: LIS, 3, US... -->    <SubsysPID>S002</SubsysPID>    <EventCatalog>6</EventCatalog>  </BasicInfo>  <!--ExamReservation: 5, ExamRegister： 6-->  <ExamRegisterList>     <ExamRegister>      <RequestID>R002</RequestID >      <ExamID>E0011</ExamID>      <Status>0</Status>      <Datetime>2016-06-15 13:45:30</Datetime>      <Comments>检查001</Comments>      <AvaiDatetimeBegin>2016-06-15 13:45:30</AvaiDatetimeBegin>      <AvaiDatetimeEnd>2016-06-15 13:45:30</AvaiDatetimeEnd>      <ExamName>胸片正位</ExamName>      <ExamType>DX</ExamType>      <ExamRoomID>1</ExamRoomID>      <ExamModality>CT</ExamModality>      <PatientType></PatientType>   </ExamRegister>  </ExamRegisterList></ExamStatusInfo>]]]]>><![CDATA[</tem:examInfo>
      </tem:ExamStatusUpdateNotify>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4ec585eb-c43a-4d12-813a-4c86676df67d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://tempuri.org/ExamStatusUpdateNotify"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC Request" id="8fefac82-15fc-4f4f-baac-15ff936f2237"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.mysql.jdbc.Driver</con:driver><con:connectionString>jdbc.mysql://10.184.129.203:3306\ecs?user=sa&amp;password=sa20021224$</con:connectionString><con:query>select * from hospital</con:query><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="test" id="c9226b80-ff28-41f5-9928-ce843662a1ce"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://10.184.129.140\gcpacsws;databaseName=ecs;user=sa;password=sa20021224$</con:connectionString><con:query>select * from Request where requestID = 'R009'</con:query><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="591657ac-4a7c-4cb8-b8ea-da64fab0edbe"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder;

def holer= new XmlHolder(messageExchange.responseContentAsXml)

//assert holder["//:Row"] != null

//def nodevalue = holder.getNodeValue("//:ResultSet/Row")
def nodevalue = holder.getDomNode("//:Results")
//log.info nodevalue</scriptText></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>patientID</con:name><con:value>'PID003'</con:value></con:property></con:properties></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>